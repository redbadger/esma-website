{"version":3,"sources":["webpack:///./node_modules/gatsby-link/index.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/gatsby-react-router-scroll/session-storage.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack:///./.cache/normalize-page-path.js","webpack:///./.cache/find-path.js","webpack:///./src/content/early-years/svg/early-years-graph-4.svg","webpack:///./node_modules/gatsby-react-router-scroll/use-scroll-restoration.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./node_modules/mitt/dist/mitt.es.js","webpack:///./.cache/emitter.js","webpack:///./.cache/polyfills/object-assign.js","webpack:///./node_modules/gatsby-react-router-scroll/index.js","webpack:///./node_modules/@mdx-js/react/dist/esm.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./.cache/react-lifecycles-compat.js","webpack:///./node_modules/@reach/router/es/lib/history.js","webpack:///./node_modules/gatsby-image/index.js","webpack:///./node_modules/gatsby-plugin-manifest/get-manifest-pathname.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/gatsby-plugin-mdx/context.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-3-desktop.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js","webpack:///./src/content/school-years/svg/school-years-type-and-quality-of-schooling-desktop.svg","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/0e349365bd363f31f2a1c9aa041b1ae0.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/gatsby-react-router-scroll/scroll-handler.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js","webpack:///./gatsby-browser.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js","webpack:///./src/util/mq.ts","webpack:///./.cache/page-renderer.js","webpack:///./node_modules/webfontloader/webfontloader.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/e92f8988d65cf25c087d226e6c0ef06f.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@reach/router/es/lib/utils.js","webpack:///./.cache/api-runner-browser-plugins.js","webpack:///src/gatsby-browser.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/@mikaelkristiansson/domready/ready.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/9a5998c393fef1db65f1596110ddf461.js","webpack:///./node_modules/@emotion/hash/dist/hash.browser.esm.js","webpack:///./node_modules/@emotion/unitless/dist/unitless.browser.esm.js","webpack:///./node_modules/@emotion/memoize/dist/memoize.browser.esm.js","webpack:///./node_modules/@emotion/serialize/dist/serialize.browser.esm.js","webpack:///./.cache/register-service-worker.js","webpack:///./.cache/_this_is_virtual_fs_path_/$virtual/async-requires.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/c8a41e13395a6fcbf4fab349f7b47bdb.js","webpack:///./node_modules/babel-runtime/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/8b7c7aec4f65ad9fe66ec189d282a08b.js","webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/babel-runtime/helpers/extends.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-3-mobile.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/79f14b9479292b7d10aea0aeb8e9f89c.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js","webpack:///./.cache/route-announcer-props.js","webpack:///./.cache/navigation.js","webpack:///./node_modules/shallow-compare/es/index.js","webpack:///./.cache/ensure-resources.js","webpack:///./.cache/production-app.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/@babel/runtime/helpers/inheritsLoose.js","webpack:///./src/util/useWindowSize.ts","webpack:///./src/components/research/resizable-graph.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/content/early-years/svg/early-years-graph-3.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/@reach/router/es/index.js","webpack:///./node_modules/gatsby-plugin-breadcrumb/gatsby-browser.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-1-mobile.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./.cache/strip-prefix.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-2-mobile.svg","webpack:///./node_modules/gatsby-link/parse-path.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js","webpack:///./.cache/prefetch.js","webpack:///./.cache/loader.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/25c245c1b20933e1b650708f21aeb114.js","webpack:///./node_modules/gatsby-plugin-mdx/loaders/mdx-scopes.js","webpack:///./node_modules/gatsby-plugin-mdx/wrap-root-element.js","webpack:///./node_modules/gatsby-plugin-mdx/gatsby-browser.js","webpack:///./node_modules/gatsby-plugin-mdx/loaders/mdx-components.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/7c89f80585d992fa5a88bbe0f14e3ab8.js","webpack:///./src/content/early-years/svg/early-years-graph-1.svg","webpack:///./node_modules/gatsby-react-router-scroll/scroll-container.js","webpack:///./node_modules/gatsby-plugin-breadcrumb/components/breadcrumb-context.js","webpack:///./node_modules/@emotion/css/dist/css.browser.esm.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/gatsby-plugin-breadcrumb/components/options-context.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-2-desktop.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/gatsby-plugin-manifest/gatsby-browser.js","webpack:///./.cache/create-react-context.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/@emotion/sheet/dist/sheet.browser.esm.js","webpack:///./node_modules/@emotion/stylis/dist/stylis.browser.esm.js","webpack:///./node_modules/@emotion/cache/dist/cache.browser.esm.js","webpack:///./node_modules/@emotion/utils/dist/utils.browser.esm.js","webpack:///./node_modules/@emotion/core/dist/core.browser.esm.js","webpack:///./src/content/early-years/svg/early-years-graph-2.svg","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/gatsby-plugin-breadcrumb/components/app-providers.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/fn/object/assign.js","webpack:///./src/content/school-years/svg/school-years-executive-summary.svg","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./src/components/research/research-image.tsx","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-1-desktop.svg","webpack:///./.cache/api-runner-browser.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js"],"names":["_interopRequireDefault","exports","__esModule","withPrefix","withAssetPrefix","path","getGlobalPathPrefix","navigateTo","replace","push","navigate","default","_objectWithoutPropertiesLoose2","_extends2","_assertThisInitialized2","_inheritsLoose2","_propTypes","_react","_router","_utils","_parsePath","parsePath","isAbsolutePath","startsWith","prefix","_ref","_prefix","getGlobalBasePrefix","isLocalLink","base","endsWith","slice","rewriteLinkPath","relativeTo","current","resolve","absolutify","NavLinkPropTypes","activeClassName","string","activeStyle","object","partiallyActive","bool","GatsbyLink","_React$Component","props","_this","call","this","defaultGetProps","_ref2","isPartiallyCurrent","isCurrent","className","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","location","pathname","componentDidMount","componentWillUnmount","io","_this$io","instance","el","unobserve","disconnect","ref","cb","_this2","innerRef","hasOwnProperty","entries","forEach","entry","target","isIntersecting","intersectionRatio","observe","render","_this3","_this$props","_this$props$getProps","getProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","createElement","Location","_ref3","prefixedTo","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","shouldReplace","encodeURI","___navigate","href","Component","propTypes","func","isRequired","showDeprecationWarning","functionName","altFunctionName","version","console","warn","_default","forwardRef","options","___push","___replace","module","Object","defineProperty","get","a","ceil","Math","floor","it","isNaN","SessionStorage","read","key","stateKey","getStateKey","value","sessionStorage","getItem","JSON","parse","save","storedValue","stringify","setItem","stateKeyBase","f","getOwnPropertySymbols","toInteger","min","_typeof","_getRequireWildcardCache","WeakMap","cache","obj","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","set","undefined","charAt","length","pathCache","Map","matchPaths","trimPathname","rawPathname","decodeURIComponent","stripPrefix","__BASE_PATH__","split","URL","setMatchPaths","findMatchPath","trimmedPathname","cleanPath","pickPaths","map","matchPath","originalPath","pick","normalizePagePath","route","grabMatchParams","params","findPath","foundPath","React","EarlyYearsGraph4","defaultProps","useScrollRestoration","identifier","useLocation","useContext","_scrollHandler","ScrollContext","useRef","useLayoutEffect","position","scrollTo","onScroll","scrollTop","$export","S","F","assign","emitter","all","create","on","type","handler","off","splice","indexOf","emit","evt","mitt","ScrollContainer","ScrollHandler","_scrollContainer","_useScrollRestoration","_defineProperty","enumerable","configurable","writable","_extends","i","arguments","source","apply","ownKeys","enumerableOnly","keys","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","MDXContext","createContext","withMDXComponents","allComponents","useMDXComponents","components","contextComponents","MDXProvider","children","disableParentContext","Provider","DEFAULTS","inlineCode","wrapper","Fragment","MDXCreateElement","propComponents","mdxType","originalType","parentName","etc","concat","args","argsLength","createElementArgArray","Array","newProps","displayName","global","self","Function","__g","polyfill","getLocation","_source$location","search","hash","origin","protocol","host","hostname","port","canUseDOM","decodeURI","history","createHistory","listeners","transitioning","resolveTransition","_onTransitionComplete","listen","listener","popstateListener","action","addEventListener","removeEventListener","fn","_ref$replace","go","Date","now","replaceState","pushState","transition","Promise","res","createMemorySource","initialPath","searchIndex","initialLocation","substr","index","stack","states","name","_","uri","_uri$split","_uri$split$","_uri$split2","_uri$split2$","newIndex","document","globalHistory","require","convertProps","convertedProps","resolutions","sizes","critical","fixed","fluid","loading","groupByMedia","matchesMedia","media","isBrowser","matchMedia","matches","getImageCacheKey","srcData","getCurrentSrcData","src","currentData","isArray","some","image","hasArtDirectionSupport","foundMedia","findIndex","noMedia","imageCache","inImageCache","cacheKey","hasNativeLazyLoadSupport","HTMLImageElement","hasIOSupport","generateImageSources","imageVariants","srcSet","srcSetWebp","withMedia","without","variant","generateTracedSVGSources","_ref4","tracedSVG","generateBase64Sources","_ref5","base64","generateNoscriptSource","_ref6","isWebp","listenToIntersections","observer","delete","rootMargin","noscriptImg","title","alt","width","height","crossOrigin","draggable","Placeholder","generateSources","spreadProps","ariaHidden","baseImage","Img","onLoad","onError","otherProps","top","left","objectFit","objectPosition","Image","seenBefore","isCritical","addNoScript","fadeIn","useIOSupport","isVisible","imgLoaded","imgCached","imageRef","createRef","placeholderRef","handleImageLoaded","onStartLoad","wasCached","img","complete","cleanUpListeners","imageInCache","setState","currentSrc","_convertProps","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","durationFadeIn","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","opacity","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","overflow","maxWidth","maxHeight","paddingBottom","aspectRatio","bottom","right","dangerouslySetInnerHTML","__html","_imageVariants","_image","divStyle","display","fixedObject","shape","number","srcWebp","fluidObject","requireFixedOrFluid","originalPropTypes","propName","componentName","_PropTypes$checkPropT","Error","checkPropTypes","oneOfType","arrayOf","oneOf","localizedManifests","localizedManifest","find","app","start_url","lang","toIObject","arrayIndexOf","IE_PROTO","names","O","result","dP","createDesc","isObject","is","GatsbyMDXScopeContext","useMDXScope","scope","contextScope","MDXScopeProvider","__mdxScope","DESCRIPTORS","getKeys","gOPS","pIE","toObject","IObject","$assign","A","B","Symbol","K","k","T","aLen","getSymbols","isEnum","j","SchoolYearsGapsInAttainmentGraph3Desktop","defined","SchoolYearsTypeAndQualityOfSchoolingDesktop","QualityOfSchoolingSVGMobile","QualityOfSchoolingSVGTable","QualityOfSchoolingSVGDesktop","ResizableGraph","ResearchImage","bitmap","_interopRequireWildcard","_sessionStorage","_len","_key","_stateStorage","scrollListener","scrollY","windowScroll","shouldUpdateScroll","scrollToHash","node","getElementById","substring","scrollIntoView","prevRouterProps","routerProps","scrollPosition","_this$props$location","_this$props$location2","element","TypeError","anObject","IE8_DOM_DEFINE","toPrimitive","P","Attributes","BreakPoint","screenSizes","sm","md","lg","xl","mq","size","PageRenderer","pageResources","json","pageContext","__params","pathContext","pageElement","apiRunner","loader","publicLoader","component","page","pop","aa","b","c","ba","d","unshift","p","toString","q","ca","o","da","FontFace","t","cssText","setAttribute","appendChild","createTextNode","u","getElementsByTagName","documentElement","insertBefore","lastChild","v","parentNode","removeChild","w","g","y","z","m","rel","onload","onerror","setTimeout","onreadystatechange","readyState","tagName","C","D","E","G","match","parseInt","I","test","J","H","ga","toLowerCase","ha","h","events","classes","L","ja","M","N","Q","s","start","fonts","load","fa","then","race","clearTimeout","R","exec","navigator","userAgent","la","U","offsetWidth","serif","V","ma","W","X","na","oa","qa","l","n","r","x","xa","vendor","ra","sa","ta","ua","context","timeout","ia","ka","pa","projectId","api","fontfamily","fontStyle","fontWeight","id","urls","families","testStrings","ya","za","latin","cyrillic","greek","khmer","Hanuman","Aa","thin","extralight","ultralight","light","regular","book","medium","semibold","demibold","bold","extrabold","ultrabold","black","heavy","Ba","italic","normal","Ca","Ea","Fa","Arimo","Cousine","Tinos","Ga","Ha","text","va","Da","encodeURIComponent","wa","Typekit","config","async","__webfontfontdeckmodule__","weight","ea","Y","custom","fontdeck","monotype","typekit","google","Z","_arrayLikeToArray","arr","len","arr2","_toConsumableArray","iter","iterator","from","minLen","constructor","routes","default_","uriPathname","uriSegments","segmentize","isRootUri","ranked","rankRoutes","missed","routeSegments","max","routeSegment","uriSegment","isSplat","dynamicMatch","paramRe","reservedNames","_to$split","toPathname","toQuery","basePathname","toSegments","baseSegments","addQuery","allSegments","segments","segment","insertParams","_path$split","pathBase","_path$split$","query","constructedPath","_params$location","_params$location$sear","searchSplit","validateRedirect","isDynamic","sort","rankRoute","score","reduce","isRootSegment","SEGMENT_POINTS","shallowCompare","obj1","obj2","obj1Keys","every","plugin","WebFont","val","valueOf","ie10","appVersion","fns","doc","hack","doScroll","loaded","shift","definition","SchoolYearsOverviewSVG","str","charCodeAt","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","processStyleName","arg","styleName","p1","p2","cursor","styles","next","handleInterpolation","mergedProps","registered","interpolation","couldBeSelectorInterpolation","__emotion_styles","anim","interpolated","_i","createStringFromObject","previousCursor","cached","labelPattern","stringMode","strings","raw","lastIndex","identifierName","error","serviceWorker","register","reg","installingWorker","installing","log","controller","___swUpdated","___failedResources","reload","catch","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","ReferenceError","CovidImpactRedundanciesSVG","CovidImpactChildCareSVG","condition","format","argIndex","framesToPop","_assign","_assign2","SchoolYearsGapsInAttainmentGraph3Mobile","OverviewSVG","core","ctx","hide","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","expProto","virtual","RouteAnnouncerProps","padding","clip","whiteSpace","border","redirectMap","redirects","redirect","fromPath","maybeRedirect","toPath","onPreRouteUpdate","prevLocation","onRouteUpdate","timeoutId","loadPage","status","PageResourceStatus","webpackCompilationHash","___webpackCompilationHash","postMessage","gatsbyApi","reachNavigate","results","getSavedScrollPosition","RouteAnnouncer","announcementRef","nextProps","requestAnimationFrame","pageName","pageHeadings","querySelectorAll","textContent","newAnnouncement","innerText","RouteUpdates","shouldFireRouteUpdate","getSnapshotBeforeUpdate","shallowDiffers","EnsureResources","loadPageSync","getDerivedStateFromProps","loadResources","rawPath","shouldComponentUpdate","nextState","ProdLoader","asyncRequires","setLoader","setApiRunner","___emitter","apiRunnerAsync","RouteHandler","baseuri","basepath","DataContext","GatsbyRoot","staticQueryResults","getStaticQueryResults","LocationHandler","Consumer","pagePath","browserLoc","SiteRoot","App","renderer","ReactDOM","hydrate","domReady","__e","subClass","superClass","__proto__","useWindowSize","useState","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","graphContainerStyles","fullSpan","css","mobile","tablet","desktop","Graph","prefetchPathname","StaticQueryContext","StaticQueryDataRenderer","staticQueryData","data","finalData","StaticQuery","useStaticQuery","Number","graphql","unstable_collectionGraphql","EarlyYearsGraph3","shared","uid","_classCallCheck","Constructor","_possibleConstructorReturn","_inherits","setPrototypeOf","createNamedContext","defaultValue","Ctx","LocationContext","LocationProvider","_temp","getContext","refs","unlisten","_props$history","componentDidCatch","info","isRedirect","_navigate","unmounted","ServerLocation","url","BaseContext","Router","baseContext","locationContext","RouterImpl","_React$PureComponent","_props","_navigate2","primary","_props$component","domProps","Children","toArray","array","child","createRoute","clone","cloneElement","FocusWrapper","FocusHandler","wrapperProps","PureComponent","FocusContext","requestFocus","FocusHandlerImpl","initialRender","focusHandlerCount","_React$Component2","_temp2","_this4","_len2","_key2","shouldFocus","focus","myURIChanged","navigatedUpToMe","contains","activeElement","_this5","_props2","_props2$component","Comp","outline","tabIndex","_props$getProps","anchorProps","encodedHref","event","shouldNavigate","_location$state","restState","RedirectRequest","redirectTo","RedirectImpl","_React$Component3","_props3","_props3$replace","noThrow","resolvedTo","_props4","Redirect","_ref7","Match","_ref8","_ref9","_ref10","resolvedPath","useNavigate","useParams","useMatch","stripSlashes","elementPath","wrapRootElement","_appProviders","pluginOptions","AppProviders","SchoolYearsGapsInAttainmentGraph1Mobile","SchoolYearsGapsInAttainmentGraph2Mobile","hashIndex","_inheritsLoose","supportedPrefetchStrategy","feature","fakeLink","relList","supports","err","support","reject","link","getElementsByName","req","XMLHttpRequest","open","send","preFetched","prefetch","Success","preferDefault","createPageDataUrl","__PATH_PREFIX__","doFetch","method","toPageResources","pageData","componentChunkName","staticQueryHashes","BaseLoader","loadComponent","inFlightNetworkRequests","pageDb","inFlightDb","staticQueryDb","pageDataDb","prefetchTriggered","Set","prefetchCompleted","memoizedGet","inFlightPromise","response","prefetchDisabled","fetchPageDataJson","loadObj","retries","responseText","jsonPayload","payload","notFound","loadPageDataJson","loadAppData","allData","finalResult","componentChunkPromise","createdAt","staticQueryBatchPromise","staticQueryHash","staticQueryResultsMap","shouldPrefetch","connection","effectiveType","includes","saveData","doesConnectionSupportPrefetch","add","realPath","doPrefetch","getResourceURLsForPathname","createComponentUrls","isPageNotFound","appData","___chunkMapping","chunk","chunkName","pageDataUrl","prefetchHelper","as","componentUrls","_loader","getResourcesForPathname","getResourcesForPathnameSync","GapsInAttainmentExpectedStandardDesktop","GapsInAttainmentExpectedStandardMobile","GapsInAttainmentHigherStandardDesktop","GapsInAttainmentHigherStandardMobile","GapsInAttainmentMarginalReturnsDesktop","GapsInAttainmentMarginalReturnsMobile","scope_0","scope_1","scope_2","scope_3","scope_4","scope_5","scope_6","scope_7","componentsAndGuards","mdxPlugins","guards","guard","componentFromGuards","MDXConsumer","componentsFromContext","scopeContexts","plugins","EarlyYearsProvisionSVG","EarlyYearsGraph1","_reactDom","scrollKey","ScrollContainerImplementation","findDOMNode","BreadcrumbConsumer","BreadcrumbProvider","BreadcrumbContext","defaultCrumb","_React$useState","crumbs","setCrumbs","crumb","updateCrumbs","crumbLabel","crumbSeparator","crumbStyle","crumbActiveStyle","indexOfFirstOccurrenceOfCurrentPath","px","random","OptionsConsumer","OptionsProvider","OptionsContext","_ref$useAutoGen","useAutoGen","_ref$usePathPrefix","usePathPrefix","$keys","enumBugKeys","SchoolYearsGapsInAttainmentGraph2Desktop","cof","aFunction","that","StyleSheet","isSpeedy","speedy","tags","ctr","nonce","container","before","insert","rule","_tag","tag","createStyleElement","nextSibling","sheet","styleSheets","ownerNode","sheetForTag","isImportRule","insertRule","cssRules","flush","trim","use","toSheet","block","Sheet","ruleSheet","content","selectors","parents","line","column","ns","depth","at","delimiter","stylisOptions","stylis","inserted","head","_insert","nodes","getAttribute","stylisPlugins","selector","serialized","shouldCache","getRegisteredStyles","registeredStyles","classNames","rawClassName","insertStyles","isStringTag","EmotionCacheContext","HTMLElement","ThemeContext","typePropName","theme","cssProp","Emotion","Global","InnerGlobal","updater","querySelector","nextElementSibling","classnames","cls","toAdd","merge","cx","ele","EarlyYearsGraph2","ProdPageRenderer","InternalPageRenderer","store","mode","copyright","_breadcrumbContext","_optionsContext","useClassNames","SchoolYearsExecutiveSummary","PureResearchImage","childImageSharp","imageName","images","edges","originalName","SchoolYearsGapsInAttainmentGraph1Desktop","defaultReturn","argTransform","previous"],"mappings":"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","file":"app-2960c770d7563515d6bc.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.withAssetPrefix = withAssetPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _utils = require(\"@reach/router/lib/utils\");\n\nvar _parsePath = require(\"./parse-path\");\n\nexports.parsePath = _parsePath.parsePath;\n\nvar isAbsolutePath = function isAbsolutePath(path) {\n  return path === null || path === void 0 ? void 0 : path.startsWith(\"/\");\n};\n\nfunction withPrefix(path, prefix) {\n  var _ref, _prefix;\n\n  if (prefix === void 0) {\n    prefix = getGlobalBasePrefix();\n  }\n\n  if (!isLocalLink(path)) {\n    return path;\n  }\n\n  if (path.startsWith(\"./\") || path.startsWith(\"../\")) {\n    return path;\n  }\n\n  var base = (_ref = (_prefix = prefix) !== null && _prefix !== void 0 ? _prefix : getGlobalPathPrefix()) !== null && _ref !== void 0 ? _ref : \"/\";\n  return \"\" + ((base === null || base === void 0 ? void 0 : base.endsWith(\"/\")) ? base.slice(0, -1) : base) + (path.startsWith(\"/\") ? path : \"/\" + path);\n} // These global values are wrapped in typeof clauses to ensure the values exist.\n// This is especially problematic in unit testing of this component.\n\n\nvar getGlobalPathPrefix = function getGlobalPathPrefix() {\n  return process.env.NODE_ENV !== \"production\" ? typeof __PATH_PREFIX__ !== \"undefined\" ? __PATH_PREFIX__ : undefined : __PATH_PREFIX__;\n};\n\nvar getGlobalBasePrefix = function getGlobalBasePrefix() {\n  return process.env.NODE_ENV !== \"production\" ? typeof __BASE_PATH__ !== \"undefined\" ? __BASE_PATH__ : undefined : __BASE_PATH__;\n};\n\nvar isLocalLink = function isLocalLink(path) {\n  return path && !path.startsWith(\"http://\") && !path.startsWith(\"https://\") && !path.startsWith(\"//\");\n};\n\nfunction withAssetPrefix(path) {\n  return withPrefix(path, getGlobalPathPrefix());\n}\n\nfunction absolutify(path, current) {\n  // If it's already absolute, return as-is\n  if (isAbsolutePath(path)) {\n    return path;\n  }\n\n  return (0, _utils.resolve)(path, current);\n}\n\nvar rewriteLinkPath = function rewriteLinkPath(path, relativeTo) {\n  if (typeof path === \"number\") {\n    return path;\n  }\n\n  if (!isLocalLink(path)) {\n    return path;\n  }\n\n  return isAbsolutePath(path) ? withPrefix(path) : absolutify(path, relativeTo);\n};\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object,\n  partiallyActive: _propTypes.default.bool\n}; // Set up IntersectionObserver\n\nvar createIntersectionObserver = function createIntersectionObserver(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n  return {\n    instance: io,\n    el: el\n  };\n};\n\nvar GatsbyLink = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // Default to no support for IntersectionObserver\n\n    _this.defaultGetProps = function (_ref2) {\n      var isPartiallyCurrent = _ref2.isPartiallyCurrent,\n          isCurrent = _ref2.isCurrent;\n\n      if (_this.props.partiallyActive ? isPartiallyCurrent : isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    };\n\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    _this.state = {\n      IOSupported: IOSupported\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(this.props.to, window.location.pathname)).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(this.props.to, window.location.pathname)).pathname);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (!this.io) {\n      return;\n    }\n\n    var _this$io = this.io,\n        instance = _this$io.instance,\n        el = _this$io.el;\n    instance.unobserve(el);\n    instance.disconnect();\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.props.innerRef && this.props.innerRef.hasOwnProperty(\"current\")) {\n      this.props.innerRef.current = ref;\n    } else if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      this.io = createIntersectionObserver(ref, function () {\n        ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(_this2.props.to, window.location.pathname)).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $innerRef = _this$props.innerRef,\n        partiallyActive = _this$props.partiallyActive,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"activeClassName\", \"activeStyle\", \"innerRef\", \"partiallyActive\", \"state\", \"replace\"]);\n\n    if (process.env.NODE_ENV !== \"production\" && !isLocalLink(to)) {\n      console.warn(\"External link \" + to + \" was detected in a Link component. Use the Link component only for internal links. See: https://gatsby.dev/internal-links\");\n    }\n\n    return /*#__PURE__*/_react.default.createElement(_router.Location, null, function (_ref3) {\n      var location = _ref3.location;\n      var prefixedTo = rewriteLinkPath(to, location.pathname);\n      return isLocalLink(prefixedTo) ? /*#__PURE__*/_react.default.createElement(_router.Link, (0, _extends2.default)({\n        to: prefixedTo,\n        state: state,\n        getProps: getProps,\n        innerRef: _this3.handleRef,\n        onMouseEnter: function onMouseEnter(e) {\n          if (_onMouseEnter) {\n            _onMouseEnter(e);\n          }\n\n          ___loader.hovering((0, _parsePath.parsePath)(prefixedTo).pathname);\n        },\n        onClick: function onClick(e) {\n          if (_onClick) {\n            _onClick(e);\n          }\n\n          if (e.button === 0 && // ignore right clicks\n          !_this3.props.target && // let browser handle \"target=_blank\"\n          !e.defaultPrevented && // onClick prevented default\n          !e.metaKey && // ignore clicks with modifier keys...\n          !e.altKey && !e.ctrlKey && !e.shiftKey) {\n            e.preventDefault();\n            var shouldReplace = replace;\n            var isCurrent = encodeURI(prefixedTo) === window.location.pathname;\n\n            if (typeof replace !== \"boolean\" && isCurrent) {\n              shouldReplace = true;\n            } // Make sure the necessary scripts and data are\n            // loaded before continuing.\n\n\n            window.___navigate(prefixedTo, {\n              state: state,\n              replace: shouldReplace\n            });\n          }\n\n          return true;\n        }\n      }, rest)) : /*#__PURE__*/_react.default.createElement(\"a\", (0, _extends2.default)({\n        href: prefixedTo\n      }, rest));\n    });\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool,\n  state: _propTypes.default.object\n});\n\nvar showDeprecationWarning = function showDeprecationWarning(functionName, altFunctionName, version) {\n  return console.warn(\"The \\\"\" + functionName + \"\\\" method is now deprecated and will be removed in Gatsby v\" + version + \". Please use \\\"\" + altFunctionName + \"\\\" instead.\");\n};\n\nvar _default = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  return /*#__PURE__*/_react.default.createElement(GatsbyLink, (0, _extends2.default)({\n    innerRef: ref\n  }, props));\n});\n\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(rewriteLinkPath(to, window.location.pathname), options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  showDeprecationWarning(\"push\", \"navigate\", 3);\n\n  window.___push(rewriteLinkPath(to, window.location.pathname));\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  showDeprecationWarning(\"replace\", \"navigate\", 3);\n\n  window.___replace(rewriteLinkPath(to, window.location.pathname));\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  showDeprecationWarning(\"navigateTo\", \"navigate\", 3);\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","\"use strict\";\n\nexports.__esModule = true;\nexports.SessionStorage = void 0;\nvar STATE_KEY_PREFIX = \"@@scroll|\";\nvar GATSBY_ROUTER_SCROLL_STATE = \"___GATSBY_REACT_ROUTER_SCROLL\";\n\nvar SessionStorage = /*#__PURE__*/function () {\n  function SessionStorage() {}\n\n  var _proto = SessionStorage.prototype;\n\n  _proto.read = function read(location, key) {\n    var stateKey = this.getStateKey(location, key);\n\n    try {\n      var value = window.sessionStorage.getItem(stateKey);\n      return value ? JSON.parse(value) : 0;\n    } catch (e) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"[gatsby-react-router-scroll] Unable to access sessionStorage; sessionStorage is not available.\");\n      }\n\n      if (window && window[GATSBY_ROUTER_SCROLL_STATE] && window[GATSBY_ROUTER_SCROLL_STATE][stateKey]) {\n        return window[GATSBY_ROUTER_SCROLL_STATE][stateKey];\n      }\n\n      return 0;\n    }\n  };\n\n  _proto.save = function save(location, key, value) {\n    var stateKey = this.getStateKey(location, key);\n    var storedValue = JSON.stringify(value);\n\n    try {\n      window.sessionStorage.setItem(stateKey, storedValue);\n    } catch (e) {\n      if (window && window[GATSBY_ROUTER_SCROLL_STATE]) {\n        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);\n      } else {\n        window[GATSBY_ROUTER_SCROLL_STATE] = {};\n        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);\n      }\n\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"[gatsby-react-router-scroll] Unable to save state in sessionStorage; sessionStorage is not available.\");\n      }\n    }\n  };\n\n  _proto.getStateKey = function getStateKey(location, key) {\n    var stateKeyBase = \"\" + STATE_KEY_PREFIX + location.pathname;\n    return key === null || typeof key === \"undefined\" ? stateKeyBase : stateKeyBase + \"|\" + key;\n  };\n\n  return SessionStorage;\n}();\n\nexports.SessionStorage = SessionStorage;","exports.f = Object.getOwnPropertySymbols;\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var _typeof = require(\"../helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;","export default path => {\n  if (path === undefined) {\n    return path\n  }\n  if (path === `/`) {\n    return `/`\n  }\n  if (path.charAt(path.length - 1) === `/`) {\n    return path.slice(0, -1)\n  }\n  return path\n}\n","import { pick } from \"@reach/router/lib/utils\"\nimport stripPrefix from \"./strip-prefix\"\nimport normalizePagePath from \"./normalize-page-path\"\n\nconst pathCache = new Map()\nlet matchPaths = []\n\nconst trimPathname = rawPathname => {\n  const pathname = decodeURIComponent(rawPathname)\n  // Remove the pathPrefix from the pathname.\n  const trimmedPathname = stripPrefix(pathname, __BASE_PATH__)\n    // Remove any hashfragment\n    .split(`#`)[0]\n    // Remove search query\n    .split(`?`)[0]\n\n  return trimmedPathname\n}\n\nfunction absolutify(path) {\n  // If it's already absolute, return as-is\n  if (\n    path.startsWith(`/`) ||\n    path.startsWith(`https://`) ||\n    path.startsWith(`http://`)\n  ) {\n    return path\n  }\n  // Calculate path relative to current location, adding a trailing slash to\n  // match behavior of @reach/router\n  return new URL(\n    path,\n    window.location.href + (window.location.href.endsWith(`/`) ? `` : `/`)\n  ).pathname\n}\n\n/**\n * Set list of matchPaths\n *\n * @param {Array<{path: string, matchPath: string}>} value collection of matchPaths\n */\nexport const setMatchPaths = value => {\n  matchPaths = value\n}\n\n/**\n * Return a matchpath url\n * if `match-paths.json` contains `{ \"/foo*\": \"/page1\", ...}`, then\n * `/foo?bar=far` => `/page1`\n *\n * @param {string} rawPathname A raw pathname\n * @return {string|null}\n */\nexport const findMatchPath = rawPathname => {\n  const trimmedPathname = cleanPath(rawPathname)\n\n  const pickPaths = matchPaths.map(({ path, matchPath }) => {\n    return {\n      path: matchPath,\n      originalPath: path,\n    }\n  })\n\n  const path = pick(pickPaths, trimmedPathname)\n\n  if (path) {\n    return normalizePagePath(path.route.originalPath)\n  }\n\n  return null\n}\n\n/**\n * Return a matchpath params from reach/router rules\n * if `match-paths.json` contains `{ \":bar/*foo\" }`, and the path is /baz/zaz/zoo\n * then it returns\n *  { bar: baz, foo: zaz/zoo }\n *\n * @param {string} rawPathname A raw pathname\n * @return {object}\n */\nexport const grabMatchParams = rawPathname => {\n  const trimmedPathname = cleanPath(rawPathname)\n\n  const pickPaths = matchPaths.map(({ path, matchPath }) => {\n    return {\n      path: matchPath,\n      originalPath: path,\n    }\n  })\n\n  const path = pick(pickPaths, trimmedPathname)\n\n  if (path) {\n    return path.params\n  }\n\n  return {}\n}\n\n// Given a raw URL path, returns the cleaned version of it (trim off\n// `#` and query params), or if it matches an entry in\n// `match-paths.json`, its matched path is returned\n//\n// E.g. `/foo?bar=far` => `/foo`\n//\n// Or if `match-paths.json` contains `{ \"/foo*\": \"/page1\", ...}`, then\n// `/foo?bar=far` => `/page1`\nexport const findPath = rawPathname => {\n  const trimmedPathname = trimPathname(absolutify(rawPathname))\n  if (pathCache.has(trimmedPathname)) {\n    return pathCache.get(trimmedPathname)\n  }\n\n  let foundPath = findMatchPath(trimmedPathname)\n\n  if (!foundPath) {\n    foundPath = cleanPath(rawPathname)\n  }\n\n  pathCache.set(trimmedPathname, foundPath)\n\n  return foundPath\n}\n\n/**\n * Clean a url and converts /index.html => /\n * E.g. `/foo?bar=far` => `/foo`\n *\n * @param {string} rawPathname A raw pathname\n * @return {string}\n */\nexport const cleanPath = rawPathname => {\n  const trimmedPathname = trimPathname(absolutify(rawPathname))\n\n  let foundPath = trimmedPathname\n  if (foundPath === `/index.html`) {\n    foundPath = `/`\n  }\n\n  foundPath = normalizePagePath(foundPath)\n\n  return foundPath\n}\n","var React = require('react');\n\nfunction EarlyYearsGraph4 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 11\"),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"transform\":\"translate(-164.000000, -992.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(165.000000, 992.000000)\"},[React.createElement(\"text\",{\"id\":\"of-eligible-children\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"18\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":0},[React.createElement(\"tspan\",{\"x\":\"188.438\",\"y\":\"18\",\"key\":0},\"of eligible children accessed \"),React.createElement(\"tspan\",{\"x\":\"192.155\",\"y\":\"48\",\"key\":1},\"child care during lockdown\")]),React.createElement(\"path\",{\"d\":\"M30,12 C36.0012891,12 39.0774609,15.0744141 41.7896484,17.7884766 C44.3439844,20.3410547 46.6653516,22.546875 51.2109375,22.546875 L51.2109375,22.546875 L54.7265625,22.546875 C57.6344531,22.546875 60,24.9124219 60,27.8203125 C60,36.3194531 53.1329297,43.2215625 44.7188672,43.5742969 C41.3167969,47.5951172 36.5939063,50.671875 30,50.671875 C23.3925,50.671875 18.6635156,47.5825781 15.2600391,43.5498047 C6.7425,43.0735547 0,36.2364844 0,27.8203125 C0,24.9124219 2.36554688,22.546875 5.2734375,22.546875 L5.2734375,22.546875 L8.7890625,22.546875 C13.3346484,22.546875 15.6560156,20.3410547 18.2103516,17.7884766 C20.9225391,15.0744141 23.9987109,12 30,12 Z M7.31601563,26.0625 L5.2734375,26.0625 C4.30359375,26.0625 3.515625,26.8504687 3.515625,27.8203125 C3.515625,33.3814453 7.36640625,38.0392969 12.4409766,39.5572266 C9.37792969,34.3389844 7.84300781,28.7095313 7.31601563,26.0625 L7.31601563,26.0625 Z M54.7265625,26.0625 L52.6839844,26.0625 C52.1569922,28.7095312 50.6220703,34.3389844 47.5590234,39.5572266 C52.6335938,38.0392969 56.484375,33.3814453 56.484375,27.8203125 C56.484375,26.8504687 55.6964063,26.0625 54.7265625,26.0625 L54.7265625,26.0625 Z\",\"id\":\"Combined-Shape\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"1.5\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"text\",{\"id\":\"7%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"48\",\"fontWeight\":\"bold\",\"lineSpacing\":\"62\",\"fill\":\"#2D3142\",\"key\":2},React.createElement(\"tspan\",{\"x\":\"85.5\",\"y\":\"46\"},\"7%\"))])))]);\n}\n\nEarlyYearsGraph4.defaultProps = {\"width\":\"445px\",\"height\":\"62px\",\"viewBox\":\"0 0 445 62\",\"version\":\"1.1\"};\n\nmodule.exports = EarlyYearsGraph4;\n\nEarlyYearsGraph4.default = EarlyYearsGraph4;\n","\"use strict\";\n\nexports.__esModule = true;\nexports.useScrollRestoration = useScrollRestoration;\n\nvar _scrollHandler = require(\"./scroll-handler\");\n\nvar _react = require(\"react\");\n\nvar _router = require(\"@reach/router\");\n\nfunction useScrollRestoration(identifier) {\n  var location = (0, _router.useLocation)();\n  var state = (0, _react.useContext)(_scrollHandler.ScrollContext);\n  var ref = (0, _react.useRef)();\n  (0, _react.useLayoutEffect)(function () {\n    if (ref.current) {\n      var position = state.read(location, identifier);\n      ref.current.scrollTo(0, position || 0);\n    }\n  }, []);\n  return {\n    ref: ref,\n    onScroll: function onScroll() {\n      if (ref.current) {\n        state.save(location, identifier, ref.current.scrollTop);\n      }\n    }\n  };\n}","module.exports = true;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n                                                               \n\n// An array of all currently registered event handlers for a type\n                                            \n                                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                 \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).slice().map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).slice().map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nexport default mitt;\n//# sourceMappingURL=mitt.es.js.map\n","import mitt from \"mitt\"\n\nconst emitter = mitt()\nexport default emitter\n","module.exports = Object.assign\n","\"use strict\";\n\nexports.__esModule = true;\nexports.useScrollRestoration = exports.ScrollContainer = exports.ScrollContext = void 0;\n\nvar _scrollHandler = require(\"./scroll-handler\");\n\nexports.ScrollContext = _scrollHandler.ScrollHandler;\n\nvar _scrollContainer = require(\"./scroll-container\");\n\nexports.ScrollContainer = _scrollContainer.ScrollContainer;\n\nvar _useScrollRestoration = require(\"./use-scroll-restoration\");\n\nexports.useScrollRestoration = _useScrollRestoration.useScrollRestoration;","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\n\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\n\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext); // Custom merge via a function prop\n\n  if (isFunction(components)) {\n    return components(contextComponents);\n  }\n\n  return _objectSpread2(_objectSpread2({}, contextComponents), components);\n};\n\nvar MDXProvider = function MDXProvider(_ref) {\n  var components = _ref.components,\n      children = _ref.children,\n      disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n\n  if (disableParentContext) {\n    allComponents = components;\n  }\n\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\n\nfunction createElement(type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","exports.polyfill = Component => Component\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar getLocation = function getLocation(source) {\n  var _source$location = source.location,\n      search = _source$location.search,\n      hash = _source$location.hash,\n      href = _source$location.href,\n      origin = _source$location.origin,\n      protocol = _source$location.protocol,\n      host = _source$location.host,\n      hostname = _source$location.hostname,\n      port = _source$location.port;\n  var pathname = source.location.pathname;\n\n\n  if (!pathname && href && canUseDOM) {\n    var url = new URL(href);\n    pathname = url.pathname;\n  }\n\n  return {\n    pathname: encodeURI(decodeURI(pathname)),\n    search: search,\n    hash: hash,\n    href: href,\n    origin: origin,\n    protocol: protocol,\n    host: host,\n    hostname: hostname,\n    port: port,\n    state: source.history.state,\n    key: source.history.state && source.history.state.key || \"initial\"\n  };\n};\n\nvar createHistory = function createHistory(source, options) {\n  var listeners = [];\n  var location = getLocation(source);\n  var transitioning = false;\n  var resolveTransition = function resolveTransition() {};\n\n  return {\n    get location() {\n      return location;\n    },\n\n    get transitioning() {\n      return transitioning;\n    },\n\n    _onTransitionComplete: function _onTransitionComplete() {\n      transitioning = false;\n      resolveTransition();\n    },\n    listen: function listen(listener) {\n      listeners.push(listener);\n\n      var popstateListener = function popstateListener() {\n        location = getLocation(source);\n        listener({ location: location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return function () {\n        source.removeEventListener(\"popstate\", popstateListener);\n        listeners = listeners.filter(function (fn) {\n          return fn !== listener;\n        });\n      };\n    },\n    navigate: function navigate(to) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          state = _ref.state,\n          _ref$replace = _ref.replace,\n          replace = _ref$replace === undefined ? false : _ref$replace;\n\n      if (typeof to === \"number\") {\n        source.history.go(to);\n      } else {\n        state = _extends({}, state, { key: Date.now() + \"\" });\n        // try...catch iOS Safari limits to 100 pushState calls\n        try {\n          if (transitioning || replace) {\n            source.history.replaceState(state, null, to);\n          } else {\n            source.history.pushState(state, null, to);\n          }\n        } catch (e) {\n          source.location[replace ? \"replace\" : \"assign\"](to);\n        }\n      }\n\n      location = getLocation(source);\n      transitioning = true;\n      var transition = new Promise(function (res) {\n        return resolveTransition = res;\n      });\n      listeners.forEach(function (listener) {\n        return listener({ location: location, action: \"PUSH\" });\n      });\n      return transition;\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Stores history entries in memory for testing or other platforms like Native\nvar createMemorySource = function createMemorySource() {\n  var initialPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n\n  var searchIndex = initialPath.indexOf(\"?\");\n  var initialLocation = {\n    pathname: searchIndex > -1 ? initialPath.substr(0, searchIndex) : initialPath,\n    search: searchIndex > -1 ? initialPath.substr(searchIndex) : \"\"\n  };\n  var index = 0;\n  var stack = [initialLocation];\n  var states = [null];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener: function addEventListener(name, fn) {},\n    removeEventListener: function removeEventListener(name, fn) {},\n\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState: function pushState(state, _, uri) {\n        var _uri$split = uri.split(\"?\"),\n            pathname = _uri$split[0],\n            _uri$split$ = _uri$split[1],\n            search = _uri$split$ === undefined ? \"\" : _uri$split$;\n\n        index++;\n        stack.push({ pathname: pathname, search: search.length ? \"?\" + search : search });\n        states.push(state);\n      },\n      replaceState: function replaceState(state, _, uri) {\n        var _uri$split2 = uri.split(\"?\"),\n            pathname = _uri$split2[0],\n            _uri$split2$ = _uri$split2[1],\n            search = _uri$split2$ === undefined ? \"\" : _uri$split2$;\n\n        stack[index] = { pathname: pathname, search: search };\n        states[index] = state;\n      },\n      go: function go(to) {\n        var newIndex = index + to;\n\n        if (newIndex < 0 || newIndex > states.length - 1) {\n          return;\n        }\n\n        index = newIndex;\n      }\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// global history - uses window.history as the source if available, otherwise a\n// memory history\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar getSource = function getSource() {\n  return canUseDOM ? window : createMemorySource();\n};\n\nvar globalHistory = createHistory(getSource());\nvar navigate = globalHistory.navigate;\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport { globalHistory, navigate, createHistory, createMemorySource };","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar logDeprecationNotice = function logDeprecationNotice(prop, replacement) {\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  console.log(\"\\n    The \\\"\" + prop + \"\\\" prop is now deprecated and will be removed in the next major version\\n    of \\\"gatsby-image\\\".\\n    \");\n\n  if (replacement) {\n    console.log(\"Please use \" + replacement + \" instead of \\\"\" + prop + \"\\\".\");\n  }\n}; // Handle legacy props during their deprecation phase\n\n\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n  var resolutions = convertedProps.resolutions,\n      sizes = convertedProps.sizes,\n      critical = convertedProps.critical;\n\n  if (resolutions) {\n    convertedProps.fixed = resolutions;\n    logDeprecationNotice(\"resolutions\", \"the gatsby-image v2 prop \\\"fixed\\\"\");\n    delete convertedProps.resolutions;\n  }\n\n  if (sizes) {\n    convertedProps.fluid = sizes;\n    logDeprecationNotice(\"sizes\", \"the gatsby-image v2 prop \\\"fluid\\\"\");\n    delete convertedProps.sizes;\n  }\n\n  if (critical) {\n    logDeprecationNotice(\"critical\", \"the native \\\"loading\\\" attribute\");\n    convertedProps.loading = \"eager\";\n  } // convert fluid & fixed to arrays so we only have to work with arrays\n\n\n  if (convertedProps.fluid) {\n    convertedProps.fluid = groupByMedia([].concat(convertedProps.fluid));\n  }\n\n  if (convertedProps.fixed) {\n    convertedProps.fixed = groupByMedia([].concat(convertedProps.fixed));\n  }\n\n  return convertedProps;\n};\n/**\n * Checks if fluid or fixed are art-direction arrays.\n *\n * @param currentData  {{media?: string}[]}   The props to check for images.\n * @return {boolean}\n */\n\n\nvar hasArtDirectionSupport = function hasArtDirectionSupport(currentData) {\n  return !!currentData && Array.isArray(currentData) && currentData.some(function (image) {\n    return typeof image.media !== \"undefined\";\n  });\n};\n/**\n * Tries to detect if a media query matches the current viewport.\n * @property media   {{media?: string}}  A media query string.\n * @return {boolean}\n */\n\n\nvar matchesMedia = function matchesMedia(_ref) {\n  var media = _ref.media;\n  return media ? isBrowser && !!window.matchMedia(media).matches : false;\n};\n/**\n * Find the source of an image to use as a key in the image cache.\n * Use `the first image in either `fixed` or `fluid`\n * @param {{fluid: {src: string, media?: string}[], fixed: {src: string, media?: string}[]}} args\n * @return {string?} Returns image src or undefined it not given.\n */\n\n\nvar getImageCacheKey = function getImageCacheKey(_ref2) {\n  var fluid = _ref2.fluid,\n      fixed = _ref2.fixed;\n  var srcData = getCurrentSrcData(fluid || fixed || []);\n  return srcData && srcData.src;\n};\n/**\n * Returns the current src - Preferably with art-direction support.\n * @param currentData  {{media?: string}[], maxWidth?: Number, maxHeight?: Number}   The fluid or fixed image array.\n * @return {{src: string, media?: string, maxWidth?: Number, maxHeight?: Number}}\n */\n\n\nvar getCurrentSrcData = function getCurrentSrcData(currentData) {\n  if (isBrowser && hasArtDirectionSupport(currentData)) {\n    // Do we have an image for the current Viewport?\n    var foundMedia = currentData.findIndex(matchesMedia);\n\n    if (foundMedia !== -1) {\n      return currentData[foundMedia];\n    } // No media matches, select first element without a media condition\n\n\n    var noMedia = currentData.findIndex(function (image) {\n      return typeof image.media === \"undefined\";\n    });\n\n    if (noMedia !== -1) {\n      return currentData[noMedia];\n    }\n  } // Else return the first image.\n\n\n  return currentData[0];\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props);\n  var cacheKey = getImageCacheKey(convertedProps);\n  return imageCache[cacheKey] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props);\n  var cacheKey = getImageCacheKey(convertedProps);\n\n  if (cacheKey) {\n    imageCache[cacheKey] = true;\n  }\n}; // Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\n\n\nvar hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nvar isBrowser = typeof window !== \"undefined\";\nvar hasIOSupport = isBrowser && window.IntersectionObserver;\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nfunction generateImageSources(imageVariants) {\n  return imageVariants.map(function (_ref3) {\n    var src = _ref3.src,\n        srcSet = _ref3.srcSet,\n        srcSetWebp = _ref3.srcSetWebp,\n        media = _ref3.media,\n        sizes = _ref3.sizes;\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {\n      key: src\n    }, srcSetWebp && /*#__PURE__*/_react.default.createElement(\"source\", {\n      type: \"image/webp\",\n      media: media,\n      srcSet: srcSetWebp,\n      sizes: sizes\n    }), /*#__PURE__*/_react.default.createElement(\"source\", {\n      media: media,\n      srcSet: srcSet,\n      sizes: sizes\n    }));\n  });\n} // Return an array ordered by elements having a media prop, does not use\n// native sort, as a stable sort is not guaranteed by all browsers/versions\n\n\nfunction groupByMedia(imageVariants) {\n  var withMedia = [];\n  var without = [];\n  imageVariants.forEach(function (variant) {\n    return (variant.media ? withMedia : without).push(variant);\n  });\n\n  if (without.length > 1 && process.env.NODE_ENV !== \"production\") {\n    console.warn(\"We've found \" + without.length + \" sources without a media property. They might be ignored by the browser, see: https://www.gatsbyjs.org/packages/gatsby-image/#art-directing-multiple-images\");\n  }\n\n  return [].concat(withMedia, without);\n}\n\nfunction generateTracedSVGSources(imageVariants) {\n  return imageVariants.map(function (_ref4) {\n    var src = _ref4.src,\n        media = _ref4.media,\n        tracedSVG = _ref4.tracedSVG;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: tracedSVG\n    });\n  });\n}\n\nfunction generateBase64Sources(imageVariants) {\n  return imageVariants.map(function (_ref5) {\n    var src = _ref5.src,\n        media = _ref5.media,\n        base64 = _ref5.base64;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: base64\n    });\n  });\n}\n\nfunction generateNoscriptSource(_ref6, isWebp) {\n  var srcSet = _ref6.srcSet,\n      srcSetWebp = _ref6.srcSetWebp,\n      media = _ref6.media,\n      sizes = _ref6.sizes;\n  var src = isWebp ? srcSetWebp : srcSet;\n  var mediaAttr = media ? \"media=\\\"\" + media + \"\\\" \" : \"\";\n  var typeAttr = isWebp ? \"type='image/webp' \" : \"\";\n  var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\" \" : \"\";\n  return \"<source \" + typeAttr + mediaAttr + \"srcset=\\\"\" + src + \"\\\" \" + sizesAttr + \"/>\";\n}\n\nfunction generateNoscriptSources(imageVariants) {\n  return imageVariants.map(function (variant) {\n    return (variant.srcSetWebp ? generateNoscriptSource(variant, true) : \"\") + generateNoscriptSource(variant);\n  }).join(\"\");\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\";\n  var loading = props.loading ? \"loading=\\\"\" + props.loading + \"\\\" \" : \"\";\n  var draggable = props.draggable ? \"draggable=\\\"\" + props.draggable + \"\\\" \" : \"\";\n  var sources = generateNoscriptSources(props.imageVariants);\n  return \"<picture>\" + sources + \"<img \" + loading + width + height + sizes + srcSet + src + alt + title + crossOrigin + draggable + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n}; // Earlier versions of gatsby-image during the 2.x cycle did not wrap\n// the `Img` component in a `picture` element. This maintains compatibility\n// until a breaking change can be introduced in the next major release\n\n\nvar Placeholder = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var src = props.src,\n      imageVariants = props.imageVariants,\n      generateSources = props.generateSources,\n      spreadProps = props.spreadProps,\n      ariaHidden = props.ariaHidden;\n\n  var baseImage = /*#__PURE__*/_react.default.createElement(Img, (0, _extends2.default)({\n    ref: ref,\n    src: src\n  }, spreadProps, {\n    ariaHidden: ariaHidden\n  }));\n\n  return imageVariants.length > 1 ? /*#__PURE__*/_react.default.createElement(\"picture\", null, generateSources(imageVariants), baseImage) : baseImage;\n});\n\nvar Img = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      loading = props.loading,\n      draggable = props.draggable,\n      ariaHidden = props.ariaHidden,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\", \"loading\", \"draggable\", \"ariaHidden\"]);\n  return /*#__PURE__*/_react.default.createElement(\"img\", (0, _extends2.default)({\n    \"aria-hidden\": ariaHidden,\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    loading: loading,\n    draggable: draggable,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    _this.seenBefore = isBrowser && inImageCache(props);\n    _this.isCritical = props.loading === \"eager\" || props.critical;\n    _this.addNoScript = !(_this.isCritical && !props.fadeIn);\n    _this.useIOSupport = !hasNativeLazyLoadSupport && hasIOSupport && !_this.isCritical && !_this.seenBefore;\n    var isVisible = _this.isCritical || isBrowser && (hasNativeLazyLoadSupport || !_this.useIOSupport);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: false,\n      imgCached: false,\n      fadeIn: !_this.seenBefore && props.fadeIn\n    };\n    _this.imageRef = /*#__PURE__*/_react.default.createRef();\n    _this.placeholderRef = props.placeholderRef || /*#__PURE__*/_react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.isCritical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  } // Specific to IntersectionObserver based lazy-load support\n  ;\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.useIOSupport && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          _this2.setState({\n            imgLoaded: imageInCache,\n            // `currentSrc` should be a string, but can be `undefined` in IE,\n            // !! operator validates the value is not undefined/null/\"\"\n            // for lazyloaded components this might be null\n            // TODO fix imgCached behaviour as it's now false when it's lazyloaded\n            imgCached: !!(_this2.imageRef.current && _this2.imageRef.current.currentSrc)\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        durationFadeIn = _convertProps.durationFadeIn,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp,\n        loading = _convertProps.loading,\n        draggable = _convertProps.draggable;\n\n    var shouldReveal = this.state.fadeIn === false || this.state.imgLoaded;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn + \"ms\" : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn + \"ms\"\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName,\n      itemProp: itemProp\n    };\n\n    if (fluid) {\n      var imageVariants = fluid;\n      var image = getCurrentSrcData(fluid);\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\",\n          maxWidth: image.maxWidth ? image.maxWidth + \"px\" : null,\n          maxHeight: image.maxHeight ? image.maxHeight + \"px\" : null\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateBase64Sources\n      }), image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image, {\n            imageVariants: imageVariants\n          }))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var _imageVariants = fixed;\n\n      var _image = getCurrentSrcData(fixed);\n\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(_image.srcSet)\n      }, bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: _image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: _image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), _image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: _image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: _imageVariants,\n        generateSources: generateBase64Sources\n      }), _image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: _image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: _imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(_imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: _image.width,\n        height: _image.height,\n        sizes: _image.sizes,\n        src: _image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: _image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, _image, {\n            imageVariants: _imageVariants\n          }))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  durationFadeIn: 500,\n  alt: \"\",\n  Tag: \"div\",\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: \"lazy\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string,\n  maxWidth: _propTypes.default.number,\n  maxHeight: _propTypes.default.number\n});\n\nfunction requireFixedOrFluid(originalPropTypes) {\n  return function (props, propName, componentName) {\n    var _PropTypes$checkPropT;\n\n    if (!props.fixed && !props.fluid) {\n      throw new Error(\"The prop `fluid` or `fixed` is marked as required in `\" + componentName + \"`, but their values are both `undefined`.\");\n    }\n\n    _propTypes.default.checkPropTypes((_PropTypes$checkPropT = {}, _PropTypes$checkPropT[propName] = originalPropTypes, _PropTypes$checkPropT), props, \"prop\", componentName);\n  };\n} // If you modify these propTypes, please don't forget to update following files as well:\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/index.d.ts\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/README.md#gatsby-image-props\n// https://github.com/gatsbyjs/gatsby/blob/master/docs/docs/gatsby-image.md#gatsby-image-props\n\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: requireFixedOrFluid(_propTypes.default.oneOfType([fixedObject, _propTypes.default.arrayOf(fixedObject)])),\n  fluid: requireFixedOrFluid(_propTypes.default.oneOfType([fluidObject, _propTypes.default.arrayOf(fluidObject)])),\n  fadeIn: _propTypes.default.bool,\n  durationFadeIn: _propTypes.default.number,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string,\n  loading: _propTypes.default.oneOf([\"auto\", \"lazy\", \"eager\"]),\n  draggable: _propTypes.default.bool\n};\nvar _default = Image;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Get a manifest filename depending on localized pathname\n *\n * @param {string} pathname\n * @param {Array<{start_url: string, lang: string}>} localizedManifests\n * @return string\n */\nvar _default = function _default(pathname, localizedManifests) {\n  var defaultFilename = \"manifest.webmanifest\";\n\n  if (!Array.isArray(localizedManifests)) {\n    return defaultFilename;\n  }\n\n  var localizedManifest = localizedManifests.find(function (app) {\n    return pathname.startsWith(app.start_url);\n  });\n\n  if (!localizedManifest) {\n    return defaultFilename;\n  }\n\n  return \"manifest_\" + localizedManifest.lang + \".webmanifest\";\n};\n\nexports.default = _default;","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","import React, { createContext, useContext } from \"react\"\n\nconst GatsbyMDXScopeContext = createContext({})\n\nexport const useMDXScope = scope => {\n  const contextScope = useContext(GatsbyMDXScopeContext)\n  return scope || contextScope\n}\n\nexport const MDXScopeProvider = ({ __mdxScope, children }) =>\n  React.createElement(\n    GatsbyMDXScopeContext.Provider,\n    { value: __mdxScope },\n    children\n  )\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph3Desktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 12\"),React.createElement(\"defs\",{\"key\":1},[React.createElement(\"path\",{\"d\":\"M0.208232803,0.063520977 C48.9927334,34.7161591 88.2917759,59.0929028 118.10536,73.193752 C147.918945,87.2946012 186.908546,99.9458227 235.074164,111.147416 L235.074164,93.5591328 C198.037526,79.627833 165.236751,66.9766116 136.671837,55.6054686 C108.106923,44.2343257 62.6190553,25.7203431 0.208232803,0.063520977 Z\",\"id\":\"path-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0,251.842967 C47.4100659,207.646786 87.0748294,177.599101 118.994291,161.699913 C141.202829,150.637767 172.680004,136.45083 212.888223,126.386139 C224.609207,123.452209 243.821827,120.35451 270.526082,117.09304 C329.140068,119.93692 384.918641,130.159329 437.861803,147.760265 C490.804965,165.361201 570.134492,200.055435 675.850384,251.842967 C587.181723,170.150009 520.557315,114.701188 475.977162,85.4965055 C449.266551,67.9982501 411.320014,35.3552557 372.786801,18.5861969 C355.600849,11.1071364 328.951086,5.22150739 292.837512,0.929309843 C269.517477,3.65020367 253.093785,6.74790315 243.566438,10.2224083 C221.071561,18.4260107 204.130153,32.7864541 189.64715,42.7482528 C165.96308,59.0387932 132.805817,91.5646376 90.1753608,140.325786 L0,251.842967 Z\",\"id\":\"path-3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":2},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Gaps-in-attainment\",\"transform\":\"translate(-170.000000, -5333.000000)\"},React.createElement(\"g\",{\"id\":\"Group-12\",\"transform\":\"translate(170.000000, 5333.000000)\"},[React.createElement(\"polygon\",{\"id\":\"Line\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 524.021152 1102.57273 525.021152 110.223044 525.021152 110.223044 524.021152\",\"key\":0}),React.createElement(\"polygon\",{\"id\":\"Line-Copy\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 422.112961 1102.57273 423.112961 110.223044 423.112961 110.223044 422.112961\",\"key\":1}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-2\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 318.206571 1102.57273 319.206571 110.223044 319.206571 110.223044 318.206571\",\"key\":2}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-3\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 218.29658 1102.57273 219.29658 110.223044 219.29658 110.223044 218.29658\",\"key\":3}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-4\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 115.389289 1102.57273 116.389289 110.223044 116.389289 110.223044 115.389289\",\"key\":4}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-5\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 13.4810981 1102.57273 14.4810981 110.223044 14.4810981 110.223044 13.4810981\",\"key\":5}),React.createElement(\"g\",{\"id\":\"Group-35\",\"transform\":\"translate(868.425551, 394.638164)\",\"key\":6},[React.createElement(\"mask\",{\"id\":\"mask-2\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-1\"})),React.createElement(\"use\",{\"id\":\"Path-6-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#FFBA08\",\"xlinkHref\":\"#path-1\",\"key\":1}),React.createElement(\"g\",{\"id\":\"Group-11-Copy-2\",\"mask\":\"url(#mask-2)\",\"strokeLinecap\":\"square\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(105.100579, 76.372538) rotate(-345.000000) translate(-105.100579, -76.372538) translate(-37.271158, -54.627462)\"},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.000000, -0.000000)\",\"key\":0},[React.createElement(\"line\",{\"x1\":\"2.57649727\",\"y1\":\"-7.53864595e-12\",\"x2\":\"2.57649727\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.5874273\",\"y1\":\"0\",\"x2\":\"11.5874273\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.5983574\",\"y1\":\"0\",\"x2\":\"20.5983574\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.6092874\",\"y1\":\"-3.76932298e-12\",\"x2\":\"29.6092874\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.6202175\",\"y1\":\"-1.88466149e-12\",\"x2\":\"38.6202175\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-2\",\"transform\":\"translate(216.190001, -0.000000)\",\"key\":1},[React.createElement(\"line\",{\"x1\":\"2.64881735\",\"y1\":\"0\",\"x2\":\"2.64881735\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.6597474\",\"y1\":\"0\",\"x2\":\"11.6597474\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.6706775\",\"y1\":\"0\",\"x2\":\"20.6706775\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.6816075\",\"y1\":\"0\",\"x2\":\"29.6816075\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.6925376\",\"y1\":\"0\",\"x2\":\"38.6925376\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.7034676\",\"y1\":\"0\",\"x2\":\"47.7034676\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.7143977\",\"y1\":\"0\",\"x2\":\"56.7143977\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.7253277\",\"y1\":\"0\",\"x2\":\"65.7253277\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":7})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy\",\"transform\":\"translate(45.378415, 0.000000)\",\"key\":2},[React.createElement(\"line\",{\"x1\":\"2.25273251\",\"y1\":\"0\",\"x2\":\"2.25273251\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.2636626\",\"y1\":\"0\",\"x2\":\"11.2636626\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.2745926\",\"y1\":\"0\",\"x2\":\"20.2745926\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.2855227\",\"y1\":\"0\",\"x2\":\"29.2855227\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.2964527\",\"y1\":\"0\",\"x2\":\"38.2964527\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.3073828\",\"y1\":\"0\",\"x2\":\"47.3073828\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.3183128\",\"y1\":\"0\",\"x2\":\"56.3183128\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.3292429\",\"y1\":\"0\",\"x2\":\"65.3292429\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.3401729\",\"y1\":\"0\",\"x2\":\"74.3401729\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.351103\",\"y1\":\"0\",\"x2\":\"83.351103\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.362033\",\"y1\":\"0\",\"x2\":\"92.362033\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.372963\",\"y1\":\"0\",\"x2\":\"101.372963\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.383893\",\"y1\":\"0\",\"x2\":\"110.383893\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.394823\",\"y1\":\"0\",\"x2\":\"119.394823\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.405753\",\"y1\":\"0\",\"x2\":\"128.405753\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"137.416683\",\"y1\":\"0\",\"x2\":\"137.416683\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"146.427613\",\"y1\":\"0\",\"x2\":\"146.427613\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"155.438543\",\"y1\":\"0\",\"x2\":\"155.438543\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"164.449473\",\"y1\":\"0\",\"x2\":\"164.449473\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":18})])]))]),React.createElement(\"g\",{\"id\":\"Group-34\",\"transform\":\"translate(159.703104, 121.883888)\",\"key\":7},[React.createElement(\"mask\",{\"id\":\"mask-4\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-3\"})),React.createElement(\"use\",{\"id\":\"Path-5-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#3772FF\",\"xlinkHref\":\"#path-3\",\"key\":1}),React.createElement(\"g\",{\"id\":\"Group-11\",\"mask\":\"url(#mask-4)\",\"strokeLinecap\":\"square\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(362.873783, 154.811644) rotate(-345.000000) translate(-362.873783, -154.811644) translate(22.180713, -47.188356)\"},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.639202, 1.069058)\",\"key\":0},[React.createElement(\"line\",{\"x1\":\"1.85928579\",\"y1\":\"0\",\"x2\":\"1.85928579\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"10.8830195\",\"y1\":\"0\",\"x2\":\"10.8830195\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"19.9067532\",\"y1\":\"0\",\"x2\":\"19.9067532\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"28.9304869\",\"y1\":\"0\",\"x2\":\"28.9304869\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"37.9542206\",\"y1\":\"0\",\"x2\":\"37.9542206\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"46.9779543\",\"y1\":\"0\",\"x2\":\"46.9779543\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.001688\",\"y1\":\"0\",\"x2\":\"56.001688\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.0254217\",\"y1\":\"0\",\"x2\":\"65.0254217\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.0491554\",\"y1\":\"0\",\"x2\":\"74.0491554\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.0728891\",\"y1\":\"0\",\"x2\":\"83.0728891\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.0966228\",\"y1\":\"0\",\"x2\":\"92.0966228\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.120356\",\"y1\":\"0\",\"x2\":\"101.120356\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.14409\",\"y1\":\"0\",\"x2\":\"110.14409\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.167824\",\"y1\":\"0\",\"x2\":\"119.167824\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.191558\",\"y1\":\"0\",\"x2\":\"128.191558\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"137.215291\",\"y1\":\"0\",\"x2\":\"137.215291\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"146.239025\",\"y1\":\"0\",\"x2\":\"146.239025\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"155.262759\",\"y1\":\"0\",\"x2\":\"155.262759\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"164.286492\",\"y1\":\"0\",\"x2\":\"164.286492\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-2\",\"transform\":\"translate(341.136468, 0.302457)\",\"key\":1},[React.createElement(\"line\",{\"x1\":\"2.65258106\",\"y1\":\"0\",\"x2\":\"2.65258106\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.6763148\",\"y1\":\"0\",\"x2\":\"11.6763148\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.7000485\",\"y1\":\"0\",\"x2\":\"20.7000485\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.7237821\",\"y1\":\"0\",\"x2\":\"29.7237821\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.7475158\",\"y1\":\"0\",\"x2\":\"38.7475158\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.7712495\",\"y1\":\"0\",\"x2\":\"47.7712495\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.7949832\",\"y1\":\"0\",\"x2\":\"56.7949832\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.8187169\",\"y1\":\"0\",\"x2\":\"65.8187169\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.8424506\",\"y1\":\"0\",\"x2\":\"74.8424506\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.8661843\",\"y1\":\"0\",\"x2\":\"83.8661843\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.889918\",\"y1\":\"0\",\"x2\":\"92.889918\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.913652\",\"y1\":\"0\",\"x2\":\"101.913652\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.937385\",\"y1\":\"0\",\"x2\":\"110.937385\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.961119\",\"y1\":\"0\",\"x2\":\"119.961119\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.984853\",\"y1\":\"0\",\"x2\":\"128.984853\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"138.008587\",\"y1\":\"0\",\"x2\":\"138.008587\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"147.03232\",\"y1\":\"0\",\"x2\":\"147.03232\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"156.056054\",\"y1\":\"0\",\"x2\":\"156.056054\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"165.079788\",\"y1\":\"0\",\"x2\":\"165.079788\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy\",\"transform\":\"translate(172.026410, 1.342879)\",\"key\":2},[React.createElement(\"line\",{\"x1\":\"2.25593342\",\"y1\":\"0\",\"x2\":\"2.25593342\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.2796671\",\"y1\":\"0\",\"x2\":\"11.2796671\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.3034008\",\"y1\":\"0\",\"x2\":\"20.3034008\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.3271345\",\"y1\":\"0\",\"x2\":\"29.3271345\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.3508682\",\"y1\":\"0\",\"x2\":\"38.3508682\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.3746019\",\"y1\":\"0\",\"x2\":\"47.3746019\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.3983356\",\"y1\":\"0\",\"x2\":\"56.3983356\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.4220693\",\"y1\":\"0\",\"x2\":\"65.4220693\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.445803\",\"y1\":\"0\",\"x2\":\"74.445803\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.4695367\",\"y1\":\"0\",\"x2\":\"83.4695367\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.4932704\",\"y1\":\"0\",\"x2\":\"92.4932704\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.517004\",\"y1\":\"0\",\"x2\":\"101.517004\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.540738\",\"y1\":\"0\",\"x2\":\"110.540738\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.564471\",\"y1\":\"0\",\"x2\":\"119.564471\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.588205\",\"y1\":\"0\",\"x2\":\"128.588205\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"137.611939\",\"y1\":\"0\",\"x2\":\"137.611939\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"146.635673\",\"y1\":\"0\",\"x2\":\"146.635673\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"155.659406\",\"y1\":\"0\",\"x2\":\"155.659406\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"164.68314\",\"y1\":\"0\",\"x2\":\"164.68314\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-3\",\"transform\":\"translate(513.560092, 0.576278)\",\"key\":3},[React.createElement(\"line\",{\"x1\":\"2.01281211\",\"y1\":\"0\",\"x2\":\"2.01281211\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.0365458\",\"y1\":\"0\",\"x2\":\"11.0365458\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.0602795\",\"y1\":\"0\",\"x2\":\"20.0602795\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.0840132\",\"y1\":\"0\",\"x2\":\"29.0840132\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.1077469\",\"y1\":\"0\",\"x2\":\"38.1077469\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.1314806\",\"y1\":\"0\",\"x2\":\"47.1314806\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.1552143\",\"y1\":\"0\",\"x2\":\"56.1552143\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.178948\",\"y1\":\"0\",\"x2\":\"65.178948\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.2026817\",\"y1\":\"0\",\"x2\":\"74.2026817\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.2264154\",\"y1\":\"0\",\"x2\":\"83.2264154\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.2501491\",\"y1\":\"1.88438563e-12\",\"x2\":\"92.2501491\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.273883\",\"y1\":\"0\",\"x2\":\"101.273883\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.297616\",\"y1\":\"0\",\"x2\":\"110.297616\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.32135\",\"y1\":\"0\",\"x2\":\"119.32135\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.345084\",\"y1\":\"0\",\"x2\":\"128.345084\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"137.368818\",\"y1\":\"0\",\"x2\":\"137.368818\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"146.392551\",\"y1\":\"0\",\"x2\":\"146.392551\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"155.416285\",\"y1\":\"0\",\"x2\":\"155.416285\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"164.440019\",\"y1\":\"-1.88438563e-12\",\"x2\":\"164.440019\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})])]))]),React.createElement(\"path\",{\"d\":\"M120.773279,415.01233 C233.72194,290.508883 347.601496,231.973681 462.411948,239.406722 C543.186924,244.636244 648.464739,278.291073 848.733603,379.705382 C933.1348,422.445372 1017.2257,458.062029 1101.0063,486.555356\",\"id\":\"Path-3-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M120.773279,417.166874 C170.706077,358.401551 205.76981,317.129766 225.964477,293.351521 C327.802672,173.441963 387.940304,115.541503 470.790008,124.850928 C553.639712,134.160353 611.355237,179.776536 848.733603,381.791059 C872.152154,401.720791 911.908071,431.227596 970.680921,459.990229 C999.848981,474.26468 1043.29077,489.780389 1101.0063,506.537354\",\"id\":\"Path-4-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M124.206088,550.513051 L124.206088,540.713051 L120.888088,540.713051 L120.888088,541.609051 L123.198088,541.609051 L123.198088,550.513051 L124.206088,550.513051 Z M130.268088,550.597051 C131.042755,550.597051 131.717088,550.482718 132.291088,550.254051 C132.865088,550.025385 133.306088,549.698718 133.614088,549.274051 C133.922088,548.849385 134.076088,548.352385 134.076088,547.783051 C134.076088,547.204385 133.910422,546.709718 133.579088,546.299051 C133.247755,545.888385 132.774088,545.580385 132.158088,545.375051 C132.662088,545.179051 133.049422,544.896718 133.320088,544.528051 C133.590755,544.159385 133.726088,543.723051 133.726088,543.219051 C133.726088,542.696385 133.581422,542.239051 133.292088,541.847051 C133.002755,541.455051 132.599088,541.154051 132.081088,540.944051 C131.563088,540.734051 130.958755,540.629051 130.268088,540.629051 C129.222755,540.629051 128.389755,540.862385 127.769088,541.329051 C127.148422,541.795718 126.838088,542.425718 126.838088,543.219051 C126.838088,543.723051 126.968755,544.159385 127.230088,544.528051 C127.491422,544.896718 127.874088,545.179051 128.378088,545.375051 C127.762088,545.580385 127.293088,545.886051 126.971088,546.292051 C126.649088,546.698051 126.488088,547.195051 126.488088,547.783051 C126.488088,548.651051 126.824088,549.337051 127.496088,549.841051 C128.168088,550.345051 129.092088,550.597051 130.268088,550.597051 Z M130.268088,545.011051 C129.512088,545.011051 128.919422,544.852385 128.490088,544.535051 C128.060755,544.217718 127.846088,543.788385 127.846088,543.247051 C127.846088,542.705718 128.063088,542.276385 128.497088,541.959051 C128.931088,541.641718 129.521422,541.483051 130.268088,541.483051 C131.005422,541.483051 131.595755,541.641718 132.039088,541.959051 C132.482422,542.276385 132.704088,542.710385 132.704088,543.261051 C132.704088,543.793051 132.487088,544.217718 132.053088,544.535051 C131.619088,544.852385 131.024088,545.011051 130.268088,545.011051 Z M130.268088,549.743051 C129.400088,549.743051 128.723422,549.568051 128.238088,549.218051 C127.752755,548.868051 127.510088,548.385051 127.510088,547.769051 C127.510088,547.162385 127.755088,546.684051 128.245088,546.334051 C128.735088,545.984051 129.409422,545.809051 130.268088,545.809051 C131.136088,545.809051 131.815088,545.984051 132.305088,546.334051 C132.795088,546.684051 133.040088,547.162385 133.040088,547.769051 C133.040088,548.375718 132.795088,548.856385 132.305088,549.211051 C131.815088,549.565718 131.136088,549.743051 130.268088,549.743051 Z\",\"id\":\"18\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M93.1316681,519.540954 L93.1316681,518.644954 L87.6436681,518.644954 L87.6436681,514.990954 L91.5216681,514.990954 L91.5216681,514.290954 L87.6436681,514.290954 L87.6436681,513.114954 C87.6436681,512.293621 87.8770014,511.665954 88.3436681,511.231954 C88.8103347,510.797954 89.5056681,510.580954 90.4296681,510.580954 C91.4843347,510.580954 92.3196681,510.804954 92.9356681,511.252954 L92.9356681,511.252954 L93.3136681,510.398954 C92.5950014,509.904287 91.6616681,509.656954 90.5136681,509.656954 C89.2630014,509.656954 88.3016681,509.967287 87.6296681,510.587954 C86.9576681,511.208621 86.6216681,512.050954 86.6216681,513.114954 L86.6216681,513.114954 L86.6216681,514.290954 L85.0396681,514.290954 L85.0396681,514.990954 L86.6216681,514.990954 L86.6216681,518.644954 L85.0396681,518.644954 L85.0396681,519.540954 L93.1316681,519.540954 Z M98.1716681,519.624954 C98.9276681,519.624954 99.6020014,519.424287 100.194668,519.022954 C100.787335,518.621621 101.251668,518.045287 101.587668,517.293954 C101.923668,516.542621 102.091668,515.658287 102.091668,514.640954 C102.091668,513.623621 101.923668,512.739287 101.587668,511.987954 C101.251668,511.236621 100.787335,510.660287 100.194668,510.258954 C99.6020014,509.857621 98.9276681,509.656954 98.1716681,509.656954 C97.4156681,509.656954 96.7413347,509.857621 96.1486681,510.258954 C95.5560014,510.660287 95.0940014,511.236621 94.7626681,511.987954 C94.4313347,512.739287 94.2656681,513.623621 94.2656681,514.640954 C94.2656681,515.658287 94.4313347,516.542621 94.7626681,517.293954 C95.0940014,518.045287 95.5560014,518.621621 96.1486681,519.022954 C96.7413347,519.424287 97.4156681,519.624954 98.1716681,519.624954 Z M98.1716681,518.700954 C97.6023347,518.700954 97.1006681,518.542287 96.6666681,518.224954 C96.2326681,517.907621 95.8943347,517.445621 95.6516681,516.838954 C95.4090014,516.232287 95.2876681,515.499621 95.2876681,514.640954 C95.2876681,513.782287 95.4090014,513.049621 95.6516681,512.442954 C95.8943347,511.836287 96.2326681,511.374287 96.6666681,511.056954 C97.1006681,510.739621 97.6023347,510.580954 98.1716681,510.580954 C98.7410014,510.580954 99.2426681,510.739621 99.6766681,511.056954 C100.110668,511.374287 100.449001,511.836287 100.691668,512.442954 C100.934335,513.049621 101.055668,513.782287 101.055668,514.640954 C101.055668,515.499621 100.934335,516.232287 100.691668,516.838954 C100.449001,517.445621 100.110668,517.907621 99.6766681,518.224954 C99.2426681,518.542287 98.7410014,518.700954 98.1716681,518.700954 Z\",\"id\":\"£0\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M63.7036681,418.631863 L63.7036681,417.735863 L58.2156681,417.735863 L58.2156681,414.081863 L62.0936681,414.081863 L62.0936681,413.381863 L58.2156681,413.381863 L58.2156681,412.205863 C58.2156681,411.38453 58.4490014,410.756863 58.9156681,410.322863 C59.3823347,409.888863 60.0776681,409.671863 61.0016681,409.671863 C62.0563347,409.671863 62.8916681,409.895863 63.5076681,410.343863 L63.5076681,410.343863 L63.8856681,409.489863 C63.1670014,408.995197 62.2336681,408.747863 61.0856681,408.747863 C59.8350014,408.747863 58.8736681,409.058197 58.2016681,409.678863 C57.5296681,410.29953 57.1936681,411.141863 57.1936681,412.205863 L57.1936681,412.205863 L57.1936681,413.381863 L55.6116681,413.381863 L55.6116681,414.081863 L57.1936681,414.081863 L57.1936681,417.735863 L55.6116681,417.735863 L55.6116681,418.631863 L63.7036681,418.631863 Z M67.9316681,418.715863 C68.7063347,418.715863 69.3596681,418.58753 69.8916681,418.330863 C70.4236681,418.074197 70.8226681,417.721863 71.0886681,417.273863 C71.3546681,416.825863 71.4876681,416.317197 71.4876681,415.747863 C71.4876681,414.833197 71.1633347,414.12153 70.5146681,413.612863 C69.8660014,413.104197 68.8323347,412.849863 67.4136681,412.849863 L67.4136681,412.849863 L66.1536681,412.849863 L66.4896681,409.727863 L70.9696681,409.727863 L70.9696681,408.831863 L65.6076681,408.831863 L65.1036681,413.745863 L67.1896681,413.745863 C68.3750014,413.745863 69.2173347,413.91853 69.7166681,414.263863 C70.2160014,414.609197 70.4656681,415.117863 70.4656681,415.789863 C70.4656681,416.39653 70.2440014,416.881863 69.8006681,417.245863 C69.3573347,417.609863 68.7296681,417.791863 67.9176681,417.791863 C67.3016681,417.791863 66.7276681,417.686863 66.1956681,417.476863 C65.6636681,417.266863 65.2343347,416.993863 64.9076681,416.657863 L64.9076681,416.657863 L64.4176681,417.455863 C64.8003347,417.83853 65.3066681,418.144197 65.9366681,418.372863 C66.5666681,418.60153 67.2316681,418.715863 67.9316681,418.715863 Z M73.4896681,420.675863 L74.0776681,418.743863 C74.1430014,418.575863 74.1920014,418.42653 74.2246681,418.295863 C74.2573347,418.165197 74.2736681,418.043863 74.2736681,417.931863 C74.2736681,417.717197 74.2036681,417.53753 74.0636681,417.392863 C73.9236681,417.248197 73.7463347,417.175863 73.5316681,417.175863 C73.3170014,417.175863 73.1396681,417.248197 72.9996681,417.392863 C72.8596681,417.53753 72.7896681,417.717197 72.7896681,417.931863 C72.7896681,418.109197 72.8363347,418.260863 72.9296681,418.386863 C73.0230014,418.512863 73.1443347,418.599197 73.2936681,418.645863 L73.2936681,418.645863 L72.8176681,420.675863 L73.4896681,420.675863 Z M79.6356681,418.715863 C80.3916681,418.715863 81.0660014,418.515197 81.6586681,418.113863 C82.2513347,417.71253 82.7156681,417.136197 83.0516681,416.384863 C83.3876681,415.63353 83.5556681,414.749197 83.5556681,413.731863 C83.5556681,412.71453 83.3876681,411.830197 83.0516681,411.078863 C82.7156681,410.32753 82.2513347,409.751197 81.6586681,409.349863 C81.0660014,408.94853 80.3916681,408.747863 79.6356681,408.747863 C78.8796681,408.747863 78.2053347,408.94853 77.6126681,409.349863 C77.0200014,409.751197 76.5580014,410.32753 76.2266681,411.078863 C75.8953347,411.830197 75.7296681,412.71453 75.7296681,413.731863 C75.7296681,414.749197 75.8953347,415.63353 76.2266681,416.384863 C76.5580014,417.136197 77.0200014,417.71253 77.6126681,418.113863 C78.2053347,418.515197 78.8796681,418.715863 79.6356681,418.715863 Z M79.6356681,417.791863 C79.0663347,417.791863 78.5646681,417.633197 78.1306681,417.315863 C77.6966681,416.99853 77.3583347,416.53653 77.1156681,415.929863 C76.8730014,415.323197 76.7516681,414.59053 76.7516681,413.731863 C76.7516681,412.873197 76.8730014,412.14053 77.1156681,411.533863 C77.3583347,410.927197 77.6966681,410.465197 78.1306681,410.147863 C78.5646681,409.83053 79.0663347,409.671863 79.6356681,409.671863 C80.2050014,409.671863 80.7066681,409.83053 81.1406681,410.147863 C81.5746681,410.465197 81.9130014,410.927197 82.1556681,411.533863 C82.3983347,412.14053 82.5196681,412.873197 82.5196681,413.731863 C82.5196681,414.59053 82.3983347,415.323197 82.1556681,415.929863 C81.9130014,416.53653 81.5746681,416.99853 81.1406681,417.315863 C80.7066681,417.633197 80.2050014,417.791863 79.6356681,417.791863 Z M88.9036681,418.715863 C89.6596681,418.715863 90.3340014,418.515197 90.9266681,418.113863 C91.5193347,417.71253 91.9836681,417.136197 92.3196681,416.384863 C92.6556681,415.63353 92.8236681,414.749197 92.8236681,413.731863 C92.8236681,412.71453 92.6556681,411.830197 92.3196681,411.078863 C91.9836681,410.32753 91.5193347,409.751197 90.9266681,409.349863 C90.3340014,408.94853 89.6596681,408.747863 88.9036681,408.747863 C88.1476681,408.747863 87.4733347,408.94853 86.8806681,409.349863 C86.2880014,409.751197 85.8260014,410.32753 85.4946681,411.078863 C85.1633347,411.830197 84.9976681,412.71453 84.9976681,413.731863 C84.9976681,414.749197 85.1633347,415.63353 85.4946681,416.384863 C85.8260014,417.136197 86.2880014,417.71253 86.8806681,418.113863 C87.4733347,418.515197 88.1476681,418.715863 88.9036681,418.715863 Z M88.9036681,417.791863 C88.3343347,417.791863 87.8326681,417.633197 87.3986681,417.315863 C86.9646681,416.99853 86.6263347,416.53653 86.3836681,415.929863 C86.1410014,415.323197 86.0196681,414.59053 86.0196681,413.731863 C86.0196681,412.873197 86.1410014,412.14053 86.3836681,411.533863 C86.6263347,410.927197 86.9646681,410.465197 87.3986681,410.147863 C87.8326681,409.83053 88.3343347,409.671863 88.9036681,409.671863 C89.4730014,409.671863 89.9746681,409.83053 90.4086681,410.147863 C90.8426681,410.465197 91.1810014,410.927197 91.4236681,411.533863 C91.6663347,412.14053 91.7876681,412.873197 91.7876681,413.731863 C91.7876681,414.59053 91.6663347,415.323197 91.4236681,415.929863 C91.1810014,416.53653 90.8426681,416.99853 90.4086681,417.315863 C89.9746681,417.633197 89.4730014,417.791863 88.9036681,417.791863 Z M98.1716681,418.715863 C98.9276681,418.715863 99.6020014,418.515197 100.194668,418.113863 C100.787335,417.71253 101.251668,417.136197 101.587668,416.384863 C101.923668,415.63353 102.091668,414.749197 102.091668,413.731863 C102.091668,412.71453 101.923668,411.830197 101.587668,411.078863 C101.251668,410.32753 100.787335,409.751197 100.194668,409.349863 C99.6020014,408.94853 98.9276681,408.747863 98.1716681,408.747863 C97.4156681,408.747863 96.7413347,408.94853 96.1486681,409.349863 C95.5560014,409.751197 95.0940014,410.32753 94.7626681,411.078863 C94.4313347,411.830197 94.2656681,412.71453 94.2656681,413.731863 C94.2656681,414.749197 94.4313347,415.63353 94.7626681,416.384863 C95.0940014,417.136197 95.5560014,417.71253 96.1486681,418.113863 C96.7413347,418.515197 97.4156681,418.715863 98.1716681,418.715863 Z M98.1716681,417.791863 C97.6023347,417.791863 97.1006681,417.633197 96.6666681,417.315863 C96.2326681,416.99853 95.8943347,416.53653 95.6516681,415.929863 C95.4090014,415.323197 95.2876681,414.59053 95.2876681,413.731863 C95.2876681,412.873197 95.4090014,412.14053 95.6516681,411.533863 C95.8943347,410.927197 96.2326681,410.465197 96.6666681,410.147863 C97.1006681,409.83053 97.6023347,409.671863 98.1716681,409.671863 C98.7410014,409.671863 99.2426681,409.83053 99.6766681,410.147863 C100.110668,410.465197 100.449001,410.927197 100.691668,411.533863 C100.934335,412.14053 101.055668,412.873197 101.055668,413.731863 C101.055668,414.59053 100.934335,415.323197 100.691668,415.929863 C100.449001,416.53653 100.110668,416.99853 99.6766681,417.315863 C99.2426681,417.633197 98.7410014,417.791863 98.1716681,417.791863 Z\",\"id\":\"£5,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M57.3056681,315.724572 L57.3056681,314.828572 L51.8176681,314.828572 L51.8176681,311.174572 L55.6956681,311.174572 L55.6956681,310.474572 L51.8176681,310.474572 L51.8176681,309.298572 C51.8176681,308.477239 52.0510014,307.849572 52.5176681,307.415572 C52.9843347,306.981572 53.6796681,306.764572 54.6036681,306.764572 C55.6583347,306.764572 56.4936681,306.988572 57.1096681,307.436572 L57.1096681,307.436572 L57.4876681,306.582572 C56.7690014,306.087906 55.8356681,305.840572 54.6876681,305.840572 C53.4370014,305.840572 52.4756681,306.150906 51.8036681,306.771572 C51.1316681,307.392239 50.7956681,308.234572 50.7956681,309.298572 L50.7956681,309.298572 L50.7956681,310.474572 L49.2136681,310.474572 L49.2136681,311.174572 L50.7956681,311.174572 L50.7956681,314.828572 L49.2136681,314.828572 L49.2136681,315.724572 L57.3056681,315.724572 Z M61.1556681,315.724572 L61.1556681,305.924572 L57.8376681,305.924572 L57.8376681,306.820572 L60.1476681,306.820572 L60.1476681,315.724572 L61.1556681,315.724572 Z M67.3996681,315.808572 C68.1556681,315.808572 68.8300014,315.607906 69.4226681,315.206572 C70.0153347,314.805239 70.4796681,314.228906 70.8156681,313.477572 C71.1516681,312.726239 71.3196681,311.841906 71.3196681,310.824572 C71.3196681,309.807239 71.1516681,308.922906 70.8156681,308.171572 C70.4796681,307.420239 70.0153347,306.843906 69.4226681,306.442572 C68.8300014,306.041239 68.1556681,305.840572 67.3996681,305.840572 C66.6436681,305.840572 65.9693347,306.041239 65.3766681,306.442572 C64.7840014,306.843906 64.3220014,307.420239 63.9906681,308.171572 C63.6593347,308.922906 63.4936681,309.807239 63.4936681,310.824572 C63.4936681,311.841906 63.6593347,312.726239 63.9906681,313.477572 C64.3220014,314.228906 64.7840014,314.805239 65.3766681,315.206572 C65.9693347,315.607906 66.6436681,315.808572 67.3996681,315.808572 Z M67.3996681,314.884572 C66.8303347,314.884572 66.3286681,314.725906 65.8946681,314.408572 C65.4606681,314.091239 65.1223347,313.629239 64.8796681,313.022572 C64.6370014,312.415906 64.5156681,311.683239 64.5156681,310.824572 C64.5156681,309.965906 64.6370014,309.233239 64.8796681,308.626572 C65.1223347,308.019906 65.4606681,307.557906 65.8946681,307.240572 C66.3286681,306.923239 66.8303347,306.764572 67.3996681,306.764572 C67.9690014,306.764572 68.4706681,306.923239 68.9046681,307.240572 C69.3386681,307.557906 69.6770014,308.019906 69.9196681,308.626572 C70.1623347,309.233239 70.2836681,309.965906 70.2836681,310.824572 C70.2836681,311.683239 70.1623347,312.415906 69.9196681,313.022572 C69.6770014,313.629239 69.3386681,314.091239 68.9046681,314.408572 C68.4706681,314.725906 67.9690014,314.884572 67.3996681,314.884572 Z M73.4896681,317.768572 L74.0776681,315.836572 C74.1430014,315.668572 74.1920014,315.519239 74.2246681,315.388572 C74.2573347,315.257906 74.2736681,315.136572 74.2736681,315.024572 C74.2736681,314.809906 74.2036681,314.630239 74.0636681,314.485572 C73.9236681,314.340906 73.7463347,314.268572 73.5316681,314.268572 C73.3170014,314.268572 73.1396681,314.340906 72.9996681,314.485572 C72.8596681,314.630239 72.7896681,314.809906 72.7896681,315.024572 C72.7896681,315.201906 72.8363347,315.353572 72.9296681,315.479572 C73.0230014,315.605572 73.1443347,315.691906 73.2936681,315.738572 L73.2936681,315.738572 L72.8176681,317.768572 L73.4896681,317.768572 Z M79.6356681,315.808572 C80.3916681,315.808572 81.0660014,315.607906 81.6586681,315.206572 C82.2513347,314.805239 82.7156681,314.228906 83.0516681,313.477572 C83.3876681,312.726239 83.5556681,311.841906 83.5556681,310.824572 C83.5556681,309.807239 83.3876681,308.922906 83.0516681,308.171572 C82.7156681,307.420239 82.2513347,306.843906 81.6586681,306.442572 C81.0660014,306.041239 80.3916681,305.840572 79.6356681,305.840572 C78.8796681,305.840572 78.2053347,306.041239 77.6126681,306.442572 C77.0200014,306.843906 76.5580014,307.420239 76.2266681,308.171572 C75.8953347,308.922906 75.7296681,309.807239 75.7296681,310.824572 C75.7296681,311.841906 75.8953347,312.726239 76.2266681,313.477572 C76.5580014,314.228906 77.0200014,314.805239 77.6126681,315.206572 C78.2053347,315.607906 78.8796681,315.808572 79.6356681,315.808572 Z M79.6356681,314.884572 C79.0663347,314.884572 78.5646681,314.725906 78.1306681,314.408572 C77.6966681,314.091239 77.3583347,313.629239 77.1156681,313.022572 C76.8730014,312.415906 76.7516681,311.683239 76.7516681,310.824572 C76.7516681,309.965906 76.8730014,309.233239 77.1156681,308.626572 C77.3583347,308.019906 77.6966681,307.557906 78.1306681,307.240572 C78.5646681,306.923239 79.0663347,306.764572 79.6356681,306.764572 C80.2050014,306.764572 80.7066681,306.923239 81.1406681,307.240572 C81.5746681,307.557906 81.9130014,308.019906 82.1556681,308.626572 C82.3983347,309.233239 82.5196681,309.965906 82.5196681,310.824572 C82.5196681,311.683239 82.3983347,312.415906 82.1556681,313.022572 C81.9130014,313.629239 81.5746681,314.091239 81.1406681,314.408572 C80.7066681,314.725906 80.2050014,314.884572 79.6356681,314.884572 Z M88.9036681,315.808572 C89.6596681,315.808572 90.3340014,315.607906 90.9266681,315.206572 C91.5193347,314.805239 91.9836681,314.228906 92.3196681,313.477572 C92.6556681,312.726239 92.8236681,311.841906 92.8236681,310.824572 C92.8236681,309.807239 92.6556681,308.922906 92.3196681,308.171572 C91.9836681,307.420239 91.5193347,306.843906 90.9266681,306.442572 C90.3340014,306.041239 89.6596681,305.840572 88.9036681,305.840572 C88.1476681,305.840572 87.4733347,306.041239 86.8806681,306.442572 C86.2880014,306.843906 85.8260014,307.420239 85.4946681,308.171572 C85.1633347,308.922906 84.9976681,309.807239 84.9976681,310.824572 C84.9976681,311.841906 85.1633347,312.726239 85.4946681,313.477572 C85.8260014,314.228906 86.2880014,314.805239 86.8806681,315.206572 C87.4733347,315.607906 88.1476681,315.808572 88.9036681,315.808572 Z M88.9036681,314.884572 C88.3343347,314.884572 87.8326681,314.725906 87.3986681,314.408572 C86.9646681,314.091239 86.6263347,313.629239 86.3836681,313.022572 C86.1410014,312.415906 86.0196681,311.683239 86.0196681,310.824572 C86.0196681,309.965906 86.1410014,309.233239 86.3836681,308.626572 C86.6263347,308.019906 86.9646681,307.557906 87.3986681,307.240572 C87.8326681,306.923239 88.3343347,306.764572 88.9036681,306.764572 C89.4730014,306.764572 89.9746681,306.923239 90.4086681,307.240572 C90.8426681,307.557906 91.1810014,308.019906 91.4236681,308.626572 C91.6663347,309.233239 91.7876681,309.965906 91.7876681,310.824572 C91.7876681,311.683239 91.6663347,312.415906 91.4236681,313.022572 C91.1810014,313.629239 90.8426681,314.091239 90.4086681,314.408572 C89.9746681,314.725906 89.4730014,314.884572 88.9036681,314.884572 Z M98.1716681,315.808572 C98.9276681,315.808572 99.6020014,315.607906 100.194668,315.206572 C100.787335,314.805239 101.251668,314.228906 101.587668,313.477572 C101.923668,312.726239 102.091668,311.841906 102.091668,310.824572 C102.091668,309.807239 101.923668,308.922906 101.587668,308.171572 C101.251668,307.420239 100.787335,306.843906 100.194668,306.442572 C99.6020014,306.041239 98.9276681,305.840572 98.1716681,305.840572 C97.4156681,305.840572 96.7413347,306.041239 96.1486681,306.442572 C95.5560014,306.843906 95.0940014,307.420239 94.7626681,308.171572 C94.4313347,308.922906 94.2656681,309.807239 94.2656681,310.824572 C94.2656681,311.841906 94.4313347,312.726239 94.7626681,313.477572 C95.0940014,314.228906 95.5560014,314.805239 96.1486681,315.206572 C96.7413347,315.607906 97.4156681,315.808572 98.1716681,315.808572 Z M98.1716681,314.884572 C97.6023347,314.884572 97.1006681,314.725906 96.6666681,314.408572 C96.2326681,314.091239 95.8943347,313.629239 95.6516681,313.022572 C95.4090014,312.415906 95.2876681,311.683239 95.2876681,310.824572 C95.2876681,309.965906 95.4090014,309.233239 95.6516681,308.626572 C95.8943347,308.019906 96.2326681,307.557906 96.6666681,307.240572 C97.1006681,306.923239 97.6023347,306.764572 98.1716681,306.764572 C98.7410014,306.764572 99.2426681,306.923239 99.6766681,307.240572 C100.110668,307.557906 100.449001,308.019906 100.691668,308.626572 C100.934335,309.233239 101.055668,309.965906 101.055668,310.824572 C101.055668,311.683239 100.934335,312.415906 100.691668,313.022572 C100.449001,313.629239 100.110668,314.091239 99.6766681,314.408572 C99.2426681,314.725906 98.7410014,314.884572 98.1716681,314.884572 Z\",\"id\":\"£10,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M58.6496681,212.817282 L58.6496681,211.921282 L53.1616681,211.921282 L53.1616681,208.267282 L57.0396681,208.267282 L57.0396681,207.567282 L53.1616681,207.567282 L53.1616681,206.391282 C53.1616681,205.569948 53.3950014,204.942282 53.8616681,204.508282 C54.3283347,204.074282 55.0236681,203.857282 55.9476681,203.857282 C57.0023347,203.857282 57.8376681,204.081282 58.4536681,204.529282 L58.4536681,204.529282 L58.8316681,203.675282 C58.1130014,203.180615 57.1796681,202.933282 56.0316681,202.933282 C54.7810014,202.933282 53.8196681,203.243615 53.1476681,203.864282 C52.4756681,204.484948 52.1396681,205.327282 52.1396681,206.391282 L52.1396681,206.391282 L52.1396681,207.567282 L50.5576681,207.567282 L50.5576681,208.267282 L52.1396681,208.267282 L52.1396681,211.921282 L50.5576681,211.921282 L50.5576681,212.817282 L58.6496681,212.817282 Z M62.4996681,212.817282 L62.4996681,203.017282 L59.1816681,203.017282 L59.1816681,203.913282 L61.4916681,203.913282 L61.4916681,212.817282 L62.4996681,212.817282 Z M67.9316681,212.901282 C68.7063347,212.901282 69.3596681,212.772948 69.8916681,212.516282 C70.4236681,212.259615 70.8226681,211.907282 71.0886681,211.459282 C71.3546681,211.011282 71.4876681,210.502615 71.4876681,209.933282 C71.4876681,209.018615 71.1633347,208.306948 70.5146681,207.798282 C69.8660014,207.289615 68.8323347,207.035282 67.4136681,207.035282 L67.4136681,207.035282 L66.1536681,207.035282 L66.4896681,203.913282 L70.9696681,203.913282 L70.9696681,203.017282 L65.6076681,203.017282 L65.1036681,207.931282 L67.1896681,207.931282 C68.3750014,207.931282 69.2173347,208.103948 69.7166681,208.449282 C70.2160014,208.794615 70.4656681,209.303282 70.4656681,209.975282 C70.4656681,210.581948 70.2440014,211.067282 69.8006681,211.431282 C69.3573347,211.795282 68.7296681,211.977282 67.9176681,211.977282 C67.3016681,211.977282 66.7276681,211.872282 66.1956681,211.662282 C65.6636681,211.452282 65.2343347,211.179282 64.9076681,210.843282 L64.9076681,210.843282 L64.4176681,211.641282 C64.8003347,212.023948 65.3066681,212.329615 65.9366681,212.558282 C66.5666681,212.786948 67.2316681,212.901282 67.9316681,212.901282 Z M73.4896681,214.861282 L74.0776681,212.929282 C74.1430014,212.761282 74.1920014,212.611948 74.2246681,212.481282 C74.2573347,212.350615 74.2736681,212.229282 74.2736681,212.117282 C74.2736681,211.902615 74.2036681,211.722948 74.0636681,211.578282 C73.9236681,211.433615 73.7463347,211.361282 73.5316681,211.361282 C73.3170014,211.361282 73.1396681,211.433615 72.9996681,211.578282 C72.8596681,211.722948 72.7896681,211.902615 72.7896681,212.117282 C72.7896681,212.294615 72.8363347,212.446282 72.9296681,212.572282 C73.0230014,212.698282 73.1443347,212.784615 73.2936681,212.831282 L73.2936681,212.831282 L72.8176681,214.861282 L73.4896681,214.861282 Z M79.6356681,212.901282 C80.3916681,212.901282 81.0660014,212.700615 81.6586681,212.299282 C82.2513347,211.897948 82.7156681,211.321615 83.0516681,210.570282 C83.3876681,209.818948 83.5556681,208.934615 83.5556681,207.917282 C83.5556681,206.899948 83.3876681,206.015615 83.0516681,205.264282 C82.7156681,204.512948 82.2513347,203.936615 81.6586681,203.535282 C81.0660014,203.133948 80.3916681,202.933282 79.6356681,202.933282 C78.8796681,202.933282 78.2053347,203.133948 77.6126681,203.535282 C77.0200014,203.936615 76.5580014,204.512948 76.2266681,205.264282 C75.8953347,206.015615 75.7296681,206.899948 75.7296681,207.917282 C75.7296681,208.934615 75.8953347,209.818948 76.2266681,210.570282 C76.5580014,211.321615 77.0200014,211.897948 77.6126681,212.299282 C78.2053347,212.700615 78.8796681,212.901282 79.6356681,212.901282 Z M79.6356681,211.977282 C79.0663347,211.977282 78.5646681,211.818615 78.1306681,211.501282 C77.6966681,211.183948 77.3583347,210.721948 77.1156681,210.115282 C76.8730014,209.508615 76.7516681,208.775948 76.7516681,207.917282 C76.7516681,207.058615 76.8730014,206.325948 77.1156681,205.719282 C77.3583347,205.112615 77.6966681,204.650615 78.1306681,204.333282 C78.5646681,204.015948 79.0663347,203.857282 79.6356681,203.857282 C80.2050014,203.857282 80.7066681,204.015948 81.1406681,204.333282 C81.5746681,204.650615 81.9130014,205.112615 82.1556681,205.719282 C82.3983347,206.325948 82.5196681,207.058615 82.5196681,207.917282 C82.5196681,208.775948 82.3983347,209.508615 82.1556681,210.115282 C81.9130014,210.721948 81.5746681,211.183948 81.1406681,211.501282 C80.7066681,211.818615 80.2050014,211.977282 79.6356681,211.977282 Z M88.9036681,212.901282 C89.6596681,212.901282 90.3340014,212.700615 90.9266681,212.299282 C91.5193347,211.897948 91.9836681,211.321615 92.3196681,210.570282 C92.6556681,209.818948 92.8236681,208.934615 92.8236681,207.917282 C92.8236681,206.899948 92.6556681,206.015615 92.3196681,205.264282 C91.9836681,204.512948 91.5193347,203.936615 90.9266681,203.535282 C90.3340014,203.133948 89.6596681,202.933282 88.9036681,202.933282 C88.1476681,202.933282 87.4733347,203.133948 86.8806681,203.535282 C86.2880014,203.936615 85.8260014,204.512948 85.4946681,205.264282 C85.1633347,206.015615 84.9976681,206.899948 84.9976681,207.917282 C84.9976681,208.934615 85.1633347,209.818948 85.4946681,210.570282 C85.8260014,211.321615 86.2880014,211.897948 86.8806681,212.299282 C87.4733347,212.700615 88.1476681,212.901282 88.9036681,212.901282 Z M88.9036681,211.977282 C88.3343347,211.977282 87.8326681,211.818615 87.3986681,211.501282 C86.9646681,211.183948 86.6263347,210.721948 86.3836681,210.115282 C86.1410014,209.508615 86.0196681,208.775948 86.0196681,207.917282 C86.0196681,207.058615 86.1410014,206.325948 86.3836681,205.719282 C86.6263347,205.112615 86.9646681,204.650615 87.3986681,204.333282 C87.8326681,204.015948 88.3343347,203.857282 88.9036681,203.857282 C89.4730014,203.857282 89.9746681,204.015948 90.4086681,204.333282 C90.8426681,204.650615 91.1810014,205.112615 91.4236681,205.719282 C91.6663347,206.325948 91.7876681,207.058615 91.7876681,207.917282 C91.7876681,208.775948 91.6663347,209.508615 91.4236681,210.115282 C91.1810014,210.721948 90.8426681,211.183948 90.4086681,211.501282 C89.9746681,211.818615 89.4730014,211.977282 88.9036681,211.977282 Z M98.1716681,212.901282 C98.9276681,212.901282 99.6020014,212.700615 100.194668,212.299282 C100.787335,211.897948 101.251668,211.321615 101.587668,210.570282 C101.923668,209.818948 102.091668,208.934615 102.091668,207.917282 C102.091668,206.899948 101.923668,206.015615 101.587668,205.264282 C101.251668,204.512948 100.787335,203.936615 100.194668,203.535282 C99.6020014,203.133948 98.9276681,202.933282 98.1716681,202.933282 C97.4156681,202.933282 96.7413347,203.133948 96.1486681,203.535282 C95.5560014,203.936615 95.0940014,204.512948 94.7626681,205.264282 C94.4313347,206.015615 94.2656681,206.899948 94.2656681,207.917282 C94.2656681,208.934615 94.4313347,209.818948 94.7626681,210.570282 C95.0940014,211.321615 95.5560014,211.897948 96.1486681,212.299282 C96.7413347,212.700615 97.4156681,212.901282 98.1716681,212.901282 Z M98.1716681,211.977282 C97.6023347,211.977282 97.1006681,211.818615 96.6666681,211.501282 C96.2326681,211.183948 95.8943347,210.721948 95.6516681,210.115282 C95.4090014,209.508615 95.2876681,208.775948 95.2876681,207.917282 C95.2876681,207.058615 95.4090014,206.325948 95.6516681,205.719282 C95.8943347,205.112615 96.2326681,204.650615 96.6666681,204.333282 C97.1006681,204.015948 97.6023347,203.857282 98.1716681,203.857282 C98.7410014,203.857282 99.2426681,204.015948 99.6766681,204.333282 C100.110668,204.650615 100.449001,205.112615 100.691668,205.719282 C100.934335,206.325948 101.055668,207.058615 101.055668,207.917282 C101.055668,208.775948 100.934335,209.508615 100.691668,210.115282 C100.449001,210.721948 100.110668,211.183948 99.6766681,211.501282 C99.2426681,211.818615 98.7410014,211.977282 98.1716681,211.977282 Z\",\"id\":\"£15,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":14}),React.createElement(\"path\",{\"d\":\"M54.4076681,112.907291 L54.4076681,112.011291 L48.9196681,112.011291 L48.9196681,108.357291 L52.7976681,108.357291 L52.7976681,107.657291 L48.9196681,107.657291 L48.9196681,106.481291 C48.9196681,105.659957 49.1530014,105.032291 49.6196681,104.598291 C50.0863347,104.164291 50.7816681,103.947291 51.7056681,103.947291 C52.7603347,103.947291 53.5956681,104.171291 54.2116681,104.619291 L54.2116681,104.619291 L54.5896681,103.765291 C53.8710014,103.270624 52.9376681,103.023291 51.7896681,103.023291 C50.5390014,103.023291 49.5776681,103.333624 48.9056681,103.954291 C48.2336681,104.574957 47.8976681,105.417291 47.8976681,106.481291 L47.8976681,106.481291 L47.8976681,107.657291 L46.3156681,107.657291 L46.3156681,108.357291 L47.8976681,108.357291 L47.8976681,112.011291 L46.3156681,112.011291 L46.3156681,112.907291 L54.4076681,112.907291 Z M62.2336681,112.907291 L62.2336681,112.011291 L56.8436681,112.011291 L60.1756681,108.735291 C60.8010014,108.128624 61.2256681,107.591957 61.4496681,107.125291 C61.6736681,106.658624 61.7856681,106.173291 61.7856681,105.669291 C61.7856681,104.847957 61.4940014,104.201624 60.9106681,103.730291 C60.3273347,103.258957 59.5363347,103.023291 58.5376681,103.023291 C57.7910014,103.023291 57.1213347,103.144624 56.5286681,103.387291 C55.9360014,103.629957 55.4483347,103.975291 55.0656681,104.423291 L55.0656681,104.423291 L55.7796681,105.039291 C56.4143347,104.311291 57.3056681,103.947291 58.4536681,103.947291 C59.1910014,103.947291 59.7580014,104.108291 60.1546681,104.430291 C60.5513347,104.752291 60.7496681,105.202624 60.7496681,105.781291 C60.7496681,106.154624 60.6586681,106.525624 60.4766681,106.894291 C60.2946681,107.262957 59.9470014,107.699291 59.4336681,108.203291 L59.4336681,108.203291 L55.3596681,112.193291 L55.3596681,112.907291 L62.2336681,112.907291 Z M67.3996681,112.991291 C68.1556681,112.991291 68.8300014,112.790624 69.4226681,112.389291 C70.0153347,111.987957 70.4796681,111.411624 70.8156681,110.660291 C71.1516681,109.908957 71.3196681,109.024624 71.3196681,108.007291 C71.3196681,106.989957 71.1516681,106.105624 70.8156681,105.354291 C70.4796681,104.602957 70.0153347,104.026624 69.4226681,103.625291 C68.8300014,103.223957 68.1556681,103.023291 67.3996681,103.023291 C66.6436681,103.023291 65.9693347,103.223957 65.3766681,103.625291 C64.7840014,104.026624 64.3220014,104.602957 63.9906681,105.354291 C63.6593347,106.105624 63.4936681,106.989957 63.4936681,108.007291 C63.4936681,109.024624 63.6593347,109.908957 63.9906681,110.660291 C64.3220014,111.411624 64.7840014,111.987957 65.3766681,112.389291 C65.9693347,112.790624 66.6436681,112.991291 67.3996681,112.991291 Z M67.3996681,112.067291 C66.8303347,112.067291 66.3286681,111.908624 65.8946681,111.591291 C65.4606681,111.273957 65.1223347,110.811957 64.8796681,110.205291 C64.6370014,109.598624 64.5156681,108.865957 64.5156681,108.007291 C64.5156681,107.148624 64.6370014,106.415957 64.8796681,105.809291 C65.1223347,105.202624 65.4606681,104.740624 65.8946681,104.423291 C66.3286681,104.105957 66.8303347,103.947291 67.3996681,103.947291 C67.9690014,103.947291 68.4706681,104.105957 68.9046681,104.423291 C69.3386681,104.740624 69.6770014,105.202624 69.9196681,105.809291 C70.1623347,106.415957 70.2836681,107.148624 70.2836681,108.007291 C70.2836681,108.865957 70.1623347,109.598624 69.9196681,110.205291 C69.6770014,110.811957 69.3386681,111.273957 68.9046681,111.591291 C68.4706681,111.908624 67.9690014,112.067291 67.3996681,112.067291 Z M73.4896681,114.951291 L74.0776681,113.019291 C74.1430014,112.851291 74.1920014,112.701957 74.2246681,112.571291 C74.2573347,112.440624 74.2736681,112.319291 74.2736681,112.207291 C74.2736681,111.992624 74.2036681,111.812957 74.0636681,111.668291 C73.9236681,111.523624 73.7463347,111.451291 73.5316681,111.451291 C73.3170014,111.451291 73.1396681,111.523624 72.9996681,111.668291 C72.8596681,111.812957 72.7896681,111.992624 72.7896681,112.207291 C72.7896681,112.384624 72.8363347,112.536291 72.9296681,112.662291 C73.0230014,112.788291 73.1443347,112.874624 73.2936681,112.921291 L73.2936681,112.921291 L72.8176681,114.951291 L73.4896681,114.951291 Z M79.6356681,112.991291 C80.3916681,112.991291 81.0660014,112.790624 81.6586681,112.389291 C82.2513347,111.987957 82.7156681,111.411624 83.0516681,110.660291 C83.3876681,109.908957 83.5556681,109.024624 83.5556681,108.007291 C83.5556681,106.989957 83.3876681,106.105624 83.0516681,105.354291 C82.7156681,104.602957 82.2513347,104.026624 81.6586681,103.625291 C81.0660014,103.223957 80.3916681,103.023291 79.6356681,103.023291 C78.8796681,103.023291 78.2053347,103.223957 77.6126681,103.625291 C77.0200014,104.026624 76.5580014,104.602957 76.2266681,105.354291 C75.8953347,106.105624 75.7296681,106.989957 75.7296681,108.007291 C75.7296681,109.024624 75.8953347,109.908957 76.2266681,110.660291 C76.5580014,111.411624 77.0200014,111.987957 77.6126681,112.389291 C78.2053347,112.790624 78.8796681,112.991291 79.6356681,112.991291 Z M79.6356681,112.067291 C79.0663347,112.067291 78.5646681,111.908624 78.1306681,111.591291 C77.6966681,111.273957 77.3583347,110.811957 77.1156681,110.205291 C76.8730014,109.598624 76.7516681,108.865957 76.7516681,108.007291 C76.7516681,107.148624 76.8730014,106.415957 77.1156681,105.809291 C77.3583347,105.202624 77.6966681,104.740624 78.1306681,104.423291 C78.5646681,104.105957 79.0663347,103.947291 79.6356681,103.947291 C80.2050014,103.947291 80.7066681,104.105957 81.1406681,104.423291 C81.5746681,104.740624 81.9130014,105.202624 82.1556681,105.809291 C82.3983347,106.415957 82.5196681,107.148624 82.5196681,108.007291 C82.5196681,108.865957 82.3983347,109.598624 82.1556681,110.205291 C81.9130014,110.811957 81.5746681,111.273957 81.1406681,111.591291 C80.7066681,111.908624 80.2050014,112.067291 79.6356681,112.067291 Z M88.9036681,112.991291 C89.6596681,112.991291 90.3340014,112.790624 90.9266681,112.389291 C91.5193347,111.987957 91.9836681,111.411624 92.3196681,110.660291 C92.6556681,109.908957 92.8236681,109.024624 92.8236681,108.007291 C92.8236681,106.989957 92.6556681,106.105624 92.3196681,105.354291 C91.9836681,104.602957 91.5193347,104.026624 90.9266681,103.625291 C90.3340014,103.223957 89.6596681,103.023291 88.9036681,103.023291 C88.1476681,103.023291 87.4733347,103.223957 86.8806681,103.625291 C86.2880014,104.026624 85.8260014,104.602957 85.4946681,105.354291 C85.1633347,106.105624 84.9976681,106.989957 84.9976681,108.007291 C84.9976681,109.024624 85.1633347,109.908957 85.4946681,110.660291 C85.8260014,111.411624 86.2880014,111.987957 86.8806681,112.389291 C87.4733347,112.790624 88.1476681,112.991291 88.9036681,112.991291 Z M88.9036681,112.067291 C88.3343347,112.067291 87.8326681,111.908624 87.3986681,111.591291 C86.9646681,111.273957 86.6263347,110.811957 86.3836681,110.205291 C86.1410014,109.598624 86.0196681,108.865957 86.0196681,108.007291 C86.0196681,107.148624 86.1410014,106.415957 86.3836681,105.809291 C86.6263347,105.202624 86.9646681,104.740624 87.3986681,104.423291 C87.8326681,104.105957 88.3343347,103.947291 88.9036681,103.947291 C89.4730014,103.947291 89.9746681,104.105957 90.4086681,104.423291 C90.8426681,104.740624 91.1810014,105.202624 91.4236681,105.809291 C91.6663347,106.415957 91.7876681,107.148624 91.7876681,108.007291 C91.7876681,108.865957 91.6663347,109.598624 91.4236681,110.205291 C91.1810014,110.811957 90.8426681,111.273957 90.4086681,111.591291 C89.9746681,111.908624 89.4730014,112.067291 88.9036681,112.067291 Z M98.1716681,112.991291 C98.9276681,112.991291 99.6020014,112.790624 100.194668,112.389291 C100.787335,111.987957 101.251668,111.411624 101.587668,110.660291 C101.923668,109.908957 102.091668,109.024624 102.091668,108.007291 C102.091668,106.989957 101.923668,106.105624 101.587668,105.354291 C101.251668,104.602957 100.787335,104.026624 100.194668,103.625291 C99.6020014,103.223957 98.9276681,103.023291 98.1716681,103.023291 C97.4156681,103.023291 96.7413347,103.223957 96.1486681,103.625291 C95.5560014,104.026624 95.0940014,104.602957 94.7626681,105.354291 C94.4313347,106.105624 94.2656681,106.989957 94.2656681,108.007291 C94.2656681,109.024624 94.4313347,109.908957 94.7626681,110.660291 C95.0940014,111.411624 95.5560014,111.987957 96.1486681,112.389291 C96.7413347,112.790624 97.4156681,112.991291 98.1716681,112.991291 Z M98.1716681,112.067291 C97.6023347,112.067291 97.1006681,111.908624 96.6666681,111.591291 C96.2326681,111.273957 95.8943347,110.811957 95.6516681,110.205291 C95.4090014,109.598624 95.2876681,108.865957 95.2876681,108.007291 C95.2876681,107.148624 95.4090014,106.415957 95.6516681,105.809291 C95.8943347,105.202624 96.2326681,104.740624 96.6666681,104.423291 C97.1006681,104.105957 97.6023347,103.947291 98.1716681,103.947291 C98.7410014,103.947291 99.2426681,104.105957 99.6766681,104.423291 C100.110668,104.740624 100.449001,105.202624 100.691668,105.809291 C100.934335,106.415957 101.055668,107.148624 101.055668,108.007291 C101.055668,108.865957 100.934335,109.598624 100.691668,110.205291 C100.449001,110.811957 100.110668,111.273957 99.6766681,111.591291 C99.2426681,111.908624 98.7410014,112.067291 98.1716681,112.067291 Z\",\"id\":\"£20,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M55.7516681,10 L55.7516681,9.104 L50.2636681,9.104 L50.2636681,5.45 L54.1416681,5.45 L54.1416681,4.75 L50.2636681,4.75 L50.2636681,3.574 C50.2636681,2.75266667 50.4970014,2.125 50.9636681,1.691 C51.4303347,1.257 52.1256681,1.04 53.0496681,1.04 C54.1043347,1.04 54.9396681,1.264 55.5556681,1.712 L55.5556681,1.712 L55.9336681,0.858 C55.2150014,0.363333333 54.2816681,0.116 53.1336681,0.116 C51.8830014,0.116 50.9216681,0.426333333 50.2496681,1.047 C49.5776681,1.66766667 49.2416681,2.51 49.2416681,3.574 L49.2416681,3.574 L49.2416681,4.75 L47.6596681,4.75 L47.6596681,5.45 L49.2416681,5.45 L49.2416681,9.104 L47.6596681,9.104 L47.6596681,10 L55.7516681,10 Z M63.5776681,10 L63.5776681,9.104 L58.1876681,9.104 L61.5196681,5.828 C62.1450014,5.22133333 62.5696681,4.68466667 62.7936681,4.218 C63.0176681,3.75133333 63.1296681,3.266 63.1296681,2.762 C63.1296681,1.94066667 62.8380014,1.29433333 62.2546681,0.823 C61.6713347,0.351666667 60.8803347,0.116 59.8816681,0.116 C59.1350014,0.116 58.4653347,0.237333333 57.8726681,0.48 C57.2800014,0.722666667 56.7923347,1.068 56.4096681,1.516 L56.4096681,1.516 L57.1236681,2.132 C57.7583347,1.404 58.6496681,1.04 59.7976681,1.04 C60.5350014,1.04 61.1020014,1.201 61.4986681,1.523 C61.8953347,1.845 62.0936681,2.29533333 62.0936681,2.874 C62.0936681,3.24733333 62.0026681,3.61833333 61.8206681,3.987 C61.6386681,4.35566667 61.2910014,4.792 60.7776681,5.296 L60.7776681,5.296 L56.7036681,9.286 L56.7036681,10 L63.5776681,10 Z M67.9316681,10.084 C68.7063347,10.084 69.3596681,9.95566667 69.8916681,9.699 C70.4236681,9.44233333 70.8226681,9.09 71.0886681,8.642 C71.3546681,8.194 71.4876681,7.68533333 71.4876681,7.116 C71.4876681,6.20133333 71.1633347,5.48966667 70.5146681,4.981 C69.8660014,4.47233333 68.8323347,4.218 67.4136681,4.218 L67.4136681,4.218 L66.1536681,4.218 L66.4896681,1.096 L70.9696681,1.096 L70.9696681,0.2 L65.6076681,0.2 L65.1036681,5.114 L67.1896681,5.114 C68.3750014,5.114 69.2173347,5.28666667 69.7166681,5.632 C70.2160014,5.97733333 70.4656681,6.486 70.4656681,7.158 C70.4656681,7.76466667 70.2440014,8.25 69.8006681,8.614 C69.3573347,8.978 68.7296681,9.16 67.9176681,9.16 C67.3016681,9.16 66.7276681,9.055 66.1956681,8.845 C65.6636681,8.635 65.2343347,8.362 64.9076681,8.026 L64.9076681,8.026 L64.4176681,8.824 C64.8003347,9.20666667 65.3066681,9.51233333 65.9366681,9.741 C66.5666681,9.96966667 67.2316681,10.084 67.9316681,10.084 Z M73.4896681,12.044 L74.0776681,10.112 C74.1430014,9.944 74.1920014,9.79466667 74.2246681,9.664 C74.2573347,9.53333333 74.2736681,9.412 74.2736681,9.3 C74.2736681,9.08533333 74.2036681,8.90566667 74.0636681,8.761 C73.9236681,8.61633333 73.7463347,8.544 73.5316681,8.544 C73.3170014,8.544 73.1396681,8.61633333 72.9996681,8.761 C72.8596681,8.90566667 72.7896681,9.08533333 72.7896681,9.3 C72.7896681,9.47733333 72.8363347,9.629 72.9296681,9.755 C73.0230014,9.881 73.1443347,9.96733333 73.2936681,10.014 L73.2936681,10.014 L72.8176681,12.044 L73.4896681,12.044 Z M79.6356681,10.084 C80.3916681,10.084 81.0660014,9.88333333 81.6586681,9.482 C82.2513347,9.08066667 82.7156681,8.50433333 83.0516681,7.753 C83.3876681,7.00166667 83.5556681,6.11733333 83.5556681,5.1 C83.5556681,4.08266667 83.3876681,3.19833333 83.0516681,2.447 C82.7156681,1.69566667 82.2513347,1.11933333 81.6586681,0.718 C81.0660014,0.316666667 80.3916681,0.116 79.6356681,0.116 C78.8796681,0.116 78.2053347,0.316666667 77.6126681,0.718 C77.0200014,1.11933333 76.5580014,1.69566667 76.2266681,2.447 C75.8953347,3.19833333 75.7296681,4.08266667 75.7296681,5.1 C75.7296681,6.11733333 75.8953347,7.00166667 76.2266681,7.753 C76.5580014,8.50433333 77.0200014,9.08066667 77.6126681,9.482 C78.2053347,9.88333333 78.8796681,10.084 79.6356681,10.084 Z M79.6356681,9.16 C79.0663347,9.16 78.5646681,9.00133333 78.1306681,8.684 C77.6966681,8.36666667 77.3583347,7.90466667 77.1156681,7.298 C76.8730014,6.69133333 76.7516681,5.95866667 76.7516681,5.1 C76.7516681,4.24133333 76.8730014,3.50866667 77.1156681,2.902 C77.3583347,2.29533333 77.6966681,1.83333333 78.1306681,1.516 C78.5646681,1.19866667 79.0663347,1.04 79.6356681,1.04 C80.2050014,1.04 80.7066681,1.19866667 81.1406681,1.516 C81.5746681,1.83333333 81.9130014,2.29533333 82.1556681,2.902 C82.3983347,3.50866667 82.5196681,4.24133333 82.5196681,5.1 C82.5196681,5.95866667 82.3983347,6.69133333 82.1556681,7.298 C81.9130014,7.90466667 81.5746681,8.36666667 81.1406681,8.684 C80.7066681,9.00133333 80.2050014,9.16 79.6356681,9.16 Z M88.9036681,10.084 C89.6596681,10.084 90.3340014,9.88333333 90.9266681,9.482 C91.5193347,9.08066667 91.9836681,8.50433333 92.3196681,7.753 C92.6556681,7.00166667 92.8236681,6.11733333 92.8236681,5.1 C92.8236681,4.08266667 92.6556681,3.19833333 92.3196681,2.447 C91.9836681,1.69566667 91.5193347,1.11933333 90.9266681,0.718 C90.3340014,0.316666667 89.6596681,0.116 88.9036681,0.116 C88.1476681,0.116 87.4733347,0.316666667 86.8806681,0.718 C86.2880014,1.11933333 85.8260014,1.69566667 85.4946681,2.447 C85.1633347,3.19833333 84.9976681,4.08266667 84.9976681,5.1 C84.9976681,6.11733333 85.1633347,7.00166667 85.4946681,7.753 C85.8260014,8.50433333 86.2880014,9.08066667 86.8806681,9.482 C87.4733347,9.88333333 88.1476681,10.084 88.9036681,10.084 Z M88.9036681,9.16 C88.3343347,9.16 87.8326681,9.00133333 87.3986681,8.684 C86.9646681,8.36666667 86.6263347,7.90466667 86.3836681,7.298 C86.1410014,6.69133333 86.0196681,5.95866667 86.0196681,5.1 C86.0196681,4.24133333 86.1410014,3.50866667 86.3836681,2.902 C86.6263347,2.29533333 86.9646681,1.83333333 87.3986681,1.516 C87.8326681,1.19866667 88.3343347,1.04 88.9036681,1.04 C89.4730014,1.04 89.9746681,1.19866667 90.4086681,1.516 C90.8426681,1.83333333 91.1810014,2.29533333 91.4236681,2.902 C91.6663347,3.50866667 91.7876681,4.24133333 91.7876681,5.1 C91.7876681,5.95866667 91.6663347,6.69133333 91.4236681,7.298 C91.1810014,7.90466667 90.8426681,8.36666667 90.4086681,8.684 C89.9746681,9.00133333 89.4730014,9.16 88.9036681,9.16 Z M98.1716681,10.084 C98.9276681,10.084 99.6020014,9.88333333 100.194668,9.482 C100.787335,9.08066667 101.251668,8.50433333 101.587668,7.753 C101.923668,7.00166667 102.091668,6.11733333 102.091668,5.1 C102.091668,4.08266667 101.923668,3.19833333 101.587668,2.447 C101.251668,1.69566667 100.787335,1.11933333 100.194668,0.718 C99.6020014,0.316666667 98.9276681,0.116 98.1716681,0.116 C97.4156681,0.116 96.7413347,0.316666667 96.1486681,0.718 C95.5560014,1.11933333 95.0940014,1.69566667 94.7626681,2.447 C94.4313347,3.19833333 94.2656681,4.08266667 94.2656681,5.1 C94.2656681,6.11733333 94.4313347,7.00166667 94.7626681,7.753 C95.0940014,8.50433333 95.5560014,9.08066667 96.1486681,9.482 C96.7413347,9.88333333 97.4156681,10.084 98.1716681,10.084 Z M98.1716681,9.16 C97.6023347,9.16 97.1006681,9.00133333 96.6666681,8.684 C96.2326681,8.36666667 95.8943347,7.90466667 95.6516681,7.298 C95.4090014,6.69133333 95.2876681,5.95866667 95.2876681,5.1 C95.2876681,4.24133333 95.4090014,3.50866667 95.6516681,2.902 C95.8943347,2.29533333 96.2326681,1.83333333 96.6666681,1.516 C97.1006681,1.19866667 97.6023347,1.04 98.1716681,1.04 C98.7410014,1.04 99.2426681,1.19866667 99.6766681,1.516 C100.110668,1.83333333 100.449001,2.29533333 100.691668,2.902 C100.934335,3.50866667 101.055668,4.24133333 101.055668,5.1 C101.055668,5.95866667 100.934335,6.69133333 100.691668,7.298 C100.449001,7.90466667 100.110668,8.36666667 99.6766681,8.684 C99.2426681,9.00133333 98.7410014,9.16 98.1716681,9.16 Z\",\"id\":\"£25,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M209.114741,550.513051 L209.114741,549.617051 L203.724741,549.617051 L207.056741,546.341051 C207.682074,545.734385 208.106741,545.197718 208.330741,544.731051 C208.554741,544.264385 208.666741,543.779051 208.666741,543.275051 C208.666741,542.453718 208.375074,541.807385 207.791741,541.336051 C207.208407,540.864718 206.417407,540.629051 205.418741,540.629051 C204.672074,540.629051 204.002407,540.750385 203.409741,540.993051 C202.817074,541.235718 202.329407,541.581051 201.946741,542.029051 L201.946741,542.029051 L202.660741,542.645051 C203.295407,541.917051 204.186741,541.553051 205.334741,541.553051 C206.072074,541.553051 206.639074,541.714051 207.035741,542.036051 C207.432407,542.358051 207.630741,542.808385 207.630741,543.387051 C207.630741,543.760385 207.539741,544.131385 207.357741,544.500051 C207.175741,544.868718 206.828074,545.305051 206.314741,545.809051 L206.314741,545.809051 L202.240741,549.799051 L202.240741,550.513051 L209.114741,550.513051 Z M217.066741,550.513051 L217.066741,549.617051 L211.676741,549.617051 L215.008741,546.341051 C215.634074,545.734385 216.058741,545.197718 216.282741,544.731051 C216.506741,544.264385 216.618741,543.779051 216.618741,543.275051 C216.618741,542.453718 216.327074,541.807385 215.743741,541.336051 C215.160407,540.864718 214.369407,540.629051 213.370741,540.629051 C212.624074,540.629051 211.954407,540.750385 211.361741,540.993051 C210.769074,541.235718 210.281407,541.581051 209.898741,542.029051 L209.898741,542.029051 L210.612741,542.645051 C211.247407,541.917051 212.138741,541.553051 213.286741,541.553051 C214.024074,541.553051 214.591074,541.714051 214.987741,542.036051 C215.384407,542.358051 215.582741,542.808385 215.582741,543.387051 C215.582741,543.760385 215.491741,544.131385 215.309741,544.500051 C215.127741,544.868718 214.780074,545.305051 214.266741,545.809051 L214.266741,545.809051 L210.192741,549.799051 L210.192741,550.513051 L217.066741,550.513051 Z\",\"id\":\"22\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":17}),React.createElement(\"path\",{\"d\":\"M289.394992,550.513051 L289.394992,549.617051 L284.004992,549.617051 L287.336992,546.341051 C287.962325,545.734385 288.386992,545.197718 288.610992,544.731051 C288.834992,544.264385 288.946992,543.779051 288.946992,543.275051 C288.946992,542.453718 288.655325,541.807385 288.071992,541.336051 C287.488658,540.864718 286.697658,540.629051 285.698992,540.629051 C284.952325,540.629051 284.282658,540.750385 283.689992,540.993051 C283.097325,541.235718 282.609658,541.581051 282.226992,542.029051 L282.226992,542.029051 L282.940992,542.645051 C283.575658,541.917051 284.466992,541.553051 285.614992,541.553051 C286.352325,541.553051 286.919325,541.714051 287.315992,542.036051 C287.712658,542.358051 287.910992,542.808385 287.910992,543.387051 C287.910992,543.760385 287.819992,544.131385 287.637992,544.500051 C287.455992,544.868718 287.108325,545.305051 286.594992,545.809051 L286.594992,545.809051 L282.520992,549.799051 L282.520992,550.513051 L289.394992,550.513051 Z M294.672992,550.597051 C295.307658,550.597051 295.879325,550.473385 296.387992,550.226051 C296.896658,549.978718 297.295658,549.626385 297.584992,549.169051 C297.874325,548.711718 298.018992,548.184385 298.018992,547.587051 C298.018992,546.999051 297.878992,546.483385 297.598992,546.040051 C297.318992,545.596718 296.929325,545.253718 296.429992,545.011051 C295.930658,544.768385 295.358992,544.647051 294.714992,544.647051 C294.024325,544.647051 293.412992,544.794051 292.880992,545.088051 C292.348992,545.382051 291.961658,545.795051 291.718992,546.327051 C291.690992,546.028385 291.676992,545.762385 291.676992,545.529051 C291.676992,544.222385 291.984992,543.226051 292.600992,542.540051 C293.216992,541.854051 294.066325,541.511051 295.148992,541.511051 C295.951658,541.511051 296.586325,541.665051 297.052992,541.973051 L297.052992,541.973051 L297.458992,541.161051 C296.880325,540.806385 296.105658,540.629051 295.134992,540.629051 C294.238992,540.629051 293.454992,540.822718 292.782992,541.210051 C292.110992,541.597385 291.588325,542.169051 291.214992,542.925051 C290.841658,543.681051 290.654992,544.605051 290.654992,545.697051 C290.654992,547.255718 291.000325,548.462051 291.690992,549.316051 C292.381658,550.170051 293.375658,550.597051 294.672992,550.597051 Z M294.630992,549.743051 C294.089658,549.743051 293.622992,549.645051 293.230992,549.449051 C292.838992,549.253051 292.542658,548.996385 292.341992,548.679051 C292.141325,548.361718 292.040992,548.016385 292.040992,547.643051 C292.040992,547.241718 292.148325,546.877718 292.362992,546.551051 C292.577658,546.224385 292.873992,545.967718 293.251992,545.781051 C293.629992,545.594385 294.066325,545.501051 294.560992,545.501051 C295.316992,545.501051 295.916658,545.692385 296.359992,546.075051 C296.803325,546.457718 297.024992,546.971051 297.024992,547.615051 C297.024992,548.259051 296.803325,548.774718 296.359992,549.162051 C295.916658,549.549385 295.340325,549.743051 294.630992,549.743051 Z\",\"id\":\"26\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":18}),React.createElement(\"path\",{\"d\":\"M370.788246,550.597051 C371.553579,550.597051 372.202246,550.471051 372.734246,550.219051 C373.266246,549.967051 373.667579,549.624051 373.938246,549.190051 C374.208912,548.756051 374.344246,548.259051 374.344246,547.699051 C374.344246,546.896385 374.075912,546.245385 373.539246,545.746051 C373.002579,545.246718 372.220912,544.969051 371.194246,544.913051 L371.194246,544.913051 L373.966246,541.427051 L373.966246,540.713051 L367.666246,540.713051 L367.666246,541.609051 L372.678246,541.609051 L369.962246,545.011051 L369.962246,545.753051 L370.662246,545.753051 C371.548912,545.753051 372.211579,545.925718 372.650246,546.271051 C373.088912,546.616385 373.308246,547.092385 373.308246,547.699051 C373.308246,548.315051 373.088912,548.798051 372.650246,549.148051 C372.211579,549.498051 371.590912,549.673051 370.788246,549.673051 C370.172246,549.673051 369.593579,549.568051 369.052246,549.358051 C368.510912,549.148051 368.076912,548.875051 367.750246,548.539051 L367.750246,548.539051 L367.260246,549.337051 C367.642912,549.719718 368.149246,550.025385 368.779246,550.254051 C369.409246,550.482718 370.078912,550.597051 370.788246,550.597051 Z M379.664246,550.597051 C380.420246,550.597051 381.094579,550.396385 381.687246,549.995051 C382.279912,549.593718 382.744246,549.017385 383.080246,548.266051 C383.416246,547.514718 383.584246,546.630385 383.584246,545.613051 C383.584246,544.595718 383.416246,543.711385 383.080246,542.960051 C382.744246,542.208718 382.279912,541.632385 381.687246,541.231051 C381.094579,540.829718 380.420246,540.629051 379.664246,540.629051 C378.908246,540.629051 378.233912,540.829718 377.641246,541.231051 C377.048579,541.632385 376.586579,542.208718 376.255246,542.960051 C375.923912,543.711385 375.758246,544.595718 375.758246,545.613051 C375.758246,546.630385 375.923912,547.514718 376.255246,548.266051 C376.586579,549.017385 377.048579,549.593718 377.641246,549.995051 C378.233912,550.396385 378.908246,550.597051 379.664246,550.597051 Z M379.664246,549.673051 C379.094912,549.673051 378.593246,549.514385 378.159246,549.197051 C377.725246,548.879718 377.386912,548.417718 377.144246,547.811051 C376.901579,547.204385 376.780246,546.471718 376.780246,545.613051 C376.780246,544.754385 376.901579,544.021718 377.144246,543.415051 C377.386912,542.808385 377.725246,542.346385 378.159246,542.029051 C378.593246,541.711718 379.094912,541.553051 379.664246,541.553051 C380.233579,541.553051 380.735246,541.711718 381.169246,542.029051 C381.603246,542.346385 381.941579,542.808385 382.184246,543.415051 C382.426912,544.021718 382.548246,544.754385 382.548246,545.613051 C382.548246,546.471718 382.426912,547.204385 382.184246,547.811051 C381.941579,548.417718 381.603246,548.879718 381.169246,549.197051 C380.735246,549.514385 380.233579,549.673051 379.664246,549.673051 Z\",\"id\":\"30\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":19}),React.createElement(\"path\",{\"d\":\"M454.651099,550.597051 C455.416432,550.597051 456.065099,550.471051 456.597099,550.219051 C457.129099,549.967051 457.530432,549.624051 457.801099,549.190051 C458.071765,548.756051 458.207099,548.259051 458.207099,547.699051 C458.207099,546.896385 457.938765,546.245385 457.402099,545.746051 C456.865432,545.246718 456.083765,544.969051 455.057099,544.913051 L455.057099,544.913051 L457.829099,541.427051 L457.829099,540.713051 L451.529099,540.713051 L451.529099,541.609051 L456.541099,541.609051 L453.825099,545.011051 L453.825099,545.753051 L454.525099,545.753051 C455.411765,545.753051 456.074432,545.925718 456.513099,546.271051 C456.951765,546.616385 457.171099,547.092385 457.171099,547.699051 C457.171099,548.315051 456.951765,548.798051 456.513099,549.148051 C456.074432,549.498051 455.453765,549.673051 454.651099,549.673051 C454.035099,549.673051 453.456432,549.568051 452.915099,549.358051 C452.373765,549.148051 451.939765,548.875051 451.613099,548.539051 L451.613099,548.539051 L451.123099,549.337051 C451.505765,549.719718 452.012099,550.025385 452.642099,550.254051 C453.272099,550.482718 453.941765,550.597051 454.651099,550.597051 Z M465.991099,550.513051 L465.991099,547.937051 L467.951099,547.937051 L467.951099,547.041051 L465.991099,547.041051 L465.991099,544.773051 L465.011099,544.773051 L465.011099,547.041051 L460.755099,547.041051 L465.767099,540.713051 L464.647099,540.713051 L459.453099,547.209051 L459.453099,547.937051 L464.983099,547.937051 L464.983099,550.513051 L465.991099,550.513051 Z\",\"id\":\"34\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":20}),React.createElement(\"path\",{\"d\":\"M543.566554,550.513051 L543.566554,547.937051 L545.526554,547.937051 L545.526554,547.041051 L543.566554,547.041051 L543.566554,544.773051 L542.586554,544.773051 L542.586554,547.041051 L538.330554,547.041051 L543.342554,540.713051 L542.222554,540.713051 L537.028554,547.209051 L537.028554,547.937051 L542.558554,547.937051 L542.558554,550.513051 L543.566554,550.513051 Z M550.356554,550.597051 C551.112554,550.597051 551.786887,550.396385 552.379554,549.995051 C552.97222,549.593718 553.436554,549.017385 553.772554,548.266051 C554.108554,547.514718 554.276554,546.630385 554.276554,545.613051 C554.276554,544.595718 554.108554,543.711385 553.772554,542.960051 C553.436554,542.208718 552.97222,541.632385 552.379554,541.231051 C551.786887,540.829718 551.112554,540.629051 550.356554,540.629051 C549.600554,540.629051 548.92622,540.829718 548.333554,541.231051 C547.740887,541.632385 547.278887,542.208718 546.947554,542.960051 C546.61622,543.711385 546.450554,544.595718 546.450554,545.613051 C546.450554,546.630385 546.61622,547.514718 546.947554,548.266051 C547.278887,549.017385 547.740887,549.593718 548.333554,549.995051 C548.92622,550.396385 549.600554,550.597051 550.356554,550.597051 Z M550.356554,549.673051 C549.78722,549.673051 549.285554,549.514385 548.851554,549.197051 C548.417554,548.879718 548.07922,548.417718 547.836554,547.811051 C547.593887,547.204385 547.472554,546.471718 547.472554,545.613051 C547.472554,544.754385 547.593887,544.021718 547.836554,543.415051 C548.07922,542.808385 548.417554,542.346385 548.851554,542.029051 C549.285554,541.711718 549.78722,541.553051 550.356554,541.553051 C550.925887,541.553051 551.427554,541.711718 551.861554,542.029051 C552.295554,542.346385 552.633887,542.808385 552.876554,543.415051 C553.11922,544.021718 553.240554,544.754385 553.240554,545.613051 C553.240554,546.471718 553.11922,547.204385 552.876554,547.811051 C552.633887,548.417718 552.295554,548.879718 551.861554,549.197051 C551.427554,549.514385 550.925887,549.673051 550.356554,549.673051 Z\",\"id\":\"40\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":21}),React.createElement(\"path\",{\"d\":\"M591.941886,602.467147 L593.045886,599.875147 L598.645886,599.875147 L599.765886,602.467147 L601.941886,602.467147 L596.885886,591.267147 L594.837886,591.267147 L589.797886,602.467147 L591.941886,602.467147 Z M597.957886,598.243147 L593.749886,598.243147 L595.845886,593.347147 L597.957886,598.243147 Z M607.045886,605.683147 C610.117886,605.683147 611.653886,604.179147 611.653886,601.171147 L611.653886,601.171147 L611.653886,593.923147 L609.749886,593.923147 L609.749886,595.059147 C609.408553,594.643147 608.984553,594.333813 608.477886,594.131147 C607.971219,593.92848 607.408553,593.827147 606.789886,593.827147 C605.979219,593.827147 605.245886,593.997813 604.589886,594.339147 C603.933886,594.68048 603.416553,595.163147 603.037886,595.787147 C602.659219,596.411147 602.469886,597.12848 602.469886,597.939147 C602.469886,598.749813 602.659219,599.469813 603.037886,600.099147 C603.416553,600.72848 603.933886,601.21648 604.589886,601.563147 C605.245886,601.909813 605.979219,602.083147 606.789886,602.083147 C607.376553,602.083147 607.915219,601.987147 608.405886,601.795147 C608.896553,601.603147 609.312553,601.32048 609.653886,600.947147 L609.653886,600.947147 L609.653886,601.395147 C609.653886,602.269813 609.435219,602.92048 608.997886,603.347147 C608.560553,603.773813 607.872553,603.987147 606.933886,603.987147 C606.347219,603.987147 605.768553,603.893813 605.197886,603.707147 C604.627219,603.52048 604.155219,603.27248 603.781886,602.963147 L603.781886,602.963147 L602.885886,604.467147 C603.365886,604.861813 603.973886,605.163147 604.709886,605.371147 C605.445886,605.579147 606.224553,605.683147 607.045886,605.683147 Z M607.093886,600.387147 C606.325886,600.387147 605.699219,600.16048 605.213886,599.707147 C604.728553,599.253813 604.485886,598.66448 604.485886,597.939147 C604.485886,597.22448 604.728553,596.643147 605.213886,596.195147 C605.699219,595.747147 606.325886,595.523147 607.093886,595.523147 C607.851219,595.523147 608.472553,595.747147 608.957886,596.195147 C609.443219,596.643147 609.685886,597.22448 609.685886,597.939147 C609.685886,598.66448 609.443219,599.253813 608.957886,599.707147 C608.472553,600.16048 607.851219,600.387147 607.093886,600.387147 Z M618.293886,602.579147 C619.029886,602.579147 619.691219,602.461813 620.277886,602.227147 C620.864553,601.99248 621.349886,601.645813 621.733886,601.187147 L621.733886,601.187147 L620.661886,599.955147 C620.053886,600.573813 619.280553,600.883147 618.341886,600.883147 C617.605886,600.883147 616.989886,600.699147 616.493886,600.331147 C615.997886,599.963147 615.691219,599.46448 615.573886,598.835147 L615.573886,598.835147 L622.277886,598.835147 C622.299219,598.579147 622.309886,598.381813 622.309886,598.243147 C622.309886,597.36848 622.125886,596.597813 621.757886,595.931147 C621.389886,595.26448 620.877886,594.747147 620.221886,594.379147 C619.565886,594.011147 618.821886,593.827147 617.989886,593.827147 C617.147219,593.827147 616.389886,594.013813 615.717886,594.387147 C615.045886,594.76048 614.520553,595.28048 614.141886,595.947147 C613.763219,596.613813 613.573886,597.363147 613.573886,598.195147 C613.573886,599.037813 613.768553,599.79248 614.157886,600.459147 C614.547219,601.125813 615.099219,601.645813 615.813886,602.019147 C616.528553,602.39248 617.355219,602.579147 618.293886,602.579147 Z M620.405886,597.507147 L615.557886,597.507147 C615.653886,596.877813 615.923219,596.373813 616.365886,595.995147 C616.808553,595.61648 617.349886,595.427147 617.989886,595.427147 C618.640553,595.427147 619.184553,595.619147 619.621886,596.003147 C620.059219,596.387147 620.320553,596.88848 620.405886,597.507147 L620.405886,597.507147 Z\",\"id\":\"Age\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M-113.671392,275.761476 C-112.476725,275.761476 -111.415392,275.529476 -110.487392,275.065476 C-109.559392,274.601476 -108.839392,273.945476 -108.327392,273.097476 C-107.815392,272.249476 -107.559392,271.270809 -107.559392,270.161476 C-107.559392,269.052143 -107.815392,268.073476 -108.327392,267.225476 C-108.839392,266.377476 -109.559392,265.721476 -110.487392,265.257476 C-111.415392,264.793476 -112.476725,264.561476 -113.671392,264.561476 L-113.671392,264.561476 L-118.567392,264.561476 L-118.567392,275.761476 L-113.671392,275.761476 Z M-113.767392,274.001476 L-116.487392,274.001476 L-116.487392,266.321476 L-113.767392,266.321476 C-112.946058,266.321476 -112.223392,266.478809 -111.599392,266.793476 C-110.975392,267.108143 -110.495392,267.556143 -110.159392,268.137476 C-109.823392,268.718809 -109.655392,269.393476 -109.655392,270.161476 C-109.655392,270.929476 -109.823392,271.604143 -110.159392,272.185476 C-110.495392,272.766809 -110.975392,273.214809 -111.599392,273.529476 C-112.223392,273.844143 -112.946058,274.001476 -113.767392,274.001476 L-113.767392,274.001476 Z M-104.535392,265.809476 C-104.162058,265.809476 -103.855392,265.689476 -103.615392,265.449476 C-103.375392,265.209476 -103.255392,264.913476 -103.255392,264.561476 C-103.255392,264.230809 -103.378058,263.956143 -103.623392,263.737476 C-103.868725,263.518809 -104.172725,263.409476 -104.535392,263.409476 C-104.898058,263.409476 -105.202058,263.524143 -105.447392,263.753476 C-105.692725,263.982809 -105.815392,264.268143 -105.815392,264.609476 C-105.815392,264.950809 -105.692725,265.236143 -105.447392,265.465476 C-105.202058,265.694809 -104.898058,265.809476 -104.535392,265.809476 Z M-103.543392,275.761476 L-103.543392,267.217476 L-105.543392,267.217476 L-105.543392,275.761476 L-103.543392,275.761476 Z M-98.2793918,275.873476 C-97.0847251,275.873476 -96.1407251,275.633476 -95.4473918,275.153476 C-94.7540585,274.673476 -94.4073918,274.033476 -94.4073918,273.233476 C-94.4073918,272.625476 -94.5647251,272.156143 -94.8793918,271.825476 C-95.1940585,271.494809 -95.5700585,271.260143 -96.0073918,271.121476 C-96.4447251,270.982809 -97.0047251,270.860143 -97.6873918,270.753476 C-98.3700585,270.636143 -98.8740585,270.510809 -99.1993918,270.377476 C-99.5247251,270.244143 -99.6873918,270.017476 -99.6873918,269.697476 C-99.6873918,269.409476 -99.5353918,269.177476 -99.2313918,269.001476 C-98.9273918,268.825476 -98.4820585,268.737476 -97.8953918,268.737476 C-96.9887251,268.737476 -96.1727251,268.950809 -95.4473918,269.377476 L-95.4473918,269.377476 L-94.6793918,267.857476 C-95.0527251,267.633476 -95.5327251,267.454809 -96.1193918,267.321476 C-96.7060585,267.188143 -97.2927251,267.121476 -97.8793918,267.121476 C-99.0313918,267.121476 -99.9460585,267.364143 -100.623392,267.849476 C-101.300725,268.334809 -101.639392,268.982809 -101.639392,269.793476 C-101.639392,270.412143 -101.476725,270.894809 -101.151392,271.241476 C-100.826058,271.588143 -100.442058,271.830809 -99.9993918,271.969476 C-99.5567251,272.108143 -98.9833918,272.230809 -98.2793918,272.337476 C-97.6073918,272.444143 -97.1193918,272.556143 -96.8153918,272.673476 C-96.5113918,272.790809 -96.3593918,272.998809 -96.3593918,273.297476 C-96.3593918,273.926809 -96.9567251,274.241476 -98.1513918,274.241476 C-98.6740585,274.241476 -99.2047251,274.164143 -99.7433918,274.009476 C-100.282058,273.854809 -100.743392,273.649476 -101.127392,273.393476 L-101.127392,273.393476 L-101.895392,274.913476 C-101.500725,275.190809 -100.972725,275.420143 -100.311392,275.601476 C-99.6500585,275.782809 -98.9727251,275.873476 -98.2793918,275.873476 Z M-88.7593918,275.873476 C-87.9273918,275.873476 -87.1940585,275.700143 -86.5593918,275.353476 C-85.9247251,275.006809 -85.4420585,274.513476 -85.1113918,273.873476 L-85.1113918,273.873476 L-86.6473918,272.977476 C-86.8927251,273.372143 -87.1993918,273.668143 -87.5673918,273.865476 C-87.9353918,274.062809 -88.3380585,274.161476 -88.7753918,274.161476 C-89.5327251,274.161476 -90.1540585,273.918809 -90.6393918,273.433476 C-91.1247251,272.948143 -91.3673918,272.300143 -91.3673918,271.489476 C-91.3673918,270.678809 -91.1220585,270.030809 -90.6313918,269.545476 C-90.1407251,269.060143 -89.5220585,268.817476 -88.7753918,268.817476 C-88.3380585,268.817476 -87.9353918,268.916143 -87.5673918,269.113476 C-87.1993918,269.310809 -86.8927251,269.606809 -86.6473918,270.001476 L-86.6473918,270.001476 L-85.1113918,269.105476 C-85.4313918,268.465476 -85.9087251,267.974809 -86.5433918,267.633476 C-87.1780585,267.292143 -87.9167251,267.121476 -88.7593918,267.121476 C-89.6553918,267.121476 -90.4527251,267.308143 -91.1513918,267.681476 C-91.8500585,268.054809 -92.3967251,268.572143 -92.7913918,269.233476 C-93.1860585,269.894809 -93.3833918,270.646809 -93.3833918,271.489476 C-93.3833918,272.332143 -93.1860585,273.086809 -92.7913918,273.753476 C-92.3967251,274.420143 -91.8473918,274.940143 -91.1433918,275.313476 C-90.4393918,275.686809 -89.6447251,275.873476 -88.7593918,275.873476 Z M-79.5433918,275.873476 C-78.6687251,275.873476 -77.8847251,275.686809 -77.1913918,275.313476 C-76.4980585,274.940143 -75.9567251,274.420143 -75.5673918,273.753476 C-75.1780585,273.086809 -74.9833918,272.332143 -74.9833918,271.489476 C-74.9833918,270.646809 -75.1780585,269.894809 -75.5673918,269.233476 C-75.9567251,268.572143 -76.4980585,268.054809 -77.1913918,267.681476 C-77.8847251,267.308143 -78.6687251,267.121476 -79.5433918,267.121476 C-80.4073918,267.121476 -81.1860585,267.308143 -81.8793918,267.681476 C-82.5727251,268.054809 -83.1140585,268.572143 -83.5033918,269.233476 C-83.8927251,269.894809 -84.0873918,270.646809 -84.0873918,271.489476 C-84.0873918,272.332143 -83.8927251,273.086809 -83.5033918,273.753476 C-83.1140585,274.420143 -82.5727251,274.940143 -81.8793918,275.313476 C-81.1860585,275.686809 -80.4073918,275.873476 -79.5433918,275.873476 Z M-79.5433918,274.161476 C-80.2793918,274.161476 -80.8847251,273.916143 -81.3593918,273.425476 C-81.8340585,272.934809 -82.0713918,272.289476 -82.0713918,271.489476 C-82.0713918,270.689476 -81.8340585,270.044143 -81.3593918,269.553476 C-80.8847251,269.062809 -80.2793918,268.817476 -79.5433918,268.817476 C-78.8073918,268.817476 -78.1993918,269.062809 -77.7193918,269.553476 C-77.2393918,270.044143 -76.9993918,270.689476 -76.9993918,271.489476 C-76.9993918,272.289476 -77.2393918,272.934809 -77.7193918,273.425476 C-78.1993918,273.916143 -78.8073918,274.161476 -79.5433918,274.161476 Z M-69.4473918,275.873476 C-68.8927251,275.873476 -68.3753918,275.769476 -67.8953918,275.561476 C-67.4153918,275.353476 -67.0153918,275.057476 -66.6953918,274.673476 L-66.6953918,274.673476 L-66.6953918,275.761476 L-64.7913918,275.761476 L-64.7913918,267.217476 L-66.7913918,267.217476 L-66.7913918,271.537476 C-66.7913918,272.369476 -67.0020585,273.006809 -67.4233918,273.449476 C-67.8447251,273.892143 -68.4127251,274.113476 -69.1273918,274.113476 C-69.7673918,274.113476 -70.2607251,273.924143 -70.6073918,273.545476 C-70.9540585,273.166809 -71.1273918,272.593476 -71.1273918,271.825476 L-71.1273918,271.825476 L-71.1273918,267.217476 L-73.1273918,267.217476 L-73.1273918,272.097476 C-73.1273918,273.345476 -72.7993918,274.286809 -72.1433918,274.921476 C-71.4873918,275.556143 -70.5887251,275.873476 -69.4473918,275.873476 Z M-60.1673918,275.761476 L-60.1673918,271.441476 C-60.1673918,270.609476 -59.9540585,269.972143 -59.5273918,269.529476 C-59.1007251,269.086809 -58.5193918,268.865476 -57.7833918,268.865476 C-57.1327251,268.865476 -56.6313918,269.054809 -56.2793918,269.433476 C-55.9273918,269.812143 -55.7513918,270.374809 -55.7513918,271.121476 L-55.7513918,271.121476 L-55.7513918,275.761476 L-53.7513918,275.761476 L-53.7513918,270.865476 C-53.7513918,269.628143 -54.0767251,268.694809 -54.7273918,268.065476 C-55.3780585,267.436143 -56.2420585,267.121476 -57.3193918,267.121476 C-57.9487251,267.121476 -58.5140585,267.222809 -59.0153918,267.425476 C-59.5167251,267.628143 -59.9327251,267.926809 -60.2633918,268.321476 L-60.2633918,268.321476 L-60.2633918,267.217476 L-62.1673918,267.217476 L-62.1673918,275.761476 L-60.1673918,275.761476 Z M-47.9913918,275.873476 C-47.6180585,275.873476 -47.2633918,275.825476 -46.9273918,275.729476 C-46.5913918,275.633476 -46.3060585,275.489476 -46.0713918,275.297476 L-46.0713918,275.297476 L-46.6313918,273.873476 C-46.9300585,274.108143 -47.3033918,274.225476 -47.7513918,274.225476 C-48.1353918,274.225476 -48.4287251,274.116143 -48.6313918,273.897476 C-48.8340585,273.678809 -48.9353918,273.361476 -48.9353918,272.945476 L-48.9353918,272.945476 L-48.9353918,268.881476 L-46.6473918,268.881476 L-46.6473918,267.281476 L-48.9353918,267.281476 L-48.9353918,265.329476 L-50.9353918,265.329476 L-50.9353918,267.281476 L-52.3433918,267.281476 L-52.3433918,268.881476 L-50.9353918,268.881476 L-50.9353918,272.993476 C-50.9353918,273.932143 -50.6793918,274.646809 -50.1673918,275.137476 C-49.6553918,275.628143 -48.9300585,275.873476 -47.9913918,275.873476 Z M-40.4073918,275.873476 C-39.6713918,275.873476 -39.0100585,275.756143 -38.4233918,275.521476 C-37.8367251,275.286809 -37.3513918,274.940143 -36.9673918,274.481476 L-36.9673918,274.481476 L-38.0393918,273.249476 C-38.6473918,273.868143 -39.4207251,274.177476 -40.3593918,274.177476 C-41.0953918,274.177476 -41.7113918,273.993476 -42.2073918,273.625476 C-42.7033918,273.257476 -43.0100585,272.758809 -43.1273918,272.129476 L-43.1273918,272.129476 L-36.4233918,272.129476 C-36.4020585,271.873476 -36.3913918,271.676143 -36.3913918,271.537476 C-36.3913918,270.662809 -36.5753918,269.892143 -36.9433918,269.225476 C-37.3113918,268.558809 -37.8233918,268.041476 -38.4793918,267.673476 C-39.1353918,267.305476 -39.8793918,267.121476 -40.7113918,267.121476 C-41.5540585,267.121476 -42.3113918,267.308143 -42.9833918,267.681476 C-43.6553918,268.054809 -44.1807251,268.574809 -44.5593918,269.241476 C-44.9380585,269.908143 -45.1273918,270.657476 -45.1273918,271.489476 C-45.1273918,272.332143 -44.9327251,273.086809 -44.5433918,273.753476 C-44.1540585,274.420143 -43.6020585,274.940143 -42.8873918,275.313476 C-42.1727251,275.686809 -41.3460585,275.873476 -40.4073918,275.873476 Z M-38.2953918,270.801476 L-43.1433918,270.801476 C-43.0473918,270.172143 -42.7780585,269.668143 -42.3353918,269.289476 C-41.8927251,268.910809 -41.3513918,268.721476 -40.7113918,268.721476 C-40.0607251,268.721476 -39.5167251,268.913476 -39.0793918,269.297476 C-38.6420585,269.681476 -38.3807251,270.182809 -38.2953918,270.801476 L-38.2953918,270.801476 Z M-30.8553918,275.873476 C-30.2687251,275.873476 -29.7327251,275.772143 -29.2473918,275.569476 C-28.7620585,275.366809 -28.3540585,275.062809 -28.0233918,274.657476 L-28.0233918,274.657476 L-28.0233918,275.761476 L-26.1033918,275.761476 L-26.1033918,263.889476 L-28.1033918,263.889476 L-28.1033918,268.273476 C-28.4340585,267.889476 -28.8340585,267.601476 -29.3033918,267.409476 C-29.7727251,267.217476 -30.2900585,267.121476 -30.8553918,267.121476 C-31.6767251,267.121476 -32.4153918,267.302809 -33.0713918,267.665476 C-33.7273918,268.028143 -34.2420585,268.540143 -34.6153918,269.201476 C-34.9887251,269.862809 -35.1753918,270.625476 -35.1753918,271.489476 C-35.1753918,272.353476 -34.9887251,273.118809 -34.6153918,273.785476 C-34.2420585,274.452143 -33.7273918,274.966809 -33.0713918,275.329476 C-32.4153918,275.692143 -31.6767251,275.873476 -30.8553918,275.873476 Z M-30.6153918,274.161476 C-31.0953918,274.161476 -31.5273918,274.052143 -31.9113918,273.833476 C-32.2953918,273.614809 -32.5993918,273.302809 -32.8233918,272.897476 C-33.0473918,272.492143 -33.1593918,272.022809 -33.1593918,271.489476 C-33.1593918,270.956143 -33.0473918,270.486809 -32.8233918,270.081476 C-32.5993918,269.676143 -32.2953918,269.364143 -31.9113918,269.145476 C-31.5273918,268.926809 -31.0953918,268.817476 -30.6153918,268.817476 C-30.1353918,268.817476 -29.7033918,268.926809 -29.3193918,269.145476 C-28.9353918,269.364143 -28.6313918,269.676143 -28.4073918,270.081476 C-28.1833918,270.486809 -28.0713918,270.956143 -28.0713918,271.489476 C-28.0713918,272.022809 -28.1833918,272.492143 -28.4073918,272.897476 C-28.6313918,273.302809 -28.9353918,273.614809 -29.3193918,273.833476 C-29.7033918,274.052143 -30.1353918,274.161476 -30.6153918,274.161476 Z M-14.0393918,275.761476 L-14.0393918,271.809476 L-9.65539181,264.561476 L-11.7033918,264.561476 L-15.0153918,270.017476 L-18.2953918,264.561476 L-20.5193918,264.561476 L-16.1193918,271.841476 L-16.1193918,275.761476 L-14.0393918,275.761476 Z M-4.47139181,275.873476 C-3.73539181,275.873476 -3.07405847,275.756143 -2.48739181,275.521476 C-1.90072514,275.286809 -1.41539181,274.940143 -1.03139181,274.481476 L-1.03139181,274.481476 L-2.10339181,273.249476 C-2.71139181,273.868143 -3.48472514,274.177476 -4.42339181,274.177476 C-5.15939181,274.177476 -5.77539181,273.993476 -6.27139181,273.625476 C-6.76739181,273.257476 -7.07405847,272.758809 -7.19139181,272.129476 L-7.19139181,272.129476 L-0.487391808,272.129476 C-0.466058475,271.873476 -0.455391808,271.676143 -0.455391808,271.537476 C-0.455391808,270.662809 -0.639391808,269.892143 -1.00739181,269.225476 C-1.37539181,268.558809 -1.88739181,268.041476 -2.54339181,267.673476 C-3.19939181,267.305476 -3.94339181,267.121476 -4.77539181,267.121476 C-5.61805847,267.121476 -6.37539181,267.308143 -7.04739181,267.681476 C-7.71939181,268.054809 -8.24472514,268.574809 -8.62339181,269.241476 C-9.00205847,269.908143 -9.19139181,270.657476 -9.19139181,271.489476 C-9.19139181,272.332143 -8.99672514,273.086809 -8.60739181,273.753476 C-8.21805847,274.420143 -7.66605847,274.940143 -6.95139181,275.313476 C-6.23672514,275.686809 -5.41005847,275.873476 -4.47139181,275.873476 Z M-2.35939181,270.801476 L-7.20739181,270.801476 C-7.11139181,270.172143 -6.84205847,269.668143 -6.39939181,269.289476 C-5.95672514,268.910809 -5.41539181,268.721476 -4.77539181,268.721476 C-4.12472514,268.721476 -3.58072514,268.913476 -3.14339181,269.297476 C-2.70605847,269.681476 -2.44472514,270.182809 -2.35939181,270.801476 L-2.35939181,270.801476 Z M4.04060819,275.873476 C4.68060819,275.873476 5.22727486,275.774809 5.68060819,275.577476 C6.13394153,275.380143 6.48327486,275.094809 6.72860819,274.721476 L6.72860819,274.721476 L6.72860819,275.761476 L8.61660819,275.761476 L8.61660819,270.753476 C8.61660819,269.537476 8.28327486,268.628143 7.61660819,268.025476 C6.94994153,267.422809 5.98727486,267.121476 4.72860819,267.121476 C4.02460819,267.121476 3.35794153,267.212143 2.72860819,267.393476 C2.09927486,267.574809 1.56060819,267.836143 1.11260819,268.177476 L1.11260819,268.177476 L1.89660819,269.633476 C2.21660819,269.366809 2.60860819,269.158809 3.07260819,269.009476 C3.53660819,268.860143 4.00860819,268.785476 4.48860819,268.785476 C5.19260819,268.785476 5.72327486,268.945476 6.08060819,269.265476 C6.43794153,269.585476 6.61660819,270.044143 6.61660819,270.641476 L6.61660819,270.641476 L6.61660819,270.769476 L4.40860819,270.769476 C3.18194153,270.769476 2.28327486,271.001476 1.71260819,271.465476 C1.14194153,271.929476 0.856608192,272.545476 0.856608192,273.313476 C0.856608192,273.804143 0.987274859,274.244143 1.24860819,274.633476 C1.50994153,275.022809 1.88060819,275.326809 2.36060819,275.545476 C2.84060819,275.764143 3.40060819,275.873476 4.04060819,275.873476 Z M4.45660819,274.417476 C3.94460819,274.417476 3.54460819,274.310809 3.25660819,274.097476 C2.96860819,273.884143 2.82460819,273.596143 2.82460819,273.233476 C2.82460819,272.476143 3.40060819,272.097476 4.55260819,272.097476 L4.55260819,272.097476 L6.61660819,272.097476 L6.61660819,273.089476 C6.45660819,273.516143 6.18194153,273.844143 5.79260819,274.073476 C5.40327486,274.302809 4.95794153,274.417476 4.45660819,274.417476 Z M13.1766082,275.761476 L13.1766082,271.617476 C13.1766082,270.764143 13.3952749,270.110809 13.8326082,269.657476 C14.2699415,269.204143 14.8779415,268.977476 15.6566082,268.977476 C15.7952749,268.977476 15.9499415,268.993476 16.1206082,269.025476 L16.1206082,269.025476 L16.1206082,267.121476 C14.6699415,267.121476 13.6566082,267.569476 13.0806082,268.465476 L13.0806082,268.465476 L13.0806082,267.217476 L11.1766082,267.217476 L11.1766082,275.761476 L13.1766082,275.761476 Z M19.8966082,275.761476 L19.8966082,263.889476 L17.8966082,263.889476 L17.8966082,275.761476 L19.8966082,275.761476 Z M23.2246082,278.977476 C23.9819415,278.977476 24.6272749,278.788143 25.1606082,278.409476 C25.6939415,278.030809 26.1472749,277.377476 26.5206082,276.449476 L26.5206082,276.449476 L30.5206082,267.217476 L28.6006082,267.217476 L25.8966082,273.537476 L23.2086082,267.217476 L21.1286082,267.217476 L24.8566082,275.793476 L24.7126082,276.129476 C24.5206082,276.556143 24.3099415,276.860143 24.0806082,277.041476 C23.8512749,277.222809 23.5606082,277.313476 23.2086082,277.313476 C22.9419415,277.313476 22.6779415,277.260143 22.4166082,277.153476 C22.1552749,277.046809 21.9286082,276.902809 21.7366082,276.721476 L21.7366082,276.721476 L20.9366082,278.193476 C21.2032749,278.438809 21.5446082,278.630809 21.9606082,278.769476 C22.3766082,278.908143 22.7979415,278.977476 23.2246082,278.977476 Z M38.4566082,275.761476 L38.4566082,272.529476 L40.9846082,272.529476 C41.9552749,272.529476 42.8006082,272.369476 43.5206082,272.049476 C44.2406082,271.729476 44.7926082,271.268143 45.1766082,270.665476 C45.5606082,270.062809 45.7526082,269.356143 45.7526082,268.545476 C45.7526082,267.724143 45.5606082,267.014809 45.1766082,266.417476 C44.7926082,265.820143 44.2406082,265.361476 43.5206082,265.041476 C42.8006082,264.721476 41.9552749,264.561476 40.9846082,264.561476 L40.9846082,264.561476 L36.3766082,264.561476 L36.3766082,275.761476 L38.4566082,275.761476 Z M40.8886082,270.769476 L38.4566082,270.769476 L38.4566082,266.321476 L40.8886082,266.321476 C41.7952749,266.321476 42.4832749,266.513476 42.9526082,266.897476 C43.4219415,267.281476 43.6566082,267.830809 43.6566082,268.545476 C43.6566082,269.260143 43.4219415,269.809476 42.9526082,270.193476 C42.4832749,270.577476 41.7952749,270.769476 40.8886082,270.769476 L40.8886082,270.769476 Z M49.8006082,275.761476 L49.8006082,271.617476 C49.8006082,270.764143 50.0192749,270.110809 50.4566082,269.657476 C50.8939415,269.204143 51.5019415,268.977476 52.2806082,268.977476 C52.4192749,268.977476 52.5739415,268.993476 52.7446082,269.025476 L52.7446082,269.025476 L52.7446082,267.121476 C51.2939415,267.121476 50.2806082,267.569476 49.7046082,268.465476 L49.7046082,268.465476 L49.7046082,267.217476 L47.8006082,267.217476 L47.8006082,275.761476 L49.8006082,275.761476 Z M58.3606082,275.873476 C59.2352749,275.873476 60.0192749,275.686809 60.7126082,275.313476 C61.4059415,274.940143 61.9472749,274.420143 62.3366082,273.753476 C62.7259415,273.086809 62.9206082,272.332143 62.9206082,271.489476 C62.9206082,270.646809 62.7259415,269.894809 62.3366082,269.233476 C61.9472749,268.572143 61.4059415,268.054809 60.7126082,267.681476 C60.0192749,267.308143 59.2352749,267.121476 58.3606082,267.121476 C57.4966082,267.121476 56.7179415,267.308143 56.0246082,267.681476 C55.3312749,268.054809 54.7899415,268.572143 54.4006082,269.233476 C54.0112749,269.894809 53.8166082,270.646809 53.8166082,271.489476 C53.8166082,272.332143 54.0112749,273.086809 54.4006082,273.753476 C54.7899415,274.420143 55.3312749,274.940143 56.0246082,275.313476 C56.7179415,275.686809 57.4966082,275.873476 58.3606082,275.873476 Z M58.3606082,274.161476 C57.6246082,274.161476 57.0192749,273.916143 56.5446082,273.425476 C56.0699415,272.934809 55.8326082,272.289476 55.8326082,271.489476 C55.8326082,270.689476 56.0699415,270.044143 56.5446082,269.553476 C57.0192749,269.062809 57.6246082,268.817476 58.3606082,268.817476 C59.0966082,268.817476 59.7046082,269.062809 60.1846082,269.553476 C60.6646082,270.044143 60.9046082,270.689476 60.9046082,271.489476 C60.9046082,272.289476 60.6646082,272.934809 60.1846082,273.425476 C59.7046082,273.916143 59.0966082,274.161476 58.3606082,274.161476 Z M68.4566082,275.873476 C69.0432749,275.873476 69.5792749,275.772143 70.0646082,275.569476 C70.5499415,275.366809 70.9579415,275.062809 71.2886082,274.657476 L71.2886082,274.657476 L71.2886082,275.761476 L73.2086082,275.761476 L73.2086082,263.889476 L71.2086082,263.889476 L71.2086082,268.273476 C70.8779415,267.889476 70.4779415,267.601476 70.0086082,267.409476 C69.5392749,267.217476 69.0219415,267.121476 68.4566082,267.121476 C67.6352749,267.121476 66.8966082,267.302809 66.2406082,267.665476 C65.5846082,268.028143 65.0699415,268.540143 64.6966082,269.201476 C64.3232749,269.862809 64.1366082,270.625476 64.1366082,271.489476 C64.1366082,272.353476 64.3232749,273.118809 64.6966082,273.785476 C65.0699415,274.452143 65.5846082,274.966809 66.2406082,275.329476 C66.8966082,275.692143 67.6352749,275.873476 68.4566082,275.873476 Z M68.6966082,274.161476 C68.2166082,274.161476 67.7846082,274.052143 67.4006082,273.833476 C67.0166082,273.614809 66.7126082,273.302809 66.4886082,272.897476 C66.2646082,272.492143 66.1526082,272.022809 66.1526082,271.489476 C66.1526082,270.956143 66.2646082,270.486809 66.4886082,270.081476 C66.7126082,269.676143 67.0166082,269.364143 67.4006082,269.145476 C67.7846082,268.926809 68.2166082,268.817476 68.6966082,268.817476 C69.1766082,268.817476 69.6086082,268.926809 69.9926082,269.145476 C70.3766082,269.364143 70.6806082,269.676143 70.9046082,270.081476 C71.1286082,270.486809 71.2406082,270.956143 71.2406082,271.489476 C71.2406082,272.022809 71.1286082,272.492143 70.9046082,272.897476 C70.6806082,273.302809 70.3766082,273.614809 69.9926082,273.833476 C69.6086082,274.052143 69.1766082,274.161476 68.6966082,274.161476 Z M79.4486082,275.873476 C80.0032749,275.873476 80.5206082,275.769476 81.0006082,275.561476 C81.4806082,275.353476 81.8806082,275.057476 82.2006082,274.673476 L82.2006082,274.673476 L82.2006082,275.761476 L84.1046082,275.761476 L84.1046082,267.217476 L82.1046082,267.217476 L82.1046082,271.537476 C82.1046082,272.369476 81.8939415,273.006809 81.4726082,273.449476 C81.0512749,273.892143 80.4832749,274.113476 79.7686082,274.113476 C79.1286082,274.113476 78.6352749,273.924143 78.2886082,273.545476 C77.9419415,273.166809 77.7686082,272.593476 77.7686082,271.825476 L77.7686082,271.825476 L77.7686082,267.217476 L75.7686082,267.217476 L75.7686082,272.097476 C75.7686082,273.345476 76.0966082,274.286809 76.7526082,274.921476 C77.4086082,275.556143 78.3072749,275.873476 79.4486082,275.873476 Z M90.6486082,275.873476 C91.4806082,275.873476 92.2139415,275.700143 92.8486082,275.353476 C93.4832749,275.006809 93.9659415,274.513476 94.2966082,273.873476 L94.2966082,273.873476 L92.7606082,272.977476 C92.5152749,273.372143 92.2086082,273.668143 91.8406082,273.865476 C91.4726082,274.062809 91.0699415,274.161476 90.6326082,274.161476 C89.8752749,274.161476 89.2539415,273.918809 88.7686082,273.433476 C88.2832749,272.948143 88.0406082,272.300143 88.0406082,271.489476 C88.0406082,270.678809 88.2859415,270.030809 88.7766082,269.545476 C89.2672749,269.060143 89.8859415,268.817476 90.6326082,268.817476 C91.0699415,268.817476 91.4726082,268.916143 91.8406082,269.113476 C92.2086082,269.310809 92.5152749,269.606809 92.7606082,270.001476 L92.7606082,270.001476 L94.2966082,269.105476 C93.9766082,268.465476 93.4992749,267.974809 92.8646082,267.633476 C92.2299415,267.292143 91.4912749,267.121476 90.6486082,267.121476 C89.7526082,267.121476 88.9552749,267.308143 88.2566082,267.681476 C87.5579415,268.054809 87.0112749,268.572143 86.6166082,269.233476 C86.2219415,269.894809 86.0246082,270.646809 86.0246082,271.489476 C86.0246082,272.332143 86.2219415,273.086809 86.6166082,273.753476 C87.0112749,274.420143 87.5606082,274.940143 88.2646082,275.313476 C88.9686082,275.686809 89.7632749,275.873476 90.6486082,275.873476 Z M99.2406082,275.873476 C99.6139415,275.873476 99.9686082,275.825476 100.304608,275.729476 C100.640608,275.633476 100.925942,275.489476 101.160608,275.297476 L101.160608,275.297476 L100.600608,273.873476 C100.301942,274.108143 99.9286082,274.225476 99.4806082,274.225476 C99.0966082,274.225476 98.8032749,274.116143 98.6006082,273.897476 C98.3979415,273.678809 98.2966082,273.361476 98.2966082,272.945476 L98.2966082,272.945476 L98.2966082,268.881476 L100.584608,268.881476 L100.584608,267.281476 L98.2966082,267.281476 L98.2966082,265.329476 L96.2966082,265.329476 L96.2966082,267.281476 L94.8886082,267.281476 L94.8886082,268.881476 L96.2966082,268.881476 L96.2966082,272.993476 C96.2966082,273.932143 96.5526082,274.646809 97.0646082,275.137476 C97.5766082,275.628143 98.3019415,275.873476 99.2406082,275.873476 Z M103.816608,265.809476 C104.189942,265.809476 104.496608,265.689476 104.736608,265.449476 C104.976608,265.209476 105.096608,264.913476 105.096608,264.561476 C105.096608,264.230809 104.973942,263.956143 104.728608,263.737476 C104.483275,263.518809 104.179275,263.409476 103.816608,263.409476 C103.453942,263.409476 103.149942,263.524143 102.904608,263.753476 C102.659275,263.982809 102.536608,264.268143 102.536608,264.609476 C102.536608,264.950809 102.659275,265.236143 102.904608,265.465476 C103.149942,265.694809 103.453942,265.809476 103.816608,265.809476 Z M104.808608,275.761476 L104.808608,267.217476 L102.808608,267.217476 L102.808608,275.761476 L104.808608,275.761476 Z M111.768608,275.761476 L115.432608,267.217476 L113.512608,267.217476 L110.776608,273.553476 L108.120608,267.217476 L106.040608,267.217476 L109.704608,275.761476 L111.768608,275.761476 Z M117.688608,265.809476 C118.061942,265.809476 118.368608,265.689476 118.608608,265.449476 C118.848608,265.209476 118.968608,264.913476 118.968608,264.561476 C118.968608,264.230809 118.845942,263.956143 118.600608,263.737476 C118.355275,263.518809 118.051275,263.409476 117.688608,263.409476 C117.325942,263.409476 117.021942,263.524143 116.776608,263.753476 C116.531275,263.982809 116.408608,264.268143 116.408608,264.609476 C116.408608,264.950809 116.531275,265.236143 116.776608,265.465476 C117.021942,265.694809 117.325942,265.809476 117.688608,265.809476 Z M118.680608,275.761476 L118.680608,267.217476 L116.680608,267.217476 L116.680608,275.761476 L118.680608,275.761476 Z M124.520608,275.873476 C124.893942,275.873476 125.248608,275.825476 125.584608,275.729476 C125.920608,275.633476 126.205942,275.489476 126.440608,275.297476 L126.440608,275.297476 L125.880608,273.873476 C125.581942,274.108143 125.208608,274.225476 124.760608,274.225476 C124.376608,274.225476 124.083275,274.116143 123.880608,273.897476 C123.677942,273.678809 123.576608,273.361476 123.576608,272.945476 L123.576608,272.945476 L123.576608,268.881476 L125.864608,268.881476 L125.864608,267.281476 L123.576608,267.281476 L123.576608,265.329476 L121.576608,265.329476 L121.576608,267.281476 L120.168608,267.281476 L120.168608,268.881476 L121.576608,268.881476 L121.576608,272.993476 C121.576608,273.932143 121.832608,274.646809 122.344608,275.137476 C122.856608,275.628143 123.581942,275.873476 124.520608,275.873476 Z M128.792608,278.977476 C129.549942,278.977476 130.195275,278.788143 130.728608,278.409476 C131.261942,278.030809 131.715275,277.377476 132.088608,276.449476 L132.088608,276.449476 L136.088608,267.217476 L134.168608,267.217476 L131.464608,273.537476 L128.776608,267.217476 L126.696608,267.217476 L130.424608,275.793476 L130.280608,276.129476 C130.088608,276.556143 129.877942,276.860143 129.648608,277.041476 C129.419275,277.222809 129.128608,277.313476 128.776608,277.313476 C128.509942,277.313476 128.245942,277.260143 127.984608,277.153476 C127.723275,277.046809 127.496608,276.902809 127.304608,276.721476 L127.304608,276.721476 L126.504608,278.193476 C126.771275,278.438809 127.112608,278.630809 127.528608,278.769476 C127.944608,278.908143 128.365942,278.977476 128.792608,278.977476 Z\",\"id\":\"DiscountedYearlyProductivity\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(8.760608, 271.193476) rotate(-90.000000) translate(-8.760608, -271.193476) \",\"key\":23}),React.createElement(\"path\",{\"d\":\"M631.422209,551.512151 L631.422209,548.936151 L633.382209,548.936151 L633.382209,548.040151 L631.422209,548.040151 L631.422209,545.772151 L630.442209,545.772151 L630.442209,548.040151 L626.186209,548.040151 L631.198209,541.712151 L630.078209,541.712151 L624.884209,548.208151 L624.884209,548.936151 L630.414209,548.936151 L630.414209,551.512151 L631.422209,551.512151 Z M640.676209,551.512151 L640.676209,548.936151 L642.636209,548.936151 L642.636209,548.040151 L640.676209,548.040151 L640.676209,545.772151 L639.696209,545.772151 L639.696209,548.040151 L635.440209,548.040151 L640.452209,541.712151 L639.332209,541.712151 L634.138209,548.208151 L634.138209,548.936151 L639.668209,548.936151 L639.668209,551.512151 L640.676209,551.512151 Z\",\"id\":\"44\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M717.589463,550.513051 L717.589463,547.937051 L719.549463,547.937051 L719.549463,547.041051 L717.589463,547.041051 L717.589463,544.773051 L716.609463,544.773051 L716.609463,547.041051 L712.353463,547.041051 L717.365463,540.713051 L716.245463,540.713051 L711.051463,547.209051 L711.051463,547.937051 L716.581463,547.937051 L716.581463,550.513051 L717.589463,550.513051 Z M724.197463,550.597051 C724.97213,550.597051 725.646463,550.482718 726.220463,550.254051 C726.794463,550.025385 727.235463,549.698718 727.543463,549.274051 C727.851463,548.849385 728.005463,548.352385 728.005463,547.783051 C728.005463,547.204385 727.839796,546.709718 727.508463,546.299051 C727.17713,545.888385 726.703463,545.580385 726.087463,545.375051 C726.591463,545.179051 726.978796,544.896718 727.249463,544.528051 C727.52013,544.159385 727.655463,543.723051 727.655463,543.219051 C727.655463,542.696385 727.510796,542.239051 727.221463,541.847051 C726.93213,541.455051 726.528463,541.154051 726.010463,540.944051 C725.492463,540.734051 724.88813,540.629051 724.197463,540.629051 C723.15213,540.629051 722.31913,540.862385 721.698463,541.329051 C721.077796,541.795718 720.767463,542.425718 720.767463,543.219051 C720.767463,543.723051 720.89813,544.159385 721.159463,544.528051 C721.420796,544.896718 721.803463,545.179051 722.307463,545.375051 C721.691463,545.580385 721.222463,545.886051 720.900463,546.292051 C720.578463,546.698051 720.417463,547.195051 720.417463,547.783051 C720.417463,548.651051 720.753463,549.337051 721.425463,549.841051 C722.097463,550.345051 723.021463,550.597051 724.197463,550.597051 Z M724.197463,545.011051 C723.441463,545.011051 722.848796,544.852385 722.419463,544.535051 C721.99013,544.217718 721.775463,543.788385 721.775463,543.247051 C721.775463,542.705718 721.992463,542.276385 722.426463,541.959051 C722.860463,541.641718 723.450796,541.483051 724.197463,541.483051 C724.934796,541.483051 725.52513,541.641718 725.968463,541.959051 C726.411796,542.276385 726.633463,542.710385 726.633463,543.261051 C726.633463,543.793051 726.416463,544.217718 725.982463,544.535051 C725.548463,544.852385 724.953463,545.011051 724.197463,545.011051 Z M724.197463,549.743051 C723.329463,549.743051 722.652796,549.568051 722.167463,549.218051 C721.68213,548.868051 721.439463,548.385051 721.439463,547.769051 C721.439463,547.162385 721.684463,546.684051 722.174463,546.334051 C722.664463,545.984051 723.338796,545.809051 724.197463,545.809051 C725.065463,545.809051 725.744463,545.984051 726.234463,546.334051 C726.724463,546.684051 726.969463,547.162385 726.969463,547.769051 C726.969463,548.375718 726.724463,548.856385 726.234463,549.211051 C725.744463,549.565718 725.065463,549.743051 724.197463,549.743051 Z\",\"id\":\"48\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M796.479514,550.597051 C797.25418,550.597051 797.907514,550.468718 798.439514,550.212051 C798.971514,549.955385 799.370514,549.603051 799.636514,549.155051 C799.902514,548.707051 800.035514,548.198385 800.035514,547.629051 C800.035514,546.714385 799.71118,546.002718 799.062514,545.494051 C798.413847,544.985385 797.38018,544.731051 795.961514,544.731051 L795.961514,544.731051 L794.701514,544.731051 L795.037514,541.609051 L799.517514,541.609051 L799.517514,540.713051 L794.155514,540.713051 L793.651514,545.627051 L795.737514,545.627051 C796.922847,545.627051 797.76518,545.799718 798.264514,546.145051 C798.763847,546.490385 799.013514,546.999051 799.013514,547.671051 C799.013514,548.277718 798.791847,548.763051 798.348514,549.127051 C797.90518,549.491051 797.277514,549.673051 796.465514,549.673051 C795.849514,549.673051 795.275514,549.568051 794.743514,549.358051 C794.211514,549.148051 793.78218,548.875051 793.455514,548.539051 L793.455514,548.539051 L792.965514,549.337051 C793.34818,549.719718 793.854514,550.025385 794.484514,550.254051 C795.114514,550.482718 795.779514,550.597051 796.479514,550.597051 Z M808.001514,550.513051 L808.001514,549.617051 L802.611514,549.617051 L805.943514,546.341051 C806.568847,545.734385 806.993514,545.197718 807.217514,544.731051 C807.441514,544.264385 807.553514,543.779051 807.553514,543.275051 C807.553514,542.453718 807.261847,541.807385 806.678514,541.336051 C806.09518,540.864718 805.30418,540.629051 804.305514,540.629051 C803.558847,540.629051 802.88918,540.750385 802.296514,540.993051 C801.703847,541.235718 801.21618,541.581051 800.833514,542.029051 L800.833514,542.029051 L801.547514,542.645051 C802.18218,541.917051 803.073514,541.553051 804.221514,541.553051 C804.958847,541.553051 805.525847,541.714051 805.922514,542.036051 C806.31918,542.358051 806.517514,542.808385 806.517514,543.387051 C806.517514,543.760385 806.426514,544.131385 806.244514,544.500051 C806.062514,544.868718 805.714847,545.305051 805.201514,545.809051 L805.201514,545.809051 L801.127514,549.799051 L801.127514,550.513051 L808.001514,550.513051 Z\",\"id\":\"52\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M879.754366,550.597051 C880.529033,550.597051 881.182366,550.468718 881.714366,550.212051 C882.246366,549.955385 882.645366,549.603051 882.911366,549.155051 C883.177366,548.707051 883.310366,548.198385 883.310366,547.629051 C883.310366,546.714385 882.986033,546.002718 882.337366,545.494051 C881.6887,544.985385 880.655033,544.731051 879.236366,544.731051 L879.236366,544.731051 L877.976366,544.731051 L878.312366,541.609051 L882.792366,541.609051 L882.792366,540.713051 L877.430366,540.713051 L876.926366,545.627051 L879.012366,545.627051 C880.1977,545.627051 881.040033,545.799718 881.539366,546.145051 C882.0387,546.490385 882.288366,546.999051 882.288366,547.671051 C882.288366,548.277718 882.0667,548.763051 881.623366,549.127051 C881.180033,549.491051 880.552366,549.673051 879.740366,549.673051 C879.124366,549.673051 878.550366,549.568051 878.018366,549.358051 C877.486366,549.148051 877.057033,548.875051 876.730366,548.539051 L876.730366,548.539051 L876.240366,549.337051 C876.623033,549.719718 877.129366,550.025385 877.759366,550.254051 C878.389366,550.482718 879.054366,550.597051 879.754366,550.597051 Z M888.602366,550.597051 C889.237033,550.597051 889.8087,550.473385 890.317366,550.226051 C890.826033,549.978718 891.225033,549.626385 891.514366,549.169051 C891.8037,548.711718 891.948366,548.184385 891.948366,547.587051 C891.948366,546.999051 891.808366,546.483385 891.528366,546.040051 C891.248366,545.596718 890.8587,545.253718 890.359366,545.011051 C889.860033,544.768385 889.288366,544.647051 888.644366,544.647051 C887.9537,544.647051 887.342366,544.794051 886.810366,545.088051 C886.278366,545.382051 885.891033,545.795051 885.648366,546.327051 C885.620366,546.028385 885.606366,545.762385 885.606366,545.529051 C885.606366,544.222385 885.914366,543.226051 886.530366,542.540051 C887.146366,541.854051 887.9957,541.511051 889.078366,541.511051 C889.881033,541.511051 890.5157,541.665051 890.982366,541.973051 L890.982366,541.973051 L891.388366,541.161051 C890.8097,540.806385 890.035033,540.629051 889.064366,540.629051 C888.168366,540.629051 887.384366,540.822718 886.712366,541.210051 C886.040366,541.597385 885.5177,542.169051 885.144366,542.925051 C884.771033,543.681051 884.584366,544.605051 884.584366,545.697051 C884.584366,547.255718 884.9297,548.462051 885.620366,549.316051 C886.311033,550.170051 887.305033,550.597051 888.602366,550.597051 Z M888.560366,549.743051 C888.019033,549.743051 887.552366,549.645051 887.160366,549.449051 C886.768366,549.253051 886.472033,548.996385 886.271366,548.679051 C886.0707,548.361718 885.970366,548.016385 885.970366,547.643051 C885.970366,547.241718 886.0777,546.877718 886.292366,546.551051 C886.507033,546.224385 886.803366,545.967718 887.181366,545.781051 C887.559366,545.594385 887.9957,545.501051 888.490366,545.501051 C889.246366,545.501051 889.846033,545.692385 890.289366,546.075051 C890.7327,546.457718 890.954366,546.971051 890.954366,547.615051 C890.954366,548.259051 890.7327,548.774718 890.289366,549.162051 C889.846033,549.549385 889.2697,549.743051 888.560366,549.743051 Z\",\"id\":\"56\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":27}),React.createElement(\"path\",{\"d\":\"M963.183219,550.597051 C963.817886,550.597051 964.389553,550.473385 964.898219,550.226051 C965.406886,549.978718 965.805886,549.626385 966.095219,549.169051 C966.384553,548.711718 966.529219,548.184385 966.529219,547.587051 C966.529219,546.999051 966.389219,546.483385 966.109219,546.040051 C965.829219,545.596718 965.439553,545.253718 964.940219,545.011051 C964.440886,544.768385 963.869219,544.647051 963.225219,544.647051 C962.534553,544.647051 961.923219,544.794051 961.391219,545.088051 C960.859219,545.382051 960.471886,545.795051 960.229219,546.327051 C960.201219,546.028385 960.187219,545.762385 960.187219,545.529051 C960.187219,544.222385 960.495219,543.226051 961.111219,542.540051 C961.727219,541.854051 962.576553,541.511051 963.659219,541.511051 C964.461886,541.511051 965.096553,541.665051 965.563219,541.973051 L965.563219,541.973051 L965.969219,541.161051 C965.390553,540.806385 964.615886,540.629051 963.645219,540.629051 C962.749219,540.629051 961.965219,540.822718 961.293219,541.210051 C960.621219,541.597385 960.098553,542.169051 959.725219,542.925051 C959.351886,543.681051 959.165219,544.605051 959.165219,545.697051 C959.165219,547.255718 959.510553,548.462051 960.201219,549.316051 C960.891886,550.170051 961.885886,550.597051 963.183219,550.597051 Z M963.141219,549.743051 C962.599886,549.743051 962.133219,549.645051 961.741219,549.449051 C961.349219,549.253051 961.052886,548.996385 960.852219,548.679051 C960.651553,548.361718 960.551219,548.016385 960.551219,547.643051 C960.551219,547.241718 960.658553,546.877718 960.873219,546.551051 C961.087886,546.224385 961.384219,545.967718 961.762219,545.781051 C962.140219,545.594385 962.576553,545.501051 963.071219,545.501051 C963.827219,545.501051 964.426886,545.692385 964.870219,546.075051 C965.313553,546.457718 965.535219,546.971051 965.535219,547.615051 C965.535219,548.259051 965.313553,548.774718 964.870219,549.162051 C964.426886,549.549385 963.850553,549.743051 963.141219,549.743051 Z M971.597219,550.597051 C972.353219,550.597051 973.027553,550.396385 973.620219,549.995051 C974.212886,549.593718 974.677219,549.017385 975.013219,548.266051 C975.349219,547.514718 975.517219,546.630385 975.517219,545.613051 C975.517219,544.595718 975.349219,543.711385 975.013219,542.960051 C974.677219,542.208718 974.212886,541.632385 973.620219,541.231051 C973.027553,540.829718 972.353219,540.629051 971.597219,540.629051 C970.841219,540.629051 970.166886,540.829718 969.574219,541.231051 C968.981553,541.632385 968.519553,542.208718 968.188219,542.960051 C967.856886,543.711385 967.691219,544.595718 967.691219,545.613051 C967.691219,546.630385 967.856886,547.514718 968.188219,548.266051 C968.519553,549.017385 968.981553,549.593718 969.574219,549.995051 C970.166886,550.396385 970.841219,550.597051 971.597219,550.597051 Z M971.597219,549.673051 C971.027886,549.673051 970.526219,549.514385 970.092219,549.197051 C969.658219,548.879718 969.319886,548.417718 969.077219,547.811051 C968.834553,547.204385 968.713219,546.471718 968.713219,545.613051 C968.713219,544.754385 968.834553,544.021718 969.077219,543.415051 C969.319886,542.808385 969.658219,542.346385 970.092219,542.029051 C970.526219,541.711718 971.027886,541.553051 971.597219,541.553051 C972.166553,541.553051 972.668219,541.711718 973.102219,542.029051 C973.536219,542.346385 973.874553,542.808385 974.117219,543.415051 C974.359886,544.021718 974.481219,544.754385 974.481219,545.613051 C974.481219,546.471718 974.359886,547.204385 974.117219,547.811051 C973.874553,548.417718 973.536219,548.879718 973.102219,549.197051 C972.668219,549.514385 972.166553,549.673051 971.597219,549.673051 Z\",\"id\":\"60\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":28}),React.createElement(\"path\",{\"d\":\"M1049.04247,550.597051 C1049.67714,550.597051 1050.24881,550.473385 1050.75747,550.226051 C1051.26614,549.978718 1051.66514,549.626385 1051.95447,549.169051 C1052.24381,548.711718 1052.38847,548.184385 1052.38847,547.587051 C1052.38847,546.999051 1052.24847,546.483385 1051.96847,546.040051 C1051.68847,545.596718 1051.29881,545.253718 1050.79947,545.011051 C1050.30014,544.768385 1049.72847,544.647051 1049.08447,544.647051 C1048.39381,544.647051 1047.78247,544.794051 1047.25047,545.088051 C1046.71847,545.382051 1046.33114,545.795051 1046.08847,546.327051 C1046.06047,546.028385 1046.04647,545.762385 1046.04647,545.529051 C1046.04647,544.222385 1046.35447,543.226051 1046.97047,542.540051 C1047.58647,541.854051 1048.43581,541.511051 1049.51847,541.511051 C1050.32114,541.511051 1050.95581,541.665051 1051.42247,541.973051 L1051.42247,541.973051 L1051.82847,541.161051 C1051.24981,540.806385 1050.47514,540.629051 1049.50447,540.629051 C1048.60847,540.629051 1047.82447,540.822718 1047.15247,541.210051 C1046.48047,541.597385 1045.95781,542.169051 1045.58447,542.925051 C1045.21114,543.681051 1045.02447,544.605051 1045.02447,545.697051 C1045.02447,547.255718 1045.36981,548.462051 1046.06047,549.316051 C1046.75114,550.170051 1047.74514,550.597051 1049.04247,550.597051 Z M1049.00047,549.743051 C1048.45914,549.743051 1047.99247,549.645051 1047.60047,549.449051 C1047.20847,549.253051 1046.91214,548.996385 1046.71147,548.679051 C1046.51081,548.361718 1046.41047,548.016385 1046.41047,547.643051 C1046.41047,547.241718 1046.51781,546.877718 1046.73247,546.551051 C1046.94714,546.224385 1047.24347,545.967718 1047.62147,545.781051 C1047.99947,545.594385 1048.43581,545.501051 1048.93047,545.501051 C1049.68647,545.501051 1050.28614,545.692385 1050.72947,546.075051 C1051.17281,546.457718 1051.39447,546.971051 1051.39447,547.615051 C1051.39447,548.259051 1051.17281,548.774718 1050.72947,549.162051 C1050.28614,549.549385 1049.70981,549.743051 1049.00047,549.743051 Z M1059.92047,550.513051 L1059.92047,547.937051 L1061.88047,547.937051 L1061.88047,547.041051 L1059.92047,547.041051 L1059.92047,544.773051 L1058.94047,544.773051 L1058.94047,547.041051 L1054.68447,547.041051 L1059.69647,540.713051 L1058.57647,540.713051 L1053.38247,547.209051 L1053.38247,547.937051 L1058.91247,547.937051 L1058.91247,550.513051 L1059.92047,550.513051 Z\",\"id\":\"64\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":29}),React.createElement(\"path\",{\"d\":\"M1088.7003,550.597051 C1089.33496,550.597051 1089.90663,550.473385 1090.4153,550.226051 C1090.92396,549.978718 1091.32296,549.626385 1091.6123,549.169051 C1091.90163,548.711718 1092.0463,548.184385 1092.0463,547.587051 C1092.0463,546.999051 1091.9063,546.483385 1091.6263,546.040051 C1091.3463,545.596718 1090.95663,545.253718 1090.4573,545.011051 C1089.95796,544.768385 1089.3863,544.647051 1088.7423,544.647051 C1088.05163,544.647051 1087.4403,544.794051 1086.9083,545.088051 C1086.3763,545.382051 1085.98896,545.795051 1085.7463,546.327051 C1085.7183,546.028385 1085.7043,545.762385 1085.7043,545.529051 C1085.7043,544.222385 1086.0123,543.226051 1086.6283,542.540051 C1087.2443,541.854051 1088.09363,541.511051 1089.1763,541.511051 C1089.97896,541.511051 1090.61363,541.665051 1091.0803,541.973051 L1091.0803,541.973051 L1091.4863,541.161051 C1090.90763,540.806385 1090.13296,540.629051 1089.1623,540.629051 C1088.2663,540.629051 1087.4823,540.822718 1086.8103,541.210051 C1086.1383,541.597385 1085.61563,542.169051 1085.2423,542.925051 C1084.86896,543.681051 1084.6823,544.605051 1084.6823,545.697051 C1084.6823,547.255718 1085.02763,548.462051 1085.7183,549.316051 C1086.40896,550.170051 1087.40296,550.597051 1088.7003,550.597051 Z M1088.6583,549.743051 C1088.11696,549.743051 1087.6503,549.645051 1087.2583,549.449051 C1086.8663,549.253051 1086.56996,548.996385 1086.3693,548.679051 C1086.16863,548.361718 1086.0683,548.016385 1086.0683,547.643051 C1086.0683,547.241718 1086.17563,546.877718 1086.3903,546.551051 C1086.60496,546.224385 1086.9013,545.967718 1087.2793,545.781051 C1087.6573,545.594385 1088.09363,545.501051 1088.5883,545.501051 C1089.3443,545.501051 1089.94396,545.692385 1090.3873,546.075051 C1090.83063,546.457718 1091.0523,546.971051 1091.0523,547.615051 C1091.0523,548.259051 1090.83063,548.774718 1090.3873,549.162051 C1089.94396,549.549385 1089.36763,549.743051 1088.6583,549.743051 Z M1097.2263,550.597051 C1097.86096,550.597051 1098.43263,550.473385 1098.9413,550.226051 C1099.44996,549.978718 1099.84896,549.626385 1100.1383,549.169051 C1100.42763,548.711718 1100.5723,548.184385 1100.5723,547.587051 C1100.5723,546.999051 1100.4323,546.483385 1100.1523,546.040051 C1099.8723,545.596718 1099.48263,545.253718 1098.9833,545.011051 C1098.48396,544.768385 1097.9123,544.647051 1097.2683,544.647051 C1096.57763,544.647051 1095.9663,544.794051 1095.4343,545.088051 C1094.9023,545.382051 1094.51496,545.795051 1094.2723,546.327051 C1094.2443,546.028385 1094.2303,545.762385 1094.2303,545.529051 C1094.2303,544.222385 1094.5383,543.226051 1095.1543,542.540051 C1095.7703,541.854051 1096.61963,541.511051 1097.7023,541.511051 C1098.50496,541.511051 1099.13963,541.665051 1099.6063,541.973051 L1099.6063,541.973051 L1100.0123,541.161051 C1099.43363,540.806385 1098.65896,540.629051 1097.6883,540.629051 C1096.7923,540.629051 1096.0083,540.822718 1095.3363,541.210051 C1094.6643,541.597385 1094.14163,542.169051 1093.7683,542.925051 C1093.39496,543.681051 1093.2083,544.605051 1093.2083,545.697051 C1093.2083,547.255718 1093.55363,548.462051 1094.2443,549.316051 C1094.93496,550.170051 1095.92896,550.597051 1097.2263,550.597051 Z M1097.1843,549.743051 C1096.64296,549.743051 1096.1763,549.645051 1095.7843,549.449051 C1095.3923,549.253051 1095.09596,548.996385 1094.8953,548.679051 C1094.69463,548.361718 1094.5943,548.016385 1094.5943,547.643051 C1094.5943,547.241718 1094.70163,546.877718 1094.9163,546.551051 C1095.13096,546.224385 1095.4273,545.967718 1095.8053,545.781051 C1096.1833,545.594385 1096.61963,545.501051 1097.1143,545.501051 C1097.8703,545.501051 1098.46996,545.692385 1098.9133,546.075051 C1099.35663,546.457718 1099.5783,546.971051 1099.5783,547.615051 C1099.5783,548.259051 1099.35663,548.774718 1098.9133,549.162051 C1098.46996,549.549385 1097.89363,549.743051 1097.1843,549.743051 Z\",\"id\":\"66\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":30})])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph3Desktop.defaultProps = {\"width\":\"1105px\",\"height\":\"606px\",\"viewBox\":\"0 0 1105 606\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph3Desktop;\n\nSchoolYearsGapsInAttainmentGraph3Desktop.default = SchoolYearsGapsInAttainmentGraph3Desktop;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","var React = require('react');\n\nfunction SchoolYearsTypeAndQualityOfSchoolingDesktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 7\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Type-and-quality-of-schooling\",\"transform\":\"translate(-162.000000, -2520.000000)\"},React.createElement(\"g\",{\"id\":\"Group-7\",\"transform\":\"translate(165.000000, 2520.000000)\"},[React.createElement(\"path\",{\"d\":\"M1085.95859,81.6476189 C1086.17692,80.5405823 1087.24987,79.8204355 1088.35509,80.0391261 C1089.41007,80.2478762 1090.11311,81.2365982 1089.98495,82.2888857 L1089.96094,82.4395675 L1078.40425,141.037128 C1078.2589,141.774146 1077.72298,142.367284 1077.01551,142.590123 L1076.86137,142.632124 L1067.58884,144.773033 L1045.69533,174.995037 C1045.49673,175.269174 1045.23376,175.488826 1044.93077,175.63525 L1044.77605,175.702272 L1035.16344,179.401261 L1023.91363,190.660859 C1023.66955,190.905118 1023.36831,191.082698 1023.03865,191.178202 L1022.87159,191.219042 L1011.80924,193.432967 L991.40099,210.075491 C990.779442,210.582316 989.924252,210.674584 989.214173,210.325076 L989.064372,210.243409 L979.004423,204.202698 L968.566278,216.738866 C968.064604,217.341324 967.266911,217.599184 966.51546,217.414953 L966.355268,217.368672 L958.961912,214.901937 L949.643765,239.291037 C949.048004,240.850346 946.960753,241.058375 946.053837,239.713449 L945.964338,239.568771 L934.958018,220.131519 L928.830344,235.465073 C928.541074,236.188788 927.868534,236.679891 927.102179,236.742155 L926.936629,236.748862 L915.289818,236.747879 L903.505573,245.592996 C903.203034,245.82007 902.844498,245.957712 902.470481,245.992404 L902.282369,246.001108 L895.333999,246.00053 L873.5662,264.781553 C872.970906,265.29512 872.138719,265.417605 871.426407,265.109281 L871.275734,265.036603 L849.702633,253.522587 L841.507623,264.460045 C841.209685,264.857592 840.778717,265.130965 840.297184,265.232657 L840.114401,265.262651 L827.847717,266.706363 L819.125644,277.617845 C818.484517,278.419852 817.356569,278.614164 816.490254,278.09674 L816.34842,278.003894 L806.092754,270.673245 L796.120964,270.673245 L786.715529,281.534712 C785.895278,282.481863 784.438333,282.465099 783.635509,281.537048 L783.530209,281.404852 L782.55896,280.089695 L781.620248,278.839301 L781.012677,278.041785 L780.128916,276.899779 L779.278562,275.823077 L778.730379,275.141654 L777.936427,274.174239 L777.426147,273.565862 L776.931198,272.986809 L776.451675,272.437139 L775.987677,271.916913 C775.911642,271.832665 775.836259,271.749647 775.761529,271.667859 L775.320997,271.19191 L774.89623,270.745555 L774.487324,270.328852 C774.420501,270.261876 774.354342,270.196138 774.28885,270.13164 L773.903919,269.75953 C773.841103,269.699993 773.778958,269.641699 773.717486,269.584647 L773.356746,269.257264 L773.012255,268.959775 L772.684108,268.692239 C772.364167,268.439699 772.068887,268.232179 771.798705,268.069949 C770.190136,267.104087 767.866638,267.562012 764.665461,269.820912 L764.268761,270.107277 L753.655084,283.764039 C753.131888,284.437221 752.251126,284.709422 751.447951,284.462561 L751.288479,284.406233 L740.446413,280.065855 L720.035709,287.361116 L708.801367,298.603733 C708.461373,298.94398 708.013866,299.151672 707.538878,299.193626 L707.359626,299.201524 L699.309849,299.201486 L687.374586,304.427631 C686.727159,304.711091 685.983787,304.6374 685.407123,304.242722 L685.266582,304.137386 L677.467172,297.751832 L666.00835,299.185775 C665.693529,299.225157 665.374774,299.190341 665.07719,299.08523 L664.901381,299.013759 L656.040624,294.919951 L636.225557,311.07918 C635.459654,311.703714 634.3656,311.684818 633.623216,311.05714 L633.495996,310.940061 L622.801325,300.23739 L613.43398,312.291798 C613.145461,312.663028 612.739113,312.921702 612.284991,313.027125 L612.112592,313.059395 L590.540115,316.143477 C590.245649,316.185575 589.946289,316.162563 589.66287,316.076941 L589.494898,316.018074 L578.88955,311.772301 L569.747795,317.403354 C569.248259,317.71099 568.64342,317.787 568.087556,317.618134 L567.92242,317.560115 L557.554795,313.409929 L549.255083,321.02469 C548.925968,321.326603 548.508499,321.510872 548.067589,321.552222 L547.877381,321.56112 L538.016125,321.560272 L527.839446,333.200388 C527.245093,333.880155 526.281491,334.083517 525.470353,333.718689 L525.320179,333.643603 L504.709511,322.263134 L495.701937,337.520497 C495.025059,338.666838 493.465563,338.858427 492.530727,337.951921 L492.417235,337.832878 L482.166147,326.20754 L461.346426,343.452159 C461.02645,343.717164 460.634528,343.877148 460.223668,343.913004 L460.04658,343.920715 L451.17068,343.920079 L439.189776,348.416957 C438.949758,348.507031 438.695494,348.550788 438.440352,348.546559 L438.249039,348.534364 L418.040512,346.287131 L417.859937,346.377405 C410.450196,350.034526 404.295901,352.497693 399.369943,353.766091 L398.897071,353.885109 L398.225068,354.044835 L397.518444,354.202172 L396.777174,354.357128 L396.001233,354.50971 L395.190596,354.659928 L394.345236,354.80779 L393.012035,355.025183 L392.079758,355.16719 L391.112669,355.306871 L390.110742,355.444233 L389.073952,355.579284 L388.002274,355.712034 L386.895682,355.84249 L385.170275,356.033891 L383.366167,356.220179 L381.483273,356.401382 L378.850042,356.635123 L376.782978,356.804569 L374.63684,356.969023 L374.186872,357.001695 L365.978318,359.989333 C365.510739,360.159489 364.999374,360.151951 364.539872,359.972225 L364.370177,359.896767 L353.099959,354.257671 L344.84009,359.76946 C344.553004,359.960994 344.222936,360.075953 343.881065,360.10489 L343.70929,360.112146 L332.585222,360.111452 L298.310391,375.356733 C297.913714,375.533165 297.472769,375.577627 297.051635,375.486449 L296.872549,375.439058 C290.736219,373.51286 285.867137,372.781953 282.314563,373.205194 C280.702387,373.397263 278.718057,373.9013 276.37038,374.71809 L275.526715,375.019356 C275.240474,375.124108 274.949219,375.23319 274.652963,375.346603 L273.749208,375.699838 L272.815537,376.079068 L271.852037,376.484302 C271.525908,376.623715 271.194822,376.767463 270.858792,376.915547 L269.83589,377.37281 C269.66294,377.451189 269.488757,377.530653 269.313344,377.611201 L268.246117,378.107507 C267.885462,378.277282 267.5199,378.451396 267.149446,378.629851 L266.023419,379.17824 C265.549242,379.411619 265.00316,379.451615 264.500133,379.289807 L263.530825,378.983602 C263.213824,378.885355 262.902937,378.790927 262.598195,378.700312 L261.702435,378.439899 C261.556225,378.398401 261.41156,378.357855 261.268442,378.318259 L260.42835,378.092092 L259.625609,377.888709 L258.860413,377.708072 C256.994514,377.284883 255.482397,377.074598 254.337598,377.074598 C252.247737,377.074598 249.406881,377.785342 245.864009,379.23578 C245.469124,379.397444 245.035086,379.430473 244.622867,379.332834 L244.447716,379.282983 L233.903567,375.765463 L225.513422,382.063629 C224.836763,382.571502 223.923657,382.60536 223.215471,382.165204 L223.067015,382.063629 L212.369928,374.034868 L204.34909,384.739247 C203.998845,385.206589 203.467556,385.499075 202.891699,385.548392 L202.717741,385.555823 L190.580287,385.555476 L178.439075,387.833951 C178.303139,387.859458 178.165144,387.871018 178.027221,387.868562 L177.820658,387.854357 L159.357377,385.637205 L148.451242,393.642013 C147.978683,393.988815 147.382655,394.113747 146.815415,393.991097 L146.646258,393.946848 L127.624504,388.08905 L127.488136,388.194893 C127.16443,388.442514 126.843854,388.685038 126.526391,388.922462 L125.583325,389.619429 L124.65884,390.28578 C123.743612,390.936817 122.85611,391.541905 121.995894,392.100972 L121.144758,392.644697 C117.074738,395.198527 113.638748,396.676705 110.787277,397.07115 L110.49438,397.108089 C106.29785,397.585323 100.799397,395.959162 93.8822676,392.30992 L93.1867955,391.938447 L73.2814647,400.054447 C72.7767694,400.260217 72.2134135,400.254308 71.7162663,400.043167 L71.553174,399.965195 L61.1265278,394.400508 L50.6046473,402.123238 C50.4493555,402.237204 50.2790043,402.328384 50.0987734,402.394308 L49.915441,402.451724 L17.5567247,410.932949 C16.4668434,411.218608 15.352129,410.565201 15.0669404,409.473526 C14.7947149,408.431472 15.3767181,407.366754 16.3781042,407.023666 L16.5239653,406.979643 L48.5049775,398.59725 L59.7501597,390.345677 C60.3335532,389.917536 61.0953445,389.833265 61.7529378,390.113102 L61.9150018,390.190659 L72.6282024,395.908393 L92.5454274,387.788345 C93.0593629,387.578808 93.6336356,387.588933 94.1366777,387.810901 L94.3015397,387.892725 C95.4371877,388.521713 96.5282155,389.092966 97.5739994,389.606915 L98.4592909,390.033418 C103.41299,392.370857 107.295099,393.359253 110.034152,393.047765 C111.789749,392.848116 114.011127,392.014884 116.673582,390.544037 L117.378125,390.145872 L118.102582,389.718762 C118.347376,389.571567 118.595472,389.419545 118.846855,389.262694 L119.610846,388.77765 C119.739816,388.694393 119.869603,388.609929 120.000206,388.524257 L120.793593,387.99572 C120.92745,387.905213 121.062118,387.813497 121.197596,387.720571 L122.020159,387.148506 L122.862051,386.547401 C123.003972,386.444796 123.146694,386.34098 123.290215,386.235954 L124.160918,385.59126 L125.050707,384.917488 C125.350473,384.68805 125.653404,384.453762 125.959483,384.214622 C126.436933,383.84159 127.05234,383.702179 127.638623,383.827205 L127.813467,383.872677 L146.865357,389.738937 L157.596754,381.864451 C157.961794,381.596556 158.403801,381.458937 158.852606,381.47003 L159.045163,381.483943 L177.995454,383.7595 L190.015017,381.504349 C190.097585,381.488856 190.18099,381.478494 190.264754,381.473307 L190.390611,381.469415 L201.697451,381.469068 L210.331739,369.949663 C210.973865,369.092856 212.159031,368.885022 213.048439,369.446185 L213.186292,369.541198 L224.289771,377.875071 L232.312362,371.85426 C232.798963,371.489037 233.419963,371.362133 234.00563,371.501123 L234.1801,371.550824 L245.02787,375.169868 L245.346346,375.045181 C248.715588,373.74615 251.5832,373.055711 253.981387,372.992901 L254.337598,372.988189 C256.706056,372.988189 259.962171,373.631304 264.168296,374.905477 L264.961251,375.149436 L265.410301,374.933155 C266.031489,374.634032 266.640319,374.346262 267.236848,374.06985 L268.413522,373.532171 C273.828292,371.093687 278.174887,369.644887 281.500259,369.189963 L281.832718,369.147387 C285.778865,368.677257 290.762244,369.356774 296.823181,371.152255 L297.351973,371.311277 L331.324768,356.201561 C331.533281,356.108819 331.755473,356.051937 331.982022,356.032894 L332.152606,356.025737 L343.092472,356.025043 L351.823839,350.200259 C352.381878,349.827955 353.083189,349.756114 353.700211,349.99892 L353.866229,350.072951 L365.408393,355.848306 L373.06012,353.064468 C373.178007,353.021568 373.299466,352.989696 373.422939,352.969186 L373.609466,352.946982 L375.741681,352.787235 L377.795175,352.622765 L379.76986,352.453601 L381.042492,352.338231 L382.280035,352.220795 L383.482463,352.101302 L385.220207,351.918223 L386.334735,351.793624 L387.414058,351.666996 L388.458151,351.538349 L389.466988,351.407691 L390.440544,351.275029 L391.378793,351.140373 L392.719911,350.934668 L393.569781,350.795062 L394.384255,350.653491 L395.163308,350.509962 L395.906913,350.364485 L396.615045,350.217068 L397.287679,350.067719 L397.924788,349.916446 C400.408107,349.306053 403.281487,348.341868 406.540457,347.023756 L407.706686,346.543844 C408.494835,346.214106 409.304303,345.864771 410.135032,345.49584 L411.397062,344.927745 C412.036042,344.636348 412.686965,344.333928 413.349806,344.020482 L414.691371,343.378892 L416.064674,342.707902 C416.2962,342.59362 416.529046,342.478113 416.763213,342.361381 C417.055548,342.215652 417.377649,342.142774 417.702274,342.14759 L417.897134,342.159842 L438.214594,344.418621 L450.085559,339.964187 C450.257207,339.899771 450.436474,339.858921 450.618486,339.842522 L450.801233,339.834306 L459.312727,339.83367 L481.089657,321.79837 C481.893329,321.132766 483.059154,321.185961 483.799193,321.896081 L483.918455,322.020507 L493.617846,333.020605 L502.206231,318.477785 C502.739417,317.574797 503.861439,317.230182 504.800128,317.655047 L504.946705,317.728556 L525.8515,329.270303 L535.5566,318.171771 C535.905198,317.773076 536.393101,317.527413 536.915774,317.482268 L537.091143,317.474711 L547.083243,317.473863 L555.745028,309.529915 C556.281443,309.037834 557.03509,308.871821 557.722415,309.083748 L557.879722,309.139387 L568.483273,313.384389 L577.626825,307.754107 C578.126361,307.446471 578.7312,307.370461 579.287064,307.539327 L579.4522,307.597346 L590.501376,312.02055 L610.720334,309.130438 L621.000995,295.903211 C621.720016,294.978066 623.056219,294.854717 623.930682,295.600454 L624.052348,295.712907 L635.077122,306.746018 L654.451949,290.947665 C655.009356,290.493143 655.760342,290.368622 656.428733,290.609032 L656.59395,290.676758 L666.080749,295.057867 L677.829904,293.588824 C678.322153,293.527247 678.817684,293.647628 679.225193,293.923618 L679.373705,294.034356 L686.882084,300.182224 L698.067732,295.286153 C698.273852,295.195908 698.493094,295.140591 698.716515,295.122074 L698.884724,295.115116 L706.514587,295.115077 L717.474569,284.147599 C717.645433,283.976609 717.844907,283.837715 718.063449,283.736964 L718.230783,283.668645 L739.80326,275.95844 C740.212827,275.812057 740.656751,275.801127 741.070497,275.92444 L741.245781,275.985504 L751.376931,280.041337 L761.222099,267.375452 C761.296347,267.279919 761.378851,267.191281 761.468593,267.110538 L761.608507,266.995468 C766.308101,263.468143 770.469104,262.507195 773.896303,264.565049 C774.619211,264.999118 775.4262,265.623025 776.321227,266.439228 L776.776096,266.863365 L777.245749,267.31962 C777.325262,267.398343 777.405396,267.478407 777.486153,267.559813 L777.978186,268.064373 L778.485278,268.601221 L779.007538,269.170426 L779.545077,269.772056 L780.098004,270.406179 L780.666429,271.072863 L781.250462,271.772177 C781.349108,271.891453 781.448408,272.01209 781.548366,272.134092 L782.156019,272.882479 L782.779554,273.663666 L783.419083,274.477723 L784.074716,275.324716 L785.088599,276.657112 L785.297539,276.934644 L793.649532,267.291717 C793.998229,266.889074 794.488466,266.640656 795.014064,266.594999 L795.190427,266.587356 L806.747112,266.587356 C807.111273,266.587356 807.467645,266.684978 807.779812,266.868542 L807.932043,266.967432 L817.146682,273.554163 L825.186404,263.498379 C825.484315,263.125713 825.901793,262.870808 826.364908,262.774728 L826.540571,262.746223 L838.769055,261.306174 L847.490272,249.670461 C848.058408,248.912381 849.065852,248.651011 849.922222,249.017747 L850.080877,249.093902 L871.961438,260.771876 L893.246703,242.409767 C893.570646,242.130298 893.972804,241.960864 894.395613,241.922872 L894.577913,241.914699 L901.603467,241.914121 L913.386296,233.070565 C913.688835,232.843491 914.047371,232.705849 914.421388,232.671157 L914.609499,232.662453 L925.555345,232.66147 L932.747371,214.670729 C933.361671,213.133834 935.42769,212.94397 936.326681,214.278621 L936.415409,214.422133 L947.378643,233.784211 L955.849351,211.615785 C956.220023,210.645612 957.252712,210.116504 958.243071,210.362245 L958.398989,210.407534 L966.323718,213.050794 L976.99001,200.243053 C977.595793,199.515572 978.614464,199.305989 979.450762,199.715301 L979.605285,199.799325 L989.934941,206.001739 L1009.62738,189.943977 C1009.83344,189.775957 1010.06976,189.650286 1010.3228,189.573364 L1010.5155,189.524912 L1021.46587,187.33298 L1032.58683,176.204726 C1032.7483,176.043137 1032.9354,175.910128 1033.14014,175.810904 L1033.29688,175.742902 L1042.74759,172.104978 L1064.73632,141.754213 C1064.98938,141.404904 1065.34535,141.146143 1065.75185,141.012673 L1065.929,140.963244 L1074.65691,138.946836 L1085.95859,81.6476189 Z\",\"id\":\"Path-2\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M17,409.057737 L49.3611511,400.572748 L60.918705,392.08776 L72.476259,398.258661 L93.2798561,389.773672 C100.59509,393.826765 106.24545,395.626611 110.230935,395.17321 C114.21642,394.719809 119.86678,391.634359 127.182014,385.916859 L147.215108,392.08776 L158.772662,383.602771 L178.035252,385.916859 L190.363309,383.602771 L202.691367,383.602771 L211.93741,371.26097 L224.265468,380.517321 L233.511511,373.575058 L245.069065,377.431871 C248.835971,375.889145 251.917986,375.117783 254.315108,375.117783 C256.71223,375.117783 260.307914,375.889145 265.102158,377.431871 C272.517151,373.781039 278.16751,371.724072 282.053237,371.26097 C285.938964,370.797868 291.075655,371.56923 297.463309,373.575058 L332.135971,358.147806 L343.693525,358.147806 L352.939568,351.976905 L365.267626,358.147806 L373.743165,355.062356 C385.190204,354.23246 393.408909,353.203977 398.399281,351.976905 C403.389652,350.749834 409.810515,348.178625 417.661871,344.263279 L438.465468,346.577367 L450.793525,341.949192 L460.039568,341.949192 L482.384173,323.43649 L493.941727,336.549654 L503.958273,319.579677 L526.302878,331.921478 L537.089928,319.579677 L547.876978,319.579677 L557.123022,311.094688 L568.680576,315.722864 L578.697122,309.551963 L590.254676,314.180139 L611.828777,311.094688 L622.615827,297.210162 L634.943885,309.551963 L655.747482,292.581986 L665.764029,297.210162 L678.092086,295.667436 L686.567626,302.6097 L698.895683,297.210162 L707.371223,297.210162 L718.928777,285.639723 L740.502878,277.926097 L752.060432,282.554273 L762.847482,268.669746 C766.956835,265.584296 770.295683,264.812933 772.864029,266.355658 C775.432374,267.898383 779.541727,272.526559 785.192086,280.240185 L795.208633,268.669746 L806.766187,268.669746 L817.553237,276.383372 L826.799281,264.812933 L839.897842,263.270208 L849.143885,250.928406 L872.258993,263.270208 L894.603597,243.986143 L902.308633,243.986143 L914.636691,234.729792 L926.964748,234.729792 L934.669784,215.445727 L947.768345,238.586605 L957.784892,212.360277 L967.030935,215.445727 L978.588489,201.561201 L990.146043,208.503464 L1010.94964,191.533487 L1022.50719,189.2194 L1034.06475,177.648961 L1044.08129,173.792148 L1066.4259,142.937644 L1076.44245,140.623557 L1088,82 L1088,416 L17,416 L17,409.057737 Z\",\"id\":\"Path-2-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#FFBA08\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M5.51169506,437 C6.38492636,437 7.16382712,436.758427 7.84839734,436.275281 C8.53296756,435.792135 9.06930407,435.098315 9.45740687,434.19382 C9.84550967,433.289326 10.0395611,432.224719 10.0395611,431 C10.0395611,429.775281 9.84550967,428.710674 9.45740687,427.80618 C9.06930407,426.901685 8.53296756,426.207865 7.84839734,425.724719 C7.16382712,425.241573 6.38492636,425 5.51169506,425 C4.63846376,425 3.859563,425.241573 3.17499278,425.724719 C2.49042256,426.207865 1.95678121,426.901685 1.57406873,427.80618 C1.19135624,428.710674 1,429.775281 1,431 C1,432.224719 1.19135624,433.289326 1.57406873,434.19382 C1.95678121,435.098315 2.49042256,435.792135 3.17499278,436.275281 C3.859563,436.758427 4.63846376,437 5.51169506,437 Z M5.51169506,435.88764 C4.85407643,435.88764 4.27461738,435.696629 3.77331793,435.314607 C3.27201848,434.932584 2.88122052,434.376404 2.60092405,433.646067 C2.32062759,432.91573 2.18047935,432.033708 2.18047935,431 C2.18047935,429.966292 2.32062759,429.08427 2.60092405,428.353933 C2.88122052,427.623596 3.27201848,427.067416 3.77331793,426.685393 C4.27461738,426.303371 4.85407643,426.11236 5.51169506,426.11236 C6.1693137,426.11236 6.74877274,426.303371 7.25007219,426.685393 C7.75137164,427.067416 8.1421696,427.623596 8.42246607,428.353933 C8.70276254,429.08427 8.84291077,429.966292 8.84291077,431 C8.84291077,432.033708 8.70276254,432.91573 8.42246607,433.646067 C8.1421696,434.376404 7.75137164,434.932584 7.25007219,435.314607 C6.74877274,435.696629 6.1693137,435.88764 5.51169506,435.88764 Z M13.6941958,432.106039 C14.3545096,432.106039 14.8921937,431.850421 15.3072481,431.339185 C15.7223024,430.827949 15.9298296,430.149579 15.9298296,429.304073 C15.9298296,428.458567 15.7223024,427.780197 15.3072481,427.268961 C14.8921937,426.757725 14.3545096,426.502107 13.6941958,426.502107 C13.0244489,426.502107 12.4844066,426.760183 12.0740687,427.276334 C11.6637309,427.792486 11.4585619,428.468399 11.4585619,429.304073 C11.4585619,430.139747 11.6637309,430.81566 12.0740687,431.331812 C12.4844066,431.847963 13.0244489,432.106039 13.6941958,432.106039 Z M13.7649437,436.898876 L20.5284435,426.575843 L19.6936183,426.575843 L12.9301184,436.898876 L13.7649437,436.898876 Z M13.6941958,431.442416 C13.2225431,431.442416 12.8499374,431.250702 12.5763789,430.867275 C12.3028203,430.483848 12.166041,429.962781 12.166041,429.304073 C12.166041,428.645365 12.3028203,428.124298 12.5763789,427.740871 C12.8499374,427.357444 13.2225431,427.16573 13.6941958,427.16573 C14.1564154,427.16573 14.5266628,427.354986 14.8049379,427.733497 C15.083213,428.112008 15.2223506,428.635534 15.2223506,429.304073 C15.2223506,429.972612 15.083213,430.496138 14.8049379,430.874649 C14.5266628,431.25316 14.1564154,431.442416 13.6941958,431.442416 Z M19.7643662,436.972612 C20.434113,436.972612 20.9741554,436.714537 21.3844932,436.198385 C21.7948311,435.682233 22,435.00632 22,434.170646 C22,433.334972 21.7948311,432.659059 21.3844932,432.142907 C20.9741554,431.626756 20.434113,431.36868 19.7643662,431.36868 C19.1040524,431.36868 18.5663683,431.626756 18.1513139,432.142907 C17.7362595,432.659059 17.5287323,433.334972 17.5287323,434.170646 C17.5287323,435.00632 17.7362595,435.682233 18.1513139,436.198385 C18.5663683,436.714537 19.1040524,436.972612 19.7643662,436.972612 Z M19.7643662,436.308989 C19.3021465,436.308989 18.9318991,436.119733 18.653624,435.741222 C18.3753489,435.362711 18.2362114,434.839185 18.2362114,434.170646 C18.2362114,433.502107 18.3753489,432.978581 18.653624,432.60007 C18.9318991,432.221559 19.3021465,432.032303 19.7643662,432.032303 C20.2360189,432.032303 20.6086245,432.224017 20.8821831,432.607444 C21.1557416,432.990871 21.2925209,433.511938 21.2925209,434.170646 C21.2925209,434.829354 21.1557416,435.350421 20.8821831,435.733848 C20.6086245,436.117275 20.2360189,436.308989 19.7643662,436.308989 Z\",\"id\":\"0%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M8.35093719,330.898876 L8.35093719,329.820225 L2.07142387,329.820225 L5.95330483,325.876404 C6.68183711,325.146067 7.17658665,324.5 7.43755344,323.938202 C7.69852022,323.376404 7.82900362,322.792135 7.82900362,322.185393 C7.82900362,321.196629 7.48920311,320.418539 6.8096021,319.851124 C6.1300011,319.283708 5.20846213,319 4.0449852,319 C3.17509591,319 2.39491395,319.146067 1.70443933,319.438202 C1.0139647,319.730337 0.445818262,320.146067 0,320.685393 L0,320.685393 L0.831831634,321.426966 C1.57123753,320.550562 2.60966787,320.11236 3.94712266,320.11236 C4.80613833,320.11236 5.46671051,320.30618 5.9288392,320.69382 C6.39096788,321.081461 6.62203223,321.623596 6.62203223,322.320225 C6.62203223,322.769663 6.51601447,323.216292 6.30397895,323.660112 C6.09194344,324.103933 5.68690124,324.629213 5.08885235,325.235955 L5.08885235,325.235955 L0.342518908,330.039326 L0.342518908,330.898876 L8.35093719,330.898876 Z M14.3694837,331 C15.2502466,331 16.0358654,330.758427 16.72634,330.275281 C17.4168146,329.792135 17.957777,329.098315 18.3492272,328.19382 C18.7406774,327.289326 18.9364025,326.224719 18.9364025,325 C18.9364025,323.775281 18.7406774,322.710674 18.3492272,321.80618 C17.957777,320.901685 17.4168146,320.207865 16.72634,319.724719 C16.0358654,319.241573 15.2502466,319 14.3694837,319 C13.4887208,319 12.703102,319.241573 12.0126274,319.724719 C11.3221528,320.207865 10.7839088,320.901685 10.3978954,321.80618 C10.0118821,322.710674 9.81887537,323.775281 9.81887537,325 C9.81887537,326.224719 10.0118821,327.289326 10.3978954,328.19382 C10.7839088,329.098315 11.3221528,329.792135 12.0126274,330.275281 C12.703102,330.758427 13.4887208,331 14.3694837,331 Z M14.3694837,329.88764 C13.7061931,329.88764 13.1217363,329.696629 12.6161131,329.314607 C12.11049,328.932584 11.7163214,328.376404 11.4336074,327.646067 C11.1508933,326.91573 11.0095363,326.033708 11.0095363,325 C11.0095363,323.966292 11.1508933,323.08427 11.4336074,322.353933 C11.7163214,321.623596 12.11049,321.067416 12.6161131,320.685393 C13.1217363,320.303371 13.7061931,320.11236 14.3694837,320.11236 C15.0327743,320.11236 15.6172312,320.303371 16.1228543,320.685393 C16.6284775,321.067416 17.0226461,321.623596 17.3053601,322.353933 C17.5880741,323.08427 17.7294311,323.966292 17.7294311,325 C17.7294311,326.033708 17.5880741,326.91573 17.3053601,327.646067 C17.0226461,328.376404 16.6284775,328.932584 16.1228543,329.314607 C15.6172312,329.696629 15.0327743,329.88764 14.3694837,329.88764 Z M22.6225584,326.106039 C23.2885674,326.106039 23.830889,325.850421 24.2495232,325.339185 C24.6681574,324.827949 24.8774745,324.149579 24.8774745,323.304073 C24.8774745,322.458567 24.6681574,321.780197 24.2495232,321.268961 C23.830889,320.757725 23.2885674,320.502107 22.6225584,320.502107 C21.947035,320.502107 21.4023348,320.760183 20.9884577,321.276334 C20.5745807,321.792486 20.3676422,322.468399 20.3676422,323.304073 C20.3676422,324.139747 20.5745807,324.81566 20.9884577,325.331812 C21.4023348,325.847963 21.947035,326.106039 22.6225584,326.106039 Z M22.6939165,330.898876 L29.5157514,320.575843 L28.6737257,320.575843 L21.8518908,330.898876 L22.6939165,330.898876 Z M22.6225584,325.442416 C22.1468377,325.442416 21.7710183,325.250702 21.4951003,324.867275 C21.2191823,324.483848 21.0812233,323.962781 21.0812233,323.304073 C21.0812233,322.645365 21.2191823,322.124298 21.4951003,321.740871 C21.7710183,321.357444 22.1468377,321.16573 22.6225584,321.16573 C23.0887647,321.16573 23.4622054,321.354986 23.7428806,321.733497 C24.0235558,322.112008 24.1638935,322.635534 24.1638935,323.304073 C24.1638935,323.972612 24.0235558,324.496138 23.7428806,324.874649 C23.4622054,325.25316 23.0887647,325.442416 22.6225584,325.442416 Z M28.7450839,330.972612 C29.4206073,330.972612 29.9653075,330.714537 30.3791845,330.198385 C30.7930615,329.682233 31,329.00632 31,328.170646 C31,327.334972 30.7930615,326.659059 30.3791845,326.142907 C29.9653075,325.626756 29.4206073,325.36868 28.7450839,325.36868 C28.0790749,325.36868 27.5367533,325.626756 27.118119,326.142907 C26.6994848,326.659059 26.4901677,327.334972 26.4901677,328.170646 C26.4901677,329.00632 26.6994848,329.682233 27.118119,330.198385 C27.5367533,330.714537 28.0790749,330.972612 28.7450839,330.972612 Z M28.7450839,330.308989 C28.2788776,330.308989 27.9054368,330.119733 27.6247616,329.741222 C27.3440864,329.362711 27.2037488,328.839185 27.2037488,328.170646 C27.2037488,327.502107 27.3440864,326.978581 27.6247616,326.60007 C27.9054368,326.221559 28.2788776,326.032303 28.7450839,326.032303 C29.2208046,326.032303 29.5966239,326.224017 29.8725419,326.607444 C30.1484599,326.990871 30.2864189,327.511938 30.2864189,328.170646 C30.2864189,328.829354 30.1484599,329.350421 29.8725419,329.733848 C29.5966239,330.117275 29.2208046,330.308989 28.7450839,330.308989 Z\",\"id\":\"20%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M8.57953465,245.898876 L8.57953465,242.797753 L10.851772,242.797753 L10.851772,241.719101 L8.57953465,241.719101 L8.57953465,238.988764 L7.44341596,238.988764 L7.44341596,241.719101 L2.50941482,241.719101 L8.31985038,234.101124 L7.02142902,234.101124 L1,241.921348 L1,242.797753 L7.41095543,242.797753 L7.41095543,245.898876 L8.57953465,245.898876 Z M16.4512141,246 C17.3276485,246 18.1094064,245.758427 18.7964877,245.275281 C19.483569,244.792135 20.0218728,244.098315 20.4113992,243.19382 C20.8009256,242.289326 20.9956888,241.224719 20.9956888,240 C20.9956888,238.775281 20.8009256,237.710674 20.4113992,236.80618 C20.0218728,235.901685 19.483569,235.207865 18.7964877,234.724719 C18.1094064,234.241573 17.3276485,234 16.4512141,234 C15.5747797,234 14.7930218,234.241573 14.1059405,234.724719 C13.4188592,235.207865 12.8832604,235.901685 12.4991441,236.80618 C12.1150278,237.710674 11.9229696,238.775281 11.9229696,240 C11.9229696,241.224719 12.1150278,242.289326 12.4991441,243.19382 C12.8832604,244.098315 13.4188592,244.792135 14.1059405,245.275281 C14.7930218,245.758427 15.5747797,246 16.4512141,246 Z M16.4512141,244.88764 C15.7911832,244.88764 15.2095987,244.696629 14.7064604,244.314607 C14.2033221,243.932584 13.8110907,243.376404 13.5297661,242.646067 C13.2484414,241.91573 13.1077791,241.033708 13.1077791,240 C13.1077791,238.966292 13.2484414,238.08427 13.5297661,237.353933 C13.8110907,236.623596 14.2033221,236.067416 14.7064604,235.685393 C15.2095987,235.303371 15.7911832,235.11236 16.4512141,235.11236 C17.111245,235.11236 17.6928295,235.303371 18.1959678,235.685393 C18.6991061,236.067416 19.0913375,236.623596 19.3726621,237.353933 C19.6539868,238.08427 19.7946491,238.966292 19.7946491,240 C19.7946491,241.033708 19.6539868,241.91573 19.3726621,242.646067 C19.0913375,243.376404 18.6991061,243.932584 18.1959678,244.314607 C17.6928295,244.696629 17.111245,244.88764 16.4512141,244.88764 Z M24.6637292,241.106039 C25.3264651,241.106039 25.8661214,240.850421 26.2826983,240.339185 C26.6992751,239.827949 26.9075636,239.149579 26.9075636,238.304073 C26.9075636,237.458567 26.6992751,236.780197 26.2826983,236.268961 C25.8661214,235.757725 25.3264651,235.502107 24.6637292,235.502107 C23.9915256,235.502107 23.4495023,235.760183 23.0376593,236.276334 C22.6258163,236.792486 22.4198948,237.468399 22.4198948,238.304073 C22.4198948,239.139747 22.6258163,239.81566 23.0376593,240.331812 C23.4495023,240.847963 23.9915256,241.106039 24.6637292,241.106039 Z M24.7347366,245.898876 L31.5230457,235.575843 L30.6851582,235.575843 L23.896849,245.898876 L24.7347366,245.898876 Z M24.6637292,240.442416 C24.1903464,240.442416 23.816374,240.250702 23.541812,239.867275 C23.2672499,239.483848 23.1299689,238.962781 23.1299689,238.304073 C23.1299689,237.645365 23.2672499,237.124298 23.541812,236.740871 C23.816374,236.357444 24.1903464,236.16573 24.6637292,236.16573 C25.1276443,236.16573 25.4992498,236.354986 25.7785456,236.733497 C26.0578415,237.112008 26.1974894,237.635534 26.1974894,238.304073 C26.1974894,238.972612 26.0578415,239.496138 25.7785456,239.874649 C25.4992498,240.25316 25.1276443,240.442416 24.6637292,240.442416 Z M30.7561656,245.972612 C31.4283692,245.972612 31.9703924,245.714537 32.3822355,245.198385 C32.7940785,244.682233 33,244.00632 33,243.170646 C33,242.334972 32.7940785,241.659059 32.3822355,241.142907 C31.9703924,240.626756 31.4283692,240.36868 30.7561656,240.36868 C30.0934297,240.36868 29.5537733,240.626756 29.1371965,241.142907 C28.7206196,241.659059 28.5123312,242.334972 28.5123312,243.170646 C28.5123312,244.00632 28.7206196,244.682233 29.1371965,245.198385 C29.5537733,245.714537 30.0934297,245.972612 30.7561656,245.972612 Z M30.7561656,245.308989 C30.2922505,245.308989 29.920645,245.119733 29.6413491,244.741222 C29.3620533,244.362711 29.2224054,243.839185 29.2224054,243.170646 C29.2224054,242.502107 29.3620533,241.978581 29.6413491,241.60007 C29.920645,241.221559 30.2922505,241.032303 30.7561656,241.032303 C31.2295484,241.032303 31.6035208,241.224017 31.8780828,241.607444 C32.1526448,241.990871 32.2899258,242.511938 32.2899258,243.170646 C32.2899258,243.829354 32.1526448,244.350421 31.8780828,244.733848 C31.6035208,245.117275 31.2295484,245.308989 30.7561656,245.308989 Z\",\"id\":\"40%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M5.66391455,162 C6.40060721,162 7.06417229,161.851124 7.65460979,161.553371 C8.24504729,161.255618 8.70818863,160.831461 9.04403381,160.280899 C9.37987899,159.730337 9.54780159,159.095506 9.54780159,158.376404 C9.54780159,157.668539 9.38529585,157.047753 9.06028439,156.514045 C8.73527292,155.980337 8.28296529,155.567416 7.70336151,155.275281 C7.12375773,154.983146 6.46019265,154.837079 5.71266627,154.837079 C4.91097132,154.837079 4.20136295,155.014045 3.58384116,155.367978 C2.96631938,155.72191 2.51672018,156.219101 2.23504358,156.859551 C2.20254243,156.5 2.18629186,156.179775 2.18629186,155.898876 C2.18629186,154.325843 2.54380447,153.126404 3.2588297,152.300562 C3.97385492,151.474719 4.95972304,151.061798 6.21643405,151.061798 C7.14813359,151.061798 7.88482625,151.247191 8.42651202,151.617978 L8.42651202,151.617978 L8.89777865,150.640449 C8.22608829,150.213483 7.32688989,150 6.20018347,150 C5.16014678,150 4.25011467,150.233146 3.47008715,150.699438 C2.69005963,151.16573 2.08337156,151.853933 1.65002293,152.764045 C1.21667431,153.674157 1,154.786517 1,156.101124 C1,157.977528 1.40084748,159.429775 2.20254243,160.457865 C3.00423738,161.485955 4.15802809,162 5.66391455,162 Z M5.61516283,160.97191 C4.98680733,160.97191 4.44512155,160.853933 3.9901055,160.617978 C3.53508944,160.382022 3.19111897,160.073034 2.95819409,159.691011 C2.7252692,159.308989 2.60880676,158.893258 2.60880676,158.44382 C2.60880676,157.960674 2.73339449,157.522472 2.98256995,157.129213 C3.23174541,156.735955 3.57571588,156.426966 4.01448136,156.202247 C4.45324684,155.977528 4.95972304,155.865169 5.53390997,155.865169 C6.41144093,155.865169 7.10750715,156.095506 7.62210864,156.55618 C8.13671013,157.016854 8.39401088,157.634831 8.39401088,158.410112 C8.39401088,159.185393 8.13671013,159.80618 7.62210864,160.272472 C7.10750715,160.738764 6.43852522,160.97191 5.61516283,160.97191 Z M15.4305091,162 C16.3080401,162 17.0907761,161.758427 17.778717,161.275281 C18.4666579,160.792135 19.0056353,160.098315 19.395649,159.19382 C19.7856628,158.289326 19.9806697,157.224719 19.9806697,156 C19.9806697,154.775281 19.7856628,153.710674 19.395649,152.80618 C19.0056353,151.901685 18.4666579,151.207865 17.778717,150.724719 C17.0907761,150.241573 16.3080401,150 15.4305091,150 C14.5529782,150 13.7702422,150.241573 13.0823013,150.724719 C12.3943604,151.207865 11.8580914,151.901685 11.4734945,152.80618 C11.0888976,153.710674 10.8965992,154.775281 10.8965992,156 C10.8965992,157.224719 11.0888976,158.289326 11.4734945,159.19382 C11.8580914,160.098315 12.3943604,160.792135 13.0823013,161.275281 C13.7702422,161.758427 14.5529782,162 15.4305091,162 Z M15.4305091,160.88764 C14.7696525,160.88764 14.1873403,160.696629 13.6835725,160.314607 C13.1798047,159.932584 12.7870825,159.376404 12.5054059,158.646067 C12.2237293,157.91573 12.082891,157.033708 12.082891,156 C12.082891,154.966292 12.2237293,154.08427 12.5054059,153.353933 C12.7870825,152.623596 13.1798047,152.067416 13.6835725,151.685393 C14.1873403,151.303371 14.7696525,151.11236 15.4305091,151.11236 C16.0913658,151.11236 16.673678,151.303371 17.1774458,151.685393 C17.6812136,152.067416 18.0739357,152.623596 18.3556123,153.353933 C18.637289,154.08427 18.7781273,154.966292 18.7781273,156 C18.7781273,157.033708 18.637289,157.91573 18.3556123,158.646067 C18.0739357,159.376404 17.6812136,159.932584 17.1774458,160.314607 C16.673678,160.696629 16.0913658,160.88764 15.4305091,160.88764 Z M23.6532993,157.106039 C24.3168643,157.106039 24.8571959,156.850421 25.274294,156.339185 C25.691392,155.827949 25.899941,155.149579 25.899941,154.304073 C25.899941,153.458567 25.691392,152.780197 25.274294,152.268961 C24.8571959,151.757725 24.3168643,151.502107 23.6532993,151.502107 C22.9802547,151.502107 22.4375532,151.760183 22.0251949,152.276334 C21.6128366,152.792486 21.4066575,153.468399 21.4066575,154.304073 C21.4066575,155.139747 21.6128366,155.81566 22.0251949,156.331812 C22.4375532,156.847963 22.9802547,157.106039 23.6532993,157.106039 Z M23.7243955,161.898876 L30.5211978,151.575843 L29.682262,151.575843 L22.8854597,161.898876 L23.7243955,161.898876 Z M23.6532993,156.442416 C23.1793242,156.442416 22.8048839,156.250702 22.5299784,155.867275 C22.2550728,155.483848 22.1176201,154.962781 22.1176201,154.304073 C22.1176201,153.645365 22.2550728,153.124298 22.5299784,152.740871 C22.8048839,152.357444 23.1793242,152.16573 23.6532993,152.16573 C24.1177948,152.16573 24.4898652,152.354986 24.7695105,152.733497 C25.0491558,153.112008 25.1889784,153.635534 25.1889784,154.304073 C25.1889784,154.972612 25.0491558,155.496138 24.7695105,155.874649 C24.4898652,156.25316 24.1177948,156.442416 23.6532993,156.442416 Z M29.7533582,161.972612 C30.4264028,161.972612 30.9691043,161.714537 31.3814626,161.198385 C31.7938209,160.682233 32,160.00632 32,159.170646 C32,158.334972 31.7938209,157.659059 31.3814626,157.142907 C30.9691043,156.626756 30.4264028,156.36868 29.7533582,156.36868 C29.0897932,156.36868 28.5494616,156.626756 28.1323635,157.142907 C27.7152655,157.659059 27.5067165,158.334972 27.5067165,159.170646 C27.5067165,160.00632 27.7152655,160.682233 28.1323635,161.198385 C28.5494616,161.714537 29.0897932,161.972612 29.7533582,161.972612 Z M29.7533582,161.308989 C29.2888627,161.308989 28.9167923,161.119733 28.637147,160.741222 C28.3575017,160.362711 28.2176791,159.839185 28.2176791,159.170646 C28.2176791,158.502107 28.3575017,157.978581 28.637147,157.60007 C28.9167923,157.221559 29.2888627,157.032303 29.7533582,157.032303 C30.2273333,157.032303 30.6017736,157.224017 30.8766791,157.607444 C31.1515846,157.990871 31.2890374,158.511938 31.2890374,159.170646 C31.2890374,159.829354 31.1515846,160.350421 30.8766791,160.733848 C30.6017736,161.117275 30.2273333,161.308989 29.7533582,161.308989 Z\",\"id\":\"60%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M5.45217391,77 C6.36459474,77 7.15884058,76.8623596 7.83491143,76.5870787 C8.51098229,76.3117978 9.03040258,75.9185393 9.3931723,75.4073034 C9.75594203,74.8960674 9.93732689,74.2977528 9.93732689,73.6123596 C9.93732689,72.9157303 9.74220075,72.3202247 9.35194847,71.8258427 C8.96169619,71.3314607 8.40380032,70.9606742 7.67826087,70.7134831 C8.27188406,70.4775281 8.72809447,70.1376404 9.04689211,69.6938202 C9.36568975,69.25 9.52508857,68.7247191 9.52508857,68.1179775 C9.52508857,67.488764 9.35469673,66.9382022 9.01391304,66.4662921 C8.67312936,65.994382 8.19768116,65.6320225 7.58756844,65.3792135 C6.97745572,65.1264045 6.26565754,65 5.45217391,65 C4.22095545,65 3.23982823,65.2808989 2.50879227,65.8426966 C1.77775631,66.4044944 1.41223833,67.1629213 1.41223833,68.1179775 C1.41223833,68.7247191 1.56614063,69.25 1.87394525,69.6938202 C2.18174987,70.1376404 2.63246377,70.4775281 3.22608696,70.7134831 C2.5005475,70.9606742 1.94814815,71.3286517 1.56888889,71.8174157 C1.18962963,72.3061798 1,72.9044944 1,73.6123596 C1,74.6573034 1.39574879,75.4831461 2.18724638,76.0898876 C2.97874396,76.6966292 4.06705314,77 5.45217391,77 Z M5.45217391,70.2752809 C4.56173913,70.2752809 3.86368223,70.0842697 3.35800322,69.7022472 C2.85232421,69.3202247 2.5994847,68.8033708 2.5994847,68.1516854 C2.5994847,67.5 2.85507246,66.9831461 3.36624799,66.6011236 C3.87742351,66.2191011 4.57273215,66.0280899 5.45217391,66.0280899 C6.32062265,66.0280899 7.01593129,66.2191011 7.53809984,66.6011236 C8.06026838,66.9831461 8.32135266,67.505618 8.32135266,68.1685393 C8.32135266,68.8089888 8.0657649,69.3202247 7.55458937,69.7022472 C7.04341385,70.0842697 6.3426087,70.2752809 5.45217391,70.2752809 Z M5.45217391,75.9719101 C4.42982287,75.9719101 3.63282877,75.761236 3.06119163,75.3398876 C2.48955448,74.9185393 2.20373591,74.3370787 2.20373591,73.5955056 C2.20373591,72.8651685 2.49230274,72.2893258 3.06943639,71.8679775 C3.64657005,71.4466292 4.44081589,71.2359551 5.45217391,71.2359551 C6.47452496,71.2359551 7.27426731,71.4466292 7.85140097,71.8679775 C8.42853462,72.2893258 8.71710145,72.8651685 8.71710145,73.5955056 C8.71710145,74.3258427 8.42853462,74.9044944 7.85140097,75.3314607 C7.27426731,75.758427 6.47452496,75.9719101 5.45217391,75.9719101 Z M16.1868599,77 C17.0772947,77 17.8715405,76.758427 18.5695974,76.2752809 C19.2676543,75.7921348 19.8145572,75.0983146 20.210306,74.1938202 C20.6060548,73.2893258 20.8039291,72.2247191 20.8039291,71 C20.8039291,69.7752809 20.6060548,68.7106742 20.210306,67.8061798 C19.8145572,66.9016854 19.2676543,66.2078652 18.5695974,65.7247191 C17.8715405,65.241573 17.0772947,65 16.1868599,65 C15.2964251,65 14.5021793,65.241573 13.8041224,65.7247191 C13.1060655,66.2078652 12.5619109,66.9016854 12.1716586,67.8061798 C11.7814063,68.7106742 11.5862802,69.7752809 11.5862802,71 C11.5862802,72.2247191 11.7814063,73.2893258 12.1716586,74.1938202 C12.5619109,75.0983146 13.1060655,75.7921348 13.8041224,76.2752809 C14.5021793,76.758427 15.2964251,77 16.1868599,77 Z M16.1868599,75.8876404 C15.5162856,75.8876404 14.9254106,75.6966292 14.4142351,75.3146067 C13.9030596,74.9325843 13.5045625,74.3764045 13.218744,73.6460674 C12.9329254,72.9157303 12.7900161,72.0337079 12.7900161,71 C12.7900161,69.9662921 12.9329254,69.0842697 13.218744,68.3539326 C13.5045625,67.6235955 13.9030596,67.0674157 14.4142351,66.6853933 C14.9254106,66.3033708 15.5162856,66.1123596 16.1868599,66.1123596 C16.8574342,66.1123596 17.4483092,66.3033708 17.9594847,66.6853933 C18.4706602,67.0674157 18.8691573,67.6235955 19.1549758,68.3539326 C19.4407944,69.0842697 19.5837037,69.9662921 19.5837037,71 C19.5837037,72.0337079 19.4407944,72.9157303 19.1549758,73.6460674 C18.8691573,74.3764045 18.4706602,74.9325843 17.9594847,75.3146067 C17.4483092,75.6966292 16.8574342,75.8876404 16.1868599,75.8876404 Z M24.5305636,72.1060393 C25.2038862,72.1060393 25.7521632,71.8504213 26.1753945,71.3391854 C26.5986259,70.8279494 26.8102415,70.1495787 26.8102415,69.304073 C26.8102415,68.4585674 26.5986259,67.7801966 26.1753945,67.2689607 C25.7521632,66.7577247 25.2038862,66.5021067 24.5305636,66.5021067 C23.8476221,66.5021067 23.2969404,66.7601826 22.8785185,67.2763343 C22.4600966,67.792486 22.2508857,68.4683989 22.2508857,69.304073 C22.2508857,70.1397472 22.4600966,70.8156601 22.8785185,71.3318118 C23.2969404,71.8479635 23.8476221,72.1060393 24.5305636,72.1060393 Z M24.6027053,76.8988764 L31.4994525,66.5758427 L30.6481804,66.5758427 L23.7514332,76.8988764 L24.6027053,76.8988764 Z M24.5305636,71.4424157 C24.0496189,71.4424157 23.6696726,71.2507022 23.3907246,70.8672753 C23.1117767,70.4838483 22.9723027,69.9627809 22.9723027,69.304073 C22.9723027,68.6453652 23.1117767,68.1242978 23.3907246,67.7408708 C23.6696726,67.3574438 24.0496189,67.1657303 24.5305636,67.1657303 C25.0018894,67.1657303 25.379431,67.354986 25.6631884,67.7334972 C25.9469458,68.1120084 26.0888245,68.6355337 26.0888245,69.304073 C26.0888245,69.9726124 25.9469458,70.4961376 25.6631884,70.8746489 C25.379431,71.2531601 25.0018894,71.4424157 24.5305636,71.4424157 Z M30.7203221,76.9726124 C31.4032636,76.9726124 31.9539452,76.7145365 32.3723671,76.1983848 C32.790789,75.6822331 33,75.0063202 33,74.1706461 C33,73.3349719 32.790789,72.659059 32.3723671,72.1429073 C31.9539452,71.6267556 31.4032636,71.3686798 30.7203221,71.3686798 C30.0469995,71.3686798 29.4987225,71.6267556 29.0754911,72.1429073 C28.6522598,72.659059 28.4406441,73.3349719 28.4406441,74.1706461 C28.4406441,75.0063202 28.6522598,75.6822331 29.0754911,76.1983848 C29.4987225,76.7145365 30.0469995,76.9726124 30.7203221,76.9726124 Z M30.7203221,76.3089888 C30.2489962,76.3089888 29.8714546,76.1197331 29.5876973,75.7412219 C29.3039399,75.3627107 29.1620612,74.8391854 29.1620612,74.1706461 C29.1620612,73.5021067 29.3039399,72.9785815 29.5876973,72.6000702 C29.8714546,72.221559 30.2489962,72.0323034 30.7203221,72.0323034 C31.2012668,72.0323034 31.5812131,72.2240169 31.860161,72.6074438 C32.139109,72.9908708 32.2785829,73.5119382 32.2785829,74.1706461 C32.2785829,74.8293539 32.139109,75.3504213 31.860161,75.7338483 C31.5812131,76.1172753 31.2012668,76.3089888 30.7203221,76.3089888 Z\",\"id\":\"80%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":6}),React.createElement(\"g\",{\"id\":\"Group-3\",\"key\":7},[React.createElement(\"text\",{\"id\":\"Percentage-of-childr\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"48.9569941\",\"y\":\"15\"},\"Percentage of children attending grammar school\")),React.createElement(\"path\",{\"d\":\"M2.20306473,491.828624 L2.93741965,488.22052 L6.16858126,488.22052 C7.82223972,488.22052 9.11960007,487.820527 10.0606623,487.02054 C11.0017245,486.220553 11.4722556,485.09132 11.4722556,483.632841 C11.4722556,482.609728 11.1132377,481.815183 10.3952017,481.249206 C9.67716583,480.683229 8.67626729,480.400241 7.39250611,480.400241 L7.39250611,480.400241 L3.2964376,480.400241 L1.01177788,491.828624 L2.20306473,491.828624 Z M6.18490026,487.159313 L3.13324762,487.159313 L4.29189648,481.445121 L7.29459212,481.445121 C8.25197334,481.445121 8.98632825,481.641037 9.49765686,482.032867 C10.0089855,482.424697 10.2646498,482.996116 10.2646498,483.747124 C10.2646498,484.868194 9.91107147,485.71716 9.20391489,486.294021 C8.49675831,486.870882 7.4904201,487.159313 6.18490026,487.159313 L6.18490026,487.159313 Z M16.400593,491.910255 C17.0751116,491.910255 17.7142724,491.798692 18.3180753,491.575567 C18.9218782,491.352441 19.4250473,491.039521 19.8275826,490.636807 L19.8275826,490.636807 L19.3053747,489.804167 C18.989874,490.141577 18.5846189,490.405518 18.0896093,490.595991 C17.5945997,490.786464 17.0642323,490.881701 16.498507,490.881701 C15.5193671,490.881701 14.7822924,490.653133 14.2872828,490.195998 C13.7922732,489.738862 13.5447684,489.074928 13.5447684,488.204194 C13.5447684,488.051815 13.550208,487.937531 13.5610874,487.861342 L13.5610874,487.861342 L20.7740845,487.861342 C20.8502398,487.480396 20.8883175,487.132103 20.8883175,486.816461 C20.8883175,485.684507 20.5510582,484.794726 19.8765396,484.147118 C19.202021,483.499509 18.2935968,483.175705 17.1512669,483.175705 C16.2482824,483.175705 15.4350523,483.39611 14.7115767,483.836919 C13.9881011,484.277728 13.4223759,484.884521 13.0144009,485.657297 C12.606426,486.430073 12.4024385,487.295365 12.4024385,488.253172 C12.4024385,489.385127 12.7587366,490.277629 13.4713329,490.930679 C14.1839291,491.58373 15.1603492,491.910255 16.400593,491.910255 Z M19.7949446,486.99605 L13.6753204,486.99605 C13.892907,486.125316 14.3063216,485.434171 14.9155642,484.922615 C15.5248068,484.411059 16.2591617,484.155281 17.1186289,484.155281 C17.9345788,484.155281 18.5873388,484.375685 19.0769087,484.816494 C19.5664786,485.257304 19.8112636,485.880423 19.8112636,486.685851 C19.8112636,486.816461 19.8058239,486.919861 19.7949446,486.99605 L19.7949446,486.99605 Z M23.4993572,491.828624 L24.3642641,487.469512 C24.5709714,486.413747 24.9707868,485.619202 25.5637104,485.085878 C26.156634,484.552553 26.9154674,484.285891 27.8402106,484.285891 L27.8402106,484.285891 L28.1665906,484.302217 L28.3787376,483.175705 C27.5627877,483.175705 26.8665104,483.309036 26.2899058,483.575699 C25.7133012,483.842361 25.2346106,484.253238 24.853834,484.808331 L24.853834,484.808331 L25.147576,483.24101 L24.0378841,483.24101 L22.3407083,491.828624 L23.4993572,491.828624 Z M32.7685481,491.910255 C33.5083426,491.910255 34.1964604,491.76604 34.8329013,491.477609 C35.4693422,491.189178 35.977951,490.789185 36.3587276,490.277629 L36.3587276,490.277629 L35.5264587,489.640905 C35.2218374,490.043619 34.8329013,490.351097 34.3596504,490.563338 C33.8863994,490.77558 33.372351,490.881701 32.817505,490.881701 C31.9036412,490.881701 31.1992044,490.647691 30.7041948,490.179671 C30.2091852,489.711652 29.9616804,489.058601 29.9616804,488.22052 C29.9616804,487.447744 30.1221505,486.756599 30.4430908,486.147085 C30.7640311,485.537571 31.2100837,485.058667 31.7812487,484.710374 C32.3524136,484.36208 32.9915744,484.187933 33.6987309,484.187933 C34.8736988,484.187933 35.7059677,484.612416 36.1955376,485.461382 L36.1955376,485.461382 L37.1746775,484.889963 C36.8591769,484.323986 36.4158441,483.896782 35.8446792,483.608351 C35.2735143,483.319921 34.5908362,483.175705 33.7966449,483.175705 C32.8392637,483.175705 31.9797965,483.39611 31.2182432,483.836919 C30.45669,484.277728 29.8637664,484.884521 29.4394725,485.657297 C29.0151785,486.430073 28.8030315,487.300807 28.8030315,488.269499 C28.8030315,488.998738 28.9635017,489.638184 29.284442,490.187834 C29.6053823,490.737485 30.065034,491.161968 30.6633973,491.461283 C31.2617606,491.760598 31.9634775,491.910255 32.7685481,491.910255 Z M41.9887819,491.910255 C42.6633005,491.910255 43.3024613,491.798692 43.9062642,491.575567 C44.5100671,491.352441 45.0132362,491.039521 45.4157715,490.636807 L45.4157715,490.636807 L44.8935636,489.804167 C44.578063,490.141577 44.1728078,490.405518 43.6777982,490.595991 C43.1827886,490.786464 42.6524212,490.881701 42.0866959,490.881701 C41.1075561,490.881701 40.3704813,490.653133 39.8754717,490.195998 C39.3804621,489.738862 39.1329573,489.074928 39.1329573,488.204194 C39.1329573,488.051815 39.138397,487.937531 39.1492763,487.861342 L39.1492763,487.861342 L46.3622734,487.861342 C46.4384287,487.480396 46.4765064,487.132103 46.4765064,486.816461 C46.4765064,485.684507 46.1392471,484.794726 45.4647285,484.147118 C44.7902099,483.499509 43.8817857,483.175705 42.7394559,483.175705 C41.8364713,483.175705 41.0232412,483.39611 40.2997656,483.836919 C39.5762901,484.277728 39.0105648,484.884521 38.6025899,485.657297 C38.1946149,486.430073 37.9906274,487.295365 37.9906274,488.253172 C37.9906274,489.385127 38.3469256,490.277629 39.0595218,490.930679 C39.772118,491.58373 40.7485381,491.910255 41.9887819,491.910255 Z M45.3831335,486.99605 L39.2635093,486.99605 C39.4810959,486.125316 39.8945105,485.434171 40.5037531,484.922615 C41.1129957,484.411059 41.8473506,484.155281 42.7068179,484.155281 C43.5227678,484.155281 44.1755277,484.375685 44.6650976,484.816494 C45.1546676,485.257304 45.3994525,485.880423 45.3994525,486.685851 C45.3994525,486.816461 45.3940129,486.919861 45.3831335,486.99605 L45.3831335,486.99605 Z M49.0875461,491.828624 L50.00141,487.224618 C50.2081173,486.234158 50.6106526,485.485871 51.2090158,484.979757 C51.8073791,484.473643 52.5689323,484.220586 53.4936756,484.220586 C54.2225908,484.220586 54.7747169,484.38657 55.1500539,484.718537 C55.5253908,485.050504 55.7130593,485.526687 55.7130593,486.147085 C55.7130593,486.364768 55.685861,486.625988 55.6314643,486.930745 L55.6314643,486.930745 L54.6523244,491.828624 L55.8109733,491.828624 L56.7901132,486.947072 C56.8553892,486.598778 56.8880272,486.272253 56.8880272,485.967496 C56.8880272,485.096762 56.6187637,484.41378 56.0802367,483.91855 C55.5417098,483.42332 54.7883161,483.175705 53.8200555,483.175705 C52.394863,483.175705 51.2742918,483.654609 50.4583419,484.612416 L50.4583419,484.612416 L50.7357649,483.24101 L49.626073,483.24101 L47.9288972,491.828624 L49.0875461,491.828624 Z M61.7021316,491.910255 C62.4854435,491.910255 63.1218844,491.725224 63.6114543,491.355162 L63.6114543,491.355162 L63.3340314,490.473544 C62.9423754,490.767417 62.5017625,490.914353 62.0121925,490.914353 C61.1853633,490.914353 60.7719487,490.533407 60.7719487,489.771515 C60.7719487,489.673557 60.7937073,489.493968 60.8372247,489.232748 L60.8372247,489.232748 L61.8326836,484.220586 L64.4437232,484.220586 L64.6395512,483.24101 L62.0285115,483.24101 L62.4038485,481.36349 L61.2451996,481.36349 L60.8698627,483.24101 L59.3358769,483.24101 L59.1563679,484.220586 L60.6740347,484.220586 L59.6785758,489.281727 C59.6350585,489.488526 59.6132998,489.711652 59.6132998,489.951104 C59.6132998,490.560617 59.8009683,491.039521 60.1763053,491.387815 C60.5516422,491.736108 61.060251,491.910255 61.7021316,491.910255 Z M68.3766018,481.36349 C68.6377057,481.36349 68.8552924,481.276417 69.0293617,481.10227 C69.203431,480.928123 69.2904657,480.71044 69.2904657,480.44922 C69.2904657,480.253304 69.2143103,480.081879 69.0619997,479.934942 C68.909689,479.788006 68.7193007,479.714538 68.4908348,479.714538 C68.2297308,479.714538 68.014864,479.79889 67.8462343,479.967595 C67.6776047,480.1363 67.5932899,480.34582 67.5932899,480.596156 C67.5932899,480.802955 67.6667254,480.982544 67.8135963,481.134923 C67.9604673,481.287301 68.1481358,481.36349 68.3766018,481.36349 Z M66.761021,491.828624 L68.4581968,483.24101 L67.2995479,483.24101 L65.6023721,491.828624 L66.761021,491.828624 Z M71.1508314,491.828624 L73.5660431,479.714538 L72.4073943,479.714538 L69.9921826,491.828624 L71.1508314,491.828624 Z M78.2985526,491.910255 C78.9730712,491.910255 79.6122319,491.798692 80.2160348,491.575567 C80.8198378,491.352441 81.3230069,491.039521 81.7255422,490.636807 L81.7255422,490.636807 L81.2033342,489.804167 C80.8878336,490.141577 80.4825785,490.405518 79.9875689,490.595991 C79.4925593,490.786464 78.9621918,490.881701 78.3964666,490.881701 C77.4173267,490.881701 76.6802519,490.653133 76.1852423,490.195998 C75.6902327,489.738862 75.4427279,489.074928 75.4427279,488.204194 C75.4427279,488.051815 75.4481676,487.937531 75.4590469,487.861342 L75.4590469,487.861342 L82.672044,487.861342 C82.7481994,487.480396 82.786277,487.132103 82.786277,486.816461 C82.786277,485.684507 82.4490177,484.794726 81.7744992,484.147118 C81.0999806,483.499509 80.1915563,483.175705 79.0492265,483.175705 C78.1462419,483.175705 77.3330119,483.39611 76.6095363,483.836919 C75.8860607,484.277728 75.3203354,484.884521 74.9123605,485.657297 C74.5043855,486.430073 74.3003981,487.295365 74.3003981,488.253172 C74.3003981,489.385127 74.6566962,490.277629 75.3692924,490.930679 C76.0818887,491.58373 77.0583087,491.910255 78.2985526,491.910255 Z M81.6929042,486.99605 L75.5732799,486.99605 C75.7908665,486.125316 76.2042812,485.434171 76.8135238,484.922615 C77.4227663,484.411059 78.1571213,484.155281 79.0165885,484.155281 C79.8325384,484.155281 80.4852983,484.375685 80.9748683,484.816494 C81.4644382,485.257304 81.7092232,485.880423 81.7092232,486.685851 C81.7092232,486.816461 81.7037835,486.919861 81.6929042,486.99605 L81.6929042,486.99605 Z M92.3328909,491.910255 C93.2793928,491.910255 94.1307005,491.689851 94.8868141,491.249041 C95.6429277,490.808232 96.2331314,490.198719 96.6574254,489.4205 C97.0817193,488.642282 97.2938663,487.768827 97.2938663,486.800135 C97.2938663,485.689949 96.9430078,484.808331 96.2412909,484.155281 C95.539574,483.50223 94.5903523,483.175705 93.3936258,483.175705 C92.4471239,483.175705 91.5958161,483.39611 90.8397026,483.836919 C90.083589,484.277728 89.4933852,484.884521 89.0690913,485.657297 C88.6447973,486.430073 88.4326504,487.300807 88.4326504,488.269499 C88.4326504,488.998738 88.5931205,489.638184 88.9140608,490.187834 C89.2350011,490.737485 89.6892132,491.161968 90.2766971,491.461283 C90.8641811,491.760598 91.549579,491.910255 92.3328909,491.910255 Z M92.4144859,490.881701 C91.5223806,490.881701 90.8288232,490.647691 90.3338136,490.179671 C89.838804,489.711652 89.5912992,489.058601 89.5912992,488.22052 C89.5912992,487.458628 89.7517694,486.770204 90.0727097,486.155248 C90.39365,485.540292 90.8369827,485.058667 91.402708,484.710374 C91.9684333,484.36208 92.6048742,484.187933 93.3120308,484.187933 C94.204136,484.187933 94.8976934,484.424664 95.392703,484.898126 C95.8877126,485.371587 96.1352174,486.027359 96.1352174,486.86544 C96.1352174,487.627332 95.9747473,488.315756 95.653807,488.930712 C95.3328667,489.545668 94.8895339,490.024572 94.3238086,490.367423 C93.7580834,490.710275 93.1216425,490.881701 92.4144859,490.881701 Z M100.100734,491.828624 L101.618401,484.220586 L104.213121,484.220586 L104.408949,483.24101 L101.781591,483.24101 L101.977419,482.294087 C102.097091,481.717226 102.303799,481.292743 102.597541,481.020639 C102.891283,480.748534 103.293818,480.612482 103.805147,480.612482 C104.305596,480.612482 104.713571,480.753976 105.029071,481.036965 L105.029071,481.036965 L105.53496,480.187999 C105.339132,480.013853 105.088908,479.8778 104.784286,479.779843 C104.479665,479.681885 104.153285,479.632906 103.805147,479.632906 C103.000076,479.632906 102.350036,479.85059 101.855026,480.285957 C101.360017,480.721324 101.030917,481.347164 100.867727,482.163477 L100.867727,482.163477 L100.65558,483.24101 L99.1052751,483.24101 L98.9257661,484.220586 L100.459752,484.220586 L98.9420851,491.828624 L100.100734,491.828624 Z M112.127836,491.926581 C113.041699,491.926581 113.84949,491.790529 114.551207,491.518425 C115.252924,491.24632 115.80233,490.851769 116.199426,490.334771 C116.596521,489.817773 116.795069,489.200096 116.795069,488.48174 C116.795069,487.904879 116.642758,487.43958 116.338137,487.085845 C116.033516,486.732109 115.663618,486.460005 115.228445,486.269532 C114.793272,486.079059 114.222107,485.880423 113.51495,485.673623 C112.916587,485.499476 112.440616,485.338935 112.087038,485.191998 C111.73346,485.045062 111.436998,484.846426 111.197653,484.59609 C110.958307,484.345754 110.838635,484.024671 110.838635,483.632841 C110.838635,482.925369 111.143256,482.364834 111.752499,481.951236 C112.361741,481.537637 113.166812,481.330838 114.16771,481.330838 C114.755194,481.330838 115.31548,481.409748 115.848567,481.567568 C116.381654,481.725389 116.854905,481.956678 117.26832,482.261435 L117.26832,482.261435 L117.774209,481.281859 C117.339036,480.966218 116.811388,480.724045 116.191266,480.55534 C115.571144,480.386636 114.918384,480.302283 114.232986,480.302283 C113.340881,480.302283 112.54941,480.441056 111.858572,480.718603 C111.167734,480.996149 110.629208,481.393422 110.242991,481.91042 C109.856775,482.427418 109.663667,483.039653 109.663667,483.747124 C109.663667,484.345754 109.818697,484.832821 110.128758,485.208325 C110.438819,485.583829 110.814156,485.866817 111.254769,486.05729 C111.695382,486.247763 112.269267,486.4464 112.976423,486.653199 C113.574787,486.827346 114.048038,486.987887 114.396176,487.134824 C114.744315,487.28176 115.032617,487.474954 115.261083,487.714406 C115.489549,487.953858 115.603782,488.264057 115.603782,488.645003 C115.603782,489.352474 115.296441,489.904846 114.681759,490.302118 C114.067076,490.699391 113.253846,490.898027 112.242068,490.898027 C111.524033,490.898027 110.827755,490.772859 110.153237,490.522523 C109.478718,490.272187 108.951071,489.940219 108.570294,489.526621 L108.570294,489.526621 L107.98281,490.473544 C108.374466,490.898027 108.95379,491.24632 109.720783,491.518425 C110.487776,491.790529 111.290127,491.926581 112.127836,491.926581 Z M126.896529,491.828624 L127.108676,490.783743 L120.238378,490.783743 L121.086965,486.538915 L127.010762,486.538915 L127.20659,485.510361 L121.282793,485.510361 L122.098743,481.445121 L128.740576,481.445121 L128.952722,480.400241 L121.119603,480.400241 L118.834944,491.828624 L126.896529,491.828624 Z M133.081429,491.926581 C133.995293,491.926581 134.803083,491.790529 135.5048,491.518425 C136.206517,491.24632 136.755923,490.851769 137.153019,490.334771 C137.550115,489.817773 137.748662,489.200096 137.748662,488.48174 C137.748662,487.904879 137.596352,487.43958 137.29173,487.085845 C136.987109,486.732109 136.617212,486.460005 136.182039,486.269532 C135.746865,486.079059 135.1757,485.880423 134.468544,485.673623 C133.870181,485.499476 133.39421,485.338935 133.040631,485.191998 C132.687053,485.045062 132.390591,484.846426 132.151246,484.59609 C131.911901,484.345754 131.792228,484.024671 131.792228,483.632841 C131.792228,482.925369 132.096849,482.364834 132.706092,481.951236 C133.315335,481.537637 134.120405,481.330838 135.121304,481.330838 C135.708788,481.330838 136.269073,481.409748 136.802161,481.567568 C137.335248,481.725389 137.808499,481.956678 138.221913,482.261435 L138.221913,482.261435 L138.727802,481.281859 C138.292629,480.966218 137.764981,480.724045 137.144859,480.55534 C136.524738,480.386636 135.871978,480.302283 135.18658,480.302283 C134.294474,480.302283 133.503003,480.441056 132.812166,480.718603 C132.121328,480.996149 131.582801,481.393422 131.196585,481.91042 C130.810368,482.427418 130.61726,483.039653 130.61726,483.747124 C130.61726,484.345754 130.772291,484.832821 131.082352,485.208325 C131.392413,485.583829 131.76775,485.866817 132.208363,486.05729 C132.648976,486.247763 133.22286,486.4464 133.930017,486.653199 C134.52838,486.827346 135.001631,486.987887 135.34977,487.134824 C135.697908,487.28176 135.986211,487.474954 136.214677,487.714406 C136.443143,487.953858 136.557376,488.264057 136.557376,488.645003 C136.557376,489.352474 136.250034,489.904846 135.635352,490.302118 C135.02067,490.699391 134.20744,490.898027 133.195662,490.898027 C132.477626,490.898027 131.781349,490.772859 131.10683,490.522523 C130.432312,490.272187 129.904664,489.940219 129.523887,489.526621 L129.523887,489.526621 L128.936403,490.473544 C129.328059,490.898027 129.907384,491.24632 130.674377,491.518425 C131.44137,491.790529 132.24372,491.926581 133.081429,491.926581 Z M147.474785,491.910255 C148.160183,491.910255 148.785745,491.785087 149.35147,491.534751 C149.917195,491.284415 150.406765,490.930679 150.82018,490.473544 L150.82018,490.473544 L150.542757,491.828624 L151.652449,491.828624 L154.06766,479.714538 L152.909012,479.714538 L151.848277,485.036899 C151.598052,484.438269 151.192797,483.978413 150.632511,483.65733 C150.072226,483.336247 149.389548,483.175705 148.584477,483.175705 C147.670613,483.175705 146.843784,483.39611 146.103989,483.836919 C145.364195,484.277728 144.78487,484.884521 144.366016,485.657297 C143.947162,486.430073 143.737735,487.300807 143.737735,488.269499 C143.737735,489.009623 143.895485,489.65451 144.210986,490.204161 C144.526486,490.753812 144.967099,491.175573 145.532824,491.469446 C146.09855,491.763319 146.74587,491.910255 147.474785,491.910255 Z M147.71957,490.881701 C146.827465,490.881701 146.133908,490.647691 145.638898,490.179671 C145.143888,489.711652 144.896384,489.058601 144.896384,488.22052 C144.896384,487.458628 145.056854,486.770204 145.377794,486.155248 C145.698734,485.540292 146.142067,485.058667 146.707792,484.710374 C147.273518,484.36208 147.909959,484.187933 148.617115,484.187933 C149.50922,484.187933 150.202778,484.424664 150.697787,484.898126 C151.192797,485.371587 151.440302,486.027359 151.440302,486.86544 C151.440302,487.627332 151.279832,488.315756 150.958891,488.930712 C150.637951,489.545668 150.194618,490.024572 149.628893,490.367423 C149.063168,490.710275 148.426727,490.881701 147.71957,490.881701 Z M157.65784,481.36349 C157.918944,481.36349 158.136531,481.276417 158.3106,481.10227 C158.484669,480.928123 158.571704,480.71044 158.571704,480.44922 C158.571704,480.253304 158.495549,480.081879 158.343238,479.934942 C158.190927,479.788006 158.000539,479.714538 157.772073,479.714538 C157.510969,479.714538 157.296102,479.79889 157.127473,479.967595 C156.958843,480.1363 156.874528,480.34582 156.874528,480.596156 C156.874528,480.802955 156.947964,480.982544 157.094835,481.134923 C157.241706,481.287301 157.429374,481.36349 157.65784,481.36349 Z M156.042259,491.828624 L157.739435,483.24101 L156.580786,483.24101 L154.88361,491.828624 L156.042259,491.828624 Z M161.770228,491.910255 C162.923437,491.910255 163.84546,491.673524 164.536298,491.200063 C165.227135,490.726601 165.572554,490.07083 165.572554,489.232748 C165.572554,488.753845 165.442002,488.372898 165.180898,488.08991 C164.919794,487.806921 164.607013,487.602843 164.242556,487.477675 C163.878098,487.352507 163.402127,487.224618 162.814643,487.094008 C162.335953,486.99605 161.957896,486.903535 161.680473,486.816461 C161.40305,486.729388 161.171864,486.598778 160.986916,486.424631 C160.801967,486.250484 160.709493,486.021917 160.709493,485.738928 C160.709493,485.260025 160.927079,484.879078 161.362253,484.59609 C161.797426,484.313101 162.406668,484.171607 163.18998,484.171607 C163.657792,484.171607 164.112004,484.234191 164.552617,484.359359 C164.99323,484.484527 165.376726,484.666837 165.703106,484.906289 L165.703106,484.906289 L166.192676,483.975692 C165.866296,483.73624 165.439282,483.543046 164.911635,483.39611 C164.383987,483.249173 163.84274,483.175705 163.287894,483.175705 C162.156444,483.175705 161.253459,483.417878 160.578941,483.902224 C159.904422,484.38657 159.567163,485.036899 159.567163,485.853212 C159.567163,486.353884 159.697715,486.745714 159.958819,487.028703 C160.219923,487.311691 160.535423,487.518491 160.905321,487.649101 C161.275218,487.779711 161.759348,487.910321 162.357711,488.040931 C162.858161,488.149773 163.238937,488.24773 163.500041,488.334804 C163.761145,488.421877 163.981452,488.547045 164.160961,488.710308 C164.34047,488.87357 164.430224,489.091254 164.430224,489.363358 C164.430224,489.853146 164.209918,490.231371 163.769305,490.498033 C163.328692,490.764696 162.70041,490.898027 161.884461,490.898027 C161.296977,490.898027 160.736691,490.810953 160.203604,490.636807 C159.670516,490.46266 159.240783,490.234092 158.914403,489.951104 L158.914403,489.951104 L158.359557,490.865374 C158.696816,491.170131 159.178227,491.420467 159.803788,491.616382 C160.42935,491.812297 161.08483,491.910255 161.770228,491.910255 Z M169.978684,491.910255 C170.761995,491.910255 171.398436,491.725224 171.888006,491.355162 L171.888006,491.355162 L171.610583,490.473544 C171.218927,490.767417 170.778314,490.914353 170.288744,490.914353 C169.461915,490.914353 169.048501,490.533407 169.048501,489.771515 C169.048501,489.673557 169.070259,489.493968 169.113777,489.232748 L169.113777,489.232748 L170.109236,484.220586 L172.720275,484.220586 L172.916103,483.24101 L170.305063,483.24101 L170.6804,481.36349 L169.521752,481.36349 L169.146415,483.24101 L167.612429,483.24101 L167.43292,484.220586 L168.950587,484.220586 L167.955128,489.281727 C167.91161,489.488526 167.889852,489.711652 167.889852,489.951104 C167.889852,490.560617 168.07752,491.039521 168.452857,491.387815 C168.828194,491.736108 169.336803,491.910255 169.978684,491.910255 Z M175.037573,491.828624 L175.90248,487.469512 C176.109187,486.413747 176.509003,485.619202 177.101926,485.085878 C177.69485,484.552553 178.453683,484.285891 179.378426,484.285891 L179.378426,484.285891 L179.704806,484.302217 L179.916953,483.175705 C179.101003,483.175705 178.404726,483.309036 177.828122,483.575699 C177.251517,483.842361 176.772826,484.253238 176.39205,484.808331 L176.39205,484.808331 L176.685792,483.24101 L175.5761,483.24101 L173.878924,491.828624 L175.037573,491.828624 Z M183.197072,481.36349 C183.458176,481.36349 183.675763,481.276417 183.849832,481.10227 C184.023901,480.928123 184.110936,480.71044 184.110936,480.44922 C184.110936,480.253304 184.034781,480.081879 183.88247,479.934942 C183.730159,479.788006 183.539771,479.714538 183.311305,479.714538 C183.050201,479.714538 182.835334,479.79889 182.666705,479.967595 C182.498075,480.1363 182.41376,480.34582 182.41376,480.596156 C182.41376,480.802955 182.487196,480.982544 182.634067,481.134923 C182.780937,481.287301 182.968606,481.36349 183.197072,481.36349 Z M181.581491,491.828624 L183.278667,483.24101 L182.120018,483.24101 L180.422842,491.828624 L181.581491,491.828624 Z M189.5778,491.910255 C190.502543,491.910255 191.334812,491.689851 192.074607,491.249041 C192.814401,490.808232 193.393726,490.198719 193.81258,489.4205 C194.231434,488.642282 194.440862,487.768827 194.440862,486.800135 C194.440862,486.060011 194.283111,485.417845 193.967611,484.873636 C193.65211,484.329428 193.208777,483.910387 192.637612,483.616514 C192.066447,483.322642 191.416407,483.175705 190.687492,483.175705 C190.023853,483.175705 189.41733,483.29271 188.867924,483.52672 C188.318517,483.76073 187.837107,484.095418 187.423692,484.530785 L187.423692,484.530785 L188.386513,479.714538 L187.227864,479.714538 L184.812653,491.828624 L185.922345,491.828624 L186.297682,489.951104 C186.537027,490.582386 186.936842,491.066732 187.497128,491.404141 C188.057414,491.74155 188.750971,491.910255 189.5778,491.910255 Z M189.561481,490.881701 C188.669376,490.881701 187.975819,490.647691 187.480809,490.179671 C186.985799,489.711652 186.738295,489.058601 186.738295,488.22052 C186.738295,487.447744 186.898765,486.753877 187.219705,486.138922 C187.540645,485.523966 187.981258,485.045062 188.541544,484.702211 C189.101829,484.359359 189.73555,484.187933 190.442707,484.187933 C191.334812,484.187933 192.02837,484.424664 192.523379,484.898126 C193.018389,485.371587 193.265894,486.027359 193.265894,486.86544 C193.265894,487.638217 193.105424,488.329362 192.784483,488.938875 C192.463543,489.548389 192.02293,490.024572 191.462644,490.367423 C190.902359,490.710275 190.268638,490.881701 189.561481,490.881701 Z M199.467113,491.910255 C200.870547,491.910255 201.974799,491.425909 202.77987,490.457218 L202.77987,490.457218 L202.502447,491.828624 L203.612138,491.828624 L205.325633,483.24101 L204.166984,483.24101 L203.253121,487.861342 C203.046413,488.840918 202.643878,489.586484 202.045515,490.09804 C201.447151,490.609596 200.691038,490.865374 199.777174,490.865374 C199.048259,490.865374 198.501572,490.69667 198.137115,490.35926 C197.772657,490.021851 197.590428,489.537505 197.590428,488.906223 C197.590428,488.699424 197.617627,488.443646 197.672023,488.138889 L197.672023,488.138889 L198.651163,483.24101 L197.492514,483.24101 L196.513374,488.138889 C196.448098,488.476298 196.41546,488.797381 196.41546,489.102138 C196.41546,489.983756 196.684724,490.67218 197.223251,491.16741 C197.761778,491.66264 198.509732,491.910255 199.467113,491.910255 Z M209.584892,491.910255 C210.368204,491.910255 211.004645,491.725224 211.494215,491.355162 L211.494215,491.355162 L211.216792,490.473544 C210.825136,490.767417 210.384523,490.914353 209.894953,490.914353 C209.068123,490.914353 208.654709,490.533407 208.654709,489.771515 C208.654709,489.673557 208.676468,489.493968 208.719985,489.232748 L208.719985,489.232748 L209.715444,484.220586 L212.326483,484.220586 L212.522311,483.24101 L209.911272,483.24101 L210.286609,481.36349 L209.12796,481.36349 L208.752623,483.24101 L207.218637,483.24101 L207.039128,484.220586 L208.556795,484.220586 L207.561336,489.281727 C207.517819,489.488526 207.49606,489.711652 207.49606,489.951104 C207.49606,490.560617 207.683728,491.039521 208.059065,491.387815 C208.434402,491.736108 208.943011,491.910255 209.584892,491.910255 Z M216.259362,481.36349 C216.520466,481.36349 216.738053,481.276417 216.912122,481.10227 C217.086191,480.928123 217.173226,480.71044 217.173226,480.44922 C217.173226,480.253304 217.097071,480.081879 216.94476,479.934942 C216.792449,479.788006 216.602061,479.714538 216.373595,479.714538 C216.112491,479.714538 215.897624,479.79889 215.728995,479.967595 C215.560365,480.1363 215.47605,480.34582 215.47605,480.596156 C215.47605,480.802955 215.549486,480.982544 215.696357,481.134923 C215.843228,481.287301 216.030896,481.36349 216.259362,481.36349 Z M214.643781,491.828624 L216.340957,483.24101 L215.182308,483.24101 L213.485132,491.828624 L214.643781,491.828624 Z M221.693588,491.910255 C222.64009,491.910255 223.491398,491.689851 224.247512,491.249041 C225.003625,490.808232 225.593829,490.198719 226.018123,489.4205 C226.442417,488.642282 226.654564,487.768827 226.654564,486.800135 C226.654564,485.689949 226.303705,484.808331 225.601988,484.155281 C224.900271,483.50223 223.95105,483.175705 222.754323,483.175705 C221.807821,483.175705 220.956514,483.39611 220.2004,483.836919 C219.444286,484.277728 218.854083,484.884521 218.429789,485.657297 C218.005495,486.430073 217.793348,487.300807 217.793348,488.269499 C217.793348,488.998738 217.953818,489.638184 218.274758,490.187834 C218.595699,490.737485 219.049911,491.161968 219.637395,491.461283 C220.224878,491.760598 220.910276,491.910255 221.693588,491.910255 Z M221.775183,490.881701 C220.883078,490.881701 220.189521,490.647691 219.694511,490.179671 C219.199501,489.711652 218.951997,489.058601 218.951997,488.22052 C218.951997,487.458628 219.112467,486.770204 219.433407,486.155248 C219.754347,485.540292 220.19768,485.058667 220.763405,484.710374 C221.329131,484.36208 221.965572,484.187933 222.672728,484.187933 C223.564833,484.187933 224.258391,484.424664 224.7534,484.898126 C225.24841,485.371587 225.495915,486.027359 225.495915,486.86544 C225.495915,487.627332 225.335445,488.315756 225.014504,488.930712 C224.693564,489.545668 224.250231,490.024572 223.684506,490.367423 C223.118781,490.710275 222.48234,490.881701 221.775183,490.881701 Z M229.265603,491.828624 L230.179467,487.224618 C230.386175,486.234158 230.78871,485.485871 231.387073,484.979757 C231.985436,484.473643 232.74699,484.220586 233.671733,484.220586 C234.400648,484.220586 234.952774,484.38657 235.328111,484.718537 C235.703448,485.050504 235.891117,485.526687 235.891117,486.147085 C235.891117,486.364768 235.863918,486.625988 235.809522,486.930745 L235.809522,486.930745 L234.830382,491.828624 L235.989031,491.828624 L236.96817,486.947072 C237.033446,486.598778 237.066084,486.272253 237.066084,485.967496 C237.066084,485.096762 236.796821,484.41378 236.258294,483.91855 C235.719767,483.42332 234.966373,483.175705 233.998113,483.175705 C232.57292,483.175705 231.452349,483.654609 230.636399,484.612416 L230.636399,484.612416 L230.913822,483.24101 L229.80413,483.24101 L228.106955,491.828624 L229.265603,491.828624 Z M245.862024,494.995918 C245.405092,493.580976 245.176626,492.160591 245.176626,490.734764 C245.176626,488.797381 245.513886,486.83823 246.188404,484.85731 C246.862923,482.87639 247.776787,481.162133 248.929996,479.714538 L248.929996,479.714538 L247.738709,479.714538 C246.618138,481.085944 245.726033,482.756664 245.062393,484.7267 C244.398754,486.696736 244.066935,488.677655 244.066935,490.669459 C244.066935,491.409583 244.13493,492.163312 244.270922,492.930646 C244.406914,493.697981 244.589143,494.386405 244.817609,494.995918 L244.817609,494.995918 L245.862024,494.995918 Z M251.198337,491.828624 L253.482996,480.400241 L249.599075,480.400241 L249.386928,481.445121 L252.079563,481.445121 L250.00705,491.828624 L251.198337,491.828624 Z M266.995127,484.7267 L267.207274,483.747124 L260.10851,483.747124 L259.912682,484.7267 L266.995127,484.7267 Z M266.260772,488.48174 L266.4566,487.518491 L259.357836,487.518491 L259.162008,488.48174 L266.260772,488.48174 Z M273.78383,491.828624 L274.697694,487.224618 C274.904401,486.234158 275.296057,485.485871 275.872662,484.979757 C276.449266,484.473643 277.178182,484.220586 278.059408,484.220586 C278.766564,484.220586 279.296932,484.38657 279.65051,484.718537 C280.004088,485.050504 280.180877,485.526687 280.180877,486.147085 C280.180877,486.364768 280.153679,486.625988 280.099282,486.930745 L280.099282,486.930745 L279.120142,491.828624 L280.278791,491.828624 L281.225293,487.094008 C281.421121,486.147085 281.807337,485.43145 282.383942,484.947105 C282.960547,484.462759 283.684022,484.220586 284.554369,484.220586 C285.250646,484.220586 285.778294,484.38657 286.137312,484.718537 C286.49633,485.050504 286.675838,485.521245 286.675838,486.130759 C286.675838,486.413747 286.64864,486.680409 286.594243,486.930745 L286.594243,486.930745 L285.615104,491.828624 L286.773752,491.828624 L287.752892,486.947072 C287.829048,486.522589 287.867125,486.185179 287.867125,485.934843 C287.867125,485.064109 287.603302,484.38657 287.075654,483.902224 C286.548006,483.417878 285.800052,483.175705 284.831792,483.175705 C284.070238,483.175705 283.382121,483.319921 282.767438,483.608351 C282.152756,483.896782 281.633268,484.323986 281.208974,484.889963 C281.024026,484.33487 280.689486,483.910387 280.205356,483.616514 C279.721225,483.322642 279.120142,483.175705 278.402106,483.175705 C277.020431,483.175705 275.937938,483.654609 275.154626,484.612416 L275.154626,484.612416 L275.432049,483.24101 L274.322357,483.24101 L272.625181,491.828624 L273.78383,491.828624 Z M293.758284,491.910255 C294.704786,491.910255 295.556093,491.689851 296.312207,491.249041 C297.06832,490.808232 297.658524,490.198719 298.082818,489.4205 C298.507112,488.642282 298.719259,487.768827 298.719259,486.800135 C298.719259,485.689949 298.368401,484.808331 297.666684,484.155281 C296.964967,483.50223 296.015745,483.175705 294.819019,483.175705 C293.872517,483.175705 293.021209,483.39611 292.265095,483.836919 C291.508982,484.277728 290.918778,484.884521 290.494484,485.657297 C290.07019,486.430073 289.858043,487.300807 289.858043,488.269499 C289.858043,488.998738 290.018513,489.638184 290.339454,490.187834 C290.660394,490.737485 291.114606,491.161968 291.70209,491.461283 C292.289574,491.760598 292.974972,491.910255 293.758284,491.910255 Z M293.839879,490.881701 C292.947773,490.881701 292.254216,490.647691 291.759206,490.179671 C291.264197,489.711652 291.016692,489.058601 291.016692,488.22052 C291.016692,487.458628 291.177162,486.770204 291.498102,486.155248 C291.819043,485.540292 292.262375,485.058667 292.828101,484.710374 C293.393826,484.36208 294.030267,484.187933 294.737424,484.187933 C295.629529,484.187933 296.323086,484.424664 296.818096,484.898126 C297.313105,485.371587 297.56061,486.027359 297.56061,486.86544 C297.56061,487.627332 297.40014,488.315756 297.0792,488.930712 C296.758259,489.545668 296.314927,490.024572 295.749201,490.367423 C295.183476,490.710275 294.547035,490.881701 293.839879,490.881701 Z M301.330299,491.828624 L302.195206,487.469512 C302.401913,486.413747 302.801728,485.619202 303.394652,485.085878 C303.987576,484.552553 304.746409,484.285891 305.671152,484.285891 L305.671152,484.285891 L305.997532,484.302217 L306.209679,483.175705 C305.393729,483.175705 304.697452,483.309036 304.120847,483.575699 C303.544243,483.842361 303.065552,484.253238 302.684776,484.808331 L302.684776,484.808331 L302.978518,483.24101 L301.868826,483.24101 L300.17165,491.828624 L301.330299,491.828624 Z M310.632128,491.910255 C311.306646,491.910255 311.945807,491.798692 312.54961,491.575567 C313.153413,491.352441 313.656582,491.039521 314.059117,490.636807 L314.059117,490.636807 L313.536909,489.804167 C313.221409,490.141577 312.816154,490.405518 312.321144,490.595991 C311.826134,490.786464 311.295767,490.881701 310.730042,490.881701 C309.750902,490.881701 309.013827,490.653133 308.518817,490.195998 C308.023808,489.738862 307.776303,489.074928 307.776303,488.204194 C307.776303,488.051815 307.781743,487.937531 307.792622,487.861342 L307.792622,487.861342 L315.005619,487.861342 C315.081774,487.480396 315.119852,487.132103 315.119852,486.816461 C315.119852,485.684507 314.782593,484.794726 314.108074,484.147118 C313.433556,483.499509 312.525131,483.175705 311.382802,483.175705 C310.479817,483.175705 309.666587,483.39611 308.943111,483.836919 C308.219636,484.277728 307.65391,484.884521 307.245936,485.657297 C306.837961,486.430073 306.633973,487.295365 306.633973,488.253172 C306.633973,489.385127 306.990271,490.277629 307.702867,490.930679 C308.415464,491.58373 309.391884,491.910255 310.632128,491.910255 Z M314.026479,486.99605 L307.906855,486.99605 C308.124442,486.125316 308.537856,485.434171 309.147099,484.922615 C309.756341,484.411059 310.490696,484.155281 311.350164,484.155281 C312.166113,484.155281 312.818873,484.375685 313.308443,484.816494 C313.798013,485.257304 314.042798,485.880423 314.042798,486.685851 C314.042798,486.816461 314.037359,486.919861 314.026479,486.99605 L314.026479,486.99605 Z M324.503276,491.910255 C325.188674,491.910255 325.814235,491.785087 326.379961,491.534751 C326.945686,491.284415 327.435256,490.930679 327.848671,490.473544 L327.848671,490.473544 L327.571248,491.828624 L328.680939,491.828624 L331.096151,479.714538 L329.937502,479.714538 L328.876767,485.036899 C328.626543,484.438269 328.221288,483.978413 327.661002,483.65733 C327.100716,483.336247 326.418038,483.175705 325.612968,483.175705 C324.699104,483.175705 323.872275,483.39611 323.13248,483.836919 C322.392686,484.277728 321.813361,484.884521 321.394507,485.657297 C320.975653,486.430073 320.766225,487.300807 320.766225,488.269499 C320.766225,489.009623 320.923976,489.65451 321.239476,490.204161 C321.554977,490.753812 321.99559,491.175573 322.561315,491.469446 C323.12704,491.763319 323.774361,491.910255 324.503276,491.910255 Z M324.748061,490.881701 C323.855956,490.881701 323.162398,490.647691 322.667389,490.179671 C322.172379,489.711652 321.924874,489.058601 321.924874,488.22052 C321.924874,487.458628 322.085344,486.770204 322.406285,486.155248 C322.727225,485.540292 323.170558,485.058667 323.736283,484.710374 C324.302008,484.36208 324.938449,484.187933 325.645606,484.187933 C326.537711,484.187933 327.231268,484.424664 327.726278,484.898126 C328.221288,485.371587 328.468792,486.027359 328.468792,486.86544 C328.468792,487.627332 328.308322,488.315756 327.987382,488.930712 C327.666442,489.545668 327.223109,490.024572 326.657384,490.367423 C326.091658,490.710275 325.455217,490.881701 324.748061,490.881701 Z M335.828661,491.910255 C336.503179,491.910255 337.14234,491.798692 337.746143,491.575567 C338.349946,491.352441 338.853115,491.039521 339.25565,490.636807 L339.25565,490.636807 L338.733442,489.804167 C338.417942,490.141577 338.012686,490.405518 337.517677,490.595991 C337.022667,490.786464 336.4923,490.881701 335.926575,490.881701 C334.947435,490.881701 334.21036,490.653133 333.71535,490.195998 C333.220341,489.738862 332.972836,489.074928 332.972836,488.204194 C332.972836,488.051815 332.978276,487.937531 332.989155,487.861342 L332.989155,487.861342 L340.202152,487.861342 C340.278307,487.480396 340.316385,487.132103 340.316385,486.816461 C340.316385,485.684507 339.979126,484.794726 339.304607,484.147118 C338.630089,483.499509 337.721664,483.175705 336.579334,483.175705 C335.67635,483.175705 334.86312,483.39611 334.139644,483.836919 C333.416169,484.277728 332.850443,484.884521 332.442468,485.657297 C332.034494,486.430073 331.830506,487.295365 331.830506,488.253172 C331.830506,489.385127 332.186804,490.277629 332.8994,490.930679 C333.611997,491.58373 334.588417,491.910255 335.828661,491.910255 Z M339.223012,486.99605 L333.103388,486.99605 C333.320975,486.125316 333.734389,485.434171 334.343632,484.922615 C334.952874,484.411059 335.687229,484.155281 336.546696,484.155281 C337.362646,484.155281 338.015406,484.375685 338.504976,484.816494 C338.994546,485.257304 339.239331,485.880423 339.239331,486.685851 C339.239331,486.816461 339.233891,486.919861 339.223012,486.99605 L339.223012,486.99605 Z M342.290984,494.995918 L343.270124,490.032735 C343.520348,490.642249 343.922884,491.107547 344.47773,491.42863 C345.032575,491.749713 345.717973,491.910255 346.533923,491.910255 C347.458667,491.910255 348.290935,491.689851 349.03073,491.249041 C349.770525,490.808232 350.349849,490.198719 350.768703,489.4205 C351.187558,488.642282 351.396985,487.768827 351.396985,486.800135 C351.396985,486.060011 351.239234,485.417845 350.923734,484.873636 C350.608233,484.329428 350.1649,483.910387 349.593735,483.616514 C349.02257,483.322642 348.37253,483.175705 347.643615,483.175705 C346.958217,483.175705 346.332656,483.298152 345.76693,483.543046 C345.201205,483.78794 344.711635,484.144397 344.298221,484.612416 L344.298221,484.612416 L344.575644,483.24101 L343.465952,483.24101 L341.132335,494.995918 L342.290984,494.995918 Z M346.517604,490.881701 C345.625499,490.881701 344.931942,490.647691 344.436932,490.179671 C343.941922,489.711652 343.694418,489.058601 343.694418,488.22052 C343.694418,487.447744 343.854888,486.753877 344.175828,486.138922 C344.496768,485.523966 344.937381,485.045062 345.497667,484.702211 C346.057953,484.359359 346.691674,484.187933 347.39883,484.187933 C348.290935,484.187933 348.984493,484.424664 349.479502,484.898126 C349.974512,485.371587 350.222017,486.027359 350.222017,486.86544 C350.222017,487.638217 350.061547,488.329362 349.740606,488.938875 C349.419666,489.548389 348.979053,490.024572 348.418768,490.367423 C347.858482,490.710275 347.224761,490.881701 346.517604,490.881701 Z M353.991705,491.828624 L354.856612,487.469512 C355.06332,486.413747 355.463135,485.619202 356.056059,485.085878 C356.648982,484.552553 357.407816,484.285891 358.332559,484.285891 L358.332559,484.285891 L358.658939,484.302217 L358.871086,483.175705 C358.055136,483.175705 357.358859,483.309036 356.782254,483.575699 C356.205649,483.842361 355.726959,484.253238 355.346182,484.808331 L355.346182,484.808331 L355.639924,483.24101 L354.530232,483.24101 L352.833057,491.828624 L353.991705,491.828624 Z M362.151204,481.36349 C362.412308,481.36349 362.629895,481.276417 362.803964,481.10227 C362.978034,480.928123 363.065068,480.71044 363.065068,480.44922 C363.065068,480.253304 362.988913,480.081879 362.836602,479.934942 C362.684292,479.788006 362.493903,479.714538 362.265437,479.714538 C362.004333,479.714538 361.789467,479.79889 361.620837,479.967595 C361.452207,480.1363 361.367892,480.34582 361.367892,480.596156 C361.367892,480.802955 361.441328,480.982544 361.588199,481.134923 C361.73507,481.287301 361.922738,481.36349 362.151204,481.36349 Z M360.535624,491.828624 L362.232799,483.24101 L361.074151,483.24101 L359.376975,491.828624 L360.535624,491.828624 Z M367.177456,491.828624 L372.693277,483.24101 L371.485671,483.24101 L366.802119,490.571502 L365.023348,483.24101 L363.864699,483.24101 L365.986169,491.828624 L367.177456,491.828624 Z M376.528242,491.910255 C377.20276,491.910255 377.841921,491.798692 378.445724,491.575567 C379.049527,491.352441 379.552696,491.039521 379.955231,490.636807 L379.955231,490.636807 L379.433023,489.804167 C379.117523,490.141577 378.712268,490.405518 378.217258,490.595991 C377.722248,490.786464 377.191881,490.881701 376.626156,490.881701 C375.647016,490.881701 374.909941,490.653133 374.414931,490.195998 C373.919922,489.738862 373.672417,489.074928 373.672417,488.204194 C373.672417,488.051815 373.677857,487.937531 373.688736,487.861342 L373.688736,487.861342 L380.901733,487.861342 C380.977888,487.480396 381.015966,487.132103 381.015966,486.816461 C381.015966,485.684507 380.678707,484.794726 380.004188,484.147118 C379.32967,483.499509 378.421245,483.175705 377.278916,483.175705 C376.375931,483.175705 375.562701,483.39611 374.839225,483.836919 C374.11575,484.277728 373.550025,484.884521 373.14205,485.657297 C372.734075,486.430073 372.530087,487.295365 372.530087,488.253172 C372.530087,489.385127 372.886385,490.277629 373.598982,490.930679 C374.311578,491.58373 375.287998,491.910255 376.528242,491.910255 Z M379.922593,486.99605 L373.802969,486.99605 C374.020556,486.125316 374.43397,485.434171 375.043213,484.922615 C375.652455,484.411059 376.38681,484.155281 377.246278,484.155281 C378.062227,484.155281 378.714987,484.375685 379.204557,484.816494 C379.694127,485.257304 379.938912,485.880423 379.938912,486.685851 C379.938912,486.816461 379.933473,486.919861 379.922593,486.99605 L379.922593,486.99605 Z M386.123813,491.910255 C386.80921,491.910255 387.434772,491.785087 388.000497,491.534751 C388.566223,491.284415 389.055792,490.930679 389.469207,490.473544 L389.469207,490.473544 L389.191784,491.828624 L390.301476,491.828624 L392.716688,479.714538 L391.558039,479.714538 L390.497304,485.036899 C390.247079,484.438269 389.841824,483.978413 389.281539,483.65733 C388.721253,483.336247 388.038575,483.175705 387.233504,483.175705 C386.31964,483.175705 385.492811,483.39611 384.753017,483.836919 C384.013222,484.277728 383.433898,484.884521 383.015043,485.657297 C382.596189,486.430073 382.386762,487.300807 382.386762,488.269499 C382.386762,489.009623 382.544512,489.65451 382.860013,490.204161 C383.175514,490.753812 383.616126,491.175573 384.181852,491.469446 C384.747577,491.763319 385.394897,491.910255 386.123813,491.910255 Z M386.368597,490.881701 C385.476492,490.881701 384.782935,490.647691 384.287925,490.179671 C383.792916,489.711652 383.545411,489.058601 383.545411,488.22052 C383.545411,487.458628 383.705881,486.770204 384.026821,486.155248 C384.347762,485.540292 384.791094,485.058667 385.35682,484.710374 C385.922545,484.36208 386.558986,484.187933 387.266142,484.187933 C388.158248,484.187933 388.851805,484.424664 389.346815,484.898126 C389.841824,485.371587 390.089329,486.027359 390.089329,486.86544 C390.089329,487.627332 389.928859,488.315756 389.607919,488.930712 C389.286978,489.545668 388.843646,490.024572 388.27792,490.367423 C387.712195,490.710275 387.075754,490.881701 386.368597,490.881701 Z M395.164537,484.955268 C395.403883,484.955268 395.61331,484.865473 395.792819,484.685884 C395.972328,484.506296 396.062082,484.285891 396.062082,484.024671 C396.062082,483.785219 395.983207,483.583862 395.825457,483.420599 C395.667707,483.257337 395.469159,483.175705 395.229813,483.175705 C394.979589,483.175705 394.764722,483.2655 394.585213,483.445089 C394.405704,483.624677 394.31595,483.845082 394.31595,484.106302 C394.31595,484.345754 394.397545,484.547111 394.560734,484.710374 C394.723924,484.873636 394.925192,484.955268 395.164537,484.955268 Z M393.124663,494.212258 L394.364907,491.84495 C394.4737,491.649035 394.552575,491.491214 394.601532,491.371488 C394.650489,491.251762 394.674967,491.121152 394.674967,490.979658 C394.674967,490.740206 394.596092,490.538849 394.438342,490.375586 C394.280592,490.212324 394.082044,490.130693 393.842699,490.130693 C393.592474,490.130693 393.377607,490.220487 393.198098,490.400076 C393.018589,490.579665 392.928835,490.800069 392.928835,491.061289 C392.928835,491.224552 392.969632,491.374209 393.051227,491.510262 C393.132822,491.646314 393.244335,491.746992 393.385767,491.812297 L393.385767,491.812297 L392.341351,494.212258 L393.124663,494.212258 Z M403.666735,491.828624 L405.951395,480.400241 L402.067474,480.400241 L401.855327,481.445121 L404.547961,481.445121 L402.475449,491.828624 L403.666735,491.828624 Z M411.075561,491.926581 C412.207011,491.926581 413.20791,491.578288 414.078256,490.881701 C414.948603,490.185113 415.617682,489.26268 416.085493,488.114399 C416.553304,486.966119 416.78721,485.738928 416.78721,484.432827 C416.78721,483.137611 416.45811,482.125382 415.79991,481.396143 C415.141711,480.666903 414.230567,480.302283 413.066478,480.302283 C411.935028,480.302283 410.934129,480.650577 410.063783,481.347164 C409.193436,482.043751 408.524357,482.966185 408.056546,484.114465 C407.588735,485.262746 407.354829,486.489936 407.354829,487.796037 C407.354829,489.091254 407.683929,490.103482 408.342128,490.832722 C409.000328,491.561961 409.911472,491.926581 411.075561,491.926581 Z M411.173474,490.849048 C410.346645,490.849048 409.702045,490.585107 409.239673,490.057224 C408.777302,489.529342 408.546116,488.770171 408.546116,487.779711 C408.546116,486.767483 408.722905,485.766139 409.076483,484.775679 C409.430062,483.785219 409.94411,482.971627 410.618629,482.334903 C411.293147,481.698179 412.076459,481.379816 412.968564,481.379816 C413.795394,481.379816 414.439994,481.643758 414.902366,482.17164 C415.364737,482.699523 415.595923,483.458694 415.595923,484.449154 C415.595923,485.461382 415.419134,486.462726 415.065556,487.453186 C414.711977,488.443646 414.197929,489.257238 413.52341,489.893962 C412.848892,490.530686 412.06558,490.849048 411.173474,490.849048 Z M421.878737,491.926581 C423.010188,491.926581 424.011086,491.578288 424.881433,490.881701 C425.751779,490.185113 426.420858,489.26268 426.88867,488.114399 C427.356481,486.966119 427.590387,485.738928 427.590387,484.432827 C427.590387,483.137611 427.261287,482.125382 426.603087,481.396143 C425.944888,480.666903 425.033743,480.302283 423.869655,480.302283 C422.738204,480.302283 421.737306,480.650577 420.866959,481.347164 C419.996613,482.043751 419.327534,482.966185 418.859723,484.114465 C418.391911,485.262746 418.158006,486.489936 418.158006,487.796037 C418.158006,489.091254 418.487105,490.103482 419.145305,490.832722 C419.803505,491.561961 420.714649,491.926581 421.878737,491.926581 Z M421.976651,490.849048 C421.149822,490.849048 420.505222,490.585107 420.04285,490.057224 C419.580478,489.529342 419.349293,488.770171 419.349293,487.779711 C419.349293,486.767483 419.526082,485.766139 419.87966,484.775679 C420.233238,483.785219 420.747287,482.971627 421.421805,482.334903 C422.096324,481.698179 422.879636,481.379816 423.771741,481.379816 C424.59857,481.379816 425.243171,481.643758 425.705542,482.17164 C426.167914,482.699523 426.3991,483.458694 426.3991,484.449154 C426.3991,485.461382 426.222311,486.462726 425.868732,487.453186 C425.515154,488.443646 425.001106,489.257238 424.326587,489.893962 C423.652068,490.530686 422.868756,490.849048 421.976651,490.849048 Z M441.069879,484.7267 L441.282026,483.747124 L434.183262,483.747124 L433.987434,484.7267 L441.069879,484.7267 Z M440.335524,488.48174 L440.531352,487.518491 L433.432588,487.518491 L433.23676,488.48174 L440.335524,488.48174 Z M447.858582,491.828624 L450.273794,479.714538 L449.115145,479.714538 L446.699933,491.828624 L447.858582,491.828624 Z M455.006303,491.910255 C455.680822,491.910255 456.319983,491.798692 456.923785,491.575567 C457.527588,491.352441 458.030758,491.039521 458.433293,490.636807 L458.433293,490.636807 L457.911085,489.804167 C457.595584,490.141577 457.190329,490.405518 456.69532,490.595991 C456.20031,490.786464 455.669942,490.881701 455.104217,490.881701 C454.125077,490.881701 453.388003,490.653133 452.892993,490.195998 C452.397983,489.738862 452.150479,489.074928 452.150479,488.204194 C452.150479,488.051815 452.155918,487.937531 452.166798,487.861342 L452.166798,487.861342 L459.379795,487.861342 C459.45595,487.480396 459.494028,487.132103 459.494028,486.816461 C459.494028,485.684507 459.156768,484.794726 458.48225,484.147118 C457.807731,483.499509 456.899307,483.175705 455.756977,483.175705 C454.853993,483.175705 454.040763,483.39611 453.317287,483.836919 C452.593811,484.277728 452.028086,484.884521 451.620111,485.657297 C451.212136,486.430073 451.008149,487.295365 451.008149,488.253172 C451.008149,489.385127 451.364447,490.277629 452.077043,490.930679 C452.789639,491.58373 453.766059,491.910255 455.006303,491.910255 Z M458.400655,486.99605 L452.281031,486.99605 C452.498617,486.125316 452.912032,485.434171 453.521274,484.922615 C454.130517,484.411059 454.864872,484.155281 455.724339,484.155281 C456.540289,484.155281 457.193049,484.375685 457.682619,484.816494 C458.172189,485.257304 458.416974,485.880423 458.416974,486.685851 C458.416974,486.816461 458.411534,486.919861 458.400655,486.99605 L458.400655,486.99605 Z M464.601874,491.910255 C465.287272,491.910255 465.912834,491.785087 466.478559,491.534751 C467.044284,491.284415 467.533854,490.930679 467.947269,490.473544 L467.947269,490.473544 L467.669846,491.828624 L468.779538,491.828624 L470.493032,483.24101 L469.334383,483.24101 L468.975366,485.036899 C468.725141,484.438269 468.322606,483.978413 467.76776,483.65733 C467.212914,483.336247 466.527516,483.175705 465.711566,483.175705 C464.797702,483.175705 463.970873,483.39611 463.231078,483.836919 C462.491284,484.277728 461.911959,484.884521 461.493105,485.657297 C461.074251,486.430073 460.864824,487.300807 460.864824,488.269499 C460.864824,489.009623 461.022574,489.65451 461.338074,490.204161 C461.653575,490.753812 462.094188,491.175573 462.659913,491.469446 C463.225639,491.763319 463.872959,491.910255 464.601874,491.910255 Z M464.846659,490.881701 C463.954554,490.881701 463.260996,490.647691 462.765987,490.179671 C462.270977,489.711652 462.023472,489.058601 462.023472,488.22052 C462.023472,487.458628 462.183943,486.770204 462.504883,486.155248 C462.825823,485.540292 463.269156,485.058667 463.834881,484.710374 C464.400606,484.36208 465.037047,484.187933 465.744204,484.187933 C466.636309,484.187933 467.329867,484.424664 467.824876,484.898126 C468.319886,485.371587 468.567391,486.027359 468.567391,486.86544 C468.567391,487.627332 468.40692,488.315756 468.08598,488.930712 C467.76504,489.545668 467.321707,490.024572 466.755982,490.367423 C466.190257,490.710275 465.553816,490.881701 464.846659,490.881701 Z M474.507506,491.910255 C475.660715,491.910255 476.582738,491.673524 477.273576,491.200063 C477.964414,490.726601 478.309832,490.07083 478.309832,489.232748 C478.309832,488.753845 478.17928,488.372898 477.918176,488.08991 C477.657072,487.806921 477.344292,487.602843 476.979834,487.477675 C476.615376,487.352507 476.139406,487.224618 475.551922,487.094008 C475.073231,486.99605 474.695174,486.903535 474.417751,486.816461 C474.140328,486.729388 473.909143,486.598778 473.724194,486.424631 C473.539245,486.250484 473.446771,486.021917 473.446771,485.738928 C473.446771,485.260025 473.664358,484.879078 474.099531,484.59609 C474.534704,484.313101 475.143947,484.171607 475.927259,484.171607 C476.39507,484.171607 476.849282,484.234191 477.289895,484.359359 C477.730508,484.484527 478.114004,484.666837 478.440384,484.906289 L478.440384,484.906289 L478.929954,483.975692 C478.603574,483.73624 478.176561,483.543046 477.648913,483.39611 C477.121265,483.249173 476.580019,483.175705 476.025173,483.175705 C474.893722,483.175705 473.990738,483.417878 473.316219,483.902224 C472.6417,484.38657 472.304441,485.036899 472.304441,485.853212 C472.304441,486.353884 472.434993,486.745714 472.696097,487.028703 C472.957201,487.311691 473.272702,487.518491 473.642599,487.649101 C474.012496,487.779711 474.496627,487.910321 475.09499,488.040931 C475.595439,488.149773 475.976216,488.24773 476.23732,488.334804 C476.498424,488.421877 476.71873,488.547045 476.898239,488.710308 C477.077748,488.87357 477.167503,489.091254 477.167503,489.363358 C477.167503,489.853146 476.947196,490.231371 476.506583,490.498033 C476.06597,490.764696 475.437689,490.898027 474.621739,490.898027 C474.034255,490.898027 473.473969,490.810953 472.940882,490.636807 C472.407795,490.46266 471.978061,490.234092 471.651681,489.951104 L471.651681,489.951104 L471.096835,490.865374 C471.434095,491.170131 471.915505,491.420467 472.541067,491.616382 C473.166628,491.812297 473.822108,491.910255 474.507506,491.910255 Z M482.715962,491.910255 C483.499274,491.910255 484.135715,491.725224 484.625285,491.355162 L484.625285,491.355162 L484.347862,490.473544 C483.956206,490.767417 483.515593,490.914353 483.026023,490.914353 C482.199194,490.914353 481.785779,490.533407 481.785779,489.771515 C481.785779,489.673557 481.807538,489.493968 481.851055,489.232748 L481.851055,489.232748 L482.846514,484.220586 L485.457554,484.220586 L485.653382,483.24101 L483.042342,483.24101 L483.417679,481.36349 L482.25903,481.36349 L481.883693,483.24101 L480.349707,483.24101 L480.170198,484.220586 L481.687865,484.220586 L480.692406,489.281727 C480.648889,489.488526 480.62713,489.711652 480.62713,489.951104 C480.62713,490.560617 480.814799,491.039521 481.190136,491.387815 C481.565473,491.736108 482.074081,491.910255 482.715962,491.910255 Z M494.547235,491.910255 C495.232633,491.910255 495.858195,491.785087 496.42392,491.534751 C496.989646,491.284415 497.479215,490.930679 497.89263,490.473544 L497.89263,490.473544 L497.615207,491.828624 L498.724899,491.828624 L501.140111,479.714538 L499.981462,479.714538 L498.920727,485.036899 C498.670502,484.438269 498.265247,483.978413 497.704962,483.65733 C497.144676,483.336247 496.461998,483.175705 495.656927,483.175705 C494.743063,483.175705 493.916234,483.39611 493.17644,483.836919 C492.436645,484.277728 491.857321,484.884521 491.438466,485.657297 C491.019612,486.430073 490.810185,487.300807 490.810185,488.269499 C490.810185,489.009623 490.967935,489.65451 491.283436,490.204161 C491.598936,490.753812 492.039549,491.175573 492.605275,491.469446 C493.171,491.763319 493.81832,491.910255 494.547235,491.910255 Z M494.79202,490.881701 C493.899915,490.881701 493.206358,490.647691 492.711348,490.179671 C492.216339,489.711652 491.968834,489.058601 491.968834,488.22052 C491.968834,487.458628 492.129304,486.770204 492.450244,486.155248 C492.771185,485.540292 493.214517,485.058667 493.780243,484.710374 C494.345968,484.36208 494.982409,484.187933 495.689565,484.187933 C496.581671,484.187933 497.275228,484.424664 497.770238,484.898126 C498.265247,485.371587 498.512752,486.027359 498.512752,486.86544 C498.512752,487.627332 498.352282,488.315756 498.031342,488.930712 C497.710401,489.545668 497.267068,490.024572 496.701343,490.367423 C496.135618,490.710275 495.499177,490.881701 494.79202,490.881701 Z M505.87262,491.910255 C506.547139,491.910255 507.186299,491.798692 507.790102,491.575567 C508.393905,491.352441 508.897074,491.039521 509.29961,490.636807 L509.29961,490.636807 L508.777402,489.804167 C508.461901,490.141577 508.056646,490.405518 507.561636,490.595991 C507.066627,490.786464 506.536259,490.881701 505.970534,490.881701 C504.991394,490.881701 504.254319,490.653133 503.75931,490.195998 C503.2643,489.738862 503.016795,489.074928 503.016795,488.204194 C503.016795,488.051815 503.022235,487.937531 503.033114,487.861342 L503.033114,487.861342 L510.246112,487.861342 C510.322267,487.480396 510.360345,487.132103 510.360345,486.816461 C510.360345,485.684507 510.023085,484.794726 509.348567,484.147118 C508.674048,483.499509 507.765624,483.175705 506.623294,483.175705 C505.720309,483.175705 504.907079,483.39611 504.183604,483.836919 C503.460128,484.277728 502.894403,484.884521 502.486428,485.657297 C502.078453,486.430073 501.874466,487.295365 501.874466,488.253172 C501.874466,489.385127 502.230764,490.277629 502.94336,490.930679 C503.655956,491.58373 504.632376,491.910255 505.87262,491.910255 Z M509.266972,486.99605 L503.147347,486.99605 C503.364934,486.125316 503.778349,485.434171 504.387591,484.922615 C504.996834,484.411059 505.731189,484.155281 506.590656,484.155281 C507.406606,484.155281 508.059366,484.375685 508.548936,484.816494 C509.038506,485.257304 509.283291,485.880423 509.283291,486.685851 C509.283291,486.816461 509.277851,486.919861 509.266972,486.99605 L509.266972,486.99605 Z M512.334943,494.995918 L513.314083,490.032735 C513.564308,490.642249 513.966843,491.107547 514.521689,491.42863 C515.076535,491.749713 515.761933,491.910255 516.577883,491.910255 C517.502626,491.910255 518.334895,491.689851 519.07469,491.249041 C519.814484,490.808232 520.393809,490.198719 520.812663,489.4205 C521.231517,488.642282 521.440944,487.768827 521.440944,486.800135 C521.440944,486.060011 521.283194,485.417845 520.967693,484.873636 C520.652193,484.329428 520.20886,483.910387 519.637695,483.616514 C519.06653,483.322642 518.41649,483.175705 517.687575,483.175705 C517.002177,483.175705 516.376615,483.298152 515.81089,483.543046 C515.245165,483.78794 514.755595,484.144397 514.34218,484.612416 L514.34218,484.612416 L514.619603,483.24101 L513.509911,483.24101 L511.176294,494.995918 L512.334943,494.995918 Z M516.561564,490.881701 C515.669459,490.881701 514.975901,490.647691 514.480892,490.179671 C513.985882,489.711652 513.738377,489.058601 513.738377,488.22052 C513.738377,487.447744 513.898847,486.753877 514.219788,486.138922 C514.540728,485.523966 514.981341,485.045062 515.541626,484.702211 C516.101912,484.359359 516.735633,484.187933 517.44279,484.187933 C518.334895,484.187933 519.028452,484.424664 519.523462,484.898126 C520.018472,485.371587 520.265976,486.027359 520.265976,486.86544 C520.265976,487.638217 520.105506,488.329362 519.784566,488.938875 C519.463626,489.548389 519.023013,490.024572 518.462727,490.367423 C517.902441,490.710275 517.26872,490.881701 516.561564,490.881701 Z M524.035665,491.828624 L524.900572,487.469512 C525.107279,486.413747 525.507095,485.619202 526.100018,485.085878 C526.692942,484.552553 527.451775,484.285891 528.376518,484.285891 L528.376518,484.285891 L528.702898,484.302217 L528.915045,483.175705 C528.099095,483.175705 527.402818,483.309036 526.826214,483.575699 C526.249609,483.842361 525.770918,484.253238 525.390142,484.808331 L525.390142,484.808331 L525.683884,483.24101 L524.574192,483.24101 L522.877016,491.828624 L524.035665,491.828624 Z M532.195164,481.36349 C532.456268,481.36349 532.673855,481.276417 532.847924,481.10227 C533.021993,480.928123 533.109028,480.71044 533.109028,480.44922 C533.109028,480.253304 533.032872,480.081879 532.880562,479.934942 C532.728251,479.788006 532.537863,479.714538 532.309397,479.714538 C532.048293,479.714538 531.833426,479.79889 531.664796,479.967595 C531.496167,480.1363 531.411852,480.34582 531.411852,480.596156 C531.411852,480.802955 531.485288,480.982544 531.632158,481.134923 C531.779029,481.287301 531.966698,481.36349 532.195164,481.36349 Z M530.579583,491.828624 L532.276759,483.24101 L531.11811,483.24101 L529.420934,491.828624 L530.579583,491.828624 Z M537.221415,491.828624 L542.737237,483.24101 L541.529631,483.24101 L536.846078,490.571502 L535.067308,483.24101 L533.908659,483.24101 L536.030128,491.828624 L537.221415,491.828624 Z M546.572201,491.910255 C547.24672,491.910255 547.885881,491.798692 548.489683,491.575567 C549.093486,491.352441 549.596656,491.039521 549.999191,490.636807 L549.999191,490.636807 L549.476983,489.804167 C549.161482,490.141577 548.756227,490.405518 548.261217,490.595991 C547.766208,490.786464 547.23584,490.881701 546.670115,490.881701 C545.690975,490.881701 544.953901,490.653133 544.458891,490.195998 C543.963881,489.738862 543.716377,489.074928 543.716377,488.204194 C543.716377,488.051815 543.721816,487.937531 543.732696,487.861342 L543.732696,487.861342 L550.945693,487.861342 C551.021848,487.480396 551.059926,487.132103 551.059926,486.816461 C551.059926,485.684507 550.722666,484.794726 550.048148,484.147118 C549.373629,483.499509 548.465205,483.175705 547.322875,483.175705 C546.419891,483.175705 545.60666,483.39611 544.883185,483.836919 C544.159709,484.277728 543.593984,484.884521 543.186009,485.657297 C542.778034,486.430073 542.574047,487.295365 542.574047,488.253172 C542.574047,489.385127 542.930345,490.277629 543.642941,490.930679 C544.355537,491.58373 545.331957,491.910255 546.572201,491.910255 Z M549.966553,486.99605 L543.846929,486.99605 C544.064515,486.125316 544.47793,485.434171 545.087172,484.922615 C545.696415,484.411059 546.43077,484.155281 547.290237,484.155281 C548.106187,484.155281 548.758947,484.375685 549.248517,484.816494 C549.738087,485.257304 549.982872,485.880423 549.982872,486.685851 C549.982872,486.816461 549.977432,486.919861 549.966553,486.99605 L549.966553,486.99605 Z M556.167772,491.910255 C556.85317,491.910255 557.478732,491.785087 558.044457,491.534751 C558.610182,491.284415 559.099752,490.930679 559.513167,490.473544 L559.513167,490.473544 L559.235744,491.828624 L560.345436,491.828624 L562.760647,479.714538 L561.601998,479.714538 L560.541264,485.036899 C560.291039,484.438269 559.885784,483.978413 559.325498,483.65733 C558.765213,483.336247 558.082534,483.175705 557.277464,483.175705 C556.3636,483.175705 555.536771,483.39611 554.796976,483.836919 C554.057182,484.277728 553.477857,484.884521 553.059003,485.657297 C552.640149,486.430073 552.430721,487.300807 552.430721,488.269499 C552.430721,489.009623 552.588472,489.65451 552.903972,490.204161 C553.219473,490.753812 553.660086,491.175573 554.225811,491.469446 C554.791537,491.763319 555.438857,491.910255 556.167772,491.910255 Z M556.412557,490.881701 C555.520452,490.881701 554.826894,490.647691 554.331885,490.179671 C553.836875,489.711652 553.58937,489.058601 553.58937,488.22052 C553.58937,487.458628 553.749841,486.770204 554.070781,486.155248 C554.391721,485.540292 554.835054,485.058667 555.400779,484.710374 C555.966504,484.36208 556.602945,484.187933 557.310102,484.187933 C558.202207,484.187933 558.895765,484.424664 559.390774,484.898126 C559.885784,485.371587 560.133289,486.027359 560.133289,486.86544 C560.133289,487.627332 559.972818,488.315756 559.651878,488.930712 C559.330938,489.545668 558.887605,490.024572 558.32188,490.367423 C557.756155,490.710275 557.119714,490.881701 556.412557,490.881701 Z M563.968253,494.995918 C565.088824,493.624512 565.98093,491.953792 566.644569,489.983756 C567.308208,488.013721 567.640028,486.032801 567.640028,484.040997 C567.640028,483.300873 567.572032,482.547144 567.43604,481.77981 C567.300049,481.012476 567.11782,480.324052 566.889354,479.714538 L566.889354,479.714538 L565.844938,479.714538 C566.30187,481.12948 566.530336,482.549865 566.530336,483.975692 C566.530336,485.913075 566.193077,487.872226 565.518558,489.853146 C564.844039,491.834066 563.930175,493.548323 562.776966,494.995918 L562.776966,494.995918 L563.968253,494.995918 Z\",\"id\":\"PercentileofSESdistribution(1=moredeprived;100=leastdeprived)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"-2.57485516e-13\",\"y1\":\"15.0563481\",\"x2\":\"30.8099777\",\"y2\":\"15.0563481\",\"id\":\"Line-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":2})]),React.createElement(\"path\",{\"d\":\"M109.897511,436.898876 L109.897511,425.101124 L106,425.101124 L106,426.179775 L108.713457,426.179775 L108.713457,436.898876 L109.897511,436.898876 Z M117.232068,437 C118.120109,437 118.912219,436.758427 119.608399,436.275281 C120.304579,435.792135 120.850011,435.098315 121.244696,434.19382 C121.63938,433.289326 121.836723,432.224719 121.836723,431 C121.836723,429.775281 121.63938,428.710674 121.244696,427.80618 C120.850011,426.901685 120.304579,426.207865 119.608399,425.724719 C118.912219,425.241573 118.120109,425 117.232068,425 C116.344028,425 115.551917,425.241573 114.855737,425.724719 C114.159558,426.207865 113.616866,426.901685 113.227663,427.80618 C112.83846,428.710674 112.643859,429.775281 112.643859,431 C112.643859,432.224719 112.83846,433.289326 113.227663,434.19382 C113.616866,435.098315 114.159558,435.792135 114.855737,436.275281 C115.551917,436.758427 116.344028,437 117.232068,437 Z M117.232068,435.88764 C116.563297,435.88764 115.974011,435.696629 115.46421,435.314607 C114.954409,434.932584 114.556983,434.376404 114.271933,433.646067 C113.986883,432.91573 113.844358,432.033708 113.844358,431 C113.844358,429.966292 113.986883,429.08427 114.271933,428.353933 C114.556983,427.623596 114.954409,427.067416 115.46421,426.685393 C115.974011,426.303371 116.563297,426.11236 117.232068,426.11236 C117.900839,426.11236 118.490126,426.303371 118.999927,426.685393 C119.509728,427.067416 119.907153,427.623596 120.192203,428.353933 C120.477253,429.08427 120.619778,429.966292 120.619778,431 C120.619778,432.033708 120.477253,432.91573 120.192203,433.646067 C119.907153,434.376404 119.509728,434.932584 118.999927,435.314607 C118.490126,435.696629 117.900839,435.88764 117.232068,435.88764 Z M125.553337,432.106039 C126.224849,432.106039 126.771652,431.850421 127.193745,431.339185 C127.615838,430.827949 127.826885,430.149579 127.826885,429.304073 C127.826885,428.458567 127.615838,427.780197 127.193745,427.268961 C126.771652,426.757725 126.224849,426.502107 125.553337,426.502107 C124.872232,426.502107 124.323031,426.760183 123.905734,427.276334 C123.488437,427.792486 123.279789,428.468399 123.279789,429.304073 C123.279789,430.139747 123.488437,430.81566 123.905734,431.331812 C124.323031,431.847963 124.872232,432.106039 125.553337,432.106039 Z M125.625284,436.898876 L132.503487,426.575843 L131.654504,426.575843 L124.776301,436.898876 L125.625284,436.898876 Z M125.553337,431.442416 C125.073685,431.442416 124.694761,431.250702 124.416563,430.867275 C124.138365,430.483848 123.999266,429.962781 123.999266,429.304073 C123.999266,428.645365 124.138365,428.124298 124.416563,427.740871 C124.694761,427.357444 125.073685,427.16573 125.553337,427.16573 C126.023395,427.16573 126.399922,427.354986 126.682916,427.733497 C126.96591,428.112008 127.107408,428.635534 127.107408,429.304073 C127.107408,429.972612 126.96591,430.496138 126.682916,430.874649 C126.399922,431.25316 126.023395,431.442416 125.553337,431.442416 Z M131.726452,436.972612 C132.407557,436.972612 132.956758,436.714537 133.374055,436.198385 C133.791352,435.682233 134,435.00632 134,434.170646 C134,433.334972 133.791352,432.659059 133.374055,432.142907 C132.956758,431.626756 132.407557,431.36868 131.726452,431.36868 C131.05494,431.36868 130.508137,431.626756 130.086044,432.142907 C129.66395,432.659059 129.452904,433.334972 129.452904,434.170646 C129.452904,435.00632 129.66395,435.682233 130.086044,436.198385 C130.508137,436.714537 131.05494,436.972612 131.726452,436.972612 Z M131.726452,436.308989 C131.256393,436.308989 130.879867,436.119733 130.596872,435.741222 C130.313878,435.362711 130.172381,434.839185 130.172381,434.170646 C130.172381,433.502107 130.313878,432.978581 130.596872,432.60007 C130.879867,432.221559 131.256393,432.032303 131.726452,432.032303 C132.206103,432.032303 132.585028,432.224017 132.863226,432.607444 C133.141424,432.990871 133.280523,433.511938 133.280523,434.170646 C133.280523,434.829354 133.141424,435.350421 132.863226,435.733848 C132.585028,436.117275 132.206103,436.308989 131.726452,436.308989 Z\",\"id\":\"10%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M222.350937,436.898876 L222.350937,435.820225 L216.071424,435.820225 L219.953305,431.876404 C220.681837,431.146067 221.176587,430.5 221.437553,429.938202 C221.69852,429.376404 221.829004,428.792135 221.829004,428.185393 C221.829004,427.196629 221.489203,426.418539 220.809602,425.851124 C220.130001,425.283708 219.208462,425 218.044985,425 C217.175096,425 216.394914,425.146067 215.704439,425.438202 C215.013965,425.730337 214.445818,426.146067 214,426.685393 L214,426.685393 L214.831832,427.426966 C215.571238,426.550562 216.609668,426.11236 217.947123,426.11236 C218.806138,426.11236 219.466711,426.30618 219.928839,426.69382 C220.390968,427.081461 220.622032,427.623596 220.622032,428.320225 C220.622032,428.769663 220.516014,429.216292 220.303979,429.660112 C220.091943,430.103933 219.686901,430.629213 219.088852,431.235955 L219.088852,431.235955 L214.342519,436.039326 L214.342519,436.898876 L222.350937,436.898876 Z M228.369484,437 C229.250247,437 230.035865,436.758427 230.72634,436.275281 C231.416815,435.792135 231.957777,435.098315 232.349227,434.19382 C232.740677,433.289326 232.936402,432.224719 232.936402,431 C232.936402,429.775281 232.740677,428.710674 232.349227,427.80618 C231.957777,426.901685 231.416815,426.207865 230.72634,425.724719 C230.035865,425.241573 229.250247,425 228.369484,425 C227.488721,425 226.703102,425.241573 226.012627,425.724719 C225.322153,426.207865 224.783909,426.901685 224.397895,427.80618 C224.011882,428.710674 223.818875,429.775281 223.818875,431 C223.818875,432.224719 224.011882,433.289326 224.397895,434.19382 C224.783909,435.098315 225.322153,435.792135 226.012627,436.275281 C226.703102,436.758427 227.488721,437 228.369484,437 Z M228.369484,435.88764 C227.706193,435.88764 227.121736,435.696629 226.616113,435.314607 C226.11049,434.932584 225.716321,434.376404 225.433607,433.646067 C225.150893,432.91573 225.009536,432.033708 225.009536,431 C225.009536,429.966292 225.150893,429.08427 225.433607,428.353933 C225.716321,427.623596 226.11049,427.067416 226.616113,426.685393 C227.121736,426.303371 227.706193,426.11236 228.369484,426.11236 C229.032774,426.11236 229.617231,426.303371 230.122854,426.685393 C230.628477,427.067416 231.022646,427.623596 231.30536,428.353933 C231.588074,429.08427 231.729431,429.966292 231.729431,431 C231.729431,432.033708 231.588074,432.91573 231.30536,433.646067 C231.022646,434.376404 230.628477,434.932584 230.122854,435.314607 C229.617231,435.696629 229.032774,435.88764 228.369484,435.88764 Z M236.622558,432.106039 C237.288567,432.106039 237.830889,431.850421 238.249523,431.339185 C238.668157,430.827949 238.877475,430.149579 238.877475,429.304073 C238.877475,428.458567 238.668157,427.780197 238.249523,427.268961 C237.830889,426.757725 237.288567,426.502107 236.622558,426.502107 C235.947035,426.502107 235.402335,426.760183 234.988458,427.276334 C234.574581,427.792486 234.367642,428.468399 234.367642,429.304073 C234.367642,430.139747 234.574581,430.81566 234.988458,431.331812 C235.402335,431.847963 235.947035,432.106039 236.622558,432.106039 Z M236.693916,436.898876 L243.515751,426.575843 L242.673726,426.575843 L235.851891,436.898876 L236.693916,436.898876 Z M236.622558,431.442416 C236.146838,431.442416 235.771018,431.250702 235.4951,430.867275 C235.219182,430.483848 235.081223,429.962781 235.081223,429.304073 C235.081223,428.645365 235.219182,428.124298 235.4951,427.740871 C235.771018,427.357444 236.146838,427.16573 236.622558,427.16573 C237.088765,427.16573 237.462205,427.354986 237.742881,427.733497 C238.023556,428.112008 238.163893,428.635534 238.163893,429.304073 C238.163893,429.972612 238.023556,430.496138 237.742881,430.874649 C237.462205,431.25316 237.088765,431.442416 236.622558,431.442416 Z M242.745084,436.972612 C243.420607,436.972612 243.965307,436.714537 244.379184,436.198385 C244.793061,435.682233 245,435.00632 245,434.170646 C245,433.334972 244.793061,432.659059 244.379184,432.142907 C243.965307,431.626756 243.420607,431.36868 242.745084,431.36868 C242.079075,431.36868 241.536753,431.626756 241.118119,432.142907 C240.699485,432.659059 240.490168,433.334972 240.490168,434.170646 C240.490168,435.00632 240.699485,435.682233 241.118119,436.198385 C241.536753,436.714537 242.079075,436.972612 242.745084,436.972612 Z M242.745084,436.308989 C242.278878,436.308989 241.905437,436.119733 241.624762,435.741222 C241.344086,435.362711 241.203749,434.839185 241.203749,434.170646 C241.203749,433.502107 241.344086,432.978581 241.624762,432.60007 C241.905437,432.221559 242.278878,432.032303 242.745084,432.032303 C243.220805,432.032303 243.596624,432.224017 243.872542,432.607444 C244.14846,432.990871 244.286419,433.511938 244.286419,434.170646 C244.286419,434.829354 244.14846,435.350421 243.872542,435.733848 C243.596624,436.117275 243.220805,436.308989 242.745084,436.308989 Z\",\"id\":\"20%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M325.099442,437 C325.988739,437 326.742473,436.848315 327.360643,436.544944 C327.978813,436.241573 328.445151,435.828652 328.759659,435.30618 C329.074166,434.783708 329.23142,434.185393 329.23142,433.511236 C329.23142,432.544944 328.919624,431.761236 328.296031,431.160112 C327.672439,430.558989 326.764163,430.224719 325.571204,430.157303 L325.571204,430.157303 L328.792194,425.960674 L328.792194,425.101124 L321.471761,425.101124 L321.471761,426.179775 L327.295572,426.179775 L324.139652,430.275281 L324.139652,431.168539 L324.953034,431.168539 C325.983317,431.168539 326.753318,431.376404 327.263037,431.792135 C327.772756,432.207865 328.027616,432.780899 328.027616,433.511236 C328.027616,434.252809 327.772756,434.83427 327.263037,435.255618 C326.753318,435.676966 326.03212,435.88764 325.099442,435.88764 C324.383667,435.88764 323.711271,435.761236 323.082256,435.508427 C322.453241,435.255618 321.948945,434.926966 321.569367,434.522472 L321.569367,434.522472 L321,435.483146 C321.444649,435.94382 322.032994,436.311798 322.765038,436.587079 C323.497081,436.86236 324.275216,437 325.099442,437 Z M335.413119,437 C336.291571,437 337.075128,436.758427 337.763791,436.275281 C338.452454,435.792135 338.991997,435.098315 339.38242,434.19382 C339.772844,433.289326 339.968055,432.224719 339.968055,431 C339.968055,429.775281 339.772844,428.710674 339.38242,427.80618 C338.991997,426.901685 338.452454,426.207865 337.763791,425.724719 C337.075128,425.241573 336.291571,425 335.413119,425 C334.534667,425 333.75111,425.241573 333.062447,425.724719 C332.373784,426.207865 331.836952,426.901685 331.451951,427.80618 C331.066951,428.710674 330.874451,429.775281 330.874451,431 C330.874451,432.224719 331.066951,433.289326 331.451951,434.19382 C331.836952,435.098315 332.373784,435.792135 333.062447,436.275281 C333.75111,436.758427 334.534667,437 335.413119,437 Z M335.413119,435.88764 C334.751569,435.88764 334.168645,435.696629 333.664349,435.314607 C333.160052,434.932584 332.766918,434.376404 332.484946,433.646067 C332.202974,432.91573 332.061988,432.033708 332.061988,431 C332.061988,429.966292 332.202974,429.08427 332.484946,428.353933 C332.766918,427.623596 333.160052,427.067416 333.664349,426.685393 C334.168645,426.303371 334.751569,426.11236 335.413119,426.11236 C336.074669,426.11236 336.657593,426.303371 337.161889,426.685393 C337.666186,427.067416 338.05932,427.623596 338.341292,428.353933 C338.623264,429.08427 338.764251,429.966292 338.764251,431 C338.764251,432.033708 338.623264,432.91573 338.341292,433.646067 C338.05932,434.376404 337.666186,434.932584 337.161889,435.314607 C336.657593,435.696629 336.074669,435.88764 335.413119,435.88764 Z M343.644539,432.106039 C344.308801,432.106039 344.849699,431.850421 345.267235,431.339185 C345.684771,430.827949 345.893539,430.149579 345.893539,429.304073 C345.893539,428.458567 345.684771,427.780197 345.267235,427.268961 C344.849699,426.757725 344.308801,426.502107 343.644539,426.502107 C342.970788,426.502107 342.427517,426.760183 342.014726,427.276334 C341.601935,427.792486 341.39554,428.468399 341.39554,429.304073 C341.39554,430.139747 341.601935,430.81566 342.014726,431.331812 C342.427517,431.847963 342.970788,432.106039 343.644539,432.106039 Z M343.71571,436.898876 L350.519646,426.575843 L349.679829,426.575843 L342.875894,436.898876 L343.71571,436.898876 Z M343.644539,431.442416 C343.170067,431.442416 342.795233,431.250702 342.520039,430.867275 C342.244845,430.483848 342.107248,429.962781 342.107248,429.304073 C342.107248,428.645365 342.244845,428.124298 342.520039,427.740871 C342.795233,427.357444 343.170067,427.16573 343.644539,427.16573 C344.109522,427.16573 344.481983,427.354986 344.761922,427.733497 C345.041861,428.112008 345.18183,428.635534 345.18183,429.304073 C345.18183,429.972612 345.041861,430.496138 344.761922,430.874649 C344.481983,431.25316 344.109522,431.442416 343.644539,431.442416 Z M349.751,436.972612 C350.424751,436.972612 350.968022,436.714537 351.380813,436.198385 C351.793604,435.682233 352,435.00632 352,434.170646 C352,433.334972 351.793604,432.659059 351.380813,432.142907 C350.968022,431.626756 350.424751,431.36868 349.751,431.36868 C349.086739,431.36868 348.54584,431.626756 348.128304,432.142907 C347.710769,432.659059 347.502001,433.334972 347.502001,434.170646 C347.502001,435.00632 347.710769,435.682233 348.128304,436.198385 C348.54584,436.714537 349.086739,436.972612 349.751,436.972612 Z M349.751,436.308989 C349.286017,436.308989 348.913556,436.119733 348.633618,435.741222 C348.353679,435.362711 348.213709,434.839185 348.213709,434.170646 C348.213709,433.502107 348.353679,432.978581 348.633618,432.60007 C348.913556,432.221559 349.286017,432.032303 349.751,432.032303 C350.225473,432.032303 350.600306,432.224017 350.8755,432.607444 C351.150694,432.990871 351.288291,433.511938 351.288291,434.170646 C351.288291,434.829354 351.150694,435.350421 350.8755,435.733848 C350.600306,436.117275 350.225473,436.308989 349.751,436.308989 Z\",\"id\":\"30%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M434.579535,436.898876 L434.579535,433.797753 L436.851772,433.797753 L436.851772,432.719101 L434.579535,432.719101 L434.579535,429.988764 L433.443416,429.988764 L433.443416,432.719101 L428.509415,432.719101 L434.31985,425.101124 L433.021429,425.101124 L427,432.921348 L427,433.797753 L433.410955,433.797753 L433.410955,436.898876 L434.579535,436.898876 Z M442.451214,437 C443.327649,437 444.109406,436.758427 444.796488,436.275281 C445.483569,435.792135 446.021873,435.098315 446.411399,434.19382 C446.800926,433.289326 446.995689,432.224719 446.995689,431 C446.995689,429.775281 446.800926,428.710674 446.411399,427.80618 C446.021873,426.901685 445.483569,426.207865 444.796488,425.724719 C444.109406,425.241573 443.327649,425 442.451214,425 C441.57478,425 440.793022,425.241573 440.105941,425.724719 C439.418859,426.207865 438.88326,426.901685 438.499144,427.80618 C438.115028,428.710674 437.92297,429.775281 437.92297,431 C437.92297,432.224719 438.115028,433.289326 438.499144,434.19382 C438.88326,435.098315 439.418859,435.792135 440.105941,436.275281 C440.793022,436.758427 441.57478,437 442.451214,437 Z M442.451214,435.88764 C441.791183,435.88764 441.209599,435.696629 440.70646,435.314607 C440.203322,434.932584 439.811091,434.376404 439.529766,433.646067 C439.248441,432.91573 439.107779,432.033708 439.107779,431 C439.107779,429.966292 439.248441,429.08427 439.529766,428.353933 C439.811091,427.623596 440.203322,427.067416 440.70646,426.685393 C441.209599,426.303371 441.791183,426.11236 442.451214,426.11236 C443.111245,426.11236 443.69283,426.303371 444.195968,426.685393 C444.699106,427.067416 445.091338,427.623596 445.372662,428.353933 C445.653987,429.08427 445.794649,429.966292 445.794649,431 C445.794649,432.033708 445.653987,432.91573 445.372662,433.646067 C445.091338,434.376404 444.699106,434.932584 444.195968,435.314607 C443.69283,435.696629 443.111245,435.88764 442.451214,435.88764 Z M450.663729,432.106039 C451.326465,432.106039 451.866121,431.850421 452.282698,431.339185 C452.699275,430.827949 452.907564,430.149579 452.907564,429.304073 C452.907564,428.458567 452.699275,427.780197 452.282698,427.268961 C451.866121,426.757725 451.326465,426.502107 450.663729,426.502107 C449.991526,426.502107 449.449502,426.760183 449.037659,427.276334 C448.625816,427.792486 448.419895,428.468399 448.419895,429.304073 C448.419895,430.139747 448.625816,430.81566 449.037659,431.331812 C449.449502,431.847963 449.991526,432.106039 450.663729,432.106039 Z M450.734737,436.898876 L457.523046,426.575843 L456.685158,426.575843 L449.896849,436.898876 L450.734737,436.898876 Z M450.663729,431.442416 C450.190346,431.442416 449.816374,431.250702 449.541812,430.867275 C449.26725,430.483848 449.129969,429.962781 449.129969,429.304073 C449.129969,428.645365 449.26725,428.124298 449.541812,427.740871 C449.816374,427.357444 450.190346,427.16573 450.663729,427.16573 C451.127644,427.16573 451.49925,427.354986 451.778546,427.733497 C452.057841,428.112008 452.197489,428.635534 452.197489,429.304073 C452.197489,429.972612 452.057841,430.496138 451.778546,430.874649 C451.49925,431.25316 451.127644,431.442416 450.663729,431.442416 Z M456.756166,436.972612 C457.428369,436.972612 457.970392,436.714537 458.382235,436.198385 C458.794078,435.682233 459,435.00632 459,434.170646 C459,433.334972 458.794078,432.659059 458.382235,432.142907 C457.970392,431.626756 457.428369,431.36868 456.756166,431.36868 C456.09343,431.36868 455.553773,431.626756 455.137196,432.142907 C454.72062,432.659059 454.512331,433.334972 454.512331,434.170646 C454.512331,435.00632 454.72062,435.682233 455.137196,436.198385 C455.553773,436.714537 456.09343,436.972612 456.756166,436.972612 Z M456.756166,436.308989 C456.29225,436.308989 455.920645,436.119733 455.641349,435.741222 C455.362053,435.362711 455.222405,434.839185 455.222405,434.170646 C455.222405,433.502107 455.362053,432.978581 455.641349,432.60007 C455.920645,432.221559 456.29225,432.032303 456.756166,432.032303 C457.229548,432.032303 457.603521,432.224017 457.878083,432.607444 C458.152645,432.990871 458.289926,433.511938 458.289926,434.170646 C458.289926,434.829354 458.152645,435.350421 457.878083,435.733848 C457.603521,436.117275 457.229548,436.308989 456.756166,436.308989 Z\",\"id\":\"40%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M544.106881,437 C545.01225,437 545.775813,436.845506 546.397572,436.536517 C547.019331,436.227528 547.48565,435.803371 547.79653,435.264045 C548.107409,434.724719 548.262849,434.11236 548.262849,433.426966 C548.262849,432.325843 547.883794,431.469101 547.125685,430.856742 C546.367575,430.244382 545.159508,429.938202 543.501484,429.938202 L543.501484,429.938202 L542.028898,429.938202 L542.421587,426.179775 L547.657452,426.179775 L547.657452,425.101124 L541.390777,425.101124 L540.801742,431.016854 L543.239691,431.016854 C544.625014,431.016854 545.609465,431.224719 546.193046,431.640449 C546.776627,432.05618 547.068417,432.668539 547.068417,433.477528 C547.068417,434.207865 546.809351,434.792135 546.291219,435.230337 C545.773086,435.668539 545.03952,435.88764 544.090519,435.88764 C543.370588,435.88764 542.699743,435.761236 542.077984,435.508427 C541.456225,435.255618 540.954454,434.926966 540.572673,434.522472 L540.572673,434.522472 L540,435.483146 C540.44723,435.94382 541.038992,436.311798 541.775285,436.587079 C542.511579,436.86236 543.288777,437 544.106881,437 Z M554.316817,437 C555.200369,437 555.988476,436.758427 556.681137,436.275281 C557.373799,435.792135 557.916474,435.098315 558.309164,434.19382 C558.701854,433.289326 558.898199,432.224719 558.898199,431 C558.898199,429.775281 558.701854,428.710674 558.309164,427.80618 C557.916474,426.901685 557.373799,426.207865 556.681137,425.724719 C555.988476,425.241573 555.200369,425 554.316817,425 C553.433265,425 552.645158,425.241573 551.952497,425.724719 C551.259836,426.207865 550.719887,426.901685 550.332652,427.80618 C549.945416,428.710674 549.751798,429.775281 549.751798,431 C549.751798,432.224719 549.945416,433.289326 550.332652,434.19382 C550.719887,435.098315 551.259836,435.792135 551.952497,436.275281 C552.645158,436.758427 553.433265,437 554.316817,437 Z M554.316817,435.88764 C553.651426,435.88764 553.065118,435.696629 552.557894,435.314607 C552.05067,434.932584 551.655253,434.376404 551.371643,433.646067 C551.088034,432.91573 550.946229,432.033708 550.946229,431 C550.946229,429.966292 551.088034,429.08427 551.371643,428.353933 C551.655253,427.623596 552.05067,427.067416 552.557894,426.685393 C553.065118,426.303371 553.651426,426.11236 554.316817,426.11236 C554.982208,426.11236 555.568516,426.303371 556.075741,426.685393 C556.582965,427.067416 556.978382,427.623596 557.261991,428.353933 C557.5456,429.08427 557.687405,429.966292 557.687405,431 C557.687405,432.033708 557.5456,432.91573 557.261991,433.646067 C556.978382,434.376404 556.582965,434.932584 556.075741,435.314607 C555.568516,435.696629 554.982208,435.88764 554.316817,435.88764 Z M562.596028,432.106039 C563.264146,432.106039 563.808185,431.850421 564.228145,431.339185 C564.648105,430.827949 564.858085,430.149579 564.858085,429.304073 C564.858085,428.458567 564.648105,427.780197 564.228145,427.268961 C563.808185,426.757725 563.264146,426.502107 562.596028,426.502107 C561.918366,426.502107 561.37194,426.760183 560.956753,427.276334 C560.541565,427.792486 560.333971,428.468399 560.333971,429.304073 C560.333971,430.139747 560.541565,430.81566 560.956753,431.331812 C561.37194,431.847963 561.918366,432.106039 562.596028,432.106039 Z M562.667612,436.898876 L569.511051,426.575843 L568.666359,426.575843 L561.82292,436.898876 L562.667612,436.898876 Z M562.596028,431.442416 C562.118801,431.442416 561.741791,431.250702 561.465,430.867275 C561.188208,430.483848 561.049812,429.962781 561.049812,429.304073 C561.049812,428.645365 561.188208,428.124298 561.465,427.740871 C561.741791,427.357444 562.118801,427.16573 562.596028,427.16573 C563.063711,427.16573 563.438334,427.354986 563.719898,427.733497 C564.001462,428.112008 564.142245,428.635534 564.142245,429.304073 C564.142245,429.972612 564.001462,430.496138 563.719898,430.874649 C563.438334,431.25316 563.063711,431.442416 562.596028,431.442416 Z M568.737943,436.972612 C569.415606,436.972612 569.962031,436.714537 570.377218,436.198385 C570.792406,435.682233 571,435.00632 571,434.170646 C571,433.334972 570.792406,432.659059 570.377218,432.142907 C569.962031,431.626756 569.415606,431.36868 568.737943,431.36868 C568.069825,431.36868 567.525786,431.626756 567.105826,432.142907 C566.685866,432.659059 566.475886,433.334972 566.475886,434.170646 C566.475886,435.00632 566.685866,435.682233 567.105826,436.198385 C567.525786,436.714537 568.069825,436.972612 568.737943,436.972612 Z M568.737943,436.308989 C568.27026,436.308989 567.895637,436.119733 567.614073,435.741222 C567.332509,435.362711 567.191727,434.839185 567.191727,434.170646 C567.191727,433.502107 567.332509,432.978581 567.614073,432.60007 C567.895637,432.221559 568.27026,432.032303 568.737943,432.032303 C569.21517,432.032303 569.59218,432.224017 569.868971,432.607444 C570.145763,432.990871 570.284159,433.511938 570.284159,434.170646 C570.284159,434.829354 570.145763,435.350421 569.868971,435.733848 C569.59218,436.117275 569.21517,436.308989 568.737943,436.308989 Z\",\"id\":\"50%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M651.663915,437 C652.400607,437 653.064172,436.851124 653.65461,436.553371 C654.245047,436.255618 654.708189,435.831461 655.044034,435.280899 C655.379879,434.730337 655.547802,434.095506 655.547802,433.376404 C655.547802,432.668539 655.385296,432.047753 655.060284,431.514045 C654.735273,430.980337 654.282965,430.567416 653.703362,430.275281 C653.123758,429.983146 652.460193,429.837079 651.712666,429.837079 C650.910971,429.837079 650.201363,430.014045 649.583841,430.367978 C648.966319,430.72191 648.51672,431.219101 648.235044,431.859551 C648.202542,431.5 648.186292,431.179775 648.186292,430.898876 C648.186292,429.325843 648.543804,428.126404 649.25883,427.300562 C649.973855,426.474719 650.959723,426.061798 652.216434,426.061798 C653.148134,426.061798 653.884826,426.247191 654.426512,426.617978 L654.426512,426.617978 L654.897779,425.640449 C654.226088,425.213483 653.32689,425 652.200183,425 C651.160147,425 650.250115,425.233146 649.470087,425.699438 C648.69006,426.16573 648.083372,426.853933 647.650023,427.764045 C647.216674,428.674157 647,429.786517 647,431.101124 C647,432.977528 647.400847,434.429775 648.202542,435.457865 C649.004237,436.485955 650.158028,437 651.663915,437 Z M651.615163,435.97191 C650.986807,435.97191 650.445122,435.853933 649.990105,435.617978 C649.535089,435.382022 649.191119,435.073034 648.958194,434.691011 C648.725269,434.308989 648.608807,433.893258 648.608807,433.44382 C648.608807,432.960674 648.733394,432.522472 648.98257,432.129213 C649.231745,431.735955 649.575716,431.426966 650.014481,431.202247 C650.453247,430.977528 650.959723,430.865169 651.53391,430.865169 C652.411441,430.865169 653.107507,431.095506 653.622109,431.55618 C654.13671,432.016854 654.394011,432.634831 654.394011,433.410112 C654.394011,434.185393 654.13671,434.80618 653.622109,435.272472 C653.107507,435.738764 652.438525,435.97191 651.615163,435.97191 Z M661.430509,437 C662.30804,437 663.090776,436.758427 663.778717,436.275281 C664.466658,435.792135 665.005635,435.098315 665.395649,434.19382 C665.785663,433.289326 665.98067,432.224719 665.98067,431 C665.98067,429.775281 665.785663,428.710674 665.395649,427.80618 C665.005635,426.901685 664.466658,426.207865 663.778717,425.724719 C663.090776,425.241573 662.30804,425 661.430509,425 C660.552978,425 659.770242,425.241573 659.082301,425.724719 C658.39436,426.207865 657.858091,426.901685 657.473495,427.80618 C657.088898,428.710674 656.896599,429.775281 656.896599,431 C656.896599,432.224719 657.088898,433.289326 657.473495,434.19382 C657.858091,435.098315 658.39436,435.792135 659.082301,436.275281 C659.770242,436.758427 660.552978,437 661.430509,437 Z M661.430509,435.88764 C660.769652,435.88764 660.18734,435.696629 659.683573,435.314607 C659.179805,434.932584 658.787083,434.376404 658.505406,433.646067 C658.223729,432.91573 658.082891,432.033708 658.082891,431 C658.082891,429.966292 658.223729,429.08427 658.505406,428.353933 C658.787083,427.623596 659.179805,427.067416 659.683573,426.685393 C660.18734,426.303371 660.769652,426.11236 661.430509,426.11236 C662.091366,426.11236 662.673678,426.303371 663.177446,426.685393 C663.681214,427.067416 664.073936,427.623596 664.355612,428.353933 C664.637289,429.08427 664.778127,429.966292 664.778127,431 C664.778127,432.033708 664.637289,432.91573 664.355612,433.646067 C664.073936,434.376404 663.681214,434.932584 663.177446,435.314607 C662.673678,435.696629 662.091366,435.88764 661.430509,435.88764 Z M669.653299,432.106039 C670.316864,432.106039 670.857196,431.850421 671.274294,431.339185 C671.691392,430.827949 671.899941,430.149579 671.899941,429.304073 C671.899941,428.458567 671.691392,427.780197 671.274294,427.268961 C670.857196,426.757725 670.316864,426.502107 669.653299,426.502107 C668.980255,426.502107 668.437553,426.760183 668.025195,427.276334 C667.612837,427.792486 667.406657,428.468399 667.406657,429.304073 C667.406657,430.139747 667.612837,430.81566 668.025195,431.331812 C668.437553,431.847963 668.980255,432.106039 669.653299,432.106039 Z M669.724396,436.898876 L676.521198,426.575843 L675.682262,426.575843 L668.88546,436.898876 L669.724396,436.898876 Z M669.653299,431.442416 C669.179324,431.442416 668.804884,431.250702 668.529978,430.867275 C668.255073,430.483848 668.11762,429.962781 668.11762,429.304073 C668.11762,428.645365 668.255073,428.124298 668.529978,427.740871 C668.804884,427.357444 669.179324,427.16573 669.653299,427.16573 C670.117795,427.16573 670.489865,427.354986 670.769511,427.733497 C671.049156,428.112008 671.188978,428.635534 671.188978,429.304073 C671.188978,429.972612 671.049156,430.496138 670.769511,430.874649 C670.489865,431.25316 670.117795,431.442416 669.653299,431.442416 Z M675.753358,436.972612 C676.426403,436.972612 676.969104,436.714537 677.381463,436.198385 C677.793821,435.682233 678,435.00632 678,434.170646 C678,433.334972 677.793821,432.659059 677.381463,432.142907 C676.969104,431.626756 676.426403,431.36868 675.753358,431.36868 C675.089793,431.36868 674.549462,431.626756 674.132364,432.142907 C673.715265,432.659059 673.506716,433.334972 673.506716,434.170646 C673.506716,435.00632 673.715265,435.682233 674.132364,436.198385 C674.549462,436.714537 675.089793,436.972612 675.753358,436.972612 Z M675.753358,436.308989 C675.288863,436.308989 674.916792,436.119733 674.637147,435.741222 C674.357502,435.362711 674.217679,434.839185 674.217679,434.170646 C674.217679,433.502107 674.357502,432.978581 674.637147,432.60007 C674.916792,432.221559 675.288863,432.032303 675.753358,432.032303 C676.227333,432.032303 676.601774,432.224017 676.876679,432.607444 C677.151585,432.990871 677.289037,433.511938 677.289037,434.170646 C677.289037,434.829354 677.151585,435.350421 676.876679,435.733848 C676.601774,436.117275 676.227333,436.308989 675.753358,436.308989 Z\",\"id\":\"60%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M755.591377,436.898876 L760.352795,425.960674 L760.352795,425.101124 L752,425.101124 L752,428.38764 L753.153791,428.38764 L753.153791,426.179775 L759.003997,426.179775 L754.323832,436.898876 L755.591377,436.898876 Z M766.430509,437 C767.30804,437 768.090776,436.758427 768.778717,436.275281 C769.466658,435.792135 770.005635,435.098315 770.395649,434.19382 C770.785663,433.289326 770.98067,432.224719 770.98067,431 C770.98067,429.775281 770.785663,428.710674 770.395649,427.80618 C770.005635,426.901685 769.466658,426.207865 768.778717,425.724719 C768.090776,425.241573 767.30804,425 766.430509,425 C765.552978,425 764.770242,425.241573 764.082301,425.724719 C763.39436,426.207865 762.858091,426.901685 762.473495,427.80618 C762.088898,428.710674 761.896599,429.775281 761.896599,431 C761.896599,432.224719 762.088898,433.289326 762.473495,434.19382 C762.858091,435.098315 763.39436,435.792135 764.082301,436.275281 C764.770242,436.758427 765.552978,437 766.430509,437 Z M766.430509,435.88764 C765.769652,435.88764 765.18734,435.696629 764.683573,435.314607 C764.179805,434.932584 763.787083,434.376404 763.505406,433.646067 C763.223729,432.91573 763.082891,432.033708 763.082891,431 C763.082891,429.966292 763.223729,429.08427 763.505406,428.353933 C763.787083,427.623596 764.179805,427.067416 764.683573,426.685393 C765.18734,426.303371 765.769652,426.11236 766.430509,426.11236 C767.091366,426.11236 767.673678,426.303371 768.177446,426.685393 C768.681214,427.067416 769.073936,427.623596 769.355612,428.353933 C769.637289,429.08427 769.778127,429.966292 769.778127,431 C769.778127,432.033708 769.637289,432.91573 769.355612,433.646067 C769.073936,434.376404 768.681214,434.932584 768.177446,435.314607 C767.673678,435.696629 767.091366,435.88764 766.430509,435.88764 Z M774.653299,432.106039 C775.316864,432.106039 775.857196,431.850421 776.274294,431.339185 C776.691392,430.827949 776.899941,430.149579 776.899941,429.304073 C776.899941,428.458567 776.691392,427.780197 776.274294,427.268961 C775.857196,426.757725 775.316864,426.502107 774.653299,426.502107 C773.980255,426.502107 773.437553,426.760183 773.025195,427.276334 C772.612837,427.792486 772.406657,428.468399 772.406657,429.304073 C772.406657,430.139747 772.612837,430.81566 773.025195,431.331812 C773.437553,431.847963 773.980255,432.106039 774.653299,432.106039 Z M774.724396,436.898876 L781.521198,426.575843 L780.682262,426.575843 L773.88546,436.898876 L774.724396,436.898876 Z M774.653299,431.442416 C774.179324,431.442416 773.804884,431.250702 773.529978,430.867275 C773.255073,430.483848 773.11762,429.962781 773.11762,429.304073 C773.11762,428.645365 773.255073,428.124298 773.529978,427.740871 C773.804884,427.357444 774.179324,427.16573 774.653299,427.16573 C775.117795,427.16573 775.489865,427.354986 775.769511,427.733497 C776.049156,428.112008 776.188978,428.635534 776.188978,429.304073 C776.188978,429.972612 776.049156,430.496138 775.769511,430.874649 C775.489865,431.25316 775.117795,431.442416 774.653299,431.442416 Z M780.753358,436.972612 C781.426403,436.972612 781.969104,436.714537 782.381463,436.198385 C782.793821,435.682233 783,435.00632 783,434.170646 C783,433.334972 782.793821,432.659059 782.381463,432.142907 C781.969104,431.626756 781.426403,431.36868 780.753358,431.36868 C780.089793,431.36868 779.549462,431.626756 779.132364,432.142907 C778.715265,432.659059 778.506716,433.334972 778.506716,434.170646 C778.506716,435.00632 778.715265,435.682233 779.132364,436.198385 C779.549462,436.714537 780.089793,436.972612 780.753358,436.972612 Z M780.753358,436.308989 C780.288863,436.308989 779.916792,436.119733 779.637147,435.741222 C779.357502,435.362711 779.217679,434.839185 779.217679,434.170646 C779.217679,433.502107 779.357502,432.978581 779.637147,432.60007 C779.916792,432.221559 780.288863,432.032303 780.753358,432.032303 C781.227333,432.032303 781.601774,432.224017 781.876679,432.607444 C782.151585,432.990871 782.289037,433.511938 782.289037,434.170646 C782.289037,434.829354 782.151585,435.350421 781.876679,435.733848 C781.601774,436.117275 781.227333,436.308989 780.753358,436.308989 Z\",\"id\":\"70%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":14}),React.createElement(\"path\",{\"d\":\"M864.452174,437 C865.364595,437 866.158841,436.86236 866.834911,436.587079 C867.510982,436.311798 868.030403,435.918539 868.393172,435.407303 C868.755942,434.896067 868.937327,434.297753 868.937327,433.61236 C868.937327,432.91573 868.742201,432.320225 868.351948,431.825843 C867.961696,431.331461 867.4038,430.960674 866.678261,430.713483 C867.271884,430.477528 867.728094,430.13764 868.046892,429.69382 C868.36569,429.25 868.525089,428.724719 868.525089,428.117978 C868.525089,427.488764 868.354697,426.938202 868.013913,426.466292 C867.673129,425.994382 867.197681,425.632022 866.587568,425.379213 C865.977456,425.126404 865.265658,425 864.452174,425 C863.220955,425 862.239828,425.280899 861.508792,425.842697 C860.777756,426.404494 860.412238,427.162921 860.412238,428.117978 C860.412238,428.724719 860.566141,429.25 860.873945,429.69382 C861.18175,430.13764 861.632464,430.477528 862.226087,430.713483 C861.500548,430.960674 860.948148,431.328652 860.568889,431.817416 C860.18963,432.30618 860,432.904494 860,433.61236 C860,434.657303 860.395749,435.483146 861.187246,436.089888 C861.978744,436.696629 863.067053,437 864.452174,437 Z M864.452174,430.275281 C863.561739,430.275281 862.863682,430.08427 862.358003,429.702247 C861.852324,429.320225 861.599485,428.803371 861.599485,428.151685 C861.599485,427.5 861.855072,426.983146 862.366248,426.601124 C862.877424,426.219101 863.572732,426.02809 864.452174,426.02809 C865.320623,426.02809 866.015931,426.219101 866.5381,426.601124 C867.060268,426.983146 867.321353,427.505618 867.321353,428.168539 C867.321353,428.808989 867.065765,429.320225 866.554589,429.702247 C866.043414,430.08427 865.342609,430.275281 864.452174,430.275281 Z M864.452174,435.97191 C863.429823,435.97191 862.632829,435.761236 862.061192,435.339888 C861.489554,434.918539 861.203736,434.337079 861.203736,433.595506 C861.203736,432.865169 861.492303,432.289326 862.069436,431.867978 C862.64657,431.446629 863.440816,431.235955 864.452174,431.235955 C865.474525,431.235955 866.274267,431.446629 866.851401,431.867978 C867.428535,432.289326 867.717101,432.865169 867.717101,433.595506 C867.717101,434.325843 867.428535,434.904494 866.851401,435.331461 C866.274267,435.758427 865.474525,435.97191 864.452174,435.97191 Z M875.18686,437 C876.077295,437 876.871541,436.758427 877.569597,436.275281 C878.267654,435.792135 878.814557,435.098315 879.210306,434.19382 C879.606055,433.289326 879.803929,432.224719 879.803929,431 C879.803929,429.775281 879.606055,428.710674 879.210306,427.80618 C878.814557,426.901685 878.267654,426.207865 877.569597,425.724719 C876.871541,425.241573 876.077295,425 875.18686,425 C874.296425,425 873.502179,425.241573 872.804122,425.724719 C872.106065,426.207865 871.561911,426.901685 871.171659,427.80618 C870.781406,428.710674 870.58628,429.775281 870.58628,431 C870.58628,432.224719 870.781406,433.289326 871.171659,434.19382 C871.561911,435.098315 872.106065,435.792135 872.804122,436.275281 C873.502179,436.758427 874.296425,437 875.18686,437 Z M875.18686,435.88764 C874.516286,435.88764 873.925411,435.696629 873.414235,435.314607 C872.90306,434.932584 872.504563,434.376404 872.218744,433.646067 C871.932925,432.91573 871.790016,432.033708 871.790016,431 C871.790016,429.966292 871.932925,429.08427 872.218744,428.353933 C872.504563,427.623596 872.90306,427.067416 873.414235,426.685393 C873.925411,426.303371 874.516286,426.11236 875.18686,426.11236 C875.857434,426.11236 876.448309,426.303371 876.959485,426.685393 C877.47066,427.067416 877.869157,427.623596 878.154976,428.353933 C878.440794,429.08427 878.583704,429.966292 878.583704,431 C878.583704,432.033708 878.440794,432.91573 878.154976,433.646067 C877.869157,434.376404 877.47066,434.932584 876.959485,435.314607 C876.448309,435.696629 875.857434,435.88764 875.18686,435.88764 Z M883.530564,432.106039 C884.203886,432.106039 884.752163,431.850421 885.175395,431.339185 C885.598626,430.827949 885.810242,430.149579 885.810242,429.304073 C885.810242,428.458567 885.598626,427.780197 885.175395,427.268961 C884.752163,426.757725 884.203886,426.502107 883.530564,426.502107 C882.847622,426.502107 882.29694,426.760183 881.878519,427.276334 C881.460097,427.792486 881.250886,428.468399 881.250886,429.304073 C881.250886,430.139747 881.460097,430.81566 881.878519,431.331812 C882.29694,431.847963 882.847622,432.106039 883.530564,432.106039 Z M883.602705,436.898876 L890.499452,426.575843 L889.64818,426.575843 L882.751433,436.898876 L883.602705,436.898876 Z M883.530564,431.442416 C883.049619,431.442416 882.669673,431.250702 882.390725,430.867275 C882.111777,430.483848 881.972303,429.962781 881.972303,429.304073 C881.972303,428.645365 882.111777,428.124298 882.390725,427.740871 C882.669673,427.357444 883.049619,427.16573 883.530564,427.16573 C884.001889,427.16573 884.379431,427.354986 884.663188,427.733497 C884.946946,428.112008 885.088824,428.635534 885.088824,429.304073 C885.088824,429.972612 884.946946,430.496138 884.663188,430.874649 C884.379431,431.25316 884.001889,431.442416 883.530564,431.442416 Z M889.720322,436.972612 C890.403264,436.972612 890.953945,436.714537 891.372367,436.198385 C891.790789,435.682233 892,435.00632 892,434.170646 C892,433.334972 891.790789,432.659059 891.372367,432.142907 C890.953945,431.626756 890.403264,431.36868 889.720322,431.36868 C889.046999,431.36868 888.498722,431.626756 888.075491,432.142907 C887.65226,432.659059 887.440644,433.334972 887.440644,434.170646 C887.440644,435.00632 887.65226,435.682233 888.075491,436.198385 C888.498722,436.714537 889.046999,436.972612 889.720322,436.972612 Z M889.720322,436.308989 C889.248996,436.308989 888.871455,436.119733 888.587697,435.741222 C888.30394,435.362711 888.162061,434.839185 888.162061,434.170646 C888.162061,433.502107 888.30394,432.978581 888.587697,432.60007 C888.871455,432.221559 889.248996,432.032303 889.720322,432.032303 C890.201267,432.032303 890.581213,432.224017 890.860161,432.607444 C891.139109,432.990871 891.278583,433.511938 891.278583,434.170646 C891.278583,434.829354 891.139109,435.350421 890.860161,435.733848 C890.581213,436.117275 890.201267,436.308989 889.720322,436.308989 Z\",\"id\":\"80%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M969.311167,437 C970.339879,437 971.240003,436.766854 972.011537,436.300562 C972.783071,435.83427 973.383153,435.146067 973.811783,434.235955 C974.240413,433.325843 974.454728,432.213483 974.454728,430.898876 C974.454728,429.022472 974.058245,427.570225 973.26528,426.542135 C972.472314,425.514045 971.331086,425 969.841597,425 C969.112926,425 968.456586,425.148876 967.872578,425.446629 C967.288569,425.744382 966.830471,426.168539 966.498282,426.719101 C966.166094,427.269663 966,427.904494 966,428.623596 C966,429.331461 966.160736,429.952247 966.482209,430.485955 C966.803681,431.019663 967.251064,431.432584 967.824357,431.724719 C968.397649,432.016854 969.053989,432.162921 969.793376,432.162921 C970.586342,432.162921 971.288223,431.985955 971.899021,431.632022 C972.509819,431.27809 972.954523,430.780899 973.233132,430.140449 C973.26528,430.488764 973.281353,430.808989 973.281353,431.101124 C973.281353,432.674157 972.927733,433.873596 972.220494,434.699438 C971.513254,435.525281 970.538121,435.938202 969.295094,435.938202 C968.373539,435.938202 967.644868,435.752809 967.10908,435.382022 L967.10908,435.382022 L966.642945,436.359551 C967.307322,436.786517 968.196729,437 969.311167,437 Z M969.970186,431.134831 C969.10221,431.134831 968.413723,430.904494 967.904725,430.44382 C967.395727,429.983146 967.141228,429.365169 967.141228,428.589888 C967.141228,427.814607 967.395727,427.19382 967.904725,426.727528 C968.413723,426.261236 969.075421,426.02809 969.889818,426.02809 C970.511331,426.02809 971.047119,426.146067 971.497181,426.382022 C971.947242,426.617978 972.287467,426.926966 972.517856,427.308989 C972.748245,427.691011 972.863439,428.106742 972.863439,428.55618 C972.863439,429.039326 972.740208,429.477528 972.493746,429.870787 C972.247283,430.264045 971.907058,430.573034 971.47307,430.797753 C971.039082,431.022472 970.538121,431.134831 969.970186,431.134831 Z M980.610927,437 C981.478903,437 982.253116,436.758427 982.933567,436.275281 C983.614017,435.792135 984.147126,435.098315 984.532893,434.19382 C984.91866,433.289326 985.111543,432.224719 985.111543,431 C985.111543,429.775281 984.91866,428.710674 984.532893,427.80618 C984.147126,426.901685 983.614017,426.207865 982.933567,425.724719 C982.253116,425.241573 981.478903,425 980.610927,425 C979.742952,425 978.968739,425.241573 978.288288,425.724719 C977.607838,426.207865 977.077408,426.901685 976.696999,427.80618 C976.31659,428.710674 976.126385,429.775281 976.126385,431 C976.126385,432.224719 976.31659,433.289326 976.696999,434.19382 C977.077408,435.098315 977.607838,435.792135 978.288288,436.275281 C978.968739,436.758427 979.742952,437 980.610927,437 Z M980.610927,435.88764 C979.957267,435.88764 979.381295,435.696629 978.883013,435.314607 C978.38473,434.932584 977.996284,434.376404 977.717675,433.646067 C977.439065,432.91573 977.29976,432.033708 977.29976,431 C977.29976,429.966292 977.439065,429.08427 977.717675,428.353933 C977.996284,427.623596 978.38473,427.067416 978.883013,426.685393 C979.381295,426.303371 979.957267,426.11236 980.610927,426.11236 C981.264588,426.11236 981.84056,426.303371 982.338842,426.685393 C982.837125,427.067416 983.225571,427.623596 983.50418,428.353933 C983.78279,429.08427 983.922095,429.966292 983.922095,431 C983.922095,432.033708 983.78279,432.91573 983.50418,433.646067 C983.225571,434.376404 982.837125,434.932584 982.338842,435.314607 C981.84056,435.696629 981.264588,435.88764 980.610927,435.88764 Z M988.744183,432.106039 C989.400523,432.106039 989.934971,431.850421 990.347527,431.339185 C990.760084,430.827949 990.966362,430.149579 990.966362,429.304073 C990.966362,428.458567 990.760084,427.780197 990.347527,427.268961 C989.934971,426.757725 989.400523,426.502107 988.744183,426.502107 C988.078467,426.502107 987.541675,426.760183 987.133806,427.276334 C986.725938,427.792486 986.522004,428.468399 986.522004,429.304073 C986.522004,430.139747 986.725938,430.81566 987.133806,431.331812 C987.541675,431.847963 988.078467,432.106039 988.744183,432.106039 Z M988.814505,436.898876 L995.5373,426.575843 L994.707499,426.575843 L987.984704,436.898876 L988.814505,436.898876 Z M988.744183,431.442416 C988.275369,431.442416 987.905006,431.250702 987.633094,430.867275 C987.361181,430.483848 987.225225,429.962781 987.225225,429.304073 C987.225225,428.645365 987.361181,428.124298 987.633094,427.740871 C987.905006,427.357444 988.275369,427.16573 988.744183,427.16573 C989.203621,427.16573 989.57164,427.354986 989.84824,427.733497 C990.124841,428.112008 990.263141,428.635534 990.263141,429.304073 C990.263141,429.972612 990.124841,430.496138 989.84824,430.874649 C989.57164,431.25316 989.203621,431.442416 988.744183,431.442416 Z M994.777821,436.972612 C995.443537,436.972612 995.980329,436.714537 996.388198,436.198385 C996.796066,435.682233 997,435.00632 997,434.170646 C997,433.334972 996.796066,432.659059 996.388198,432.142907 C995.980329,431.626756 995.443537,431.36868 994.777821,431.36868 C994.121481,431.36868 993.587033,431.626756 993.174477,432.142907 C992.76192,432.659059 992.555642,433.334972 992.555642,434.170646 C992.555642,435.00632 992.76192,435.682233 993.174477,436.198385 C993.587033,436.714537 994.121481,436.972612 994.777821,436.972612 Z M994.777821,436.308989 C994.318383,436.308989 993.950364,436.119733 993.673764,435.741222 C993.397163,435.362711 993.258863,434.839185 993.258863,434.170646 C993.258863,433.502107 993.397163,432.978581 993.673764,432.60007 C993.950364,432.221559 994.318383,432.032303 994.777821,432.032303 C995.246635,432.032303 995.616998,432.224017 995.88891,432.607444 C996.160823,432.990871 996.296779,433.511938 996.296779,434.170646 C996.296779,434.829354 996.160823,435.350421 995.88891,435.733848 C995.616998,436.117275 995.246635,436.308989 994.777821,436.308989 Z\",\"id\":\"90%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M1074.90887,436.898876 L1074.90887,425.101124 L1071,425.101124 L1071,426.179775 L1073.72136,426.179775 L1073.72136,436.898876 L1074.90887,436.898876 Z M1082.26479,437 C1083.15542,437 1083.94983,436.758427 1084.64804,436.275281 C1085.34625,435.792135 1085.89327,435.098315 1086.28911,434.19382 C1086.68494,433.289326 1086.88286,432.224719 1086.88286,431 C1086.88286,429.775281 1086.68494,428.710674 1086.28911,427.80618 C1085.89327,426.901685 1085.34625,426.207865 1084.64804,425.724719 C1083.94983,425.241573 1083.15542,425 1082.26479,425 C1081.37416,425 1080.57974,425.241573 1079.88154,425.724719 C1079.18333,426.207865 1078.63905,426.901685 1078.24872,427.80618 C1077.85838,428.710674 1077.66321,429.775281 1077.66321,431 C1077.66321,432.224719 1077.85838,433.289326 1078.24872,434.19382 C1078.63905,435.098315 1079.18333,435.792135 1079.88154,436.275281 C1080.57974,436.758427 1081.37416,437 1082.26479,437 Z M1082.26479,435.88764 C1081.59407,435.88764 1081.00307,435.696629 1080.49178,435.314607 C1079.98049,434.932584 1079.58191,434.376404 1079.29603,433.646067 C1079.01015,432.91573 1078.86721,432.033708 1078.86721,431 C1078.86721,429.966292 1079.01015,429.08427 1079.29603,428.353933 C1079.58191,427.623596 1079.98049,427.067416 1080.49178,426.685393 C1081.00307,426.303371 1081.59407,426.11236 1082.26479,426.11236 C1082.93551,426.11236 1083.52651,426.303371 1084.0378,426.685393 C1084.54908,427.067416 1084.94767,427.623596 1085.23355,428.353933 C1085.51943,429.08427 1085.66237,429.966292 1085.66237,431 C1085.66237,432.033708 1085.51943,432.91573 1085.23355,433.646067 C1084.94767,434.376404 1084.54908,434.932584 1084.0378,435.314607 C1083.52651,435.696629 1082.93551,435.88764 1082.26479,435.88764 Z M1093.18322,437 C1094.07385,437 1094.86827,436.758427 1095.56647,436.275281 C1096.26468,435.792135 1096.8117,435.098315 1097.20754,434.19382 C1097.60337,433.289326 1097.80129,432.224719 1097.80129,431 C1097.80129,429.775281 1097.60337,428.710674 1097.20754,427.80618 C1096.8117,426.901685 1096.26468,426.207865 1095.56647,425.724719 C1094.86827,425.241573 1094.07385,425 1093.18322,425 C1092.29259,425 1091.49818,425.241573 1090.79997,425.724719 C1090.10176,426.207865 1089.55749,426.901685 1089.16715,427.80618 C1088.77681,428.710674 1088.58165,429.775281 1088.58165,431 C1088.58165,432.224719 1088.77681,433.289326 1089.16715,434.19382 C1089.55749,435.098315 1090.10176,435.792135 1090.79997,436.275281 C1091.49818,436.758427 1092.29259,437 1093.18322,437 Z M1093.18322,435.88764 C1092.5125,435.88764 1091.9215,435.696629 1091.41021,435.314607 C1090.89893,434.932584 1090.50034,434.376404 1090.21446,433.646067 C1089.92858,432.91573 1089.78564,432.033708 1089.78564,431 C1089.78564,429.966292 1089.92858,429.08427 1090.21446,428.353933 C1090.50034,427.623596 1090.89893,427.067416 1091.41021,426.685393 C1091.9215,426.303371 1092.5125,426.11236 1093.18322,426.11236 C1093.85394,426.11236 1094.44494,426.303371 1094.95623,426.685393 C1095.46752,427.067416 1095.8661,427.623596 1096.15198,428.353933 C1096.43786,429.08427 1096.5808,429.966292 1096.5808,431 C1096.5808,432.033708 1096.43786,432.91573 1096.15198,433.646067 C1095.8661,434.376404 1095.46752,434.932584 1094.95623,435.314607 C1094.44494,435.696629 1093.85394,435.88764 1093.18322,435.88764 Z M1101.52873,432.106039 C1102.2022,432.106039 1102.75059,431.850421 1103.17392,431.339185 C1103.59724,430.827949 1103.8089,430.149579 1103.8089,429.304073 C1103.8089,428.458567 1103.59724,427.780197 1103.17392,427.268961 C1102.75059,426.757725 1102.2022,426.502107 1101.52873,426.502107 C1100.84564,426.502107 1100.29484,426.760183 1099.87633,427.276334 C1099.45782,427.792486 1099.24856,428.468399 1099.24856,429.304073 C1099.24856,430.139747 1099.45782,430.81566 1099.87633,431.331812 C1100.29484,431.847963 1100.84564,432.106039 1101.52873,432.106039 Z M1101.60089,436.898876 L1108.49913,426.575843 L1107.64767,426.575843 L1100.74943,436.898876 L1101.60089,436.898876 Z M1101.52873,431.442416 C1101.04768,431.442416 1100.66765,431.250702 1100.38865,430.867275 C1100.10964,430.483848 1099.97013,429.962781 1099.97013,429.304073 C1099.97013,428.645365 1100.10964,428.124298 1100.38865,427.740871 C1100.66765,427.357444 1101.04768,427.16573 1101.52873,427.16573 C1102.00016,427.16573 1102.37778,427.354986 1102.6616,427.733497 C1102.94542,428.112008 1103.08733,428.635534 1103.08733,429.304073 C1103.08733,429.972612 1102.94542,430.496138 1102.6616,430.874649 C1102.37778,431.25316 1102.00016,431.442416 1101.52873,431.442416 Z M1107.71983,436.972612 C1108.40292,436.972612 1108.95372,436.714537 1109.37223,436.198385 C1109.79074,435.682233 1110,435.00632 1110,434.170646 C1110,433.334972 1109.79074,432.659059 1109.37223,432.142907 C1108.95372,431.626756 1108.40292,431.36868 1107.71983,431.36868 C1107.04636,431.36868 1106.49796,431.626756 1106.07464,432.142907 C1105.65132,432.659059 1105.43966,433.334972 1105.43966,434.170646 C1105.43966,435.00632 1105.65132,435.682233 1106.07464,436.198385 C1106.49796,436.714537 1107.04636,436.972612 1107.71983,436.972612 Z M1107.71983,436.308989 C1107.2484,436.308989 1106.87078,436.119733 1106.58696,435.741222 C1106.30314,435.362711 1106.16123,434.839185 1106.16123,434.170646 C1106.16123,433.502107 1106.30314,432.978581 1106.58696,432.60007 C1106.87078,432.221559 1107.2484,432.032303 1107.71983,432.032303 C1108.20088,432.032303 1108.58091,432.224017 1108.85991,432.607444 C1109.13892,432.990871 1109.27843,433.511938 1109.27843,434.170646 C1109.27843,434.829354 1109.13892,435.350421 1108.85991,435.733848 C1108.58091,436.117275 1108.20088,436.308989 1107.71983,436.308989 Z\",\"id\":\"100%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"1088.22961\",\"y1\":\"77.5\",\"x2\":\"69\",\"y2\":\"78.25\",\"id\":\"Line\",\"stroke\":\"#EFEFEF\",\"strokeLinecap\":\"square\",\"key\":18}),React.createElement(\"line\",{\"x1\":\"1088.22961\",\"y1\":\"162.5\",\"x2\":\"69\",\"y2\":\"163.25\",\"id\":\"Line-Copy\",\"stroke\":\"#EFEFEF\",\"strokeLinecap\":\"square\",\"key\":19}),React.createElement(\"line\",{\"x1\":\"1088.22961\",\"y1\":\"246.5\",\"x2\":\"69\",\"y2\":\"247.25\",\"id\":\"Line-Copy-2\",\"stroke\":\"#EFEFEF\",\"strokeLinecap\":\"square\",\"key\":20}),React.createElement(\"line\",{\"x1\":\"1088.22961\",\"y1\":\"332.5\",\"x2\":\"69\",\"y2\":\"333.25\",\"id\":\"Line-Copy-3\",\"stroke\":\"#EFEFEF\",\"strokeLinecap\":\"square\",\"key\":21})])))]);\n}\n\nSchoolYearsTypeAndQualityOfSchoolingDesktop.defaultProps = {\"width\":\"1113px\",\"height\":\"495px\",\"viewBox\":\"0 0 1113 495\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsTypeAndQualityOfSchoolingDesktop;\n\nSchoolYearsTypeAndQualityOfSchoolingDesktop.default = SchoolYearsTypeAndQualityOfSchoolingDesktop;\n","import QualityOfSchoolingSVGMobile from \"../../../../src/content/school-years/svg/school-years-type-and-quality-of-schooling-mobile.svg\";\nimport QualityOfSchoolingSVGTable from \"../../../../src/content/school-years/svg/school-years-type-and-quality-of-schooling-tablet.svg\";\nimport QualityOfSchoolingSVGDesktop from \"../../../../src/content/school-years/svg/school-years-type-and-quality-of-schooling-desktop.svg\";\nimport ResizableGraph from \"../../../../src/components/research/resizable-graph\";\nimport ResearchImage from \"../../../../src/components/research/research-image\";\nimport * as React from 'react';\nexport default {\n  QualityOfSchoolingSVGMobile,\n  QualityOfSchoolingSVGTable,\n  QualityOfSchoolingSVGDesktop,\n  ResizableGraph,\n  ResearchImage,\n  React\n};","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.ScrollHandler = exports.ScrollContext = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _sessionStorage = require(\"./session-storage\");\n\nvar ScrollContext = React.createContext(new _sessionStorage.SessionStorage());\nexports.ScrollContext = ScrollContext;\nScrollContext.displayName = \"GatsbyScrollContext\";\n\nvar ScrollHandler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ScrollHandler, _React$Component);\n\n  function ScrollHandler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this._stateStorage = new _sessionStorage.SessionStorage();\n\n    _this.scrollListener = function () {\n      var key = _this.props.location.key;\n\n      if (key) {\n        _this._stateStorage.save(_this.props.location, key, window.scrollY);\n      }\n    };\n\n    _this.windowScroll = function (position, prevProps) {\n      if (_this.shouldUpdateScroll(prevProps, _this.props)) {\n        window.scrollTo(0, position);\n      }\n    };\n\n    _this.scrollToHash = function (hash, prevProps) {\n      var node = document.getElementById(hash.substring(1));\n\n      if (node && _this.shouldUpdateScroll(prevProps, _this.props)) {\n        node.scrollIntoView();\n      }\n    };\n\n    _this.shouldUpdateScroll = function (prevRouterProps, routerProps) {\n      var shouldUpdateScroll = _this.props.shouldUpdateScroll;\n\n      if (!shouldUpdateScroll) {\n        return true;\n      } // Hack to allow accessing this._stateStorage.\n\n\n      return shouldUpdateScroll.call((0, _assertThisInitialized2.default)(_this), prevRouterProps, routerProps);\n    };\n\n    return _this;\n  }\n\n  var _proto = ScrollHandler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    window.addEventListener(\"scroll\", this.scrollListener);\n    var scrollPosition;\n    var _this$props$location = this.props.location,\n        key = _this$props$location.key,\n        hash = _this$props$location.hash;\n\n    if (key) {\n      scrollPosition = this._stateStorage.read(this.props.location, key);\n    }\n\n    if (scrollPosition) {\n      this.windowScroll(scrollPosition, undefined);\n    } else if (hash) {\n      this.scrollToHash(decodeURI(hash), undefined);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.scrollListener);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props$location2 = this.props.location,\n        hash = _this$props$location2.hash,\n        key = _this$props$location2.key;\n    var scrollPosition;\n\n    if (key) {\n      scrollPosition = this._stateStorage.read(this.props.location, key);\n    }\n\n    if (hash && scrollPosition === 0) {\n      this.scrollToHash(decodeURI(hash), prevProps);\n    } else {\n      this.windowScroll(scrollPosition, prevProps);\n    }\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(ScrollContext.Provider, {\n      value: this._stateStorage\n    }, this.props.children);\n  };\n\n  return ScrollHandler;\n}(React.Component);\n\nexports.ScrollHandler = ScrollHandler;\nScrollHandler.propTypes = {\n  shouldUpdateScroll: _propTypes.default.func,\n  children: _propTypes.default.element.isRequired,\n  location: _propTypes.default.object.isRequired\n};","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","exports.f = {}.propertyIsEnumerable;\n","/**\n * Implement Gatsby's Browser APIs in this file.\n *\n * See: https://www.gatsbyjs.org/docs/browser-apis/\n */\n\n// You can delete this file if you're not using it\nimport \"tailwindcss/dist/base.css\";\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","export enum BreakPoint {\n  sm,\n  md,\n  lg,\n  xl,\n}\n\nexport const screenSizes = {\n  [BreakPoint.sm]: 640,\n  [BreakPoint.md]: 768,\n  [BreakPoint.lg]: 1024,\n  [BreakPoint.xl]: 1280,\n};\n\nexport const mq = (size: BreakPoint) => {\n  return `@media screen and (min-width: ${screenSizes[size]}px)`;\n};\n","import React, { createElement } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { publicLoader } from \"./loader\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport { grabMatchParams } from \"./find-path\"\n\n// Renders page\nclass PageRenderer extends React.Component {\n  render() {\n    const props = {\n      ...this.props,\n      params: {\n        ...grabMatchParams(this.props.location.pathname),\n        ...this.props.pageResources.json.pageContext.__params,\n      },\n      pathContext: this.props.pageContext,\n    }\n\n    const [replacementElement] = apiRunner(`replaceComponentRenderer`, {\n      props: this.props,\n      loader: publicLoader,\n    })\n\n    const pageElement =\n      replacementElement ||\n      createElement(this.props.pageResources.component, {\n        ...props,\n        key: this.props.path || this.props.pageResources.page.path,\n      })\n\n    const wrappedPage = apiRunner(\n      `wrapPageElement`,\n      { element: pageElement, props },\n      pageElement,\n      ({ result }) => {\n        return { element: result, props }\n      }\n    ).pop()\n\n    return wrappedPage\n  }\n}\n\nPageRenderer.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageResources: PropTypes.object.isRequired,\n  data: PropTypes.object,\n  pageContext: PropTypes.object.isRequired,\n}\n\nexport default PageRenderer\n","/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */\n(function () {\n  function aa(a, b, c) {\n    return a.call.apply(a.bind, arguments);\n  }\n\n  function ba(a, b, c) {\n    if (!a) throw Error();\n\n    if (2 < arguments.length) {\n      var d = Array.prototype.slice.call(arguments, 2);\n      return function () {\n        var c = Array.prototype.slice.call(arguments);\n        Array.prototype.unshift.apply(c, d);\n        return a.apply(b, c);\n      };\n    }\n\n    return function () {\n      return a.apply(b, arguments);\n    };\n  }\n\n  function p(a, b, c) {\n    p = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? aa : ba;\n    return p.apply(null, arguments);\n  }\n\n  var q = Date.now || function () {\n    return +new Date();\n  };\n\n  function ca(a, b) {\n    this.a = a;\n    this.o = b || a;\n    this.c = this.o.document;\n  }\n\n  var da = !!window.FontFace;\n\n  function t(a, b, c, d) {\n    b = a.c.createElement(b);\n    if (c) for (var e in c) {\n      c.hasOwnProperty(e) && (\"style\" == e ? b.style.cssText = c[e] : b.setAttribute(e, c[e]));\n    }\n    d && b.appendChild(a.c.createTextNode(d));\n    return b;\n  }\n\n  function u(a, b, c) {\n    a = a.c.getElementsByTagName(b)[0];\n    a || (a = document.documentElement);\n    a.insertBefore(c, a.lastChild);\n  }\n\n  function v(a) {\n    a.parentNode && a.parentNode.removeChild(a);\n  }\n\n  function w(a, b, c) {\n    b = b || [];\n    c = c || [];\n\n    for (var d = a.className.split(/\\s+/), e = 0; e < b.length; e += 1) {\n      for (var f = !1, g = 0; g < d.length; g += 1) {\n        if (b[e] === d[g]) {\n          f = !0;\n          break;\n        }\n      }\n\n      f || d.push(b[e]);\n    }\n\n    b = [];\n\n    for (e = 0; e < d.length; e += 1) {\n      f = !1;\n\n      for (g = 0; g < c.length; g += 1) {\n        if (d[e] === c[g]) {\n          f = !0;\n          break;\n        }\n      }\n\n      f || b.push(d[e]);\n    }\n\n    a.className = b.join(\" \").replace(/\\s+/g, \" \").replace(/^\\s+|\\s+$/, \"\");\n  }\n\n  function y(a, b) {\n    for (var c = a.className.split(/\\s+/), d = 0, e = c.length; d < e; d++) {\n      if (c[d] == b) return !0;\n    }\n\n    return !1;\n  }\n\n  function ea(a) {\n    return a.o.location.hostname || a.a.location.hostname;\n  }\n\n  function z(a, b, c) {\n    function d() {\n      m && e && f && (m(g), m = null);\n    }\n\n    b = t(a, \"link\", {\n      rel: \"stylesheet\",\n      href: b,\n      media: \"all\"\n    });\n    var e = !1,\n        f = !0,\n        g = null,\n        m = c || null;\n    da ? (b.onload = function () {\n      e = !0;\n      d();\n    }, b.onerror = function () {\n      e = !0;\n      g = Error(\"Stylesheet failed to load\");\n      d();\n    }) : setTimeout(function () {\n      e = !0;\n      d();\n    }, 0);\n    u(a, \"head\", b);\n  }\n\n  function A(a, b, c, d) {\n    var e = a.c.getElementsByTagName(\"head\")[0];\n\n    if (e) {\n      var f = t(a, \"script\", {\n        src: b\n      }),\n          g = !1;\n\n      f.onload = f.onreadystatechange = function () {\n        g || this.readyState && \"loaded\" != this.readyState && \"complete\" != this.readyState || (g = !0, c && c(null), f.onload = f.onreadystatechange = null, \"HEAD\" == f.parentNode.tagName && e.removeChild(f));\n      };\n\n      e.appendChild(f);\n      setTimeout(function () {\n        g || (g = !0, c && c(Error(\"Script load timeout\")));\n      }, d || 5E3);\n      return f;\n    }\n\n    return null;\n  }\n\n  ;\n\n  function B() {\n    this.a = 0;\n    this.c = null;\n  }\n\n  function C(a) {\n    a.a++;\n    return function () {\n      a.a--;\n      D(a);\n    };\n  }\n\n  function E(a, b) {\n    a.c = b;\n    D(a);\n  }\n\n  function D(a) {\n    0 == a.a && a.c && (a.c(), a.c = null);\n  }\n\n  ;\n\n  function F(a) {\n    this.a = a || \"-\";\n  }\n\n  F.prototype.c = function (a) {\n    for (var b = [], c = 0; c < arguments.length; c++) {\n      b.push(arguments[c].replace(/[\\W_]+/g, \"\").toLowerCase());\n    }\n\n    return b.join(this.a);\n  };\n\n  function G(a, b) {\n    this.c = a;\n    this.f = 4;\n    this.a = \"n\";\n    var c = (b || \"n4\").match(/^([nio])([1-9])$/i);\n    c && (this.a = c[1], this.f = parseInt(c[2], 10));\n  }\n\n  function fa(a) {\n    return H(a) + \" \" + (a.f + \"00\") + \" 300px \" + I(a.c);\n  }\n\n  function I(a) {\n    var b = [];\n    a = a.split(/,\\s*/);\n\n    for (var c = 0; c < a.length; c++) {\n      var d = a[c].replace(/['\"]/g, \"\");\n      -1 != d.indexOf(\" \") || /^\\d/.test(d) ? b.push(\"'\" + d + \"'\") : b.push(d);\n    }\n\n    return b.join(\",\");\n  }\n\n  function J(a) {\n    return a.a + a.f;\n  }\n\n  function H(a) {\n    var b = \"normal\";\n    \"o\" === a.a ? b = \"oblique\" : \"i\" === a.a && (b = \"italic\");\n    return b;\n  }\n\n  function ga(a) {\n    var b = 4,\n        c = \"n\",\n        d = null;\n    a && ((d = a.match(/(normal|oblique|italic)/i)) && d[1] && (c = d[1].substr(0, 1).toLowerCase()), (d = a.match(/([1-9]00|normal|bold)/i)) && d[1] && (/bold/i.test(d[1]) ? b = 7 : /[1-9]00/.test(d[1]) && (b = parseInt(d[1].substr(0, 1), 10))));\n    return c + b;\n  }\n\n  ;\n\n  function ha(a, b) {\n    this.c = a;\n    this.f = a.o.document.documentElement;\n    this.h = b;\n    this.a = new F(\"-\");\n    this.j = !1 !== b.events;\n    this.g = !1 !== b.classes;\n  }\n\n  function ia(a) {\n    a.g && w(a.f, [a.a.c(\"wf\", \"loading\")]);\n    K(a, \"loading\");\n  }\n\n  function L(a) {\n    if (a.g) {\n      var b = y(a.f, a.a.c(\"wf\", \"active\")),\n          c = [],\n          d = [a.a.c(\"wf\", \"loading\")];\n      b || c.push(a.a.c(\"wf\", \"inactive\"));\n      w(a.f, c, d);\n    }\n\n    K(a, \"inactive\");\n  }\n\n  function K(a, b, c) {\n    if (a.j && a.h[b]) if (c) a.h[b](c.c, J(c));else a.h[b]();\n  }\n\n  ;\n\n  function ja() {\n    this.c = {};\n  }\n\n  function ka(a, b, c) {\n    var d = [],\n        e;\n\n    for (e in b) {\n      if (b.hasOwnProperty(e)) {\n        var f = a.c[e];\n        f && d.push(f(b[e], c));\n      }\n    }\n\n    return d;\n  }\n\n  ;\n\n  function M(a, b) {\n    this.c = a;\n    this.f = b;\n    this.a = t(this.c, \"span\", {\n      \"aria-hidden\": \"true\"\n    }, this.f);\n  }\n\n  function N(a) {\n    u(a.c, \"body\", a.a);\n  }\n\n  function O(a) {\n    return \"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\" + I(a.c) + \";\" + (\"font-style:\" + H(a) + \";font-weight:\" + (a.f + \"00\") + \";\");\n  }\n\n  ;\n\n  function P(a, b, c, d, e, f) {\n    this.g = a;\n    this.j = b;\n    this.a = d;\n    this.c = c;\n    this.f = e || 3E3;\n    this.h = f || void 0;\n  }\n\n  P.prototype.start = function () {\n    var a = this.c.o.document,\n        b = this,\n        c = q(),\n        d = new Promise(function (d, e) {\n      function f() {\n        q() - c >= b.f ? e() : a.fonts.load(fa(b.a), b.h).then(function (a) {\n          1 <= a.length ? d() : setTimeout(f, 25);\n        }, function () {\n          e();\n        });\n      }\n\n      f();\n    }),\n        e = null,\n        f = new Promise(function (a, d) {\n      e = setTimeout(d, b.f);\n    });\n    Promise.race([f, d]).then(function () {\n      e && (clearTimeout(e), e = null);\n      b.g(b.a);\n    }, function () {\n      b.j(b.a);\n    });\n  };\n\n  function Q(a, b, c, d, e, f, g) {\n    this.v = a;\n    this.B = b;\n    this.c = c;\n    this.a = d;\n    this.s = g || \"BESbswy\";\n    this.f = {};\n    this.w = e || 3E3;\n    this.u = f || null;\n    this.m = this.j = this.h = this.g = null;\n    this.g = new M(this.c, this.s);\n    this.h = new M(this.c, this.s);\n    this.j = new M(this.c, this.s);\n    this.m = new M(this.c, this.s);\n    a = new G(this.a.c + \",serif\", J(this.a));\n    a = O(a);\n    this.g.a.style.cssText = a;\n    a = new G(this.a.c + \",sans-serif\", J(this.a));\n    a = O(a);\n    this.h.a.style.cssText = a;\n    a = new G(\"serif\", J(this.a));\n    a = O(a);\n    this.j.a.style.cssText = a;\n    a = new G(\"sans-serif\", J(this.a));\n    a = O(a);\n    this.m.a.style.cssText = a;\n    N(this.g);\n    N(this.h);\n    N(this.j);\n    N(this.m);\n  }\n\n  var R = {\n    D: \"serif\",\n    C: \"sans-serif\"\n  },\n      S = null;\n\n  function T() {\n    if (null === S) {\n      var a = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);\n      S = !!a && (536 > parseInt(a[1], 10) || 536 === parseInt(a[1], 10) && 11 >= parseInt(a[2], 10));\n    }\n\n    return S;\n  }\n\n  Q.prototype.start = function () {\n    this.f.serif = this.j.a.offsetWidth;\n    this.f[\"sans-serif\"] = this.m.a.offsetWidth;\n    this.A = q();\n    U(this);\n  };\n\n  function la(a, b, c) {\n    for (var d in R) {\n      if (R.hasOwnProperty(d) && b === a.f[R[d]] && c === a.f[R[d]]) return !0;\n    }\n\n    return !1;\n  }\n\n  function U(a) {\n    var b = a.g.a.offsetWidth,\n        c = a.h.a.offsetWidth,\n        d;\n    (d = b === a.f.serif && c === a.f[\"sans-serif\"]) || (d = T() && la(a, b, c));\n    d ? q() - a.A >= a.w ? T() && la(a, b, c) && (null === a.u || a.u.hasOwnProperty(a.a.c)) ? V(a, a.v) : V(a, a.B) : ma(a) : V(a, a.v);\n  }\n\n  function ma(a) {\n    setTimeout(p(function () {\n      U(this);\n    }, a), 50);\n  }\n\n  function V(a, b) {\n    setTimeout(p(function () {\n      v(this.g.a);\n      v(this.h.a);\n      v(this.j.a);\n      v(this.m.a);\n      b(this.a);\n    }, a), 0);\n  }\n\n  ;\n\n  function W(a, b, c) {\n    this.c = a;\n    this.a = b;\n    this.f = 0;\n    this.m = this.j = !1;\n    this.s = c;\n  }\n\n  var X = null;\n\n  W.prototype.g = function (a) {\n    var b = this.a;\n    b.g && w(b.f, [b.a.c(\"wf\", a.c, J(a).toString(), \"active\")], [b.a.c(\"wf\", a.c, J(a).toString(), \"loading\"), b.a.c(\"wf\", a.c, J(a).toString(), \"inactive\")]);\n    K(b, \"fontactive\", a);\n    this.m = !0;\n    na(this);\n  };\n\n  W.prototype.h = function (a) {\n    var b = this.a;\n\n    if (b.g) {\n      var c = y(b.f, b.a.c(\"wf\", a.c, J(a).toString(), \"active\")),\n          d = [],\n          e = [b.a.c(\"wf\", a.c, J(a).toString(), \"loading\")];\n      c || d.push(b.a.c(\"wf\", a.c, J(a).toString(), \"inactive\"));\n      w(b.f, d, e);\n    }\n\n    K(b, \"fontinactive\", a);\n    na(this);\n  };\n\n  function na(a) {\n    0 == --a.f && a.j && (a.m ? (a = a.a, a.g && w(a.f, [a.a.c(\"wf\", \"active\")], [a.a.c(\"wf\", \"loading\"), a.a.c(\"wf\", \"inactive\")]), K(a, \"active\")) : L(a.a));\n  }\n\n  ;\n\n  function oa(a) {\n    this.j = a;\n    this.a = new ja();\n    this.h = 0;\n    this.f = this.g = !0;\n  }\n\n  oa.prototype.load = function (a) {\n    this.c = new ca(this.j, a.context || this.j);\n    this.g = !1 !== a.events;\n    this.f = !1 !== a.classes;\n    pa(this, new ha(this.c, a), a);\n  };\n\n  function qa(a, b, c, d, e) {\n    var f = 0 == --a.h;\n    (a.f || a.g) && setTimeout(function () {\n      var a = e || null,\n          m = d || null || {};\n      if (0 === c.length && f) L(b.a);else {\n        b.f += c.length;\n        f && (b.j = f);\n        var h,\n            l = [];\n\n        for (h = 0; h < c.length; h++) {\n          var k = c[h],\n              n = m[k.c],\n              r = b.a,\n              x = k;\n          r.g && w(r.f, [r.a.c(\"wf\", x.c, J(x).toString(), \"loading\")]);\n          K(r, \"fontloading\", x);\n          r = null;\n          if (null === X) if (window.FontFace) {\n            var x = /Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),\n                xa = /OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent) && /Apple/.exec(window.navigator.vendor);\n            X = x ? 42 < parseInt(x[1], 10) : xa ? !1 : !0;\n          } else X = !1;\n          X ? r = new P(p(b.g, b), p(b.h, b), b.c, k, b.s, n) : r = new Q(p(b.g, b), p(b.h, b), b.c, k, b.s, a, n);\n          l.push(r);\n        }\n\n        for (h = 0; h < l.length; h++) {\n          l[h].start();\n        }\n      }\n    }, 0);\n  }\n\n  function pa(a, b, c) {\n    var d = [],\n        e = c.timeout;\n    ia(b);\n    var d = ka(a.a, c, a.c),\n        f = new W(a.c, b, e);\n    a.h = d.length;\n    b = 0;\n\n    for (c = d.length; b < c; b++) {\n      d[b].load(function (b, d, c) {\n        qa(a, f, b, d, c);\n      });\n    }\n  }\n\n  ;\n\n  function ra(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  ra.prototype.load = function (a) {\n    function b() {\n      if (f[\"__mti_fntLst\" + d]) {\n        var c = f[\"__mti_fntLst\" + d](),\n            e = [],\n            h;\n        if (c) for (var l = 0; l < c.length; l++) {\n          var k = c[l].fontfamily;\n          void 0 != c[l].fontStyle && void 0 != c[l].fontWeight ? (h = c[l].fontStyle + c[l].fontWeight, e.push(new G(k, h))) : e.push(new G(k));\n        }\n        a(e);\n      } else setTimeout(function () {\n        b();\n      }, 50);\n    }\n\n    var c = this,\n        d = c.a.projectId,\n        e = c.a.version;\n\n    if (d) {\n      var f = c.c.o;\n      A(this.c, (c.a.api || \"https://fast.fonts.net/jsapi\") + \"/\" + d + \".js\" + (e ? \"?v=\" + e : \"\"), function (e) {\n        e ? a([]) : (f[\"__MonotypeConfiguration__\" + d] = function () {\n          return c.a;\n        }, b());\n      }).id = \"__MonotypeAPIScript__\" + d;\n    } else a([]);\n  };\n\n  function sa(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  sa.prototype.load = function (a) {\n    var b,\n        c,\n        d = this.a.urls || [],\n        e = this.a.families || [],\n        f = this.a.testStrings || {},\n        g = new B();\n    b = 0;\n\n    for (c = d.length; b < c; b++) {\n      z(this.c, d[b], C(g));\n    }\n\n    var m = [];\n    b = 0;\n\n    for (c = e.length; b < c; b++) {\n      if (d = e[b].split(\":\"), d[1]) for (var h = d[1].split(\",\"), l = 0; l < h.length; l += 1) {\n        m.push(new G(d[0], h[l]));\n      } else m.push(new G(d[0]));\n    }\n\n    E(g, function () {\n      a(m, f);\n    });\n  };\n\n  function ta(a, b) {\n    a ? this.c = a : this.c = ua;\n    this.a = [];\n    this.f = [];\n    this.g = b || \"\";\n  }\n\n  var ua = \"https://fonts.googleapis.com/css\";\n\n  function va(a, b) {\n    for (var c = b.length, d = 0; d < c; d++) {\n      var e = b[d].split(\":\");\n      3 == e.length && a.f.push(e.pop());\n      var f = \"\";\n      2 == e.length && \"\" != e[1] && (f = \":\");\n      a.a.push(e.join(f));\n    }\n  }\n\n  function wa(a) {\n    if (0 == a.a.length) throw Error(\"No fonts to load!\");\n    if (-1 != a.c.indexOf(\"kit=\")) return a.c;\n\n    for (var b = a.a.length, c = [], d = 0; d < b; d++) {\n      c.push(a.a[d].replace(/ /g, \"+\"));\n    }\n\n    b = a.c + \"?family=\" + c.join(\"%7C\");\n    0 < a.f.length && (b += \"&subset=\" + a.f.join(\",\"));\n    0 < a.g.length && (b += \"&text=\" + encodeURIComponent(a.g));\n    return b;\n  }\n\n  ;\n\n  function ya(a) {\n    this.f = a;\n    this.a = [];\n    this.c = {};\n  }\n\n  var za = {\n    latin: \"BESbswy\",\n    \"latin-ext\": \"\\xE7\\xF6\\xFC\\u011F\\u015F\",\n    cyrillic: \"\\u0439\\u044F\\u0416\",\n    greek: \"\\u03B1\\u03B2\\u03A3\",\n    khmer: \"\\u1780\\u1781\\u1782\",\n    Hanuman: \"\\u1780\\u1781\\u1782\"\n  },\n      Aa = {\n    thin: \"1\",\n    extralight: \"2\",\n    \"extra-light\": \"2\",\n    ultralight: \"2\",\n    \"ultra-light\": \"2\",\n    light: \"3\",\n    regular: \"4\",\n    book: \"4\",\n    medium: \"5\",\n    \"semi-bold\": \"6\",\n    semibold: \"6\",\n    \"demi-bold\": \"6\",\n    demibold: \"6\",\n    bold: \"7\",\n    \"extra-bold\": \"8\",\n    extrabold: \"8\",\n    \"ultra-bold\": \"8\",\n    ultrabold: \"8\",\n    black: \"9\",\n    heavy: \"9\",\n    l: \"3\",\n    r: \"4\",\n    b: \"7\"\n  },\n      Ba = {\n    i: \"i\",\n    italic: \"i\",\n    n: \"n\",\n    normal: \"n\"\n  },\n      Ca = /^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\n\n  function Da(a) {\n    for (var b = a.f.length, c = 0; c < b; c++) {\n      var d = a.f[c].split(\":\"),\n          e = d[0].replace(/\\+/g, \" \"),\n          f = [\"n4\"];\n\n      if (2 <= d.length) {\n        var g;\n        var m = d[1];\n        g = [];\n        if (m) for (var m = m.split(\",\"), h = m.length, l = 0; l < h; l++) {\n          var k;\n          k = m[l];\n\n          if (k.match(/^[\\w-]+$/)) {\n            var n = Ca.exec(k.toLowerCase());\n            if (null == n) k = \"\";else {\n              k = n[2];\n              k = null == k || \"\" == k ? \"n\" : Ba[k];\n              n = n[1];\n              if (null == n || \"\" == n) n = \"4\";else var r = Aa[n],\n                  n = r ? r : isNaN(n) ? \"4\" : n.substr(0, 1);\n              k = [k, n].join(\"\");\n            }\n          } else k = \"\";\n\n          k && g.push(k);\n        }\n        0 < g.length && (f = g);\n        3 == d.length && (d = d[2], g = [], d = d ? d.split(\",\") : g, 0 < d.length && (d = za[d[0]]) && (a.c[e] = d));\n      }\n\n      a.c[e] || (d = za[e]) && (a.c[e] = d);\n\n      for (d = 0; d < f.length; d += 1) {\n        a.a.push(new G(e, f[d]));\n      }\n    }\n  }\n\n  ;\n\n  function Ea(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  var Fa = {\n    Arimo: !0,\n    Cousine: !0,\n    Tinos: !0\n  };\n\n  Ea.prototype.load = function (a) {\n    var b = new B(),\n        c = this.c,\n        d = new ta(this.a.api, this.a.text),\n        e = this.a.families;\n    va(d, e);\n    var f = new ya(e);\n    Da(f);\n    z(c, wa(d), C(b));\n    E(b, function () {\n      a(f.a, f.c, Fa);\n    });\n  };\n\n  function Ga(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  Ga.prototype.load = function (a) {\n    var b = this.a.id,\n        c = this.c.o;\n    b ? A(this.c, (this.a.api || \"https://use.typekit.net\") + \"/\" + b + \".js\", function (b) {\n      if (b) a([]);else if (c.Typekit && c.Typekit.config && c.Typekit.config.fn) {\n        b = c.Typekit.config.fn;\n\n        for (var e = [], f = 0; f < b.length; f += 2) {\n          for (var g = b[f], m = b[f + 1], h = 0; h < m.length; h++) {\n            e.push(new G(g, m[h]));\n          }\n        }\n\n        try {\n          c.Typekit.load({\n            events: !1,\n            classes: !1,\n            async: !0\n          });\n        } catch (l) {}\n\n        a(e);\n      }\n    }, 2E3) : a([]);\n  };\n\n  function Ha(a, b) {\n    this.c = a;\n    this.f = b;\n    this.a = [];\n  }\n\n  Ha.prototype.load = function (a) {\n    var b = this.f.id,\n        c = this.c.o,\n        d = this;\n    b ? (c.__webfontfontdeckmodule__ || (c.__webfontfontdeckmodule__ = {}), c.__webfontfontdeckmodule__[b] = function (b, c) {\n      for (var g = 0, m = c.fonts.length; g < m; ++g) {\n        var h = c.fonts[g];\n        d.a.push(new G(h.name, ga(\"font-weight:\" + h.weight + \";font-style:\" + h.style)));\n      }\n\n      a(d.a);\n    }, A(this.c, (this.f.api || \"https://f.fontdeck.com/s/css/js/\") + ea(this.c) + \"/\" + b + \".js\", function (b) {\n      b && a([]);\n    })) : a([]);\n  };\n\n  var Y = new oa(window);\n\n  Y.a.c.custom = function (a, b) {\n    return new sa(b, a);\n  };\n\n  Y.a.c.fontdeck = function (a, b) {\n    return new Ha(b, a);\n  };\n\n  Y.a.c.monotype = function (a, b) {\n    return new ra(b, a);\n  };\n\n  Y.a.c.typekit = function (a, b) {\n    return new Ga(b, a);\n  };\n\n  Y.a.c.google = function (a, b) {\n    return new Ea(b, a);\n  };\n\n  var Z = {\n    load: p(Y.load, Y)\n  };\n  \"function\" === typeof define && define.amd ? define(function () {\n    return Z;\n  }) : \"undefined\" !== typeof module && module.exports ? module.exports = Z : (window.WebFont = Z, window.WebFontConfig && Y.load(window.WebFontConfig));\n})();","import * as React from 'react';\nexport default {\n  React\n};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import invariant from \"invariant\";\n\n////////////////////////////////////////////////////////////////////////////////\n// startsWith(string, search) - Check if `string` starts with `search`\nvar startsWith = function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// pick(routes, uri)\n//\n// Ranks and picks the best route to match. Each segment gets the highest\n// amount of points, then the type of segment gets an additional amount of\n// points where\n//\n//     static > dynamic > splat > root\n//\n// This way we don't have to worry about the order of our routes, let the\n// computers do it.\n//\n// A route looks like this\n//\n//     { path, default, value }\n//\n// And a returned match looks like:\n//\n//     { route, params, uri }\n//\n// I know, I should use TypeScript not comments for these types.\nvar pick = function pick(routes, uri) {\n  var match = void 0;\n  var default_ = void 0;\n\n  var _uri$split = uri.split(\"?\"),\n      uriPathname = _uri$split[0];\n\n  var uriSegments = segmentize(uriPathname);\n  var isRootUri = uriSegments[0] === \"\";\n  var ranked = rankRoutes(routes);\n\n  for (var i = 0, l = ranked.length; i < l; i++) {\n    var missed = false;\n    var route = ranked[i].route;\n\n    if (route.default) {\n      default_ = {\n        route: route,\n        params: {},\n        uri: uri\n      };\n      continue;\n    }\n\n    var routeSegments = segmentize(route.path);\n    var params = {};\n    var max = Math.max(uriSegments.length, routeSegments.length);\n    var index = 0;\n\n    for (; index < max; index++) {\n      var routeSegment = routeSegments[index];\n      var uriSegment = uriSegments[index];\n\n      if (isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/*\n        var param = routeSegment.slice(1) || \"*\";\n        params[param] = uriSegments.slice(index).map(decodeURIComponent).join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      var dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        var matchIsNotReserved = reservedNames.indexOf(dynamicMatch[1]) === -1;\n        !matchIsNotReserved ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Router> dynamic segment \\\"\" + dynamicMatch[1] + \"\\\" is a reserved name. Please use a different name in path \\\"\" + route.path + \"\\\".\") : invariant(false) : void 0;\n        var value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route: route,\n        params: params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// match(path, uri) - Matches just one path to a uri, also lol\nvar match = function match(path, uri) {\n  return pick([{ path: path }], uri);\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// resolve(to, basepath)\n//\n// Resolves URIs as though every path is a directory, no files.  Relative URIs\n// in the browser can feel awkward because not only can you be \"in a directory\"\n// you can be \"at a file\", too. For example\n//\n//     browserSpecResolve('foo', '/bar/') => /bar/foo\n//     browserSpecResolve('foo', '/bar') => /foo\n//\n// But on the command line of a file system, it's not as complicated, you can't\n// `cd` from a file, only directories.  This way, links have to know less about\n// their current path. To go deeper you can do this:\n//\n//     <Link to=\"deeper\"/>\n//     // instead of\n//     <Link to=`{${props.uri}/deeper}`/>\n//\n// Just like `cd`, if you want to go deeper from the command line, you do this:\n//\n//     cd deeper\n//     # not\n//     cd $(pwd)/deeper\n//\n// By treating every path as a directory, linking to relative paths should\n// require less contextual information and (fingers crossed) be more intuitive.\nvar resolve = function resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  var _to$split = to.split(\"?\"),\n      toPathname = _to$split[0],\n      toQuery = _to$split[1];\n\n  var _base$split = base.split(\"?\"),\n      basePathname = _base$split[0];\n\n  var toSegments = segmentize(toPathname);\n  var baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    var pathname = baseSegments.concat(toSegments).join(\"/\");\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./         /users/123  =>  /users/123\n  // ../        /users/123  =>  /users\n  // ../..      /users/123  =>  /\n  // ../../one  /a/b/c/d    =>  /a/b/one\n  // .././one   /a/b/c/d    =>  /a/b/c/one\n  var allSegments = baseSegments.concat(toSegments);\n  var segments = [];\n  for (var i = 0, l = allSegments.length; i < l; i++) {\n    var segment = allSegments[i];\n    if (segment === \"..\") segments.pop();else if (segment !== \".\") segments.push(segment);\n  }\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// insertParams(path, params)\n\nvar insertParams = function insertParams(path, params) {\n  var _path$split = path.split(\"?\"),\n      pathBase = _path$split[0],\n      _path$split$ = _path$split[1],\n      query = _path$split$ === undefined ? \"\" : _path$split$;\n\n  var segments = segmentize(pathBase);\n  var constructedPath = \"/\" + segments.map(function (segment) {\n    var match = paramRe.exec(segment);\n    return match ? params[match[1]] : segment;\n  }).join(\"/\");\n  var _params$location = params.location;\n  _params$location = _params$location === undefined ? {} : _params$location;\n  var _params$location$sear = _params$location.search,\n      search = _params$location$sear === undefined ? \"\" : _params$location$sear;\n\n  var searchSplit = search.split(\"?\")[1] || \"\";\n  constructedPath = addQuery(constructedPath, query, searchSplit);\n  return constructedPath;\n};\n\nvar validateRedirect = function validateRedirect(from, to) {\n  var filter = function filter(segment) {\n    return isDynamic(segment);\n  };\n  var fromString = segmentize(from).filter(filter).sort().join(\"/\");\n  var toString = segmentize(to).filter(filter).sort().join(\"/\");\n  return fromString === toString;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Junk\nvar paramRe = /^:(.+)/;\n\nvar SEGMENT_POINTS = 4;\nvar STATIC_POINTS = 3;\nvar DYNAMIC_POINTS = 2;\nvar SPLAT_PENALTY = 1;\nvar ROOT_POINTS = 1;\n\nvar isRootSegment = function isRootSegment(segment) {\n  return segment === \"\";\n};\nvar isDynamic = function isDynamic(segment) {\n  return paramRe.test(segment);\n};\nvar isSplat = function isSplat(segment) {\n  return segment && segment[0] === \"*\";\n};\n\nvar rankRoute = function rankRoute(route, index) {\n  var score = route.default ? 0 : segmentize(route.path).reduce(function (score, segment) {\n    score += SEGMENT_POINTS;\n    if (isRootSegment(segment)) score += ROOT_POINTS;else if (isDynamic(segment)) score += DYNAMIC_POINTS;else if (isSplat(segment)) score -= SEGMENT_POINTS + SPLAT_PENALTY;else score += STATIC_POINTS;\n    return score;\n  }, 0);\n  return { route: route, score: score, index: index };\n};\n\nvar rankRoutes = function rankRoutes(routes) {\n  return routes.map(rankRoute).sort(function (a, b) {\n    return a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index;\n  });\n};\n\nvar segmentize = function segmentize(uri) {\n  return uri\n  // strip starting/ending slashes\n  .replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\n};\n\nvar addQuery = function addQuery(pathname) {\n  for (var _len = arguments.length, query = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    query[_key - 1] = arguments[_key];\n  }\n\n  query = query.filter(function (q) {\n    return q && q.length > 0;\n  });\n  return pathname + (query && query.length > 0 ? \"?\" + query.join(\"&\") : \"\");\n};\n\nvar reservedNames = [\"uri\", \"path\"];\n\n/**\n * Shallow compares two objects.\n * @param {Object} obj1 The first object to compare.\n * @param {Object} obj2 The second object to compare.\n */\nvar shallowCompare = function shallowCompare(obj1, obj2) {\n  var obj1Keys = Object.keys(obj1);\n  return obj1Keys.length === Object.keys(obj2).length && obj1Keys.every(function (key) {\n    return obj2.hasOwnProperty(key) && obj1[key] === obj2[key];\n  });\n};\n\n////////////////////////////////////////////////////////////////////////////////\nexport { startsWith, pick, match, resolve, insertParams, validateRedirect, shallowCompare };","module.exports = [{\n      plugin: require('../node_modules/gatsby-plugin-mdx/gatsby-browser.js'),\n      options: {\"plugins\":[]},\n    },{\n      plugin: require('../node_modules/gatsby-plugin-manifest/gatsby-browser.js'),\n      options: {\"plugins\":[],\"name\":\"gatsby-starter-default\",\"short_name\":\"starter\",\"start_url\":\"/\",\"background_color\":\"#663399\",\"theme_color\":\"#663399\",\"display\":\"minimal-ui\",\"icon\":\"src/images/gatsby-icon.png\",\"cache_busting_mode\":\"query\",\"include_favicon\":true,\"legacy\":true,\"theme_color_in_head\":true,\"cacheDigest\":\"4a9773549091c227cd2eb82ccd9c5e3a\"},\n    },{\n      plugin: require('../node_modules/gatsby-plugin-web-font-loader/gatsby-browser.js'),\n      options: {\"plugins\":[],\"google\":{\"families\":[\"Montserrat:300,400,600,700\"]}},\n    },{\n      plugin: require('../node_modules/gatsby-plugin-breadcrumb/gatsby-browser.js'),\n      options: {\"plugins\":[],\"useAutoGen\":true,\"exclude\":[\"/404/\",\"/404.html\"],\"trailingSlashes\":true,\"usePathPrefix\":\"/esma-website\"},\n    },{\n      plugin: require('../gatsby-browser.js'),\n      options: {\"plugins\":[]},\n    }]\n","const WebFont = require('webfontloader')\n\nexports.onInitialClientRender = (a, options) => {\n\toptions = { ...options }\n\tdelete options.plugins\n\tWebFont.load(options)\n}","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","/*!\n * domready (c) Dustin Diaz 2014 - License MIT\n * ie10 fix - Mikael Kristiansson 2019\n */\n!(function(name, definition) {\n  if (typeof module != \"undefined\") module.exports = definition();\n  else if (typeof define == \"function\" && typeof define.amd == \"object\")\n    define(definition);\n  else this[name] = definition();\n})(\"domready\", function() {\n  var ie10 = false;\n  if (navigator.appVersion.indexOf(\"MSIE 10\") !== -1) {\n    ie10 = true;\n  }\n\n  var fns = [],\n    listener,\n    doc = typeof document === \"object\" && document,\n    hack = ie10\n      ? doc.documentElement.doScroll(\"left\")\n      : doc.documentElement.doScroll,\n    domContentLoaded = \"DOMContentLoaded\",\n    loaded =\n      doc && (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\n  if (!loaded && doc)\n    doc.addEventListener(\n      domContentLoaded,\n      (listener = function() {\n        doc.removeEventListener(domContentLoaded, listener);\n        loaded = 1;\n        while ((listener = fns.shift())) listener();\n      })\n    );\n\n  return function(fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn);\n  };\n});\n","import SchoolYearsOverviewSVG from \"../../../../src/content/school-years/svg/school-years-executive-summary.svg\";\nimport * as React from 'react';\nexport default {\n  SchoolYearsOverviewSVG,\n  React\n};","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\nexport default unitlessKeys;","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\n\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };","import { apiRunner } from \"./api-runner-browser\"\n\nif (\n  window.location.protocol !== `https:` &&\n  window.location.hostname !== `localhost`\n) {\n  console.error(\n    `Service workers can only be used over HTTPS, or on localhost for development`\n  )\n} else if (`serviceWorker` in navigator) {\n  navigator.serviceWorker\n    .register(`${__BASE_PATH__}/sw.js`)\n    .then(function (reg) {\n      reg.addEventListener(`updatefound`, () => {\n        apiRunner(`onServiceWorkerUpdateFound`, { serviceWorker: reg })\n        // The updatefound event implies that reg.installing is set; see\n        // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\n        const installingWorker = reg.installing\n        console.log(`installingWorker`, installingWorker)\n        installingWorker.addEventListener(`statechange`, () => {\n          switch (installingWorker.state) {\n            case `installed`:\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and the fresh content will\n                // have been added to the cache.\n\n                // We set a flag so Gatsby Link knows to refresh the page on next navigation attempt\n                window.___swUpdated = true\n                // We call the onServiceWorkerUpdateReady API so users can show update prompts.\n                apiRunner(`onServiceWorkerUpdateReady`, { serviceWorker: reg })\n\n                // If resources failed for the current page, reload.\n                if (window.___failedResources) {\n                  console.log(`resources failed, SW updated - reloading`)\n                  window.location.reload()\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a \"Content is cached for offline use.\" message.\n                console.log(`Content is now available offline!`)\n\n                // Post to service worker that install is complete.\n                // Delay to allow time for the event listener to be added --\n                // otherwise fetch is called too soon and resources aren't cached.\n                apiRunner(`onServiceWorkerInstalled`, { serviceWorker: reg })\n              }\n              break\n\n            case `redundant`:\n              console.error(`The installing service worker became redundant.`)\n              apiRunner(`onServiceWorkerRedundant`, { serviceWorker: reg })\n              break\n\n            case `activated`:\n              apiRunner(`onServiceWorkerActive`, { serviceWorker: reg })\n              break\n          }\n        })\n      })\n    })\n    .catch(function (e) {\n      console.error(`Error during service worker registration:`, e)\n    })\n}\n","// prefer default export if available\nconst preferDefault = m => (m && m.default) || m\n\nexports.components = {\n  \"component---src-pages-404-js\": () => import(\"./../../../src/pages/404.js\" /* webpackChunkName: \"component---src-pages-404-js\" */),\n  \"component---src-pages-get-involved-js\": () => import(\"./../../../src/pages/get-involved.js\" /* webpackChunkName: \"component---src-pages-get-involved-js\" */),\n  \"component---src-pages-index-js\": () => import(\"./../../../src/pages/index.js\" /* webpackChunkName: \"component---src-pages-index-js\" */),\n  \"component---src-pages-issues-chronology-tsx\": () => import(\"./../../../src/pages/issues-chronology.tsx\" /* webpackChunkName: \"component---src-pages-issues-chronology-tsx\" */),\n  \"component---src-pages-operational-review-tsx\": () => import(\"./../../../src/pages/operational-review.tsx\" /* webpackChunkName: \"component---src-pages-operational-review-tsx\" */),\n  \"component---src-templates-life-stage-tsx\": () => import(\"./../../../src/templates/life-stage.tsx\" /* webpackChunkName: \"component---src-templates-life-stage-tsx\" */)\n}\n\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  React\n};","module.exports = {\n  \"default\": require(\"core-js/library/fn/object/assign\"),\n  __esModule: true\n};","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport CovidImpactRedundanciesSVG from \"../../../../src/content/early-years/svg/early-years-graph-3.svg\";\nimport CovidImpactChildCareSVG from \"../../../../src/content/early-years/svg/early-years-graph-4.svg\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  CovidImpactRedundanciesSVG,\n  CovidImpactChildCareSVG,\n  React\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph3Mobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 12 Copy 2\"),React.createElement(\"defs\",{\"key\":1},[React.createElement(\"path\",{\"d\":\"M0.0570501883,0.0173873752 C13.4226914,9.502733 24.1895723,16.1752939 32.3576926,20.0350701 C40.525813,23.8948463 51.2079152,27.357821 64.4039993,30.4239941 L64.4039993,25.6096147 C54.2569565,21.7962486 45.2704261,18.333274 37.444408,15.2206907 C29.6183898,12.1081075 17.1559372,7.0403397 0.0570501883,0.0173873752 Z\",\"id\":\"path-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0,68.9360959 C12.9890831,56.8384295 23.8561616,48.6135816 32.6012356,44.2615524 C38.685778,41.2335498 47.3096773,37.350209 58.3256481,34.5952363 C61.5368825,33.7921421 66.8006237,32.9442196 74.1168716,32.051469 C90.1755273,32.8299144 105.457357,35.6280585 119.962359,40.4459013 C134.467362,45.2637441 156.201519,54.7604757 185.16483,68.9360959 C160.872002,46.5745676 142.618706,31.3967556 130.404942,23.4026599 C123.086953,18.6129235 112.690623,9.67767067 102.133558,5.08753476 C97.4250699,3.04031765 90.1237515,1.42926498 80.2296033,0.254376738 C73.8405407,0.999157504 69.340891,1.84707996 66.7306542,2.79814412 C60.5676626,5.04368756 55.9261725,8.97452157 51.9582193,11.7013299 C45.4694209,16.1604827 36.3852224,25.0636685 24.7056239,38.4108874 L0,68.9360959 Z\",\"id\":\"path-3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":2},React.createElement(\"g\",{\"id\":\"Mobile/Timeline/School-years/Early-years-foundation-stage-Copy\",\"transform\":\"translate(-12.000000, -2523.000000)\"},React.createElement(\"g\",{\"id\":\"Group-12-Copy\",\"transform\":\"translate(12.000000, 2523.000000)\"},[React.createElement(\"line\",{\"x1\":\"77.4690111\",\"y1\":\"187.203436\",\"x2\":\"349.072165\",\"y2\":\"187.203436\",\"id\":\"Line\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"158.969417\",\"x2\":\"349.331595\",\"y2\":\"158.969417\",\"id\":\"Line-Copy\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"130.527484\",\"x2\":\"349.331595\",\"y2\":\"130.527484\",\"id\":\"Line-Copy-2\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"103.179471\",\"x2\":\"349.331595\",\"y2\":\"103.179471\",\"id\":\"Line-Copy-3\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"75.0110173\",\"x2\":\"349.331595\",\"y2\":\"75.0110173\",\"id\":\"Line-Copy-4\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"47.1160442\",\"x2\":\"349.331595\",\"y2\":\"47.1160442\",\"id\":\"Line-Copy-5\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":5}),React.createElement(\"g\",{\"id\":\"Group-35\",\"transform\":\"translate(285.318552, 151.311973)\",\"key\":6},[React.createElement(\"mask\",{\"id\":\"mask-2\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-1\"})),React.createElement(\"use\",{\"id\":\"Path-6-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#FFBA08\",\"xlinkHref\":\"#path-1\",\"key\":1}),React.createElement(\"g\",{\"id\":\"Group-11-Copy-2\",\"mask\":\"url(#mask-2)\",\"strokeLinecap\":\"square\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(28.752453, 20.995183) rotate(-345.000000) translate(-28.752453, -20.995183) translate(-10.236028, -14.960861)\"},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.000000, -0.000000)\",\"key\":0},[React.createElement(\"line\",{\"x1\":\"0.705890966\",\"y1\":\"-2.06352723e-12\",\"x2\":\"0.705890966\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.17464348\",\"y1\":\"0\",\"x2\":\"3.17464348\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.64339599\",\"y1\":\"0\",\"x2\":\"5.64339599\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.11214851\",\"y1\":\"-1.03176361e-12\",\"x2\":\"8.11214851\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.580901\",\"y1\":\"-5.15881807e-13\",\"x2\":\"10.580901\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-2\",\"transform\":\"translate(59.230247, -0.000000)\",\"key\":1},[React.createElement(\"line\",{\"x1\":\"0.725704722\",\"y1\":\"0\",\"x2\":\"0.725704722\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.19445724\",\"y1\":\"0\",\"x2\":\"3.19445724\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.66320975\",\"y1\":\"0\",\"x2\":\"5.66320975\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.13196226\",\"y1\":\"0\",\"x2\":\"8.13196226\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.6007148\",\"y1\":\"0\",\"x2\":\"10.6007148\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"13.0694673\",\"y1\":\"0\",\"x2\":\"13.0694673\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.5382198\",\"y1\":\"0\",\"x2\":\"15.5382198\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"18.0069723\",\"y1\":\"0\",\"x2\":\"18.0069723\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":7})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy\",\"transform\":\"translate(12.432465, 0.000000)\",\"key\":2},[React.createElement(\"line\",{\"x1\":\"0.617188128\",\"y1\":\"0\",\"x2\":\"0.617188128\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.08594064\",\"y1\":\"0\",\"x2\":\"3.08594064\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.55469315\",\"y1\":\"0\",\"x2\":\"5.55469315\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.02344567\",\"y1\":\"0\",\"x2\":\"8.02344567\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.4921982\",\"y1\":\"0\",\"x2\":\"10.4921982\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"12.9609507\",\"y1\":\"0\",\"x2\":\"12.9609507\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.4297032\",\"y1\":\"0\",\"x2\":\"15.4297032\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"17.8984557\",\"y1\":\"0\",\"x2\":\"17.8984557\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.3672082\",\"y1\":\"0\",\"x2\":\"20.3672082\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.8359607\",\"y1\":\"0\",\"x2\":\"22.8359607\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.3047133\",\"y1\":\"0\",\"x2\":\"25.3047133\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.7734658\",\"y1\":\"0\",\"x2\":\"27.7734658\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.2422183\",\"y1\":\"0\",\"x2\":\"30.2422183\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.7109708\",\"y1\":\"0\",\"x2\":\"32.7109708\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.1797233\",\"y1\":\"0\",\"x2\":\"35.1797233\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.6484758\",\"y1\":\"0\",\"x2\":\"37.6484758\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.1172283\",\"y1\":\"0\",\"x2\":\"40.1172283\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.5859809\",\"y1\":\"0\",\"x2\":\"42.5859809\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.0547334\",\"y1\":\"0\",\"x2\":\"45.0547334\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":18})])]))]),React.createElement(\"g\",{\"id\":\"Group-34\",\"transform\":\"translate(91.147661, 76.651898)\",\"key\":7},[React.createElement(\"mask\",{\"id\":\"mask-4\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-3\"})),React.createElement(\"use\",{\"id\":\"Path-5-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#3772FF\",\"xlinkHref\":\"#path-3\",\"key\":1}),React.createElement(\"g\",{\"id\":\"Group-11\",\"mask\":\"url(#mask-4)\",\"strokeLinecap\":\"square\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(99.417658, 42.376051) rotate(-345.000000) translate(-99.417658, -42.376051) translate(6.076919, -12.916704)\"},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.175124, 0.292629)\",\"key\":0},[React.createElement(\"line\",{\"x1\":\"0.509394307\",\"y1\":\"0\",\"x2\":\"0.509394307\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"2.98165467\",\"y1\":\"0\",\"x2\":\"2.98165467\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.45391504\",\"y1\":\"0\",\"x2\":\"5.45391504\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"7.92617541\",\"y1\":\"0\",\"x2\":\"7.92617541\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.3984358\",\"y1\":\"0\",\"x2\":\"10.3984358\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"12.8706961\",\"y1\":\"0\",\"x2\":\"12.8706961\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.3429565\",\"y1\":\"0\",\"x2\":\"15.3429565\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"17.8152169\",\"y1\":\"0\",\"x2\":\"17.8152169\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.2874772\",\"y1\":\"0\",\"x2\":\"20.2874772\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.7597376\",\"y1\":\"0\",\"x2\":\"22.7597376\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.231998\",\"y1\":\"0\",\"x2\":\"25.231998\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.7042584\",\"y1\":\"0\",\"x2\":\"27.7042584\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.1765187\",\"y1\":\"0\",\"x2\":\"30.1765187\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.6487791\",\"y1\":\"0\",\"x2\":\"32.6487791\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.1210395\",\"y1\":\"0\",\"x2\":\"35.1210395\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.5932998\",\"y1\":\"0\",\"x2\":\"37.5932998\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.0655602\",\"y1\":\"0\",\"x2\":\"40.0655602\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.5378206\",\"y1\":\"0\",\"x2\":\"42.5378206\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.0100809\",\"y1\":\"0\",\"x2\":\"45.0100809\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-2\",\"transform\":\"translate(93.462218, 0.082790)\",\"key\":1},[React.createElement(\"line\",{\"x1\":\"0.726735877\",\"y1\":\"0\",\"x2\":\"0.726735877\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.19899624\",\"y1\":\"0\",\"x2\":\"3.19899624\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.67125661\",\"y1\":\"0\",\"x2\":\"5.67125661\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.14351698\",\"y1\":\"0\",\"x2\":\"8.14351698\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.6157773\",\"y1\":\"0\",\"x2\":\"10.6157773\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"13.0880377\",\"y1\":\"0\",\"x2\":\"13.0880377\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.5602981\",\"y1\":\"0\",\"x2\":\"15.5602981\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"18.0325585\",\"y1\":\"0\",\"x2\":\"18.0325585\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.5048188\",\"y1\":\"0\",\"x2\":\"20.5048188\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.9770792\",\"y1\":\"0\",\"x2\":\"22.9770792\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.4493396\",\"y1\":\"0\",\"x2\":\"25.4493396\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.9215999\",\"y1\":\"0\",\"x2\":\"27.9215999\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.3938603\",\"y1\":\"0\",\"x2\":\"30.3938603\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.8661207\",\"y1\":\"0\",\"x2\":\"32.8661207\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.338381\",\"y1\":\"0\",\"x2\":\"35.338381\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.8106414\",\"y1\":\"0\",\"x2\":\"37.8106414\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.2829018\",\"y1\":\"0\",\"x2\":\"40.2829018\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.7551621\",\"y1\":\"0\",\"x2\":\"42.7551621\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.2274225\",\"y1\":\"0\",\"x2\":\"45.2274225\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy\",\"transform\":\"translate(47.130610, 0.367581)\",\"key\":2},[React.createElement(\"line\",{\"x1\":\"0.618065092\",\"y1\":\"0\",\"x2\":\"0.618065092\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.09032546\",\"y1\":\"0\",\"x2\":\"3.09032546\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.56258583\",\"y1\":\"0\",\"x2\":\"5.56258583\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.03484619\",\"y1\":\"0\",\"x2\":\"8.03484619\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.5071066\",\"y1\":\"0\",\"x2\":\"10.5071066\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"12.9793669\",\"y1\":\"0\",\"x2\":\"12.9793669\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.4516273\",\"y1\":\"0\",\"x2\":\"15.4516273\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"17.9238877\",\"y1\":\"0\",\"x2\":\"17.9238877\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.396148\",\"y1\":\"0\",\"x2\":\"20.396148\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.8684084\",\"y1\":\"0\",\"x2\":\"22.8684084\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.3406688\",\"y1\":\"0\",\"x2\":\"25.3406688\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.8129291\",\"y1\":\"0\",\"x2\":\"27.8129291\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.2851895\",\"y1\":\"0\",\"x2\":\"30.2851895\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.7574499\",\"y1\":\"0\",\"x2\":\"32.7574499\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.2297102\",\"y1\":\"0\",\"x2\":\"35.2297102\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.7019706\",\"y1\":\"0\",\"x2\":\"37.7019706\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.174231\",\"y1\":\"0\",\"x2\":\"40.174231\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.6464913\",\"y1\":\"0\",\"x2\":\"42.6464913\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.1187517\",\"y1\":\"0\",\"x2\":\"45.1187517\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-3\",\"transform\":\"translate(140.701655, 0.157742)\",\"key\":3},[React.createElement(\"line\",{\"x1\":\"0.551456391\",\"y1\":\"0\",\"x2\":\"0.551456391\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.02371676\",\"y1\":\"0\",\"x2\":\"3.02371676\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.49597713\",\"y1\":\"0\",\"x2\":\"5.49597713\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"7.96823749\",\"y1\":\"0\",\"x2\":\"7.96823749\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.4404979\",\"y1\":\"0\",\"x2\":\"10.4404979\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"12.9127582\",\"y1\":\"0\",\"x2\":\"12.9127582\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.3850186\",\"y1\":\"0\",\"x2\":\"15.3850186\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"17.857279\",\"y1\":\"0\",\"x2\":\"17.857279\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.3295393\",\"y1\":\"0\",\"x2\":\"20.3295393\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.8017997\",\"y1\":\"0\",\"x2\":\"22.8017997\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.2740601\",\"y1\":\"5.15806298e-13\",\"x2\":\"25.2740601\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.7463204\",\"y1\":\"0\",\"x2\":\"27.7463204\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.2185808\",\"y1\":\"0\",\"x2\":\"30.2185808\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.6908412\",\"y1\":\"0\",\"x2\":\"32.6908412\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.1631015\",\"y1\":\"0\",\"x2\":\"35.1631015\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.6353619\",\"y1\":\"0\",\"x2\":\"37.6353619\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.1076223\",\"y1\":\"0\",\"x2\":\"40.1076223\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.5798826\",\"y1\":\"0\",\"x2\":\"42.5798826\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.052143\",\"y1\":\"-5.15806298e-13\",\"x2\":\"45.052143\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})])]))]),React.createElement(\"path\",{\"d\":\"M80.4819356,156.888923 C111.426831,122.809029 142.626767,106.786392 174.081743,108.821013 C196.211915,110.252472 225.055205,119.464691 279.923488,147.224475 C303.047146,158.923543 326.085791,168.672767 349.039422,176.472145\",\"id\":\"Path-3-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"1.5\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M80.4819356,157.478678 C94.1621794,141.393052 103.768699,130.09587 109.301495,123.587134 C137.202422,90.7647098 153.678516,74.9158192 176.377107,77.4640556 C199.075698,80.012292 214.888199,92.4986503 279.923488,147.79538 C286.339541,153.250676 297.231593,161.327471 313.333774,169.200566 C321.325038,173.107862 333.226921,177.354922 349.039422,181.941748\",\"id\":\"Path-4-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"1.5\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":9}),React.createElement(\"text\",{\"id\":\"18\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":10},React.createElement(\"tspan\",{\"x\":\"70.1595094\",\"y\":\"204.395599\"},\"18\")),React.createElement(\"text\",{\"id\":\"42\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":11},React.createElement(\"tspan\",{\"x\":\"199.500344\",\"y\":\"204.395599\"},\"42\")),React.createElement(\"text\",{\"id\":\"£0\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":12},React.createElement(\"tspan\",{\"x\":\"52.0969385\",\"y\":\"182.950083\"},\"£0\")),React.createElement(\"text\",{\"id\":\"£5k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":13},React.createElement(\"tspan\",{\"x\":\"45.0269385\",\"y\":\"154.92429\"},\"£5k\")),React.createElement(\"text\",{\"id\":\"£10k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":14},React.createElement(\"tspan\",{\"x\":\"38.6289385\",\"y\":\"126.898496\"},\"£10k\")),React.createElement(\"text\",{\"id\":\"£15k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":15},React.createElement(\"tspan\",{\"x\":\"39.9729385\",\"y\":\"98.872702\"},\"£15k\")),React.createElement(\"text\",{\"id\":\"£20k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":16},React.createElement(\"tspan\",{\"x\":\"35.7309385\",\"y\":\"70.8469082\"},\"£20k\")),React.createElement(\"text\",{\"id\":\"£25k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":17},React.createElement(\"tspan\",{\"x\":\"37.0749385\",\"y\":\"42.8211144\"},\"£25k\")),React.createElement(\"text\",{\"id\":\"Discounted-Yearly-Pr\",\"transform\":\"translate(11.322581, 117.617102) rotate(-90.000000) translate(-11.322581, -117.617102) \",\"fontFamily\":\"Montserrat-SemiBold, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"500\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":18},React.createElement(\"tspan\",{\"x\":\"-100.719419\",\"y\":\"120.353763\"},\"Discounted Yearly Productivity \")),React.createElement(\"text\",{\"id\":\"Age\",\"transform\":\"translate(213.240701, 225.918437) rotate(-360.000000) translate(-213.240701, -225.918437) \",\"fontFamily\":\"Montserrat-SemiBold, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"500\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":19},React.createElement(\"tspan\",{\"x\":\"198.785701\",\"y\":\"228.655098\"},\"Age\")),React.createElement(\"text\",{\"id\":\"66\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":20},React.createElement(\"tspan\",{\"x\":\"332.215179\",\"y\":\"204.395599\"},\"66\"))])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph3Mobile.defaultProps = {\"width\":\"351px\",\"height\":\"238px\",\"viewBox\":\"0 0 351 238\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph3Mobile;\n\nSchoolYearsGapsInAttainmentGraph3Mobile.default = SchoolYearsGapsInAttainmentGraph3Mobile;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","import OverviewSVG from \"../../../../src/content/early-years/svg/early-years-graph-1.svg\";\nimport * as React from 'react';\nexport default {\n  OverviewSVG,\n  React\n};","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// This is extracted to separate module because it's shared\n// between browser and SSR code\nexport const RouteAnnouncerProps = {\n  id: `gatsby-announcer`,\n  style: {\n    position: `absolute`,\n    top: 0,\n    width: 1,\n    height: 1,\n    padding: 0,\n    overflow: `hidden`,\n    clip: `rect(0, 0, 0, 0)`,\n    whiteSpace: `nowrap`,\n    border: 0,\n  },\n  \"aria-live\": `assertive`,\n  \"aria-atomic\": `true`,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport loader, { PageResourceStatus } from \"./loader\"\nimport redirects from \"./redirects.json\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport emitter from \"./emitter\"\nimport { RouteAnnouncerProps } from \"./route-announcer-props\"\nimport { navigate as reachNavigate } from \"@reach/router\"\nimport { globalHistory } from \"@reach/router/lib/history\"\nimport { parsePath } from \"gatsby-link\"\n\n// Convert to a map for faster lookup in maybeRedirect()\nconst redirectMap = redirects.reduce((map, redirect) => {\n  map[redirect.fromPath] = redirect\n  return map\n}, {})\n\nfunction maybeRedirect(pathname) {\n  const redirect = redirectMap[pathname]\n\n  if (redirect != null) {\n    if (process.env.NODE_ENV !== `production`) {\n      if (!loader.isPageNotFound(pathname)) {\n        console.error(\n          `The route \"${pathname}\" matches both a page and a redirect; this is probably not intentional.`\n        )\n      }\n    }\n\n    window.___replace(redirect.toPath)\n    return true\n  } else {\n    return false\n  }\n}\n\nconst onPreRouteUpdate = (location, prevLocation) => {\n  if (!maybeRedirect(location.pathname)) {\n    apiRunner(`onPreRouteUpdate`, { location, prevLocation })\n  }\n}\n\nconst onRouteUpdate = (location, prevLocation) => {\n  if (!maybeRedirect(location.pathname)) {\n    apiRunner(`onRouteUpdate`, { location, prevLocation })\n  }\n}\n\nconst navigate = (to, options = {}) => {\n  // Support forward/backward navigation with numbers\n  // navigate(-2) (jumps back 2 history steps)\n  // navigate(2)  (jumps forward 2 history steps)\n  if (typeof to === `number`) {\n    globalHistory.navigate(to)\n    return\n  }\n\n  let { pathname } = parsePath(to)\n  const redirect = redirectMap[pathname]\n\n  // If we're redirecting, just replace the passed in pathname\n  // to the one we want to redirect to.\n  if (redirect) {\n    to = redirect.toPath\n    pathname = parsePath(to).pathname\n  }\n\n  // If we had a service worker update, no matter the path, reload window and\n  // reset the pathname whitelist\n  if (window.___swUpdated) {\n    window.location = pathname\n    return\n  }\n\n  // Start a timer to wait for a second before transitioning and showing a\n  // loader in case resources aren't around yet.\n  const timeoutId = setTimeout(() => {\n    emitter.emit(`onDelayedLoadPageResources`, { pathname })\n    apiRunner(`onRouteUpdateDelayed`, {\n      location: window.location,\n    })\n  }, 1000)\n\n  loader.loadPage(pathname).then(pageResources => {\n    // If no page resources, then refresh the page\n    // Do this, rather than simply `window.location.reload()`, so that\n    // pressing the back/forward buttons work - otherwise when pressing\n    // back, the browser will just change the URL and expect JS to handle\n    // the change, which won't always work since it might not be a Gatsby\n    // page.\n    if (!pageResources || pageResources.status === PageResourceStatus.Error) {\n      window.history.replaceState({}, ``, location.href)\n      window.location = pathname\n      clearTimeout(timeoutId)\n      return\n    }\n\n    // If the loaded page has a different compilation hash to the\n    // window, then a rebuild has occurred on the server. Reload.\n    if (process.env.NODE_ENV === `production` && pageResources) {\n      if (\n        pageResources.page.webpackCompilationHash !==\n        window.___webpackCompilationHash\n      ) {\n        // Purge plugin-offline cache\n        if (\n          `serviceWorker` in navigator &&\n          navigator.serviceWorker.controller !== null &&\n          navigator.serviceWorker.controller.state === `activated`\n        ) {\n          navigator.serviceWorker.controller.postMessage({\n            gatsbyApi: `clearPathResources`,\n          })\n        }\n\n        console.log(`Site has changed on server. Reloading browser`)\n        window.location = pathname\n      }\n    }\n    reachNavigate(to, options)\n    clearTimeout(timeoutId)\n  })\n}\n\nfunction shouldUpdateScroll(prevRouterProps, { location }) {\n  const { pathname, hash } = location\n  const results = apiRunner(`shouldUpdateScroll`, {\n    prevRouterProps,\n    // `pathname` for backwards compatibility\n    pathname,\n    routerProps: { location },\n    getSavedScrollPosition: args => this._stateStorage.read(args),\n  })\n  if (results.length > 0) {\n    // Use the latest registered shouldUpdateScroll result, this allows users to override plugin's configuration\n    // @see https://github.com/gatsbyjs/gatsby/issues/12038\n    return results[results.length - 1]\n  }\n\n  if (prevRouterProps) {\n    const {\n      location: { pathname: oldPathname },\n    } = prevRouterProps\n    if (oldPathname === pathname) {\n      // Scroll to element if it exists, if it doesn't, or no hash is provided,\n      // scroll to top.\n      return hash ? decodeURI(hash.slice(1)) : [0, 0]\n    }\n  }\n  return true\n}\n\nfunction init() {\n  // The \"scroll-behavior\" package expects the \"action\" to be on the location\n  // object so let's copy it over.\n  globalHistory.listen(args => {\n    args.location.action = args.action\n  })\n\n  window.___push = to => navigate(to, { replace: false })\n  window.___replace = to => navigate(to, { replace: true })\n  window.___navigate = (to, options) => navigate(to, options)\n\n  // Check for initial page-load redirect\n  maybeRedirect(window.location.pathname)\n}\n\nclass RouteAnnouncer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.announcementRef = React.createRef()\n  }\n\n  componentDidUpdate(prevProps, nextProps) {\n    requestAnimationFrame(() => {\n      let pageName = `new page at ${this.props.location.pathname}`\n      if (document.title) {\n        pageName = document.title\n      }\n      const pageHeadings = document.querySelectorAll(`#gatsby-focus-wrapper h1`)\n      if (pageHeadings && pageHeadings.length) {\n        pageName = pageHeadings[0].textContent\n      }\n      const newAnnouncement = `Navigated to ${pageName}`\n      if (this.announcementRef.current) {\n        const oldAnnouncement = this.announcementRef.current.innerText\n        if (oldAnnouncement !== newAnnouncement) {\n          this.announcementRef.current.innerText = newAnnouncement\n        }\n      }\n    })\n  }\n\n  render() {\n    return <div {...RouteAnnouncerProps} ref={this.announcementRef}></div>\n  }\n}\n\n// Fire on(Pre)RouteUpdate APIs\nclass RouteUpdates extends React.Component {\n  constructor(props) {\n    super(props)\n    onPreRouteUpdate(props.location, null)\n  }\n\n  componentDidMount() {\n    onRouteUpdate(this.props.location, null)\n  }\n\n  componentDidUpdate(prevProps, prevState, shouldFireRouteUpdate) {\n    if (shouldFireRouteUpdate) {\n      onRouteUpdate(this.props.location, prevProps.location)\n    }\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      onPreRouteUpdate(this.props.location, prevProps.location)\n      return true\n    }\n\n    return false\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.children}\n        <RouteAnnouncer location={location} />\n      </React.Fragment>\n    )\n  }\n}\n\nRouteUpdates.propTypes = {\n  location: PropTypes.object.isRequired,\n}\n\nexport { init, shouldUpdateScroll, RouteUpdates }\n","// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) return true;\n  }for (var _i in b) {\n    if (a[_i] !== b[_i]) return true;\n  }return false;\n}\n\nexport default (function (instance, nextProps, nextState) {\n  return shallowDiffers(instance.props, nextProps) || shallowDiffers(instance.state, nextState);\n});","import React from \"react\"\nimport loader, { PageResourceStatus } from \"./loader\"\nimport shallowCompare from \"shallow-compare\"\n\nclass EnsureResources extends React.Component {\n  constructor(props) {\n    super()\n    const { location, pageResources } = props\n    this.state = {\n      location: { ...location },\n      pageResources: pageResources || loader.loadPageSync(location.pathname),\n    }\n  }\n\n  static getDerivedStateFromProps({ location }, prevState) {\n    if (prevState.location.href !== location.href) {\n      const pageResources = loader.loadPageSync(location.pathname)\n      return {\n        pageResources,\n        location: { ...location },\n      }\n    }\n\n    return {\n      location: { ...location },\n    }\n  }\n\n  loadResources(rawPath) {\n    loader.loadPage(rawPath).then(pageResources => {\n      if (pageResources && pageResources.status !== PageResourceStatus.Error) {\n        this.setState({\n          location: { ...window.location },\n          pageResources,\n        })\n      } else {\n        window.history.replaceState({}, ``, location.href)\n        window.location = rawPath\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Always return false if we're missing resources.\n    if (!nextState.pageResources) {\n      this.loadResources(nextProps.location.pathname)\n      return false\n    }\n\n    // Check if the component or json have changed.\n    if (this.state.pageResources !== nextState.pageResources) {\n      return true\n    }\n    if (\n      this.state.pageResources.component !== nextState.pageResources.component\n    ) {\n      return true\n    }\n\n    if (this.state.pageResources.json !== nextState.pageResources.json) {\n      return true\n    }\n    // Check if location has changed on a page using internal routing\n    // via matchPath configuration.\n    if (\n      this.state.location.key !== nextState.location.key &&\n      nextState.pageResources.page &&\n      (nextState.pageResources.page.matchPath ||\n        nextState.pageResources.page.path)\n    ) {\n      return true\n    }\n    return shallowCompare(this, nextProps, nextState)\n  }\n\n  render() {\n    if (process.env.NODE_ENV !== `production` && !this.state.pageResources) {\n      throw new Error(\n        `EnsureResources was not able to find resources for path: \"${this.props.location.pathname}\"\nThis typically means that an issue occurred building components for that path.\nRun \\`gatsby clean\\` to remove any cached elements.`\n      )\n    }\n\n    return this.props.children(this.state)\n  }\n}\n\nexport default EnsureResources\n","import { apiRunner, apiRunnerAsync } from \"./api-runner-browser\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Router, navigate, Location, BaseContext } from \"@reach/router\"\nimport { ScrollContext } from \"gatsby-react-router-scroll\"\nimport domReady from \"@mikaelkristiansson/domready\"\nimport { StaticQueryContext } from \"gatsby\"\nimport {\n  shouldUpdateScroll,\n  init as navigationInit,\n  RouteUpdates,\n} from \"./navigation\"\nimport emitter from \"./emitter\"\nimport PageRenderer from \"./page-renderer\"\nimport asyncRequires from \"$virtual/async-requires\"\nimport {\n  setLoader,\n  ProdLoader,\n  publicLoader,\n  PageResourceStatus,\n  getStaticQueryResults,\n} from \"./loader\"\nimport EnsureResources from \"./ensure-resources\"\nimport stripPrefix from \"./strip-prefix\"\n\n// Generated during bootstrap\nimport matchPaths from \"$virtual/match-paths.json\"\n\nconst loader = new ProdLoader(asyncRequires, matchPaths)\nsetLoader(loader)\nloader.setApiRunner(apiRunner)\n\nwindow.asyncRequires = asyncRequires\nwindow.___emitter = emitter\nwindow.___loader = publicLoader\n\nnavigationInit()\n\napiRunnerAsync(`onClientEntry`).then(() => {\n  // Let plugins register a service worker. The plugin just needs\n  // to return true.\n  if (apiRunner(`registerServiceWorker`).length > 0) {\n    require(`./register-service-worker`)\n  }\n\n  // In gatsby v2 if Router is used in page using matchPaths\n  // paths need to contain full path.\n  // For example:\n  //   - page have `/app/*` matchPath\n  //   - inside template user needs to use `/app/xyz` as path\n  // Resetting `basepath`/`baseuri` keeps current behaviour\n  // to not introduce breaking change.\n  // Remove this in v3\n  const RouteHandler = props => (\n    <BaseContext.Provider\n      value={{\n        baseuri: `/`,\n        basepath: `/`,\n      }}\n    >\n      <PageRenderer {...props} />\n    </BaseContext.Provider>\n  )\n\n  const DataContext = React.createContext({})\n\n  class GatsbyRoot extends React.Component {\n    render() {\n      const { children } = this.props\n      return (\n        <Location>\n          {({ location }) => (\n            <EnsureResources location={location}>\n              {({ pageResources, location }) => {\n                const staticQueryResults = getStaticQueryResults()\n                return (\n                  <StaticQueryContext.Provider value={staticQueryResults}>\n                    <DataContext.Provider value={{ pageResources, location }}>\n                      {children}\n                    </DataContext.Provider>\n                  </StaticQueryContext.Provider>\n                )\n              }}\n            </EnsureResources>\n          )}\n        </Location>\n      )\n    }\n  }\n\n  class LocationHandler extends React.Component {\n    render() {\n      return (\n        <DataContext.Consumer>\n          {({ pageResources, location }) => (\n            <RouteUpdates location={location}>\n              <ScrollContext\n                location={location}\n                shouldUpdateScroll={shouldUpdateScroll}\n              >\n                <Router\n                  basepath={__BASE_PATH__}\n                  location={location}\n                  id=\"gatsby-focus-wrapper\"\n                >\n                  <RouteHandler\n                    path={\n                      pageResources.page.path === `/404.html`\n                        ? stripPrefix(location.pathname, __BASE_PATH__)\n                        : encodeURI(\n                            pageResources.page.matchPath ||\n                              pageResources.page.path\n                          )\n                    }\n                    {...this.props}\n                    location={location}\n                    pageResources={pageResources}\n                    {...pageResources.json}\n                  />\n                </Router>\n              </ScrollContext>\n            </RouteUpdates>\n          )}\n        </DataContext.Consumer>\n      )\n    }\n  }\n\n  const { pagePath, location: browserLoc } = window\n\n  // Explicitly call navigate if the canonical path (window.pagePath)\n  // is different to the browser path (window.location.pathname). But\n  // only if NONE of the following conditions hold:\n  //\n  // - The url matches a client side route (page.matchPath)\n  // - it's a 404 page\n  // - it's the offline plugin shell (/offline-plugin-app-shell-fallback/)\n  if (\n    pagePath &&\n    __BASE_PATH__ + pagePath !== browserLoc.pathname &&\n    !(\n      loader.findMatchPath(stripPrefix(browserLoc.pathname, __BASE_PATH__)) ||\n      pagePath === `/404.html` ||\n      pagePath.match(/^\\/404\\/?$/) ||\n      pagePath.match(/^\\/offline-plugin-app-shell-fallback\\/?$/)\n    )\n  ) {\n    navigate(__BASE_PATH__ + pagePath + browserLoc.search + browserLoc.hash, {\n      replace: true,\n    })\n  }\n\n  publicLoader.loadPage(browserLoc.pathname).then(page => {\n    if (!page || page.status === PageResourceStatus.Error) {\n      throw new Error(\n        `page resources for ${browserLoc.pathname} not found. Not rendering React`\n      )\n    }\n\n    window.___webpackCompilationHash = page.page.webpackCompilationHash\n\n    const SiteRoot = apiRunner(\n      `wrapRootElement`,\n      { element: <LocationHandler /> },\n      <LocationHandler />,\n      ({ result }) => {\n        return { element: result }\n      }\n    ).pop()\n\n    const App = () => <GatsbyRoot>{SiteRoot}</GatsbyRoot>\n\n    const renderer = apiRunner(\n      `replaceHydrateFunction`,\n      undefined,\n      ReactDOM.hydrate\n    )[0]\n\n    domReady(() => {\n      renderer(\n        <App />,\n        typeof window !== `undefined`\n          ? document.getElementById(`___gatsby`)\n          : void 0,\n        () => {\n          apiRunner(`onInitialClientRender`)\n        }\n      )\n    })\n  })\n})\n","var core = module.exports = { version: '2.6.11' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","import { useState, useEffect } from \"react\";\n\nexport type WindowSize = {\n  width: number;\n  height: number;\n};\n\nconst useWindowSize = () : WindowSize => {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n};\n\nexport default useWindowSize;\n","import React from \"react\";\nimport useWindowSize from \"../../util/useWindowSize\";\nimport { BreakPoint, screenSizes, mq } from \"../../util/mq\";\nimport { css } from \"@emotion/core\";\n\nconst graphContainerStyles = (fullSpan: boolean) => css`\n  ${mq(BreakPoint.lg)} {\n    ${fullSpan ? \"grid-column: 1 / span  2\" : \"\"};\n  }\n`;\n\ninterface ResizableGraphProps {\n  mobile: React.ReactNode;\n  tablet: React.ReactNode;\n  desktop: React.ReactNode;\n  children: any;\n  fullSpan: boolean;\n}\n\nconst ResizableGraph = ({\n  mobile,\n  tablet,\n  desktop,\n  fullSpan,\n  children\n}: ResizableGraphProps) => {\n  const { width } = useWindowSize();\n\n  let Graph = undefined;\n\n  if (width < screenSizes[BreakPoint.md]) {\n    Graph = mobile;\n  } else if (width < screenSizes[BreakPoint.lg]) {\n    Graph = tablet;\n  } else {\n    Graph = desktop;\n  }\n\n  return (\n    <div css={graphContainerStyles(fullSpan)}>\n        {children}\n      <Graph />\n    </div>\n  );\n};\n\nResizableGraph.defaultProps = {\n  fullSpan: true,\n};\n\nexport default ResizableGraph;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport { useScrollRestoration } from \"gatsby-react-router-scroll\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context?.[query]?.data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nfunction unstable_collectionGraphql() {\n  // TODO: Strip this out of the component and throw error if it gets called\n  return null\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  useScrollRestoration,\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n  // Experimental API\n  unstable_collectionGraphql,\n}\n","var React = require('react');\n\nfunction EarlyYearsGraph3 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 21\"),React.createElement(\"defs\",{\"key\":1},[React.createElement(\"polygon\",{\"id\":\"path-1\",\"points\":\"0 0.463195097 149.70632 0.463195097 149.70632 188.118256 0 188.118256\",\"key\":0}),React.createElement(\"polygon\",{\"id\":\"path-3\",\"points\":\"0.698134169 0.463195097 94.9792356 0.463195097 94.9792356 170.192891 0.698134169 170.192891\",\"key\":1})]),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(-164.000000, -730.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(164.000000, 730.000000)\"},[React.createElement(\"g\",{\"key\":0},[React.createElement(\"g\",{\"key\":0},[React.createElement(\"g\",{\"transform\":\"translate(0.000000, 0.459230)\",\"key\":0},[React.createElement(\"mask\",{\"id\":\"mask-2\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-1\"})),React.createElement(\"g\",{\"key\":1}),React.createElement(\"path\",{\"d\":\"M94.2892559,94.2871751 L149.70632,170.192891 C107.581048,200.650528 48.6195684,191.357117 18.0134183,149.436255 C-12.5936584,107.514471 -3.25493242,48.8400177 38.8712655,18.3823811 C55.7213739,6.1989576 73.4601348,0.463195097 94.2892559,0.463195097 L94.2892559,94.2871751 Z\",\"id\":\"Fill-1\",\"fill\":\"#EFEFEF\",\"mask\":\"url(#mask-2)\",\"key\":2})]),React.createElement(\"g\",{\"transform\":\"translate(93.591122, 0.459230)\",\"key\":1},[React.createElement(\"mask\",{\"id\":\"mask-4\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-3\"})),React.createElement(\"g\",{\"key\":1}),React.createElement(\"path\",{\"d\":\"M0.698134169,94.2871751 L0.698134169,0.463195097 C52.7681571,0.463195097 94.9796063,42.4698172 94.9796063,94.2871751 C94.9796063,125.378328 81.3903607,151.918678 56.115198,170.192891 L0.698134169,94.2871751 Z\",\"id\":\"Fill-4\",\"fill\":\"#FFBA08\",\"mask\":\"url(#mask-4)\",\"key\":2})]),React.createElement(\"path\",{\"d\":\"M93.7146435,94.7473271 L34.6243598,128.697139 C15.7828917,96.2218423 26.9647141,54.6947373 59.5992896,35.9437736 C70.4660529,29.7017516 81.16602,26.8477026 93.7146435,26.8477026 L93.7146435,94.7473271 Z\",\"id\":\"Fill-7\",\"fill\":\"#D3D3D3\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M93.7146435,94.7473271 L152.804,128.697139 C133.962532,161.172437 92.2329385,172.300922 59.5992896,153.550881 C48.7315998,147.306092 40.8995982,139.512095 34.6243598,128.697139 L93.7146435,94.7473271 Z\",\"id\":\"Fill-9\",\"fill\":\"#D3D3D3\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M93.7146435,94.7473271 L93.7146435,26.8477026 C131.396653,26.8477026 161.945351,57.2472439 161.945351,94.7473271 C161.945351,107.23506 159.078312,117.883106 152.804,128.697139 L93.7146435,94.7473271 Z\",\"id\":\"Fill-11\",\"fill\":\"#3772FF\",\"key\":4})]),React.createElement(\"ellipse\",{\"id\":\"Oval\",\"fill\":\"#FFFFFF\",\"cx\":\"94.035533\",\"cy\":\"94.520202\",\"rx\":\"34.2385787\",\"ry\":\"34.0656566\",\"key\":1})]),React.createElement(\"text\",{\"id\":\"A-third-of-Early-Yea\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"26\",\"fill\":\"#2D3142\",\"key\":1},[React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"113\",\"key\":0},\"A third of Early Years \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"139\",\"key\":1},\"providers in financially \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"165\",\"key\":2},\"deprived areas may have \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"191\",\"key\":3},\"to close within a year\")]),React.createElement(\"text\",{\"id\":\"Over-40%-are-likely\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"26\",\"fill\":\"#2D3142\",\"key\":2},[React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"15\",\"key\":0},\"Over 40% are likely to \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"41\",\"key\":1},\"make redundancies in the \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"67\",\"key\":2},\"coming year.\")]),React.createElement(\"line\",{\"x1\":\"197\",\"y1\":\"112.5\",\"x2\":\"217\",\"y2\":\"112.5\",\"id\":\"Line-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"4\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"197\",\"y1\":\"14.5\",\"x2\":\"217\",\"y2\":\"14.5\",\"id\":\"Line-3-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"4\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":4})])))]);\n}\n\nEarlyYearsGraph3.defaultProps = {\"width\":\"446px\",\"height\":\"202px\",\"viewBox\":\"0 0 446 202\",\"version\":\"1.1\"};\n\nmodule.exports = EarlyYearsGraph3;\n\nEarlyYearsGraph3.default = EarlyYearsGraph3;\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport createContext from \"create-react-context\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { startsWith, pick, resolve, match, insertParams, validateRedirect, shallowCompare } from \"./lib/utils\";\nimport { globalHistory, navigate, createHistory, createMemorySource } from \"./lib/history\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar createNamedContext = function createNamedContext(name, defaultValue) {\n  var Ctx = createContext(defaultValue);\n  Ctx.displayName = name;\n  return Ctx;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Location Context/Provider\nvar LocationContext = createNamedContext(\"Location\");\n\n// sets up a listener if there isn't one already so apps don't need to be\n// wrapped in some top level provider\nvar Location = function Location(_ref) {\n  var children = _ref.children;\n  return React.createElement(\n    LocationContext.Consumer,\n    null,\n    function (context) {\n      return context ? children(context) : React.createElement(\n        LocationProvider,\n        null,\n        children\n      );\n    }\n  );\n};\n\nvar LocationProvider = function (_React$Component) {\n  _inherits(LocationProvider, _React$Component);\n\n  function LocationProvider() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LocationProvider);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      context: _this.getContext(),\n      refs: { unlisten: null }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  LocationProvider.prototype.getContext = function getContext() {\n    var _props$history = this.props.history,\n        navigate = _props$history.navigate,\n        location = _props$history.location;\n\n    return { navigate: navigate, location: location };\n  };\n\n  LocationProvider.prototype.componentDidCatch = function componentDidCatch(error, info) {\n    if (isRedirect(error)) {\n      var _navigate = this.props.history.navigate;\n\n      _navigate(error.uri, { replace: true });\n    } else {\n      throw error;\n    }\n  };\n\n  LocationProvider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevState.context.location !== this.state.context.location) {\n      this.props.history._onTransitionComplete();\n    }\n  };\n\n  LocationProvider.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var refs = this.state.refs,\n        history = this.props.history;\n\n    history._onTransitionComplete();\n    refs.unlisten = history.listen(function () {\n      Promise.resolve().then(function () {\n        // TODO: replace rAF with react deferred update API when it's ready https://github.com/facebook/react/issues/13306\n        requestAnimationFrame(function () {\n          if (!_this2.unmounted) {\n            _this2.setState(function () {\n              return { context: _this2.getContext() };\n            });\n          }\n        });\n      });\n    });\n  };\n\n  LocationProvider.prototype.componentWillUnmount = function componentWillUnmount() {\n    var refs = this.state.refs;\n\n    this.unmounted = true;\n    refs.unlisten();\n  };\n\n  LocationProvider.prototype.render = function render() {\n    var context = this.state.context,\n        children = this.props.children;\n\n    return React.createElement(\n      LocationContext.Provider,\n      { value: context },\n      typeof children === \"function\" ? children(context) : children || null\n    );\n  };\n\n  return LocationProvider;\n}(React.Component);\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nLocationProvider.defaultProps = {\n  history: globalHistory\n};\nprocess.env.NODE_ENV !== \"production\" ? LocationProvider.propTypes = {\n  history: PropTypes.object.isRequired\n} : void 0;\nvar ServerLocation = function ServerLocation(_ref2) {\n  var url = _ref2.url,\n      children = _ref2.children;\n\n  var searchIndex = url.indexOf(\"?\");\n  var searchExists = searchIndex > -1;\n  var pathname = void 0;\n  var search = \"\";\n  var hash = \"\";\n\n  if (searchExists) {\n    pathname = url.substring(0, searchIndex);\n    search = url.substring(searchIndex);\n  } else {\n    pathname = url;\n  }\n\n  return React.createElement(\n    LocationContext.Provider,\n    {\n      value: {\n        location: {\n          pathname: pathname,\n          search: search,\n          hash: hash\n        },\n        navigate: function navigate() {\n          throw new Error(\"You can't call navigate on the server.\");\n        }\n      }\n    },\n    children\n  );\n};\n////////////////////////////////////////////////////////////////////////////////\n// Sets baseuri and basepath for nested routers and links\nvar BaseContext = createNamedContext(\"Base\", { baseuri: \"/\", basepath: \"/\" });\n\n////////////////////////////////////////////////////////////////////////////////\n// The main event, welcome to the show everybody.\nvar Router = function Router(props) {\n  return React.createElement(\n    BaseContext.Consumer,\n    null,\n    function (baseContext) {\n      return React.createElement(\n        Location,\n        null,\n        function (locationContext) {\n          return React.createElement(RouterImpl, _extends({}, baseContext, locationContext, props));\n        }\n      );\n    }\n  );\n};\n\nvar RouterImpl = function (_React$PureComponent) {\n  _inherits(RouterImpl, _React$PureComponent);\n\n  function RouterImpl() {\n    _classCallCheck(this, RouterImpl);\n\n    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));\n  }\n\n  RouterImpl.prototype.render = function render() {\n    var _props = this.props,\n        location = _props.location,\n        _navigate2 = _props.navigate,\n        basepath = _props.basepath,\n        primary = _props.primary,\n        children = _props.children,\n        baseuri = _props.baseuri,\n        _props$component = _props.component,\n        component = _props$component === undefined ? \"div\" : _props$component,\n        domProps = _objectWithoutProperties(_props, [\"location\", \"navigate\", \"basepath\", \"primary\", \"children\", \"baseuri\", \"component\"]);\n\n    var routes = React.Children.toArray(children).reduce(function (array, child) {\n      var routes = createRoute(basepath)(child);\n      return array.concat(routes);\n    }, []);\n    var pathname = location.pathname;\n\n\n    var match = pick(routes, pathname);\n\n    if (match) {\n      var params = match.params,\n          uri = match.uri,\n          route = match.route,\n          element = match.route.value;\n\n      // remove the /* from the end for child routes relative paths\n\n      basepath = route.default ? basepath : route.path.replace(/\\*$/, \"\");\n\n      var props = _extends({}, params, {\n        uri: uri,\n        location: location,\n        navigate: function navigate(to, options) {\n          return _navigate2(resolve(to, uri), options);\n        }\n      });\n\n      var clone = React.cloneElement(element, props, element.props.children ? React.createElement(\n        Router,\n        { location: location, primary: primary },\n        element.props.children\n      ) : undefined);\n\n      // using 'div' for < 16.3 support\n      var FocusWrapper = primary ? FocusHandler : component;\n      // don't pass any props to 'div'\n      var wrapperProps = primary ? _extends({ uri: uri, location: location, component: component }, domProps) : domProps;\n\n      return React.createElement(\n        BaseContext.Provider,\n        { value: { baseuri: uri, basepath: basepath } },\n        React.createElement(\n          FocusWrapper,\n          wrapperProps,\n          clone\n        )\n      );\n    } else {\n      // Not sure if we want this, would require index routes at every level\n      // warning(\n      //   false,\n      //   `<Router basepath=\"${basepath}\">\\n\\nNothing matched:\\n\\t${\n      //     location.pathname\n      //   }\\n\\nPaths checked: \\n\\t${routes\n      //     .map(route => route.path)\n      //     .join(\n      //       \"\\n\\t\"\n      //     )}\\n\\nTo get rid of this warning, add a default NotFound component as child of Router:\n      //   \\n\\tlet NotFound = () => <div>Not Found!</div>\n      //   \\n\\t<Router>\\n\\t  <NotFound default/>\\n\\t  {/* ... */}\\n\\t</Router>`\n      // );\n      return null;\n    }\n  };\n\n  return RouterImpl;\n}(React.PureComponent);\n\nRouterImpl.defaultProps = {\n  primary: true\n};\n\n\nvar FocusContext = createNamedContext(\"Focus\");\n\nvar FocusHandler = function FocusHandler(_ref3) {\n  var uri = _ref3.uri,\n      location = _ref3.location,\n      component = _ref3.component,\n      domProps = _objectWithoutProperties(_ref3, [\"uri\", \"location\", \"component\"]);\n\n  return React.createElement(\n    FocusContext.Consumer,\n    null,\n    function (requestFocus) {\n      return React.createElement(FocusHandlerImpl, _extends({}, domProps, {\n        component: component,\n        requestFocus: requestFocus,\n        uri: uri,\n        location: location\n      }));\n    }\n  );\n};\n\n// don't focus on initial render\nvar initialRender = true;\nvar focusHandlerCount = 0;\n\nvar FocusHandlerImpl = function (_React$Component2) {\n  _inherits(FocusHandlerImpl, _React$Component2);\n\n  function FocusHandlerImpl() {\n    var _temp2, _this4, _ret2;\n\n    _classCallCheck(this, FocusHandlerImpl);\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _ret2 = (_temp2 = (_this4 = _possibleConstructorReturn(this, _React$Component2.call.apply(_React$Component2, [this].concat(args))), _this4), _this4.state = {}, _this4.requestFocus = function (node) {\n      if (!_this4.state.shouldFocus && node) {\n        node.focus();\n      }\n    }, _temp2), _possibleConstructorReturn(_this4, _ret2);\n  }\n\n  FocusHandlerImpl.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var initial = prevState.uri == null;\n    if (initial) {\n      return _extends({\n        shouldFocus: true\n      }, nextProps);\n    } else {\n      var myURIChanged = nextProps.uri !== prevState.uri;\n      var navigatedUpToMe = prevState.location.pathname !== nextProps.location.pathname && nextProps.location.pathname === nextProps.uri;\n      return _extends({\n        shouldFocus: myURIChanged || navigatedUpToMe\n      }, nextProps);\n    }\n  };\n\n  FocusHandlerImpl.prototype.componentDidMount = function componentDidMount() {\n    focusHandlerCount++;\n    this.focus();\n  };\n\n  FocusHandlerImpl.prototype.componentWillUnmount = function componentWillUnmount() {\n    focusHandlerCount--;\n    if (focusHandlerCount === 0) {\n      initialRender = true;\n    }\n  };\n\n  FocusHandlerImpl.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location !== this.props.location && this.state.shouldFocus) {\n      this.focus();\n    }\n  };\n\n  FocusHandlerImpl.prototype.focus = function focus() {\n    if (process.env.NODE_ENV === \"test\") {\n      // getting cannot read property focus of null in the tests\n      // and that bit of global `initialRender` state causes problems\n      // should probably figure it out!\n      return;\n    }\n\n    var requestFocus = this.props.requestFocus;\n\n\n    if (requestFocus) {\n      requestFocus(this.node);\n    } else {\n      if (initialRender) {\n        initialRender = false;\n      } else if (this.node) {\n        // React polyfills [autofocus] and it fires earlier than cDM,\n        // so we were stealing focus away, this line prevents that.\n        if (!this.node.contains(document.activeElement)) {\n          this.node.focus();\n        }\n      }\n    }\n  };\n\n  FocusHandlerImpl.prototype.render = function render() {\n    var _this5 = this;\n\n    var _props2 = this.props,\n        children = _props2.children,\n        style = _props2.style,\n        requestFocus = _props2.requestFocus,\n        _props2$component = _props2.component,\n        Comp = _props2$component === undefined ? \"div\" : _props2$component,\n        uri = _props2.uri,\n        location = _props2.location,\n        domProps = _objectWithoutProperties(_props2, [\"children\", \"style\", \"requestFocus\", \"component\", \"uri\", \"location\"]);\n\n    return React.createElement(\n      Comp,\n      _extends({\n        style: _extends({ outline: \"none\" }, style),\n        tabIndex: \"-1\",\n        ref: function ref(n) {\n          return _this5.node = n;\n        }\n      }, domProps),\n      React.createElement(\n        FocusContext.Provider,\n        { value: this.requestFocus },\n        this.props.children\n      )\n    );\n  };\n\n  return FocusHandlerImpl;\n}(React.Component);\n\npolyfill(FocusHandlerImpl);\n\nvar k = function k() {};\n\n////////////////////////////////////////////////////////////////////////////////\nvar forwardRef = React.forwardRef;\n\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = function forwardRef(C) {\n    return C;\n  };\n}\n\nvar Link = forwardRef(function (_ref4, ref) {\n  var innerRef = _ref4.innerRef,\n      props = _objectWithoutProperties(_ref4, [\"innerRef\"]);\n\n  return React.createElement(\n    BaseContext.Consumer,\n    null,\n    function (_ref5) {\n      var basepath = _ref5.basepath,\n          baseuri = _ref5.baseuri;\n      return React.createElement(\n        Location,\n        null,\n        function (_ref6) {\n          var location = _ref6.location,\n              navigate = _ref6.navigate;\n\n          var to = props.to,\n              state = props.state,\n              replace = props.replace,\n              _props$getProps = props.getProps,\n              getProps = _props$getProps === undefined ? k : _props$getProps,\n              anchorProps = _objectWithoutProperties(props, [\"to\", \"state\", \"replace\", \"getProps\"]);\n\n          var href = resolve(to, baseuri);\n          var encodedHref = encodeURI(href);\n          var isCurrent = location.pathname === encodedHref;\n          var isPartiallyCurrent = startsWith(location.pathname, encodedHref);\n\n          return React.createElement(\"a\", _extends({\n            ref: ref || innerRef,\n            \"aria-current\": isCurrent ? \"page\" : undefined\n          }, anchorProps, getProps({ isCurrent: isCurrent, isPartiallyCurrent: isPartiallyCurrent, href: href, location: location }), {\n            href: href,\n            onClick: function onClick(event) {\n              if (anchorProps.onClick) anchorProps.onClick(event);\n              if (shouldNavigate(event)) {\n                event.preventDefault();\n                var shouldReplace = replace;\n                if (typeof replace !== \"boolean\" && isCurrent) {\n                  var _location$state = _extends({}, location.state),\n                      key = _location$state.key,\n                      restState = _objectWithoutProperties(_location$state, [\"key\"]);\n\n                  shouldReplace = shallowCompare(_extends({}, state), restState);\n                }\n                navigate(href, {\n                  state: state,\n                  replace: shouldReplace\n                });\n              }\n            }\n          }));\n        }\n      );\n    }\n  );\n});\n\nLink.displayName = \"Link\";\n\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  to: PropTypes.string.isRequired\n} : void 0;\n\n////////////////////////////////////////////////////////////////////////////////\nfunction RedirectRequest(uri) {\n  this.uri = uri;\n}\n\nvar isRedirect = function isRedirect(o) {\n  return o instanceof RedirectRequest;\n};\n\nvar redirectTo = function redirectTo(to) {\n  throw new RedirectRequest(to);\n};\n\nvar RedirectImpl = function (_React$Component3) {\n  _inherits(RedirectImpl, _React$Component3);\n\n  function RedirectImpl() {\n    _classCallCheck(this, RedirectImpl);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  // Support React < 16 with this hook\n  RedirectImpl.prototype.componentDidMount = function componentDidMount() {\n    var _props3 = this.props,\n        navigate = _props3.navigate,\n        to = _props3.to,\n        from = _props3.from,\n        _props3$replace = _props3.replace,\n        replace = _props3$replace === undefined ? true : _props3$replace,\n        state = _props3.state,\n        noThrow = _props3.noThrow,\n        baseuri = _props3.baseuri,\n        props = _objectWithoutProperties(_props3, [\"navigate\", \"to\", \"from\", \"replace\", \"state\", \"noThrow\", \"baseuri\"]);\n\n    Promise.resolve().then(function () {\n      var resolvedTo = resolve(to, baseuri);\n      navigate(insertParams(resolvedTo, props), { replace: replace, state: state });\n    });\n  };\n\n  RedirectImpl.prototype.render = function render() {\n    var _props4 = this.props,\n        navigate = _props4.navigate,\n        to = _props4.to,\n        from = _props4.from,\n        replace = _props4.replace,\n        state = _props4.state,\n        noThrow = _props4.noThrow,\n        baseuri = _props4.baseuri,\n        props = _objectWithoutProperties(_props4, [\"navigate\", \"to\", \"from\", \"replace\", \"state\", \"noThrow\", \"baseuri\"]);\n\n    var resolvedTo = resolve(to, baseuri);\n    if (!noThrow) redirectTo(insertParams(resolvedTo, props));\n    return null;\n  };\n\n  return RedirectImpl;\n}(React.Component);\n\nvar Redirect = function Redirect(props) {\n  return React.createElement(\n    BaseContext.Consumer,\n    null,\n    function (_ref7) {\n      var baseuri = _ref7.baseuri;\n      return React.createElement(\n        Location,\n        null,\n        function (locationContext) {\n          return React.createElement(RedirectImpl, _extends({}, locationContext, { baseuri: baseuri }, props));\n        }\n      );\n    }\n  );\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Redirect.propTypes = {\n  from: PropTypes.string,\n  to: PropTypes.string.isRequired\n} : void 0;\n\n////////////////////////////////////////////////////////////////////////////////\nvar Match = function Match(_ref8) {\n  var path = _ref8.path,\n      children = _ref8.children;\n  return React.createElement(\n    BaseContext.Consumer,\n    null,\n    function (_ref9) {\n      var baseuri = _ref9.baseuri;\n      return React.createElement(\n        Location,\n        null,\n        function (_ref10) {\n          var navigate = _ref10.navigate,\n              location = _ref10.location;\n\n          var resolvedPath = resolve(path, baseuri);\n          var result = match(resolvedPath, location.pathname);\n          return children({\n            navigate: navigate,\n            location: location,\n            match: result ? _extends({}, result.params, {\n              uri: result.uri,\n              path: path\n            }) : null\n          });\n        }\n      );\n    }\n  );\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Hooks\n\nvar useLocation = function useLocation() {\n  var context = useContext(LocationContext);\n\n  if (!context) {\n    throw new Error(\"useLocation hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router\");\n  }\n\n  return context.location;\n};\n\nvar useNavigate = function useNavigate() {\n  var context = useContext(LocationContext);\n\n  if (!context) {\n    throw new Error(\"useNavigate hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router\");\n  }\n\n  return context.navigate;\n};\n\nvar useParams = function useParams() {\n  var context = useContext(BaseContext);\n\n  if (!context) {\n    throw new Error(\"useParams hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router\");\n  }\n\n  var location = useLocation();\n\n  var results = match(context.basepath, location.pathname);\n\n  return results ? results.params : null;\n};\n\nvar useMatch = function useMatch(path) {\n  if (!path) {\n    throw new Error(\"useMatch(path: string) requires an argument of a string to match against\");\n  }\n  var context = useContext(BaseContext);\n\n  if (!context) {\n    throw new Error(\"useMatch hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router\");\n  }\n\n  var location = useLocation();\n\n  var resolvedPath = resolve(path, context.baseuri);\n  var result = match(resolvedPath, location.pathname);\n  return result ? _extends({}, result.params, {\n    uri: result.uri,\n    path: path\n  }) : null;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Junk\nvar stripSlashes = function stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n};\n\nvar createRoute = function createRoute(basepath) {\n  return function (element) {\n    if (!element) {\n      return null;\n    }\n\n    if (element.type === React.Fragment && element.props.children) {\n      return React.Children.map(element.props.children, createRoute(basepath));\n    }\n    !(element.props.path || element.props.default || element.type === Redirect) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Router>: Children of <Router> must have a `path` or `default` prop, or be a `<Redirect>`. None found on element type `\" + element.type + \"`\") : invariant(false) : void 0;\n\n    !!(element.type === Redirect && (!element.props.from || !element.props.to)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Redirect from=\\\"\" + element.props.from + \"\\\" to=\\\"\" + element.props.to + \"\\\"/> requires both \\\"from\\\" and \\\"to\\\" props when inside a <Router>.\") : invariant(false) : void 0;\n\n    !!(element.type === Redirect && !validateRedirect(element.props.from, element.props.to)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Redirect from=\\\"\" + element.props.from + \" to=\\\"\" + element.props.to + \"\\\"/> has mismatched dynamic segments, ensure both paths have the exact same dynamic segments.\") : invariant(false) : void 0;\n\n    if (element.props.default) {\n      return { value: element, default: true };\n    }\n\n    var elementPath = element.type === Redirect ? element.props.from : element.props.path;\n\n    var path = elementPath === \"/\" ? basepath : stripSlashes(basepath) + \"/\" + stripSlashes(elementPath);\n\n    return {\n      value: element,\n      default: element.props.default,\n      path: element.props.children ? stripSlashes(path) + \"/*\" : path\n    };\n  };\n};\n\nvar shouldNavigate = function shouldNavigate(event) {\n  return !event.defaultPrevented && event.button === 0 && !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n////////////////////////////////////////////////////////////////////////\nexport {  Link, Location, LocationProvider, Match, Redirect, Router, ServerLocation, createHistory, createMemorySource, isRedirect, navigate, redirectTo, globalHistory, match as matchPath, useLocation, useNavigate, useParams, useMatch , BaseContext };","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.wrapRootElement = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _appProviders = require(\"./components/app-providers\");\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable import/prefer-default-export */\n\n/* eslint-disable react/prop-types */\nvar wrapRootElement = function wrapRootElement(_ref, pluginOptions) {\n  var element = _ref.element;\n  return /*#__PURE__*/_react.default.createElement(_appProviders.AppProviders, {\n    element: element,\n    pluginOptions: pluginOptions\n  });\n};\n\nexports.wrapRootElement = wrapRootElement;","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph1Mobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 32\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Mobile/Timeline/School-years/Early-years-foundation-stage-Copy\",\"transform\":\"translate(-12.000000, -1812.000000)\"},React.createElement(\"g\",{\"id\":\"Group-32\",\"transform\":\"translate(12.000000, 1812.000000)\"},[React.createElement(\"path\",{\"d\":\"M205.024345,21.770069 C206.046414,21.770069 206.909793,21.6033103 207.614483,21.2697931 C208.319172,20.9362759 208.843655,20.4924828 209.187931,19.9384138 C209.532207,19.3843448 209.704345,18.7791724 209.704345,18.1228966 C209.704345,17.2729655 209.440759,16.5602069 208.913586,15.9846207 C208.386414,15.4090345 207.627931,15.0405517 206.638138,14.8791724 L206.638138,14.8791724 L209.187931,11.9743448 L209.187931,10.2798621 L201.280345,10.2798621 L201.280345,12.3777931 L206.089448,12.3777931 L203.765586,15.0082759 L203.765586,16.7350345 L204.959793,16.7350345 C206.369172,16.7350345 207.073862,17.1976552 207.073862,18.1228966 C207.073862,18.5855172 206.885586,18.9432414 206.509034,19.196069 C206.132483,19.4488966 205.616069,19.5753103 204.959793,19.5753103 C204.368069,19.5753103 203.789793,19.4865517 203.224966,19.3090345 C202.660138,19.1315172 202.162552,18.8813793 201.732207,18.5586207 L201.732207,18.5586207 L200.715517,20.5597241 C201.253448,20.9470345 201.907034,21.2455862 202.676276,21.4553793 C203.445517,21.6651724 204.228207,21.770069 205.024345,21.770069 Z M214.174552,21.770069 C215.314966,21.770069 216.320897,21.5333793 217.192345,21.06 C218.063793,20.5866207 218.738897,19.8926897 219.217655,18.9782069 C219.696414,18.0637241 219.935793,16.9663448 219.935793,15.686069 C219.935793,13.8786207 219.48931,12.4934483 218.596345,11.5305517 C217.703379,10.5676552 216.466138,10.0862069 214.884621,10.0862069 C214.088483,10.0862069 213.364966,10.2395172 212.714069,10.5461379 C212.063172,10.8527586 211.549448,11.2911724 211.172897,11.8613793 C210.796345,12.4315862 210.608069,13.0932414 210.608069,13.8463448 C210.608069,14.5456552 210.780207,15.1615862 211.124483,15.6941379 C211.468759,16.2266897 211.936759,16.6382069 212.528483,16.9286897 C213.120207,17.2191724 213.776483,17.3644138 214.49731,17.3644138 C215.691517,17.3644138 216.627517,17.0255172 217.30531,16.3477241 C217.262276,17.4128276 216.961034,18.2277931 216.401586,18.7926207 C215.842138,19.3574483 215.083655,19.6398621 214.126138,19.6398621 C213.265448,19.6398621 212.560759,19.4515862 212.012069,19.0750345 L212.012069,19.0750345 L211.043793,20.9954483 C211.431103,21.2428966 211.899103,21.4338621 212.447793,21.5683448 C212.996483,21.7028276 213.572069,21.770069 214.174552,21.770069 Z M215.078276,15.4117241 C214.49731,15.4117241 214.032,15.2584138 213.682345,14.9517931 C213.33269,14.6451724 213.157862,14.2336552 213.157862,13.7172414 C213.157862,13.2008276 213.33269,12.792 213.682345,12.4907586 C214.032,12.1895172 214.486552,12.0388966 215.046,12.0388966 C215.659241,12.0388966 216.14069,12.1948966 216.490345,12.5068966 C216.84,12.8188966 217.014828,13.2223448 217.014828,13.7172414 C217.014828,14.2121379 216.834621,14.6182759 216.474207,14.9356552 C216.113793,15.2530345 215.648483,15.4117241 215.078276,15.4117241 Z M223.403431,17.0295517 C224.128293,17.0295517 224.716655,16.7824397 225.168517,16.2882155 C225.620379,15.7939914 225.84631,15.1326724 225.84631,14.3042586 C225.84631,13.4758448 225.620379,12.8145259 225.168517,12.3203017 C224.716655,11.8260776 224.128293,11.5789655 223.403431,11.5789655 C222.678569,11.5789655 222.087853,11.8260776 221.631284,12.3203017 C221.174716,12.8145259 220.946431,13.4758448 220.946431,14.3042586 C220.946431,15.1326724 221.174716,15.7939914 221.631284,16.2882155 C222.087853,16.7824397 222.678569,17.0295517 223.403431,17.0295517 Z M224.222431,21.5764138 L230.972121,11.691931 L229.291759,11.691931 L222.542069,21.5764138 L224.222431,21.5764138 Z M223.403431,15.8716552 C223.092776,15.8716552 222.84331,15.7375086 222.655034,15.4692155 C222.466759,15.2009224 222.372621,14.8126034 222.372621,14.3042586 C222.372621,13.7959138 222.466759,13.4075948 222.655034,13.1393017 C222.84331,12.8710086 223.092776,12.7368621 223.403431,12.7368621 C223.7235,12.7368621 223.975319,12.8686552 224.158888,13.1322414 C224.342457,13.3958276 224.434241,13.7865 224.434241,14.3042586 C224.434241,14.8220172 224.342457,15.2126897 224.158888,15.4762759 C223.975319,15.7398621 223.7235,15.8716552 223.403431,15.8716552 Z M230.110759,21.6893793 C230.835621,21.6893793 231.426336,21.4422672 231.882905,20.9480431 C232.339474,20.453819 232.567759,19.7925 232.567759,18.9640862 C232.567759,18.1356724 232.339474,17.4743534 231.882905,16.9801293 C231.426336,16.4859052 230.835621,16.2387931 230.110759,16.2387931 C229.640069,16.2387931 229.218802,16.3494052 228.846957,16.5706293 C228.475112,16.7918534 228.185638,17.109569 227.978534,17.5237759 C227.771431,17.9379828 227.667879,18.4180862 227.667879,18.9640862 C227.667879,19.5100862 227.771431,19.9901897 227.978534,20.4043966 C228.185638,20.8186034 228.475112,21.136319 228.846957,21.3575431 C229.218802,21.5787672 229.640069,21.6893793 230.110759,21.6893793 Z M230.110759,20.5314828 C229.800103,20.5314828 229.550638,20.3996897 229.362362,20.1361034 C229.174086,19.8725172 229.079948,19.4818448 229.079948,18.9640862 C229.079948,18.4463276 229.174086,18.0556552 229.362362,17.792069 C229.550638,17.5284828 229.800103,17.3966897 230.110759,17.3966897 C230.430828,17.3966897 230.682647,17.5308362 230.866216,17.7991293 C231.049784,18.0674224 231.141569,18.4557414 231.141569,18.9640862 C231.141569,19.472431 231.049784,19.86075 230.866216,20.1290431 C230.682647,20.3973362 230.430828,20.5314828 230.110759,20.5314828 Z\",\"id\":\"39%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M9.27124138,37.6175172 L9.27124138,36.5846897 L3.05813793,36.5846897 L6.89896552,32.8084138 C7.6197931,32.1091034 8.10931034,31.4904828 8.36751724,30.9525517 C8.62572414,30.4146207 8.75482759,29.8551724 8.75482759,29.2742069 C8.75482759,28.3274483 8.41862069,27.5824138 7.7462069,27.0391034 C7.0737931,26.4957931 6.162,26.2241379 5.01082759,26.2241379 C4.15013793,26.2241379 3.3782069,26.364 2.69503448,26.6437241 C2.01186207,26.9234483 1.44972414,27.3215172 1.00862069,27.837931 L1.00862069,27.837931 L1.83165517,28.548 C2.56324138,27.7088276 3.59068966,27.2892414 4.914,27.2892414 C5.76393103,27.2892414 6.41751724,27.4748276 6.87475862,27.846 C7.332,28.2171724 7.56062069,28.7362759 7.56062069,29.4033103 C7.56062069,29.8336552 7.45572414,30.2613103 7.24593103,30.6862759 C7.03613793,31.1112414 6.63537931,31.6142069 6.04365517,32.1951724 L6.04365517,32.1951724 L1.34751724,36.7944828 L1.34751724,37.6175172 L9.27124138,37.6175172 Z M15.2261379,37.7143448 C16.0975862,37.7143448 16.8748966,37.4830345 17.558069,37.0204138 C18.2412414,36.5577931 18.7764828,35.8934483 19.1637931,35.0273793 C19.5511034,34.1613103 19.7447586,33.141931 19.7447586,31.9692414 C19.7447586,30.7965517 19.5511034,29.7771724 19.1637931,28.9111034 C18.7764828,28.0450345 18.2412414,27.3806897 17.558069,26.918069 C16.8748966,26.4554483 16.0975862,26.2241379 15.2261379,26.2241379 C14.3546897,26.2241379 13.5773793,26.4554483 12.8942069,26.918069 C12.2110345,27.3806897 11.6784828,28.0450345 11.2965517,28.9111034 C10.9146207,29.7771724 10.7236552,30.7965517 10.7236552,31.9692414 C10.7236552,33.141931 10.9146207,34.1613103 11.2965517,35.0273793 C11.6784828,35.8934483 12.2110345,36.5577931 12.8942069,37.0204138 C13.5773793,37.4830345 14.3546897,37.7143448 15.2261379,37.7143448 Z M15.2261379,36.6492414 C14.5698621,36.6492414 13.9915862,36.4663448 13.4913103,36.1005517 C12.9910345,35.7347586 12.6010345,35.2022069 12.3213103,34.5028966 C12.0415862,33.8035862 11.9017241,32.9590345 11.9017241,31.9692414 C11.9017241,30.9794483 12.0415862,30.1348966 12.3213103,29.4355862 C12.6010345,28.7362759 12.9910345,28.2037241 13.4913103,27.837931 C13.9915862,27.4721379 14.5698621,27.2892414 15.2261379,27.2892414 C15.8824138,27.2892414 16.4606897,27.4721379 16.9609655,27.837931 C17.4612414,28.2037241 17.8512414,28.7362759 18.1309655,29.4355862 C18.4106897,30.1348966 18.5505517,30.9794483 18.5505517,31.9692414 C18.5505517,32.9590345 18.4106897,33.8035862 18.1309655,34.5028966 C17.8512414,35.2022069 17.4612414,35.7347586 16.9609655,36.1005517 C16.4606897,36.4663448 15.8824138,36.6492414 15.2261379,36.6492414 Z M24.5377241,37.6175172 L24.5377241,26.3209655 L20.7130345,26.3209655 L20.7130345,27.3537931 L23.3757931,27.3537931 L23.3757931,37.6175172 L24.5377241,37.6175172 Z M31.8643448,37.7143448 C32.595931,37.7143448 33.2548966,37.5717931 33.8412414,37.2866897 C34.4275862,37.0015862 34.8875172,36.5954483 35.2210345,36.0682759 C35.5545517,35.5411034 35.7213103,34.9332414 35.7213103,34.2446897 C35.7213103,33.5668966 35.559931,32.9724828 35.2371724,32.4614483 C34.9144138,31.9504138 34.4652414,31.5550345 33.8896552,31.2753103 C33.314069,30.9955862 32.6551034,30.8557241 31.9127586,30.8557241 C31.1166207,30.8557241 30.411931,31.0251724 29.7986897,31.364069 C29.1854483,31.7029655 28.7389655,32.1790345 28.4592414,32.7922759 C28.4269655,32.448 28.4108276,32.1413793 28.4108276,31.8724138 C28.4108276,30.3662069 28.7658621,29.2177241 29.475931,28.4269655 C30.186,27.6362069 31.1650345,27.2408276 32.4130345,27.2408276 C33.3382759,27.2408276 34.0698621,27.4183448 34.6077931,27.7733793 L34.6077931,27.7733793 L35.0757931,26.8373793 C34.4087586,26.4285517 33.5157931,26.2241379 32.3968966,26.2241379 C31.364069,26.2241379 30.4603448,26.4473793 29.6857241,26.8938621 C28.9111034,27.3403448 28.3086207,27.9993103 27.8782759,28.8707586 C27.447931,29.7422069 27.2327586,30.8073103 27.2327586,32.066069 C27.2327586,33.8627586 27.6308276,35.2533103 28.4269655,36.2377241 C29.2231034,37.2221379 30.3688966,37.7143448 31.8643448,37.7143448 Z M31.815931,36.729931 C31.191931,36.729931 30.654,36.6169655 30.2021379,36.3910345 C29.7502759,36.1651034 29.4086897,35.8692414 29.1773793,35.5034483 C28.946069,35.1376552 28.8304138,34.7395862 28.8304138,34.3092414 C28.8304138,33.8466207 28.9541379,33.4270345 29.2015862,33.0504828 C29.4490345,32.673931 29.7906207,32.378069 30.2263448,32.1628966 C30.662069,31.9477241 31.1650345,31.8401379 31.7352414,31.8401379 C32.6066897,31.8401379 33.297931,32.0606897 33.8089655,32.5017931 C34.32,32.9428966 34.5755172,33.5346207 34.5755172,34.2769655 C34.5755172,35.0193103 34.32,35.6137241 33.8089655,36.0602069 C33.297931,36.5066897 32.6335862,36.729931 31.815931,36.729931 Z\",\"id\":\"2016\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M9.27124138,118.307172 L9.27124138,117.274345 L3.05813793,117.274345 L6.89896552,113.498069 C7.6197931,112.798759 8.10931034,112.180138 8.36751724,111.642207 C8.62572414,111.104276 8.75482759,110.544828 8.75482759,109.963862 C8.75482759,109.017103 8.41862069,108.272069 7.7462069,107.728759 C7.0737931,107.185448 6.162,106.913793 5.01082759,106.913793 C4.15013793,106.913793 3.3782069,107.053655 2.69503448,107.333379 C2.01186207,107.613103 1.44972414,108.011172 1.00862069,108.527586 L1.00862069,108.527586 L1.83165517,109.237655 C2.56324138,108.398483 3.59068966,107.978897 4.914,107.978897 C5.76393103,107.978897 6.41751724,108.164483 6.87475862,108.535655 C7.332,108.906828 7.56062069,109.425931 7.56062069,110.092966 C7.56062069,110.52331 7.45572414,110.950966 7.24593103,111.375931 C7.03613793,111.800897 6.63537931,112.303862 6.04365517,112.884828 L6.04365517,112.884828 L1.34751724,117.484138 L1.34751724,118.307172 L9.27124138,118.307172 Z M15.2261379,118.404 C16.0975862,118.404 16.8748966,118.17269 17.558069,117.710069 C18.2412414,117.247448 18.7764828,116.583103 19.1637931,115.717034 C19.5511034,114.850966 19.7447586,113.831586 19.7447586,112.658897 C19.7447586,111.486207 19.5511034,110.466828 19.1637931,109.600759 C18.7764828,108.73469 18.2412414,108.070345 17.558069,107.607724 C16.8748966,107.145103 16.0975862,106.913793 15.2261379,106.913793 C14.3546897,106.913793 13.5773793,107.145103 12.8942069,107.607724 C12.2110345,108.070345 11.6784828,108.73469 11.2965517,109.600759 C10.9146207,110.466828 10.7236552,111.486207 10.7236552,112.658897 C10.7236552,113.831586 10.9146207,114.850966 11.2965517,115.717034 C11.6784828,116.583103 12.2110345,117.247448 12.8942069,117.710069 C13.5773793,118.17269 14.3546897,118.404 15.2261379,118.404 Z M15.2261379,117.338897 C14.5698621,117.338897 13.9915862,117.156 13.4913103,116.790207 C12.9910345,116.424414 12.6010345,115.891862 12.3213103,115.192552 C12.0415862,114.493241 11.9017241,113.64869 11.9017241,112.658897 C11.9017241,111.669103 12.0415862,110.824552 12.3213103,110.125241 C12.6010345,109.425931 12.9910345,108.893379 13.4913103,108.527586 C13.9915862,108.161793 14.5698621,107.978897 15.2261379,107.978897 C15.8824138,107.978897 16.4606897,108.161793 16.9609655,108.527586 C17.4612414,108.893379 17.8512414,109.425931 18.1309655,110.125241 C18.4106897,110.824552 18.5505517,111.669103 18.5505517,112.658897 C18.5505517,113.64869 18.4106897,114.493241 18.1309655,115.192552 C17.8512414,115.891862 17.4612414,116.424414 16.9609655,116.790207 C16.4606897,117.156 15.8824138,117.338897 15.2261379,117.338897 Z M24.5377241,118.307172 L24.5377241,107.010621 L20.7130345,107.010621 L20.7130345,108.043448 L23.3757931,108.043448 L23.3757931,118.307172 L24.5377241,118.307172 Z M30.4764828,118.307172 L35.2048966,107.833655 L35.2048966,107.010621 L26.91,107.010621 L26.91,110.157517 L28.0557931,110.157517 L28.0557931,108.043448 L33.8654483,108.043448 L29.2177241,118.307172 L30.4764828,118.307172 Z\",\"id\":\"2017\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M8.26262069,198.996828 L8.26262069,197.964 L2.04951724,197.964 L5.89034483,194.187724 C6.61117241,193.488414 7.10068966,192.869793 7.35889655,192.331862 C7.61710345,191.793931 7.7462069,191.234483 7.7462069,190.653517 C7.7462069,189.706759 7.41,188.961724 6.73758621,188.418414 C6.06517241,187.875103 5.15337931,187.603448 4.0022069,187.603448 C3.14151724,187.603448 2.36958621,187.74331 1.68641379,188.023034 C1.00324138,188.302759 0.441103448,188.700828 0,189.217241 L0,189.217241 L0.823034483,189.92731 C1.55462069,189.088138 2.58206897,188.668552 3.90537931,188.668552 C4.75531034,188.668552 5.40889655,188.854138 5.86613793,189.22531 C6.32337931,189.596483 6.552,190.115586 6.552,190.782621 C6.552,191.212966 6.44710345,191.640621 6.23731034,192.065586 C6.02751724,192.490552 5.62675862,192.993517 5.03503448,193.574483 L5.03503448,193.574483 L0.338896552,198.173793 L0.338896552,198.996828 L8.26262069,198.996828 Z M14.2175172,199.093655 C15.0889655,199.093655 15.8662759,198.862345 16.5494483,198.399724 C17.2326207,197.937103 17.7678621,197.272759 18.1551724,196.40669 C18.5424828,195.540621 18.7361379,194.521241 18.7361379,193.348552 C18.7361379,192.175862 18.5424828,191.156483 18.1551724,190.290414 C17.7678621,189.424345 17.2326207,188.76 16.5494483,188.297379 C15.8662759,187.834759 15.0889655,187.603448 14.2175172,187.603448 C13.346069,187.603448 12.5687586,187.834759 11.8855862,188.297379 C11.2024138,188.76 10.6698621,189.424345 10.287931,190.290414 C9.906,191.156483 9.71503448,192.175862 9.71503448,193.348552 C9.71503448,194.521241 9.906,195.540621 10.287931,196.40669 C10.6698621,197.272759 11.2024138,197.937103 11.8855862,198.399724 C12.5687586,198.862345 13.346069,199.093655 14.2175172,199.093655 Z M14.2175172,198.028552 C13.5612414,198.028552 12.9829655,197.845655 12.4826897,197.479862 C11.9824138,197.114069 11.5924138,196.581517 11.3126897,195.882207 C11.0329655,195.182897 10.8931034,194.338345 10.8931034,193.348552 C10.8931034,192.358759 11.0329655,191.514207 11.3126897,190.814897 C11.5924138,190.115586 11.9824138,189.583034 12.4826897,189.217241 C12.9829655,188.851448 13.5612414,188.668552 14.2175172,188.668552 C14.8737931,188.668552 15.452069,188.851448 15.9523448,189.217241 C16.4526207,189.583034 16.8426207,190.115586 17.1223448,190.814897 C17.402069,191.514207 17.541931,192.358759 17.541931,193.348552 C17.541931,194.338345 17.402069,195.182897 17.1223448,195.882207 C16.8426207,196.581517 16.4526207,197.114069 15.9523448,197.479862 C15.452069,197.845655 14.8737931,198.028552 14.2175172,198.028552 Z M23.5291034,198.996828 L23.5291034,187.700276 L19.7044138,187.700276 L19.7044138,188.733103 L22.3671724,188.733103 L22.3671724,198.996828 L23.5291034,198.996828 Z M30.5168276,199.093655 C31.4097931,199.093655 32.1871034,198.961862 32.8487586,198.698276 C33.5104138,198.43469 34.0187586,198.058138 34.3737931,197.568621 C34.7288276,197.079103 34.9063448,196.506207 34.9063448,195.849931 C34.9063448,195.182897 34.7153793,194.61269 34.3334483,194.13931 C33.9515172,193.665931 33.4055172,193.310897 32.6954483,193.074207 C33.2764138,192.848276 33.7228966,192.522828 34.0348966,192.097862 C34.3468966,191.672897 34.5028966,191.169931 34.5028966,190.588966 C34.5028966,189.986483 34.3361379,189.45931 34.0026207,189.007448 C33.6691034,188.555586 33.2037931,188.208621 32.6066897,187.966552 C32.0095862,187.724483 31.3129655,187.603448 30.5168276,187.603448 C29.3118621,187.603448 28.3516552,187.872414 27.6362069,188.410345 C26.9207586,188.948276 26.5630345,189.674483 26.5630345,190.588966 C26.5630345,191.169931 26.7136552,191.672897 27.0148966,192.097862 C27.3161379,192.522828 27.7572414,192.848276 28.3382069,193.074207 C27.6281379,193.310897 27.0875172,193.663241 26.7163448,194.131241 C26.3451724,194.599241 26.1595862,195.172138 26.1595862,195.849931 C26.1595862,196.850483 26.5468966,197.641241 27.3215172,198.222207 C28.0961379,198.803172 29.1612414,199.093655 30.5168276,199.093655 Z M30.5168276,192.654621 C29.6453793,192.654621 28.9622069,192.471724 28.4673103,192.105931 C27.9724138,191.740138 27.7249655,191.245241 27.7249655,190.621241 C27.7249655,189.997241 27.9751034,189.502345 28.4753793,189.136552 C28.9756552,188.770759 29.6561379,188.587862 30.5168276,188.587862 C31.3667586,188.587862 32.0472414,188.770759 32.5582759,189.136552 C33.0693103,189.502345 33.3248276,190.002621 33.3248276,190.637379 C33.3248276,191.250621 33.0746897,191.740138 32.5744138,192.105931 C32.0741379,192.471724 31.3882759,192.654621 30.5168276,192.654621 Z M30.5168276,198.109241 C29.5162759,198.109241 28.7362759,197.907517 28.1768276,197.504069 C27.6173793,197.100621 27.3376552,196.543862 27.3376552,195.833793 C27.3376552,195.134483 27.620069,194.583103 28.1848966,194.179655 C28.7497241,193.776207 29.5270345,193.574483 30.5168276,193.574483 C31.5173793,193.574483 32.300069,193.776207 32.8648966,194.179655 C33.4297241,194.583103 33.7121379,195.134483 33.7121379,195.833793 C33.7121379,196.533103 33.4297241,197.087172 32.8648966,197.496 C32.300069,197.904828 31.5173793,198.109241 30.5168276,198.109241 Z\",\"id\":\"2018\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M9.27124138,279.686483 L9.27124138,278.653655 L3.05813793,278.653655 L6.89896552,274.877379 C7.6197931,274.178069 8.10931034,273.559448 8.36751724,273.021517 C8.62572414,272.483586 8.75482759,271.924138 8.75482759,271.343172 C8.75482759,270.396414 8.41862069,269.651379 7.7462069,269.108069 C7.0737931,268.564759 6.162,268.293103 5.01082759,268.293103 C4.15013793,268.293103 3.3782069,268.432966 2.69503448,268.71269 C2.01186207,268.992414 1.44972414,269.390483 1.00862069,269.906897 L1.00862069,269.906897 L1.83165517,270.616966 C2.56324138,269.777793 3.59068966,269.358207 4.914,269.358207 C5.76393103,269.358207 6.41751724,269.543793 6.87475862,269.914966 C7.332,270.286138 7.56062069,270.805241 7.56062069,271.472276 C7.56062069,271.902621 7.45572414,272.330276 7.24593103,272.755241 C7.03613793,273.180207 6.63537931,273.683172 6.04365517,274.264138 L6.04365517,274.264138 L1.34751724,278.863448 L1.34751724,279.686483 L9.27124138,279.686483 Z M15.2261379,279.78331 C16.0975862,279.78331 16.8748966,279.552 17.558069,279.089379 C18.2412414,278.626759 18.7764828,277.962414 19.1637931,277.096345 C19.5511034,276.230276 19.7447586,275.210897 19.7447586,274.038207 C19.7447586,272.865517 19.5511034,271.846138 19.1637931,270.980069 C18.7764828,270.114 18.2412414,269.449655 17.558069,268.987034 C16.8748966,268.524414 16.0975862,268.293103 15.2261379,268.293103 C14.3546897,268.293103 13.5773793,268.524414 12.8942069,268.987034 C12.2110345,269.449655 11.6784828,270.114 11.2965517,270.980069 C10.9146207,271.846138 10.7236552,272.865517 10.7236552,274.038207 C10.7236552,275.210897 10.9146207,276.230276 11.2965517,277.096345 C11.6784828,277.962414 12.2110345,278.626759 12.8942069,279.089379 C13.5773793,279.552 14.3546897,279.78331 15.2261379,279.78331 Z M15.2261379,278.718207 C14.5698621,278.718207 13.9915862,278.53531 13.4913103,278.169517 C12.9910345,277.803724 12.6010345,277.271172 12.3213103,276.571862 C12.0415862,275.872552 11.9017241,275.028 11.9017241,274.038207 C11.9017241,273.048414 12.0415862,272.203862 12.3213103,271.504552 C12.6010345,270.805241 12.9910345,270.27269 13.4913103,269.906897 C13.9915862,269.541103 14.5698621,269.358207 15.2261379,269.358207 C15.8824138,269.358207 16.4606897,269.541103 16.9609655,269.906897 C17.4612414,270.27269 17.8512414,270.805241 18.1309655,271.504552 C18.4106897,272.203862 18.5505517,273.048414 18.5505517,274.038207 C18.5505517,275.028 18.4106897,275.872552 18.1309655,276.571862 C17.8512414,277.271172 17.4612414,277.803724 16.9609655,278.169517 C16.4606897,278.53531 15.8824138,278.718207 15.2261379,278.718207 Z M24.5377241,279.686483 L24.5377241,268.389931 L20.7130345,268.389931 L20.7130345,269.422759 L23.3757931,269.422759 L23.3757931,279.686483 L24.5377241,279.686483 Z M30.2182759,279.78331 C31.2511034,279.78331 32.1548276,279.560069 32.9294483,279.113586 C33.704069,278.667103 34.3065517,278.008138 34.7368966,277.13669 C35.1672414,276.265241 35.3824138,275.200138 35.3824138,273.941379 C35.3824138,272.14469 34.9843448,270.754138 34.1882069,269.769724 C33.392069,268.78531 32.2462759,268.293103 30.7508276,268.293103 C30.0192414,268.293103 29.3602759,268.435655 28.773931,268.720759 C28.1875862,269.005862 27.7276552,269.412 27.3941379,269.939172 C27.0606207,270.466345 26.8938621,271.074207 26.8938621,271.762759 C26.8938621,272.440552 27.0552414,273.034966 27.378,273.546 C27.7007586,274.057034 28.149931,274.452414 28.7255172,274.732138 C29.3011034,275.011862 29.960069,275.151724 30.7024138,275.151724 C31.4985517,275.151724 32.2032414,274.982276 32.8164828,274.643379 C33.4297241,274.304483 33.8762069,273.828414 34.155931,273.215172 C34.1882069,273.54869 34.2043448,273.85531 34.2043448,274.135034 C34.2043448,275.641241 33.8493103,276.789724 33.1392414,277.580483 C32.4291724,278.371241 31.4501379,278.766621 30.2021379,278.766621 C29.2768966,278.766621 28.5453103,278.589103 28.0073793,278.234069 L28.0073793,278.234069 L27.5393793,279.170069 C28.2064138,279.578897 29.0993793,279.78331 30.2182759,279.78331 Z M30.879931,274.16731 C30.0084828,274.16731 29.3172414,273.946759 28.8062069,273.505655 C28.2951724,273.064552 28.0396552,272.472828 28.0396552,271.730483 C28.0396552,270.988138 28.2951724,270.393724 28.8062069,269.947241 C29.3172414,269.500759 29.9815862,269.277517 30.7992414,269.277517 C31.4232414,269.277517 31.9611724,269.390483 32.4130345,269.616414 C32.8648966,269.842345 33.2064828,270.138207 33.4377931,270.504 C33.6691034,270.869793 33.7847586,271.267862 33.7847586,271.698207 C33.7847586,272.160828 33.6610345,272.580414 33.4135862,272.956966 C33.1661379,273.333517 32.8245517,273.629379 32.3888276,273.844552 C31.9531034,274.059724 31.4501379,274.16731 30.879931,274.16731 Z\",\"id\":\"2019\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M210.357931,102.072414 L210.357931,99.7001379 L212.197655,99.7001379 L212.197655,97.569931 L210.357931,97.569931 L210.357931,95.4558621 L207.888828,95.4558621 L207.888828,97.569931 L204.854897,97.569931 L209.793103,90.7758621 L207.049655,90.7758621 L201.724138,97.9411034 L201.724138,99.7001379 L207.808138,99.7001379 L207.808138,102.072414 L210.357931,102.072414 Z M217.62,102.072414 L221.815862,92.4703448 L221.815862,90.7758621 L212.762483,90.7758621 L212.762483,94.7457931 L215.086345,94.7457931 L215.086345,92.906069 L218.830345,92.906069 L214.779724,102.072414 L217.62,102.072414 Z M225.186672,97.5255517 C225.911534,97.5255517 226.499897,97.2784397 226.951759,96.7842155 C227.403621,96.2899914 227.629552,95.6286724 227.629552,94.8002586 C227.629552,93.9718448 227.403621,93.3105259 226.951759,92.8163017 C226.499897,92.3220776 225.911534,92.0749655 225.186672,92.0749655 C224.46181,92.0749655 223.871095,92.3220776 223.414526,92.8163017 C222.957957,93.3105259 222.729672,93.9718448 222.729672,94.8002586 C222.729672,95.6286724 222.957957,96.2899914 223.414526,96.7842155 C223.871095,97.2784397 224.46181,97.5255517 225.186672,97.5255517 Z M226.005672,102.072414 L232.755362,92.187931 L231.075,92.187931 L224.32531,102.072414 L226.005672,102.072414 Z M225.186672,96.3676552 C224.876017,96.3676552 224.626552,96.2335086 224.438276,95.9652155 C224.25,95.6969224 224.155862,95.3086034 224.155862,94.8002586 C224.155862,94.2919138 224.25,93.9035948 224.438276,93.6353017 C224.626552,93.3670086 224.876017,93.2328621 225.186672,93.2328621 C225.506741,93.2328621 225.75856,93.3646552 225.942129,93.6282414 C226.125698,93.8918276 226.217483,94.2825 226.217483,94.8002586 C226.217483,95.3180172 226.125698,95.7086897 225.942129,95.9722759 C225.75856,96.2358621 225.506741,96.3676552 225.186672,96.3676552 Z M231.894,102.185379 C232.618862,102.185379 233.209578,101.938267 233.666147,101.444043 C234.122716,100.949819 234.351,100.2885 234.351,99.4600862 C234.351,98.6316724 234.122716,97.9703534 233.666147,97.4761293 C233.209578,96.9819052 232.618862,96.7347931 231.894,96.7347931 C231.42331,96.7347931 231.002043,96.8454052 230.630198,97.0666293 C230.258353,97.2878534 229.968879,97.605569 229.761776,98.0197759 C229.554672,98.4339828 229.451121,98.9140862 229.451121,99.4600862 C229.451121,100.006086 229.554672,100.48619 229.761776,100.900397 C229.968879,101.314603 230.258353,101.632319 230.630198,101.853543 C231.002043,102.074767 231.42331,102.185379 231.894,102.185379 Z M231.894,101.027483 C231.583345,101.027483 231.333879,100.89569 231.145603,100.632103 C230.957328,100.368517 230.86319,99.9778448 230.86319,99.4600862 C230.86319,98.9423276 230.957328,98.5516552 231.145603,98.288069 C231.333879,98.0244828 231.583345,97.8926897 231.894,97.8926897 C232.214069,97.8926897 232.465888,98.0268362 232.649457,98.2951293 C232.833026,98.5634224 232.92481,98.9517414 232.92481,99.4600862 C232.92481,99.968431 232.833026,100.35675 232.649457,100.625043 C232.465888,100.893336 232.214069,101.027483 231.894,101.027483 Z\",\"id\":\"47%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M205.024345,182.955724 C206.057172,182.955724 206.925931,182.786276 207.630621,182.447379 C208.33531,182.108483 208.859793,181.656621 209.204069,181.091793 C209.548345,180.526966 209.720483,179.900276 209.720483,179.211724 C209.720483,178.146621 209.341241,177.29669 208.582759,176.661931 C207.824276,176.027172 206.648897,175.709793 205.056621,175.709793 L205.056621,175.709793 L204.136759,175.709793 L204.314276,173.563448 L209.026552,173.563448 L209.026552,171.465517 L202.135655,171.465517 L201.55469,177.823862 L204.443379,177.823862 C205.411655,177.823862 206.092138,177.947586 206.484828,178.195034 C206.877517,178.442483 207.073862,178.808276 207.073862,179.292414 C207.073862,179.755034 206.885586,180.115448 206.509034,180.373655 C206.132483,180.631862 205.616069,180.760966 204.959793,180.760966 C204.368069,180.760966 203.792483,180.672207 203.233034,180.49469 C202.673586,180.317172 202.17869,180.067034 201.748345,179.744276 L201.748345,179.744276 L200.715517,181.745379 C201.253448,182.13269 201.907034,182.431241 202.676276,182.641034 C203.445517,182.850828 204.228207,182.955724 205.024345,182.955724 Z M215.142828,182.762069 L215.142828,171.465517 L210.269172,171.465517 L210.269172,173.563448 L212.528483,173.563448 L212.528483,182.762069 L215.142828,182.762069 Z M219.320534,178.215207 C220.045397,178.215207 220.633759,177.968095 221.085621,177.473871 C221.537483,176.979647 221.763414,176.318328 221.763414,175.489914 C221.763414,174.6615 221.537483,174.000181 221.085621,173.505957 C220.633759,173.011733 220.045397,172.764621 219.320534,172.764621 C218.595672,172.764621 218.004957,173.011733 217.548388,173.505957 C217.091819,174.000181 216.863534,174.6615 216.863534,175.489914 C216.863534,176.318328 217.091819,176.979647 217.548388,177.473871 C218.004957,177.968095 218.595672,178.215207 219.320534,178.215207 Z M220.139534,182.762069 L226.889224,172.877586 L225.208862,172.877586 L218.459172,182.762069 L220.139534,182.762069 Z M219.320534,177.05731 C219.009879,177.05731 218.760414,176.923164 218.572138,176.654871 C218.383862,176.386578 218.289724,175.998259 218.289724,175.489914 C218.289724,174.981569 218.383862,174.59325 218.572138,174.324957 C218.760414,174.056664 219.009879,173.922517 219.320534,173.922517 C219.640603,173.922517 219.892422,174.05431 220.075991,174.317897 C220.25956,174.581483 220.351345,174.972155 220.351345,175.489914 C220.351345,176.007672 220.25956,176.398345 220.075991,176.661931 C219.892422,176.925517 219.640603,177.05731 219.320534,177.05731 Z M226.027862,182.875034 C226.752724,182.875034 227.34344,182.627922 227.800009,182.133698 C228.256578,181.639474 228.484862,180.978155 228.484862,180.149741 C228.484862,179.321328 228.256578,178.660009 227.800009,178.165784 C227.34344,177.67156 226.752724,177.424448 226.027862,177.424448 C225.557172,177.424448 225.135905,177.53506 224.76406,177.756284 C224.392216,177.977509 224.102741,178.295224 223.895638,178.709431 C223.688534,179.123638 223.584983,179.603741 223.584983,180.149741 C223.584983,180.695741 223.688534,181.175845 223.895638,181.590052 C224.102741,182.004259 224.392216,182.321974 224.76406,182.543198 C225.135905,182.764422 225.557172,182.875034 226.027862,182.875034 Z M226.027862,181.717138 C225.717207,181.717138 225.467741,181.585345 225.279466,181.321759 C225.09119,181.058172 224.997052,180.6675 224.997052,180.149741 C224.997052,179.631983 225.09119,179.24131 225.279466,178.977724 C225.467741,178.714138 225.717207,178.582345 226.027862,178.582345 C226.347931,178.582345 226.59975,178.716491 226.783319,178.984784 C226.966888,179.253078 227.058672,179.641397 227.058672,180.149741 C227.058672,180.658086 226.966888,181.046405 226.783319,181.314698 C226.59975,181.582991 226.347931,181.717138 226.027862,181.717138 Z\",\"id\":\"51%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M205.024345,263.645379 C206.057172,263.645379 206.925931,263.475931 207.630621,263.137034 C208.33531,262.798138 208.859793,262.346276 209.204069,261.781448 C209.548345,261.216621 209.720483,260.589931 209.720483,259.901379 C209.720483,258.836276 209.341241,257.986345 208.582759,257.351586 C207.824276,256.716828 206.648897,256.399448 205.056621,256.399448 L205.056621,256.399448 L204.136759,256.399448 L204.314276,254.253103 L209.026552,254.253103 L209.026552,252.155172 L202.135655,252.155172 L201.55469,258.513517 L204.443379,258.513517 C205.411655,258.513517 206.092138,258.637241 206.484828,258.88469 C206.877517,259.132138 207.073862,259.497931 207.073862,259.982069 C207.073862,260.44469 206.885586,260.805103 206.509034,261.06331 C206.132483,261.321517 205.616069,261.450621 204.959793,261.450621 C204.368069,261.450621 203.792483,261.361862 203.233034,261.184345 C202.673586,261.006828 202.17869,260.75669 201.748345,260.433931 L201.748345,260.433931 L200.715517,262.435034 C201.253448,262.822345 201.907034,263.120897 202.676276,263.33069 C203.445517,263.540483 204.228207,263.645379 205.024345,263.645379 Z M215.142828,263.451724 L215.142828,252.155172 L210.269172,252.155172 L210.269172,254.253103 L212.528483,254.253103 L212.528483,263.451724 L215.142828,263.451724 Z M219.320534,258.904862 C220.045397,258.904862 220.633759,258.65775 221.085621,258.163526 C221.537483,257.669302 221.763414,257.007983 221.763414,256.179569 C221.763414,255.351155 221.537483,254.689836 221.085621,254.195612 C220.633759,253.701388 220.045397,253.454276 219.320534,253.454276 C218.595672,253.454276 218.004957,253.701388 217.548388,254.195612 C217.091819,254.689836 216.863534,255.351155 216.863534,256.179569 C216.863534,257.007983 217.091819,257.669302 217.548388,258.163526 C218.004957,258.65775 218.595672,258.904862 219.320534,258.904862 Z M220.139534,263.451724 L226.889224,253.567241 L225.208862,253.567241 L218.459172,263.451724 L220.139534,263.451724 Z M219.320534,257.746966 C219.009879,257.746966 218.760414,257.612819 218.572138,257.344526 C218.383862,257.076233 218.289724,256.687914 218.289724,256.179569 C218.289724,255.671224 218.383862,255.282905 218.572138,255.014612 C218.760414,254.746319 219.009879,254.612172 219.320534,254.612172 C219.640603,254.612172 219.892422,254.743966 220.075991,255.007552 C220.25956,255.271138 220.351345,255.66181 220.351345,256.179569 C220.351345,256.697328 220.25956,257.088 220.075991,257.351586 C219.892422,257.615172 219.640603,257.746966 219.320534,257.746966 Z M226.027862,263.56469 C226.752724,263.56469 227.34344,263.317578 227.800009,262.823353 C228.256578,262.329129 228.484862,261.66781 228.484862,260.839397 C228.484862,260.010983 228.256578,259.349664 227.800009,258.85544 C227.34344,258.361216 226.752724,258.114103 226.027862,258.114103 C225.557172,258.114103 225.135905,258.224716 224.76406,258.44594 C224.392216,258.667164 224.102741,258.984879 223.895638,259.399086 C223.688534,259.813293 223.584983,260.293397 223.584983,260.839397 C223.584983,261.385397 223.688534,261.8655 223.895638,262.279707 C224.102741,262.693914 224.392216,263.011629 224.76406,263.232853 C225.135905,263.454078 225.557172,263.56469 226.027862,263.56469 Z M226.027862,262.406793 C225.717207,262.406793 225.467741,262.275 225.279466,262.011414 C225.09119,261.747828 224.997052,261.357155 224.997052,260.839397 C224.997052,260.321638 225.09119,259.930966 225.279466,259.667379 C225.467741,259.403793 225.717207,259.272 226.027862,259.272 C226.347931,259.272 226.59975,259.406147 226.783319,259.67444 C226.966888,259.942733 227.058672,260.331052 227.058672,260.839397 C227.058672,261.347741 226.966888,261.73606 226.783319,262.004353 C226.59975,262.272647 226.347931,262.406793 226.027862,262.406793 Z\",\"id\":\"51%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M206.77531,134.735586 C207.571448,134.735586 208.294966,134.582276 208.945862,134.275655 C209.596759,133.969034 210.110483,133.530621 210.487034,132.960414 C210.863586,132.390207 211.051862,131.728552 211.051862,130.975448 C211.051862,130.276138 210.879724,129.660207 210.535448,129.127655 C210.191172,128.595103 209.723172,128.183586 209.131448,127.893103 C208.539724,127.602621 207.883448,127.457379 207.162621,127.457379 C205.968414,127.457379 205.037793,127.790897 204.370759,128.457931 C204.413793,127.392828 204.715034,126.580552 205.274483,126.021103 C205.833931,125.461655 206.592414,125.181931 207.549931,125.181931 C208.399862,125.181931 209.104552,125.370207 209.664,125.746759 L209.664,125.746759 L210.632276,123.826345 C210.244966,123.578897 209.774276,123.387931 209.220207,123.253448 C208.666138,123.118966 208.087862,123.051724 207.485379,123.051724 C206.344966,123.051724 205.341724,123.288414 204.475655,123.761793 C203.609586,124.235172 202.934483,124.929103 202.450345,125.843586 C201.966207,126.758069 201.724138,127.855448 201.724138,129.135724 C201.724138,130.932414 202.170621,132.314897 203.063586,133.283172 C203.956552,134.251448 205.193793,134.735586 206.77531,134.735586 Z M206.630069,132.782897 C206.016828,132.782897 205.53269,132.626897 205.177655,132.314897 C204.822621,132.002897 204.645103,131.599448 204.645103,131.104552 C204.645103,130.609655 204.828,130.203517 205.193793,129.886138 C205.559586,129.568759 206.027586,129.410069 206.597793,129.410069 C207.178759,129.410069 207.644069,129.563379 207.993724,129.87 C208.343379,130.176621 208.518207,130.588138 208.518207,131.104552 C208.518207,131.620966 208.343379,132.029793 207.993724,132.331034 C207.644069,132.632276 207.189517,132.782897 206.630069,132.782897 Z M216.651724,134.541931 L220.847586,124.939862 L220.847586,123.245379 L211.794207,123.245379 L211.794207,127.21531 L214.118069,127.21531 L214.118069,125.375586 L217.862069,125.375586 L213.811448,134.541931 L216.651724,134.541931 Z M224.218397,129.995069 C224.943259,129.995069 225.531621,129.747957 225.983483,129.253733 C226.435345,128.759509 226.661276,128.09819 226.661276,127.269776 C226.661276,126.441362 226.435345,125.780043 225.983483,125.285819 C225.531621,124.791595 224.943259,124.544483 224.218397,124.544483 C223.493534,124.544483 222.902819,124.791595 222.44625,125.285819 C221.989681,125.780043 221.761397,126.441362 221.761397,127.269776 C221.761397,128.09819 221.989681,128.759509 222.44625,129.253733 C222.902819,129.747957 223.493534,129.995069 224.218397,129.995069 Z M225.037397,134.541931 L231.787086,124.657448 L230.106724,124.657448 L223.357034,134.541931 L225.037397,134.541931 Z M224.218397,128.837172 C223.907741,128.837172 223.658276,128.703026 223.47,128.434733 C223.281724,128.16644 223.187586,127.778121 223.187586,127.269776 C223.187586,126.761431 223.281724,126.373112 223.47,126.104819 C223.658276,125.836526 223.907741,125.702379 224.218397,125.702379 C224.538466,125.702379 224.790284,125.834172 224.973853,126.097759 C225.157422,126.361345 225.249207,126.752017 225.249207,127.269776 C225.249207,127.787534 225.157422,128.178207 224.973853,128.441793 C224.790284,128.705379 224.538466,128.837172 224.218397,128.837172 Z M230.925724,134.654897 C231.650586,134.654897 232.241302,134.407784 232.697871,133.91356 C233.15444,133.419336 233.382724,132.758017 233.382724,131.929603 C233.382724,131.10119 233.15444,130.439871 232.697871,129.945647 C232.241302,129.451422 231.650586,129.20431 230.925724,129.20431 C230.455034,129.20431 230.033767,129.314922 229.661922,129.536147 C229.290078,129.757371 229.000603,130.075086 228.7935,130.489293 C228.586397,130.9035 228.482845,131.383603 228.482845,131.929603 C228.482845,132.475603 228.586397,132.955707 228.7935,133.369914 C229.000603,133.784121 229.290078,134.101836 229.661922,134.32306 C230.033767,134.544284 230.455034,134.654897 230.925724,134.654897 Z M230.925724,133.497 C230.615069,133.497 230.365603,133.365207 230.177328,133.101621 C229.989052,132.838034 229.894914,132.447362 229.894914,131.929603 C229.894914,131.411845 229.989052,131.021172 230.177328,130.757586 C230.365603,130.494 230.615069,130.362207 230.925724,130.362207 C231.245793,130.362207 231.497612,130.496353 231.681181,130.764647 C231.86475,131.03294 231.956534,131.421259 231.956534,131.929603 C231.956534,132.437948 231.86475,132.826267 231.681181,133.09456 C231.497612,133.362853 231.245793,133.497 230.925724,133.497 Z\",\"id\":\"67%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M206.581655,215.231586 L210.777517,205.629517 L210.777517,203.935034 L201.724138,203.935034 L201.724138,207.904966 L204.048,207.904966 L204.048,206.065241 L207.792,206.065241 L203.741379,215.231586 L206.581655,215.231586 Z M216.780828,215.425241 C217.716828,215.425241 218.550621,215.193931 219.282207,214.73131 C220.013793,214.26869 220.58669,213.598966 221.000897,212.722138 C221.415103,211.84531 221.622207,210.799034 221.622207,209.58331 C221.622207,208.367586 221.415103,207.32131 221.000897,206.444483 C220.58669,205.567655 220.013793,204.897931 219.282207,204.43531 C218.550621,203.97269 217.716828,203.741379 216.780828,203.741379 C215.844828,203.741379 215.011034,203.97269 214.279448,204.43531 C213.547862,204.897931 212.974966,205.567655 212.560759,206.444483 C212.146552,207.32131 211.939448,208.367586 211.939448,209.58331 C211.939448,210.799034 212.146552,211.84531 212.560759,212.722138 C212.974966,213.598966 213.547862,214.26869 214.279448,214.73131 C215.011034,215.193931 215.844828,215.425241 216.780828,215.425241 Z M216.780828,213.214345 C216.103034,213.214345 215.567793,212.918483 215.175103,212.326759 C214.782414,211.735034 214.586069,210.820552 214.586069,209.58331 C214.586069,208.346069 214.782414,207.431586 215.175103,206.839862 C215.567793,206.248138 216.103034,205.952276 216.780828,205.952276 C217.469379,205.952276 218.01,206.248138 218.40269,206.839862 C218.795379,207.431586 218.991724,208.346069 218.991724,209.58331 C218.991724,210.820552 218.795379,211.735034 218.40269,212.326759 C218.01,212.918483 217.469379,213.214345 216.780828,213.214345 Z M225.105983,210.684724 C225.830845,210.684724 226.419207,210.437612 226.871069,209.943388 C227.322931,209.449164 227.548862,208.787845 227.548862,207.959431 C227.548862,207.131017 227.322931,206.469698 226.871069,205.975474 C226.419207,205.48125 225.830845,205.234138 225.105983,205.234138 C224.381121,205.234138 223.790405,205.48125 223.333836,205.975474 C222.877267,206.469698 222.648983,207.131017 222.648983,207.959431 C222.648983,208.787845 222.877267,209.449164 223.333836,209.943388 C223.790405,210.437612 224.381121,210.684724 225.105983,210.684724 Z M225.924983,215.231586 L232.674672,205.347103 L230.99431,205.347103 L224.244621,215.231586 L225.924983,215.231586 Z M225.105983,209.526828 C224.795328,209.526828 224.545862,209.392681 224.357586,209.124388 C224.16931,208.856095 224.075172,208.467776 224.075172,207.959431 C224.075172,207.451086 224.16931,207.062767 224.357586,206.794474 C224.545862,206.526181 224.795328,206.392034 225.105983,206.392034 C225.426052,206.392034 225.677871,206.523828 225.86144,206.787414 C226.045009,207.051 226.136793,207.441672 226.136793,207.959431 C226.136793,208.47719 226.045009,208.867862 225.86144,209.131448 C225.677871,209.395034 225.426052,209.526828 225.105983,209.526828 Z M231.81331,215.344552 C232.538172,215.344552 233.128888,215.09744 233.585457,214.603216 C234.042026,214.108991 234.27031,213.447672 234.27031,212.619259 C234.27031,211.790845 234.042026,211.129526 233.585457,210.635302 C233.128888,210.141078 232.538172,209.893966 231.81331,209.893966 C231.342621,209.893966 230.921353,210.004578 230.549509,210.225802 C230.177664,210.447026 229.88819,210.764741 229.681086,211.178948 C229.473983,211.593155 229.370431,212.073259 229.370431,212.619259 C229.370431,213.165259 229.473983,213.645362 229.681086,214.059569 C229.88819,214.473776 230.177664,214.791491 230.549509,215.012716 C230.921353,215.23394 231.342621,215.344552 231.81331,215.344552 Z M231.81331,214.186655 C231.502655,214.186655 231.25319,214.054862 231.064914,213.791276 C230.876638,213.52769 230.7825,213.137017 230.7825,212.619259 C230.7825,212.1015 230.876638,211.710828 231.064914,211.447241 C231.25319,211.183655 231.502655,211.051862 231.81331,211.051862 C232.133379,211.051862 232.385198,211.186009 232.568767,211.454302 C232.752336,211.722595 232.844121,212.110914 232.844121,212.619259 C232.844121,213.127603 232.752336,213.515922 232.568767,213.784216 C232.385198,214.052509 232.133379,214.186655 231.81331,214.186655 Z\",\"id\":\"70%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M206.581655,295.727586 L210.777517,286.125517 L210.777517,284.431034 L201.724138,284.431034 L201.724138,288.400966 L204.048,288.400966 L204.048,286.561241 L207.792,286.561241 L203.741379,295.727586 L206.581655,295.727586 Z M216.29669,295.727586 L216.29669,284.431034 L211.423034,284.431034 L211.423034,286.528966 L213.682345,286.528966 L213.682345,295.727586 L216.29669,295.727586 Z M220.474397,291.180724 C221.199259,291.180724 221.787621,290.933612 222.239483,290.439388 C222.691345,289.945164 222.917276,289.283845 222.917276,288.455431 C222.917276,287.627017 222.691345,286.965698 222.239483,286.471474 C221.787621,285.97725 221.199259,285.730138 220.474397,285.730138 C219.749534,285.730138 219.158819,285.97725 218.70225,286.471474 C218.245681,286.965698 218.017397,287.627017 218.017397,288.455431 C218.017397,289.283845 218.245681,289.945164 218.70225,290.439388 C219.158819,290.933612 219.749534,291.180724 220.474397,291.180724 Z M221.293397,295.727586 L228.043086,285.843103 L226.362724,285.843103 L219.613034,295.727586 L221.293397,295.727586 Z M220.474397,290.022828 C220.163741,290.022828 219.914276,289.888681 219.726,289.620388 C219.537724,289.352095 219.443586,288.963776 219.443586,288.455431 C219.443586,287.947086 219.537724,287.558767 219.726,287.290474 C219.914276,287.022181 220.163741,286.888034 220.474397,286.888034 C220.794466,286.888034 221.046284,287.019828 221.229853,287.283414 C221.413422,287.547 221.505207,287.937672 221.505207,288.455431 C221.505207,288.97319 221.413422,289.363862 221.229853,289.627448 C221.046284,289.891034 220.794466,290.022828 220.474397,290.022828 Z M227.181724,295.840552 C227.906586,295.840552 228.497302,295.59344 228.953871,295.099216 C229.41044,294.604991 229.638724,293.943672 229.638724,293.115259 C229.638724,292.286845 229.41044,291.625526 228.953871,291.131302 C228.497302,290.637078 227.906586,290.389966 227.181724,290.389966 C226.711034,290.389966 226.289767,290.500578 225.917922,290.721802 C225.546078,290.943026 225.256603,291.260741 225.0495,291.674948 C224.842397,292.089155 224.738845,292.569259 224.738845,293.115259 C224.738845,293.661259 224.842397,294.141362 225.0495,294.555569 C225.256603,294.969776 225.546078,295.287491 225.917922,295.508716 C226.289767,295.72994 226.711034,295.840552 227.181724,295.840552 Z M227.181724,294.682655 C226.871069,294.682655 226.621603,294.550862 226.433328,294.287276 C226.245052,294.02369 226.150914,293.633017 226.150914,293.115259 C226.150914,292.5975 226.245052,292.206828 226.433328,291.943241 C226.621603,291.679655 226.871069,291.547862 227.181724,291.547862 C227.501793,291.547862 227.753612,291.682009 227.937181,291.950302 C228.12075,292.218595 228.212534,292.606914 228.212534,293.115259 C228.212534,293.623603 228.12075,294.011922 227.937181,294.280216 C227.753612,294.548509 227.501793,294.682655 227.181724,294.682655 Z\",\"id\":\"71%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":10}),React.createElement(\"g\",{\"id\":\"Group-25-Copy-8\",\"transform\":\"translate(278.856592, 16.105989)\",\"key\":11},[React.createElement(\"path\",{\"d\":\"M19.6539828,18.1067586 L19.6539828,15.5367931 L22.280431,15.5367931 L22.280431,14.7036724 L19.6539828,14.7036724 L19.6539828,12.1195862 L18.7643793,12.1195862 L18.7643793,14.7036724 L16.137931,14.7036724 L16.137931,15.5367931 L18.7643793,15.5367931 L18.7643793,18.1067586 L19.6539828,18.1067586 Z M30.7528448,20.0554138 L30.7528448,19.1516897 L25.3163793,19.1516897 L28.6771034,15.8474483 C29.3078276,15.2355517 29.7361552,14.6942586 29.9620862,14.223569 C30.1880172,13.7528793 30.3009828,13.2633621 30.3009828,12.7550172 C30.3009828,11.9266034 30.0068017,11.2746983 29.4184397,10.7993017 C28.8300776,10.3239052 28.0322586,10.0862069 27.0249828,10.0862069 C26.2718793,10.0862069 25.5964397,10.2085862 24.9986638,10.4533448 C24.4008879,10.6981034 23.9090172,11.0464138 23.5230517,11.4982759 L23.5230517,11.4982759 L24.2432069,12.1195862 C24.8833448,11.3853103 25.7823621,11.0181724 26.9402586,11.0181724 C27.6839483,11.0181724 28.2558362,11.1805603 28.6559224,11.5053362 C29.0560086,11.8301121 29.2560517,12.2843276 29.2560517,12.8679828 C29.2560517,13.2445345 29.1642672,13.6187328 28.9806983,13.9905776 C28.7971293,14.3624224 28.4464655,14.8025172 27.9287069,15.3108621 L27.9287069,15.3108621 L23.8195862,19.3352586 L23.8195862,20.0554138 L30.7528448,20.0554138 Z M34.7631207,20.0554138 L34.7631207,10.170931 L31.4165172,10.170931 L31.4165172,11.0746552 L33.746431,11.0746552 L33.746431,20.0554138 L34.7631207,20.0554138 Z M38.7875172,22.7948276 L38.7875172,18.6574655 C39.0981724,19.137569 39.4959052,19.5023534 39.9807155,19.751819 C40.4655259,20.0012845 41.0091724,20.1260172 41.6116552,20.1260172 C42.3176897,20.1260172 42.9507672,19.9683362 43.5108879,19.6529741 C44.0710086,19.3376121 44.5111034,18.8928103 44.8311724,18.318569 C45.1512414,17.7443276 45.3112759,17.0853621 45.3112759,16.3416724 C45.3112759,15.6073966 45.1512414,14.9531379 44.8311724,14.3788966 C44.5111034,13.8046552 44.0686552,13.3598534 43.5038276,13.0444914 C42.939,12.7291293 42.3082759,12.5714483 41.6116552,12.5714483 C40.9903448,12.5714483 40.4325776,12.7032414 39.9383534,12.9668276 C39.4441293,13.2304138 39.0463966,13.6069655 38.7451552,14.0964828 L38.7451552,14.0964828 L38.7451552,12.627931 L37.7849483,12.627931 L37.7849483,22.7948276 L38.7875172,22.7948276 Z M41.5410517,19.2364138 C41.0138793,19.2364138 40.5408362,19.1163879 40.1219224,18.8763362 C39.7030086,18.6362845 39.3735259,18.2950345 39.1334741,17.8525862 C38.8934224,17.4101379 38.7733966,16.9065 38.7733966,16.3416724 C38.7733966,15.7768448 38.8934224,15.2755603 39.1334741,14.837819 C39.3735259,14.4000776 39.7030086,14.0588276 40.1219224,13.814069 C40.5408362,13.5693103 41.0138793,13.446931 41.5410517,13.446931 C42.0588103,13.446931 42.5295,13.5693103 42.9531207,13.814069 C43.3767414,14.0588276 43.7085776,14.4000776 43.9486293,14.837819 C44.188681,15.2755603 44.3087069,15.7768448 44.3087069,16.3416724 C44.3087069,16.9065 44.188681,17.4101379 43.9486293,17.8525862 C43.7085776,18.2950345 43.3767414,18.6362845 42.9531207,18.8763362 C42.5295,19.1163879 42.0588103,19.2364138 41.5410517,19.2364138 Z M48.3613448,22.7948276 L48.3613448,18.6574655 C48.672,19.137569 49.0697328,19.5023534 49.5545431,19.751819 C50.0393534,20.0012845 50.583,20.1260172 51.1854828,20.1260172 C51.8915172,20.1260172 52.5245948,19.9683362 53.0847155,19.6529741 C53.6448362,19.3376121 54.084931,18.8928103 54.405,18.318569 C54.725069,17.7443276 54.8851034,17.0853621 54.8851034,16.3416724 C54.8851034,15.6073966 54.725069,14.9531379 54.405,14.3788966 C54.084931,13.8046552 53.6424828,13.3598534 53.0776552,13.0444914 C52.5128276,12.7291293 51.8821034,12.5714483 51.1854828,12.5714483 C50.5641724,12.5714483 50.0064052,12.7032414 49.512181,12.9668276 C49.0179569,13.2304138 48.6202241,13.6069655 48.3189828,14.0964828 L48.3189828,14.0964828 L48.3189828,12.627931 L47.3587759,12.627931 L47.3587759,22.7948276 L48.3613448,22.7948276 Z M51.1148793,19.2364138 C50.5877069,19.2364138 50.1146638,19.1163879 49.69575,18.8763362 C49.2768362,18.6362845 48.9473534,18.2950345 48.7073017,17.8525862 C48.46725,17.4101379 48.3472241,16.9065 48.3472241,16.3416724 C48.3472241,15.7768448 48.46725,15.2755603 48.7073017,14.837819 C48.9473534,14.4000776 49.2768362,14.0588276 49.69575,13.814069 C50.1146638,13.5693103 50.5877069,13.446931 51.1148793,13.446931 C51.6326379,13.446931 52.1033276,13.5693103 52.5269483,13.814069 C52.950569,14.0588276 53.2824052,14.4000776 53.5224569,14.837819 C53.7625086,15.2755603 53.8825345,15.7768448 53.8825345,16.3416724 C53.8825345,16.9065 53.7625086,17.4101379 53.5224569,17.8525862 C53.2824052,18.2950345 52.950569,18.6362845 52.5269483,18.8763362 C52.1033276,19.1163879 51.6326379,19.2364138 51.1148793,19.2364138 Z\",\"id\":\"+21pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"71.1347869\",\"height\":\"32.211979\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-9\",\"transform\":\"translate(278.856592, 97.978103)\",\"key\":12},[React.createElement(\"path\",{\"d\":\"M17.6367414,18.1067586 L17.6367414,15.5367931 L20.2631897,15.5367931 L20.2631897,14.7036724 L17.6367414,14.7036724 L17.6367414,12.1195862 L16.7471379,12.1195862 L16.7471379,14.7036724 L14.1206897,14.7036724 L14.1206897,15.5367931 L16.7471379,15.5367931 L16.7471379,18.1067586 L17.6367414,18.1067586 Z M28.7356034,20.0554138 L28.7356034,19.1516897 L23.2991379,19.1516897 L26.6598621,15.8474483 C27.2905862,15.2355517 27.7189138,14.6942586 27.9448448,14.223569 C28.1707759,13.7528793 28.2837414,13.2633621 28.2837414,12.7550172 C28.2837414,11.9266034 27.9895603,11.2746983 27.4011983,10.7993017 C26.8128362,10.3239052 26.0150172,10.0862069 25.0077414,10.0862069 C24.2546379,10.0862069 23.5791983,10.2085862 22.9814224,10.4533448 C22.3836466,10.6981034 21.8917759,11.0464138 21.5058103,11.4982759 L21.5058103,11.4982759 L22.2259655,12.1195862 C22.8661034,11.3853103 23.7651207,11.0181724 24.9230172,11.0181724 C25.6667069,11.0181724 26.2385948,11.1805603 26.638681,11.5053362 C27.0387672,11.8301121 27.2388103,12.2843276 27.2388103,12.8679828 C27.2388103,13.2445345 27.1470259,13.6187328 26.9634569,13.9905776 C26.7798879,14.3624224 26.4292241,14.8025172 25.9114655,15.3108621 L25.9114655,15.3108621 L21.8023448,19.3352586 L21.8023448,20.0554138 L28.7356034,20.0554138 Z M33.9461379,20.1401379 C34.7086552,20.1401379 35.3888017,19.9377414 35.9865776,19.5329483 C36.5843534,19.1281552 37.0526897,18.5468534 37.3915862,17.7890431 C37.7304828,17.0312328 37.899931,16.1392759 37.899931,15.1131724 C37.899931,14.087069 37.7304828,13.1951121 37.3915862,12.4373017 C37.0526897,11.6794914 36.5843534,11.0981897 35.9865776,10.6933966 C35.3888017,10.2886034 34.7086552,10.0862069 33.9461379,10.0862069 C33.1836207,10.0862069 32.5034741,10.2886034 31.9056983,10.6933966 C31.3079224,11.0981897 30.8419397,11.6794914 30.50775,12.4373017 C30.1735603,13.1951121 30.0064655,14.087069 30.0064655,15.1131724 C30.0064655,16.1392759 30.1735603,17.0312328 30.50775,17.7890431 C30.8419397,18.5468534 31.3079224,19.1281552 31.9056983,19.5329483 C32.5034741,19.9377414 33.1836207,20.1401379 33.9461379,20.1401379 Z M33.9461379,19.2081724 C33.3718966,19.2081724 32.8659052,19.0481379 32.4281638,18.728069 C31.9904224,18.408 31.6491724,17.9420172 31.4044138,17.3301207 C31.1596552,16.7182241 31.0372759,15.9792414 31.0372759,15.1131724 C31.0372759,14.2471034 31.1596552,13.5081207 31.4044138,12.8962241 C31.6491724,12.2843276 31.9904224,11.8183448 32.4281638,11.4982759 C32.8659052,11.1782069 33.3718966,11.0181724 33.9461379,11.0181724 C34.5203793,11.0181724 35.0263707,11.1782069 35.4641121,11.4982759 C35.9018534,11.8183448 36.2431034,12.2843276 36.4878621,12.8962241 C36.7326207,13.5081207 36.855,14.2471034 36.855,15.1131724 C36.855,15.9792414 36.7326207,16.7182241 36.4878621,17.3301207 C36.2431034,17.9420172 35.9018534,18.408 35.4641121,18.728069 C35.0263707,19.0481379 34.5203793,19.2081724 33.9461379,19.2081724 Z M41.0206034,22.7948276 L41.0206034,18.6574655 C41.3312586,19.137569 41.7289914,19.5023534 42.2138017,19.751819 C42.6986121,20.0012845 43.2422586,20.1260172 43.8447414,20.1260172 C44.5507759,20.1260172 45.1838534,19.9683362 45.7439741,19.6529741 C46.3040948,19.3376121 46.7441897,18.8928103 47.0642586,18.318569 C47.3843276,17.7443276 47.5443621,17.0853621 47.5443621,16.3416724 C47.5443621,15.6073966 47.3843276,14.9531379 47.0642586,14.3788966 C46.7441897,13.8046552 46.3017414,13.3598534 45.7369138,13.0444914 C45.1720862,12.7291293 44.5413621,12.5714483 43.8447414,12.5714483 C43.223431,12.5714483 42.6656638,12.7032414 42.1714397,12.9668276 C41.6772155,13.2304138 41.2794828,13.6069655 40.9782414,14.0964828 L40.9782414,14.0964828 L40.9782414,12.627931 L40.0180345,12.627931 L40.0180345,22.7948276 L41.0206034,22.7948276 Z M43.7741379,19.2364138 C43.2469655,19.2364138 42.7739224,19.1163879 42.3550086,18.8763362 C41.9360948,18.6362845 41.6066121,18.2950345 41.3665603,17.8525862 C41.1265086,17.4101379 41.0064828,16.9065 41.0064828,16.3416724 C41.0064828,15.7768448 41.1265086,15.2755603 41.3665603,14.837819 C41.6066121,14.4000776 41.9360948,14.0588276 42.3550086,13.814069 C42.7739224,13.5693103 43.2469655,13.446931 43.7741379,13.446931 C44.2918966,13.446931 44.7625862,13.5693103 45.1862069,13.814069 C45.6098276,14.0588276 45.9416638,14.4000776 46.1817155,14.837819 C46.4217672,15.2755603 46.5417931,15.7768448 46.5417931,16.3416724 C46.5417931,16.9065 46.4217672,17.4101379 46.1817155,17.8525862 C45.9416638,18.2950345 45.6098276,18.6362845 45.1862069,18.8763362 C44.7625862,19.1163879 44.2918966,19.2364138 43.7741379,19.2364138 Z M50.594431,22.7948276 L50.594431,18.6574655 C50.9050862,19.137569 51.302819,19.5023534 51.7876293,19.751819 C52.2724397,20.0012845 52.8160862,20.1260172 53.418569,20.1260172 C54.1246034,20.1260172 54.757681,19.9683362 55.3178017,19.6529741 C55.8779224,19.3376121 56.3180172,18.8928103 56.6380862,18.318569 C56.9581552,17.7443276 57.1181897,17.0853621 57.1181897,16.3416724 C57.1181897,15.6073966 56.9581552,14.9531379 56.6380862,14.3788966 C56.3180172,13.8046552 55.875569,13.3598534 55.3107414,13.0444914 C54.7459138,12.7291293 54.1151897,12.5714483 53.418569,12.5714483 C52.7972586,12.5714483 52.2394914,12.7032414 51.7452672,12.9668276 C51.2510431,13.2304138 50.8533103,13.6069655 50.552069,14.0964828 L50.552069,14.0964828 L50.552069,12.627931 L49.5918621,12.627931 L49.5918621,22.7948276 L50.594431,22.7948276 Z M53.3479655,19.2364138 C52.8207931,19.2364138 52.34775,19.1163879 51.9288362,18.8763362 C51.5099224,18.6362845 51.1804397,18.2950345 50.9403879,17.8525862 C50.7003362,17.4101379 50.5803103,16.9065 50.5803103,16.3416724 C50.5803103,15.7768448 50.7003362,15.2755603 50.9403879,14.837819 C51.1804397,14.4000776 51.5099224,14.0588276 51.9288362,13.814069 C52.34775,13.5693103 52.8207931,13.446931 53.3479655,13.446931 C53.8657241,13.446931 54.3364138,13.5693103 54.7600345,13.814069 C55.1836552,14.0588276 55.5154914,14.4000776 55.7555431,14.837819 C55.9955948,15.2755603 56.1156207,15.7768448 56.1156207,16.3416724 C56.1156207,16.9065 55.9955948,17.4101379 55.7555431,17.8525862 C55.5154914,18.2950345 55.1836552,18.6362845 54.7600345,18.8763362 C54.3364138,19.1163879 53.8657241,19.2364138 53.3479655,19.2364138 Z\",\"id\":\"+20pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"71.1347869\",\"height\":\"32.211979\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-10\",\"transform\":\"translate(278.856592, 177.165884)\",\"key\":13},[React.createElement(\"path\",{\"d\":\"M15.6195,18.1067586 L15.6195,15.5367931 L18.2459483,15.5367931 L18.2459483,14.7036724 L15.6195,14.7036724 L15.6195,12.1195862 L14.7298966,12.1195862 L14.7298966,14.7036724 L12.1034483,14.7036724 L12.1034483,15.5367931 L14.7298966,15.5367931 L14.7298966,18.1067586 L15.6195,18.1067586 Z M26.7183621,20.0554138 L26.7183621,19.1516897 L21.2818966,19.1516897 L24.6426207,15.8474483 C25.2733448,15.2355517 25.7016724,14.6942586 25.9276034,14.223569 C26.1535345,13.7528793 26.2665,13.2633621 26.2665,12.7550172 C26.2665,11.9266034 25.972319,11.2746983 25.3839569,10.7993017 C24.7955948,10.3239052 23.9977759,10.0862069 22.9905,10.0862069 C22.2373966,10.0862069 21.5619569,10.2085862 20.964181,10.4533448 C20.3664052,10.6981034 19.8745345,11.0464138 19.488569,11.4982759 L19.488569,11.4982759 L20.2087241,12.1195862 C20.8488621,11.3853103 21.7478793,11.0181724 22.9057759,11.0181724 C23.6494655,11.0181724 24.2213534,11.1805603 24.6214397,11.5053362 C25.0215259,11.8301121 25.221569,12.2843276 25.221569,12.8679828 C25.221569,13.2445345 25.1297845,13.6187328 24.9462155,13.9905776 C24.7626466,14.3624224 24.4119828,14.8025172 23.8942241,15.3108621 L23.8942241,15.3108621 L19.7851034,19.3352586 L19.7851034,20.0554138 L26.7183621,20.0554138 Z M31.9288966,20.1401379 C32.6914138,20.1401379 33.3715603,19.9377414 33.9693362,19.5329483 C34.5671121,19.1281552 35.0354483,18.5468534 35.3743448,17.7890431 C35.7132414,17.0312328 35.8826897,16.1392759 35.8826897,15.1131724 C35.8826897,14.087069 35.7132414,13.1951121 35.3743448,12.4373017 C35.0354483,11.6794914 34.5671121,11.0981897 33.9693362,10.6933966 C33.3715603,10.2886034 32.6914138,10.0862069 31.9288966,10.0862069 C31.1663793,10.0862069 30.4862328,10.2886034 29.8884569,10.6933966 C29.290681,11.0981897 28.8246983,11.6794914 28.4905086,12.4373017 C28.156319,13.1951121 27.9892241,14.087069 27.9892241,15.1131724 C27.9892241,16.1392759 28.156319,17.0312328 28.4905086,17.7890431 C28.8246983,18.5468534 29.290681,19.1281552 29.8884569,19.5329483 C30.4862328,19.9377414 31.1663793,20.1401379 31.9288966,20.1401379 Z M31.9288966,19.2081724 C31.3546552,19.2081724 30.8486638,19.0481379 30.4109224,18.728069 C29.973181,18.408 29.631931,17.9420172 29.3871724,17.3301207 C29.1424138,16.7182241 29.0200345,15.9792414 29.0200345,15.1131724 C29.0200345,14.2471034 29.1424138,13.5081207 29.3871724,12.8962241 C29.631931,12.2843276 29.973181,11.8183448 30.4109224,11.4982759 C30.8486638,11.1782069 31.3546552,11.0181724 31.9288966,11.0181724 C32.5031379,11.0181724 33.0091293,11.1782069 33.4468707,11.4982759 C33.8846121,11.8183448 34.2258621,12.2843276 34.4706207,12.8962241 C34.7153793,13.5081207 34.8377586,14.2471034 34.8377586,15.1131724 C34.8377586,15.9792414 34.7153793,16.7182241 34.4706207,17.3301207 C34.2258621,17.9420172 33.8846121,18.408 33.4468707,18.728069 C33.0091293,19.0481379 32.5031379,19.2081724 31.9288966,19.2081724 Z M39.0033621,22.7948276 L39.0033621,18.6574655 C39.3140172,19.137569 39.71175,19.5023534 40.1965603,19.751819 C40.6813707,20.0012845 41.2250172,20.1260172 41.8275,20.1260172 C42.5335345,20.1260172 43.1666121,19.9683362 43.7267328,19.6529741 C44.2868534,19.3376121 44.7269483,18.8928103 45.0470172,18.318569 C45.3670862,17.7443276 45.5271207,17.0853621 45.5271207,16.3416724 C45.5271207,15.6073966 45.3670862,14.9531379 45.0470172,14.3788966 C44.7269483,13.8046552 44.2845,13.3598534 43.7196724,13.0444914 C43.1548448,12.7291293 42.5241207,12.5714483 41.8275,12.5714483 C41.2061897,12.5714483 40.6484224,12.7032414 40.1541983,12.9668276 C39.6599741,13.2304138 39.2622414,13.6069655 38.961,14.0964828 L38.961,14.0964828 L38.961,12.627931 L38.0007931,12.627931 L38.0007931,22.7948276 L39.0033621,22.7948276 Z M41.7568966,19.2364138 C41.2297241,19.2364138 40.756681,19.1163879 40.3377672,18.8763362 C39.9188534,18.6362845 39.5893707,18.2950345 39.349319,17.8525862 C39.1092672,17.4101379 38.9892414,16.9065 38.9892414,16.3416724 C38.9892414,15.7768448 39.1092672,15.2755603 39.349319,14.837819 C39.5893707,14.4000776 39.9188534,14.0588276 40.3377672,13.814069 C40.756681,13.5693103 41.2297241,13.446931 41.7568966,13.446931 C42.2746552,13.446931 42.7453448,13.5693103 43.1689655,13.814069 C43.5925862,14.0588276 43.9244224,14.4000776 44.1644741,14.837819 C44.4045259,15.2755603 44.5245517,15.7768448 44.5245517,16.3416724 C44.5245517,16.9065 44.4045259,17.4101379 44.1644741,17.8525862 C43.9244224,18.2950345 43.5925862,18.6362845 43.1689655,18.8763362 C42.7453448,19.1163879 42.2746552,19.2364138 41.7568966,19.2364138 Z M48.5771897,22.7948276 L48.5771897,18.6574655 C48.8878448,19.137569 49.2855776,19.5023534 49.7703879,19.751819 C50.2551983,20.0012845 50.7988448,20.1260172 51.4013276,20.1260172 C52.1073621,20.1260172 52.7404397,19.9683362 53.3005603,19.6529741 C53.860681,19.3376121 54.3007759,18.8928103 54.6208448,18.318569 C54.9409138,17.7443276 55.1009483,17.0853621 55.1009483,16.3416724 C55.1009483,15.6073966 54.9409138,14.9531379 54.6208448,14.3788966 C54.3007759,13.8046552 53.8583276,13.3598534 53.2935,13.0444914 C52.7286724,12.7291293 52.0979483,12.5714483 51.4013276,12.5714483 C50.7800172,12.5714483 50.22225,12.7032414 49.7280259,12.9668276 C49.2338017,13.2304138 48.836069,13.6069655 48.5348276,14.0964828 L48.5348276,14.0964828 L48.5348276,12.627931 L47.5746207,12.627931 L47.5746207,22.7948276 L48.5771897,22.7948276 Z M51.3307241,19.2364138 C50.8035517,19.2364138 50.3305086,19.1163879 49.9115948,18.8763362 C49.492681,18.6362845 49.1631983,18.2950345 48.9231466,17.8525862 C48.6830948,17.4101379 48.563069,16.9065 48.563069,16.3416724 C48.563069,15.7768448 48.6830948,15.2755603 48.9231466,14.837819 C49.1631983,14.4000776 49.492681,14.0588276 49.9115948,13.814069 C50.3305086,13.5693103 50.8035517,13.446931 51.3307241,13.446931 C51.8484828,13.446931 52.3191724,13.5693103 52.7427931,13.814069 C53.1664138,14.0588276 53.49825,14.4000776 53.7383017,14.837819 C53.9783534,15.2755603 54.0983793,15.7768448 54.0983793,16.3416724 C54.0983793,16.9065 53.9783534,17.4101379 53.7383017,17.8525862 C53.49825,18.2950345 53.1664138,18.6362845 52.7427931,18.8763362 C52.3191724,19.1163879 51.8484828,19.2364138 51.3307241,19.2364138 Z\",\"id\":\"+20pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"67.1082895\",\"height\":\"32.211979\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-11\",\"transform\":\"translate(278.856592, 257.695832)\",\"key\":14},[React.createElement(\"path\",{\"d\":\"M17.6367414,18.1067586 L17.6367414,15.5367931 L20.2631897,15.5367931 L20.2631897,14.7036724 L17.6367414,14.7036724 L17.6367414,12.1195862 L16.7471379,12.1195862 L16.7471379,14.7036724 L14.1206897,14.7036724 L14.1206897,15.5367931 L16.7471379,15.5367931 L16.7471379,18.1067586 L17.6367414,18.1067586 Z M24.7253276,20.0554138 L24.7253276,10.170931 L21.3787241,10.170931 L21.3787241,11.0746552 L23.7086379,11.0746552 L23.7086379,20.0554138 L24.7253276,20.0554138 Z M29.6958103,20.1401379 C30.5995345,20.1401379 31.3902931,19.9448017 32.0680862,19.5541293 C32.7458793,19.1634569 33.2730517,18.5868621 33.6496034,17.8243448 C34.0261552,17.0618276 34.214431,16.1298621 34.214431,15.0284483 C34.214431,13.4563448 33.8661207,12.2396121 33.1695,11.37825 C32.4728793,10.5168879 31.4703103,10.0862069 30.1617931,10.0862069 C29.5216552,10.0862069 28.9450603,10.2109397 28.4320086,10.4604052 C27.9189569,10.7098707 27.5165172,11.0652414 27.2246897,11.5265172 C26.9328621,11.9877931 26.7869483,12.5196724 26.7869483,13.1221552 C26.7869483,13.7152241 26.9281552,14.2353362 27.210569,14.6824914 C27.4929828,15.1296466 27.8860086,15.4756034 28.3896466,15.7203621 C28.8932845,15.9651207 29.4698793,16.0875 30.119431,16.0875 C30.8160517,16.0875 31.4326552,15.9392328 31.9692414,15.6426983 C32.5058276,15.3461638 32.8965,14.9296034 33.1412586,14.3930172 C33.1695,14.6848448 33.1836207,14.9531379 33.1836207,15.1978966 C33.1836207,16.5158276 32.8729655,17.52075 32.2516552,18.2126638 C31.6303448,18.9045776 30.7736897,19.2505345 29.6816897,19.2505345 C28.8721034,19.2505345 28.2319655,19.0952069 27.7612759,18.7845517 L27.7612759,18.7845517 L27.3517759,19.6035517 C27.935431,19.9612759 28.7167759,20.1401379 29.6958103,20.1401379 Z M30.2747586,15.2261379 C29.5122414,15.2261379 28.9074052,15.0331552 28.46025,14.6471897 C28.0130948,14.2612241 27.7895172,13.7434655 27.7895172,13.0939138 C27.7895172,12.4443621 28.0130948,11.92425 28.46025,11.5335776 C28.9074052,11.1429052 29.4887069,10.947569 30.2041552,10.947569 C30.7501552,10.947569 31.2208448,11.0464138 31.6162241,11.2441034 C32.0116034,11.4417931 32.3104914,11.7006724 32.5128879,12.0207414 C32.7152845,12.3408103 32.8164828,12.6891207 32.8164828,13.0656724 C32.8164828,13.4704655 32.7082241,13.8376034 32.4917069,14.1670862 C32.2751897,14.496569 31.9763017,14.7554483 31.5950431,14.9437241 C31.2137845,15.132 30.7736897,15.2261379 30.2747586,15.2261379 Z M37.3492241,22.7948276 L37.3492241,18.6574655 C37.6598793,19.137569 38.0576121,19.5023534 38.5424224,19.751819 C39.0272328,20.0012845 39.5708793,20.1260172 40.1733621,20.1260172 C40.8793966,20.1260172 41.5124741,19.9683362 42.0725948,19.6529741 C42.6327155,19.3376121 43.0728103,18.8928103 43.3928793,18.318569 C43.7129483,17.7443276 43.8729828,17.0853621 43.8729828,16.3416724 C43.8729828,15.6073966 43.7129483,14.9531379 43.3928793,14.3788966 C43.0728103,13.8046552 42.6303621,13.3598534 42.0655345,13.0444914 C41.5007069,12.7291293 40.8699828,12.5714483 40.1733621,12.5714483 C39.5520517,12.5714483 38.9942845,12.7032414 38.5000603,12.9668276 C38.0058362,13.2304138 37.6081034,13.6069655 37.3068621,14.0964828 L37.3068621,14.0964828 L37.3068621,12.627931 L36.3466552,12.627931 L36.3466552,22.7948276 L37.3492241,22.7948276 Z M40.1027586,19.2364138 C39.5755862,19.2364138 39.1025431,19.1163879 38.6836293,18.8763362 C38.2647155,18.6362845 37.9352328,18.2950345 37.695181,17.8525862 C37.4551293,17.4101379 37.3351034,16.9065 37.3351034,16.3416724 C37.3351034,15.7768448 37.4551293,15.2755603 37.695181,14.837819 C37.9352328,14.4000776 38.2647155,14.0588276 38.6836293,13.814069 C39.1025431,13.5693103 39.5755862,13.446931 40.1027586,13.446931 C40.6205172,13.446931 41.0912069,13.5693103 41.5148276,13.814069 C41.9384483,14.0588276 42.2702845,14.4000776 42.5103362,14.837819 C42.7503879,15.2755603 42.8704138,15.7768448 42.8704138,16.3416724 C42.8704138,16.9065 42.7503879,17.4101379 42.5103362,17.8525862 C42.2702845,18.2950345 41.9384483,18.6362845 41.5148276,18.8763362 C41.0912069,19.1163879 40.6205172,19.2364138 40.1027586,19.2364138 Z M46.9230517,22.7948276 L46.9230517,18.6574655 C47.2337069,19.137569 47.6314397,19.5023534 48.11625,19.751819 C48.6010603,20.0012845 49.1447069,20.1260172 49.7471897,20.1260172 C50.4532241,20.1260172 51.0863017,19.9683362 51.6464224,19.6529741 C52.2065431,19.3376121 52.6466379,18.8928103 52.9667069,18.318569 C53.2867759,17.7443276 53.4468103,17.0853621 53.4468103,16.3416724 C53.4468103,15.6073966 53.2867759,14.9531379 52.9667069,14.3788966 C52.6466379,13.8046552 52.2041897,13.3598534 51.6393621,13.0444914 C51.0745345,12.7291293 50.4438103,12.5714483 49.7471897,12.5714483 C49.1258793,12.5714483 48.5681121,12.7032414 48.0738879,12.9668276 C47.5796638,13.2304138 47.181931,13.6069655 46.8806897,14.0964828 L46.8806897,14.0964828 L46.8806897,12.627931 L45.9204828,12.627931 L45.9204828,22.7948276 L46.9230517,22.7948276 Z M49.6765862,19.2364138 C49.1494138,19.2364138 48.6763707,19.1163879 48.2574569,18.8763362 C47.8385431,18.6362845 47.5090603,18.2950345 47.2690086,17.8525862 C47.0289569,17.4101379 46.908931,16.9065 46.908931,16.3416724 C46.908931,15.7768448 47.0289569,15.2755603 47.2690086,14.837819 C47.5090603,14.4000776 47.8385431,14.0588276 48.2574569,13.814069 C48.6763707,13.5693103 49.1494138,13.446931 49.6765862,13.446931 C50.1943448,13.446931 50.6650345,13.5693103 51.0886552,13.814069 C51.5122759,14.0588276 51.8441121,14.4000776 52.0841638,14.837819 C52.3242155,15.2755603 52.4442414,15.7768448 52.4442414,16.3416724 C52.4442414,16.9065 52.3242155,17.4101379 52.0841638,17.8525862 C51.8441121,18.2950345 51.5122759,18.6362845 51.0886552,18.8763362 C50.6650345,19.1163879 50.1943448,19.2364138 49.6765862,19.2364138 Z\",\"id\":\"+19pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"67.1082895\",\"height\":\"32.211979\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"path\",{\"d\":\"M206.77531,54.045931 C207.571448,54.045931 208.294966,53.8926207 208.945862,53.586 C209.596759,53.2793793 210.110483,52.8409655 210.487034,52.2707586 C210.863586,51.7005517 211.051862,51.0388966 211.051862,50.2857931 C211.051862,49.5864828 210.879724,48.9705517 210.535448,48.438 C210.191172,47.9054483 209.723172,47.493931 209.131448,47.2034483 C208.539724,46.9129655 207.883448,46.7677241 207.162621,46.7677241 C205.968414,46.7677241 205.037793,47.1012414 204.370759,47.7682759 C204.413793,46.7031724 204.715034,45.8908966 205.274483,45.3314483 C205.833931,44.772 206.592414,44.4922759 207.549931,44.4922759 C208.399862,44.4922759 209.104552,44.6805517 209.664,45.0571034 L209.664,45.0571034 L210.632276,43.1366897 C210.244966,42.8892414 209.774276,42.6982759 209.220207,42.5637931 C208.666138,42.4293103 208.087862,42.362069 207.485379,42.362069 C206.344966,42.362069 205.341724,42.5987586 204.475655,43.0721379 C203.609586,43.5455172 202.934483,44.2394483 202.450345,45.153931 C201.966207,46.0684138 201.724138,47.1657931 201.724138,48.446069 C201.724138,50.2427586 202.170621,51.6252414 203.063586,52.5935172 C203.956552,53.5617931 205.193793,54.045931 206.77531,54.045931 Z M206.630069,52.0932414 C206.016828,52.0932414 205.53269,51.9372414 205.177655,51.6252414 C204.822621,51.3132414 204.645103,50.9097931 204.645103,50.4148966 C204.645103,49.92 204.828,49.5138621 205.193793,49.1964828 C205.559586,48.8791034 206.027586,48.7204138 206.597793,48.7204138 C207.178759,48.7204138 207.644069,48.8737241 207.993724,49.1803448 C208.343379,49.4869655 208.518207,49.8984828 208.518207,50.4148966 C208.518207,50.9313103 208.343379,51.3401379 207.993724,51.6413793 C207.644069,51.9426207 207.189517,52.0932414 206.630069,52.0932414 Z M216.845379,54.045931 C217.781379,54.045931 218.615172,53.8146207 219.346759,53.352 C220.078345,52.8893793 220.651241,52.2196552 221.065448,51.3428276 C221.479655,50.466 221.686759,49.4197241 221.686759,48.204 C221.686759,46.9882759 221.479655,45.942 221.065448,45.0651724 C220.651241,44.1883448 220.078345,43.5186207 219.346759,43.056 C218.615172,42.5933793 217.781379,42.362069 216.845379,42.362069 C215.909379,42.362069 215.075586,42.5933793 214.344,43.056 C213.612414,43.5186207 213.039517,44.1883448 212.62531,45.0651724 C212.211103,45.942 212.004,46.9882759 212.004,48.204 C212.004,49.4197241 212.211103,50.466 212.62531,51.3428276 C213.039517,52.2196552 213.612414,52.8893793 214.344,53.352 C215.075586,53.8146207 215.909379,54.045931 216.845379,54.045931 Z M216.845379,51.8350345 C216.167586,51.8350345 215.632345,51.5391724 215.239655,50.9474483 C214.846966,50.3557241 214.650621,49.4412414 214.650621,48.204 C214.650621,46.9667586 214.846966,46.0522759 215.239655,45.4605517 C215.632345,44.8688276 216.167586,44.5729655 216.845379,44.5729655 C217.533931,44.5729655 218.074552,44.8688276 218.467241,45.4605517 C218.859931,46.0522759 219.056276,46.9667586 219.056276,48.204 C219.056276,49.4412414 218.859931,50.3557241 218.467241,50.9474483 C218.074552,51.5391724 217.533931,51.8350345 216.845379,51.8350345 Z M225.170534,49.3054138 C225.895397,49.3054138 226.483759,49.0583017 226.935621,48.5640776 C227.387483,48.0698534 227.613414,47.4085345 227.613414,46.5801207 C227.613414,45.7517069 227.387483,45.0903879 226.935621,44.5961638 C226.483759,44.1019397 225.895397,43.8548276 225.170534,43.8548276 C224.445672,43.8548276 223.854957,44.1019397 223.398388,44.5961638 C222.941819,45.0903879 222.713534,45.7517069 222.713534,46.5801207 C222.713534,47.4085345 222.941819,48.0698534 223.398388,48.5640776 C223.854957,49.0583017 224.445672,49.3054138 225.170534,49.3054138 Z M225.989534,53.8522759 L232.739224,43.9677931 L231.058862,43.9677931 L224.309172,53.8522759 L225.989534,53.8522759 Z M225.170534,48.1475172 C224.859879,48.1475172 224.610414,48.0133707 224.422138,47.7450776 C224.233862,47.4767845 224.139724,47.0884655 224.139724,46.5801207 C224.139724,46.0717759 224.233862,45.6834569 224.422138,45.4151638 C224.610414,45.1468707 224.859879,45.0127241 225.170534,45.0127241 C225.490603,45.0127241 225.742422,45.1445172 225.925991,45.4081034 C226.10956,45.6716897 226.201345,46.0623621 226.201345,46.5801207 C226.201345,47.0978793 226.10956,47.4885517 225.925991,47.7521379 C225.742422,48.0157241 225.490603,48.1475172 225.170534,48.1475172 Z M231.877862,53.9652414 C232.602724,53.9652414 233.19344,53.7181293 233.650009,53.2239052 C234.106578,52.729681 234.334862,52.0683621 234.334862,51.2399483 C234.334862,50.4115345 234.106578,49.7502155 233.650009,49.2559914 C233.19344,48.7617672 232.602724,48.5146552 231.877862,48.5146552 C231.407172,48.5146552 230.985905,48.6252672 230.61406,48.8464914 C230.242216,49.0677155 229.952741,49.385431 229.745638,49.7996379 C229.538534,50.2138448 229.434983,50.6939483 229.434983,51.2399483 C229.434983,51.7859483 229.538534,52.2660517 229.745638,52.6802586 C229.952741,53.0944655 230.242216,53.412181 230.61406,53.6334052 C230.985905,53.8546293 231.407172,53.9652414 231.877862,53.9652414 Z M231.877862,52.8073448 C231.567207,52.8073448 231.317741,52.6755517 231.129466,52.4119655 C230.94119,52.1483793 230.847052,51.7577069 230.847052,51.2399483 C230.847052,50.7221897 230.94119,50.3315172 231.129466,50.067931 C231.317741,49.8043448 231.567207,49.6725517 231.877862,49.6725517 C232.197931,49.6725517 232.44975,49.8066983 232.633319,50.0749914 C232.816888,50.3432845 232.908672,50.7316034 232.908672,51.2399483 C232.908672,51.7482931 232.816888,52.1366121 232.633319,52.4049052 C232.44975,52.6731983 232.197931,52.8073448 231.877862,52.8073448 Z\",\"id\":\"60%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":15}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy\",\"fill\":\"#F3F3F3\",\"x\":\"52.0305737\",\"y\":\"0\",\"width\":\"134.216579\",\"height\":\"306.0138\",\"key\":16}),React.createElement(\"g\",{\"id\":\"Group-26-Copy-2\",\"transform\":\"translate(52.448276, 0.000000)\",\"key\":17},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-50\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"52.3444658\",\"height\":\"32.211979\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-51\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32.2758621\",\"width\":\"80.5299475\",\"height\":\"32.211979\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-28-Copy-2\",\"transform\":\"translate(52.448276, 80.689655)\",\"key\":18},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-52\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"63.0817922\",\"height\":\"32.211979\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-53\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32.2758621\",\"width\":\"89.925108\",\"height\":\"32.211979\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-30-Copy-2\",\"transform\":\"translate(52.448276, 161.379310)\",\"key\":19},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-54\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"68.4504553\",\"height\":\"32.211979\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-55\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32.2758621\",\"width\":\"93.9516054\",\"height\":\"32.211979\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-31-Copy-2\",\"transform\":\"translate(52.448276, 242.068966)\",\"key\":20},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-56\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"68.4504553\",\"height\":\"32.211979\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-57\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32.2758621\",\"width\":\"95.2937712\",\"height\":\"32.211979\",\"key\":1})])])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph1Mobile.defaultProps = {\"width\":\"351px\",\"height\":\"308px\",\"viewBox\":\"0 0 351 308\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph1Mobile;\n\nSchoolYearsGapsInAttainmentGraph1Mobile.default = SchoolYearsGapsInAttainmentGraph1Mobile;\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default function stripPrefix(str, prefix = ``) {\n  if (!prefix) {\n    return str\n  }\n\n  if (str === prefix) {\n    return `/`\n  }\n\n  if (str.startsWith(`${prefix}/`)) {\n    return str.slice(prefix.length)\n  }\n\n  return str\n}\n","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph2Mobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 33\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Mobile/Timeline/School-years/Early-years-foundation-stage-Copy\",\"transform\":\"translate(-13.000000, -2187.000000)\"},React.createElement(\"g\",{\"id\":\"Group-33\",\"transform\":\"translate(13.000000, 2187.000000)\"},[React.createElement(\"path\",{\"d\":\"M209.768897,21.392 L209.768897,19.28 L204.911379,19.28 L207.509586,16.848 C208.251931,16.1653333 208.752207,15.5573333 209.010414,15.024 C209.268621,14.4906667 209.397724,13.92 209.397724,13.312 C209.397724,12.64 209.222897,12.056 208.873241,11.56 C208.523586,11.064 208.034069,10.68 207.40469,10.408 C206.77531,10.136 206.041034,10 205.201862,10 C204.20131,10 203.313724,10.184 202.539103,10.552 C201.764483,10.92 201.156621,11.4293333 200.715517,12.08 L200.715517,12.08 L202.619793,13.296 C202.888759,12.9226667 203.222276,12.6426667 203.620345,12.456 C204.018414,12.2693333 204.464897,12.176 204.959793,12.176 C205.551517,12.176 206.00069,12.296 206.30731,12.536 C206.613931,12.776 206.767241,13.12 206.767241,13.568 C206.767241,13.8773333 206.686552,14.1893333 206.525172,14.504 C206.363793,14.8186667 206.051793,15.1946667 205.589172,15.632 L205.589172,15.632 L201.231931,19.712 L201.231931,21.392 L209.768897,21.392 Z M213.059017,16.884 C213.783879,16.884 214.372241,16.639 214.824103,16.149 C215.275966,15.659 215.501897,15.0033333 215.501897,14.182 C215.501897,13.3606667 215.275966,12.705 214.824103,12.215 C214.372241,11.725 213.783879,11.48 213.059017,11.48 C212.334155,11.48 211.74344,11.725 211.286871,12.215 C210.830302,12.705 210.602017,13.3606667 210.602017,14.182 C210.602017,15.0033333 210.830302,15.659 211.286871,16.149 C211.74344,16.639 212.334155,16.884 213.059017,16.884 Z M213.878017,21.392 L220.627707,11.592 L218.947345,11.592 L212.197655,21.392 L213.878017,21.392 Z M213.059017,15.736 C212.748362,15.736 212.498897,15.603 212.310621,15.337 C212.122345,15.071 212.028207,14.686 212.028207,14.182 C212.028207,13.678 212.122345,13.293 212.310621,13.027 C212.498897,12.761 212.748362,12.628 213.059017,12.628 C213.379086,12.628 213.630905,12.7586667 213.814474,13.02 C213.998043,13.2813333 214.089828,13.6686667 214.089828,14.182 C214.089828,14.6953333 213.998043,15.0826667 213.814474,15.344 C213.630905,15.6053333 213.379086,15.736 213.059017,15.736 Z M219.766345,21.504 C220.491207,21.504 221.081922,21.259 221.538491,20.769 C221.99506,20.279 222.223345,19.6233333 222.223345,18.802 C222.223345,17.9806667 221.99506,17.325 221.538491,16.835 C221.081922,16.345 220.491207,16.1 219.766345,16.1 C219.295655,16.1 218.874388,16.2096667 218.502543,16.429 C218.130698,16.6483333 217.841224,16.9633333 217.634121,17.374 C217.427017,17.7846667 217.323466,18.2606667 217.323466,18.802 C217.323466,19.3433333 217.427017,19.8193333 217.634121,20.23 C217.841224,20.6406667 218.130698,20.9556667 218.502543,21.175 C218.874388,21.3943333 219.295655,21.504 219.766345,21.504 Z M219.766345,20.356 C219.45569,20.356 219.206224,20.2253333 219.017948,19.964 C218.829672,19.7026667 218.735534,19.3153333 218.735534,18.802 C218.735534,18.2886667 218.829672,17.9013333 219.017948,17.64 C219.206224,17.3786667 219.45569,17.248 219.766345,17.248 C220.086414,17.248 220.338233,17.381 220.521802,17.647 C220.705371,17.913 220.797155,18.298 220.797155,18.802 C220.797155,19.306 220.705371,19.691 220.521802,19.957 C220.338233,20.223 220.086414,20.356 219.766345,20.356 Z\",\"id\":\"2%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M9.27124138,37.296 L9.27124138,36.272 L3.05813793,36.272 L6.89896552,32.528 C7.6197931,31.8346667 8.10931034,31.2213333 8.36751724,30.688 C8.62572414,30.1546667 8.75482759,29.6 8.75482759,29.024 C8.75482759,28.0853333 8.41862069,27.3466667 7.7462069,26.808 C7.0737931,26.2693333 6.162,26 5.01082759,26 C4.15013793,26 3.3782069,26.1386667 2.69503448,26.416 C2.01186207,26.6933333 1.44972414,27.088 1.00862069,27.6 L1.00862069,27.6 L1.83165517,28.304 C2.56324138,27.472 3.59068966,27.056 4.914,27.056 C5.76393103,27.056 6.41751724,27.24 6.87475862,27.608 C7.332,27.976 7.56062069,28.4906667 7.56062069,29.152 C7.56062069,29.5786667 7.45572414,30.0026667 7.24593103,30.424 C7.03613793,30.8453333 6.63537931,31.344 6.04365517,31.92 L6.04365517,31.92 L1.34751724,36.48 L1.34751724,37.296 L9.27124138,37.296 Z M15.2261379,37.392 C16.0975862,37.392 16.8748966,37.1626667 17.558069,36.704 C18.2412414,36.2453333 18.7764828,35.5866667 19.1637931,34.728 C19.5511034,33.8693333 19.7447586,32.8586667 19.7447586,31.696 C19.7447586,30.5333333 19.5511034,29.5226667 19.1637931,28.664 C18.7764828,27.8053333 18.2412414,27.1466667 17.558069,26.688 C16.8748966,26.2293333 16.0975862,26 15.2261379,26 C14.3546897,26 13.5773793,26.2293333 12.8942069,26.688 C12.2110345,27.1466667 11.6784828,27.8053333 11.2965517,28.664 C10.9146207,29.5226667 10.7236552,30.5333333 10.7236552,31.696 C10.7236552,32.8586667 10.9146207,33.8693333 11.2965517,34.728 C11.6784828,35.5866667 12.2110345,36.2453333 12.8942069,36.704 C13.5773793,37.1626667 14.3546897,37.392 15.2261379,37.392 Z M15.2261379,36.336 C14.5698621,36.336 13.9915862,36.1546667 13.4913103,35.792 C12.9910345,35.4293333 12.6010345,34.9013333 12.3213103,34.208 C12.0415862,33.5146667 11.9017241,32.6773333 11.9017241,31.696 C11.9017241,30.7146667 12.0415862,29.8773333 12.3213103,29.184 C12.6010345,28.4906667 12.9910345,27.9626667 13.4913103,27.6 C13.9915862,27.2373333 14.5698621,27.056 15.2261379,27.056 C15.8824138,27.056 16.4606897,27.2373333 16.9609655,27.6 C17.4612414,27.9626667 17.8512414,28.4906667 18.1309655,29.184 C18.4106897,29.8773333 18.5505517,30.7146667 18.5505517,31.696 C18.5505517,32.6773333 18.4106897,33.5146667 18.1309655,34.208 C17.8512414,34.9013333 17.4612414,35.4293333 16.9609655,35.792 C16.4606897,36.1546667 15.8824138,36.336 15.2261379,36.336 Z M24.5377241,37.296 L24.5377241,26.096 L20.7130345,26.096 L20.7130345,27.12 L23.3757931,27.12 L23.3757931,37.296 L24.5377241,37.296 Z M31.8643448,37.392 C32.595931,37.392 33.2548966,37.2506667 33.8412414,36.968 C34.4275862,36.6853333 34.8875172,36.2826667 35.2210345,35.76 C35.5545517,35.2373333 35.7213103,34.6346667 35.7213103,33.952 C35.7213103,33.28 35.559931,32.6906667 35.2371724,32.184 C34.9144138,31.6773333 34.4652414,31.2853333 33.8896552,31.008 C33.314069,30.7306667 32.6551034,30.592 31.9127586,30.592 C31.1166207,30.592 30.411931,30.76 29.7986897,31.096 C29.1854483,31.432 28.7389655,31.904 28.4592414,32.512 C28.4269655,32.1706667 28.4108276,31.8666667 28.4108276,31.6 C28.4108276,30.1066667 28.7658621,28.968 29.475931,28.184 C30.186,27.4 31.1650345,27.008 32.4130345,27.008 C33.3382759,27.008 34.0698621,27.184 34.6077931,27.536 L34.6077931,27.536 L35.0757931,26.608 C34.4087586,26.2026667 33.5157931,26 32.3968966,26 C31.364069,26 30.4603448,26.2213333 29.6857241,26.664 C28.9111034,27.1066667 28.3086207,27.76 27.8782759,28.624 C27.447931,29.488 27.2327586,30.544 27.2327586,31.792 C27.2327586,33.5733333 27.6308276,34.952 28.4269655,35.928 C29.2231034,36.904 30.3688966,37.392 31.8643448,37.392 Z M31.815931,36.416 C31.191931,36.416 30.654,36.304 30.2021379,36.08 C29.7502759,35.856 29.4086897,35.5626667 29.1773793,35.2 C28.946069,34.8373333 28.8304138,34.4426667 28.8304138,34.016 C28.8304138,33.5573333 28.9541379,33.1413333 29.2015862,32.768 C29.4490345,32.3946667 29.7906207,32.1013333 30.2263448,31.888 C30.662069,31.6746667 31.1650345,31.568 31.7352414,31.568 C32.6066897,31.568 33.297931,31.7866667 33.8089655,32.224 C34.32,32.6613333 34.5755172,33.248 34.5755172,33.984 C34.5755172,34.72 34.32,35.3093333 33.8089655,35.752 C33.297931,36.1946667 32.6335862,36.416 31.815931,36.416 Z\",\"id\":\"2016\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M9.27124138,117.296 L9.27124138,116.272 L3.05813793,116.272 L6.89896552,112.528 C7.6197931,111.834667 8.10931034,111.221333 8.36751724,110.688 C8.62572414,110.154667 8.75482759,109.6 8.75482759,109.024 C8.75482759,108.085333 8.41862069,107.346667 7.7462069,106.808 C7.0737931,106.269333 6.162,106 5.01082759,106 C4.15013793,106 3.3782069,106.138667 2.69503448,106.416 C2.01186207,106.693333 1.44972414,107.088 1.00862069,107.6 L1.00862069,107.6 L1.83165517,108.304 C2.56324138,107.472 3.59068966,107.056 4.914,107.056 C5.76393103,107.056 6.41751724,107.24 6.87475862,107.608 C7.332,107.976 7.56062069,108.490667 7.56062069,109.152 C7.56062069,109.578667 7.45572414,110.002667 7.24593103,110.424 C7.03613793,110.845333 6.63537931,111.344 6.04365517,111.92 L6.04365517,111.92 L1.34751724,116.48 L1.34751724,117.296 L9.27124138,117.296 Z M15.2261379,117.392 C16.0975862,117.392 16.8748966,117.162667 17.558069,116.704 C18.2412414,116.245333 18.7764828,115.586667 19.1637931,114.728 C19.5511034,113.869333 19.7447586,112.858667 19.7447586,111.696 C19.7447586,110.533333 19.5511034,109.522667 19.1637931,108.664 C18.7764828,107.805333 18.2412414,107.146667 17.558069,106.688 C16.8748966,106.229333 16.0975862,106 15.2261379,106 C14.3546897,106 13.5773793,106.229333 12.8942069,106.688 C12.2110345,107.146667 11.6784828,107.805333 11.2965517,108.664 C10.9146207,109.522667 10.7236552,110.533333 10.7236552,111.696 C10.7236552,112.858667 10.9146207,113.869333 11.2965517,114.728 C11.6784828,115.586667 12.2110345,116.245333 12.8942069,116.704 C13.5773793,117.162667 14.3546897,117.392 15.2261379,117.392 Z M15.2261379,116.336 C14.5698621,116.336 13.9915862,116.154667 13.4913103,115.792 C12.9910345,115.429333 12.6010345,114.901333 12.3213103,114.208 C12.0415862,113.514667 11.9017241,112.677333 11.9017241,111.696 C11.9017241,110.714667 12.0415862,109.877333 12.3213103,109.184 C12.6010345,108.490667 12.9910345,107.962667 13.4913103,107.6 C13.9915862,107.237333 14.5698621,107.056 15.2261379,107.056 C15.8824138,107.056 16.4606897,107.237333 16.9609655,107.6 C17.4612414,107.962667 17.8512414,108.490667 18.1309655,109.184 C18.4106897,109.877333 18.5505517,110.714667 18.5505517,111.696 C18.5505517,112.677333 18.4106897,113.514667 18.1309655,114.208 C17.8512414,114.901333 17.4612414,115.429333 16.9609655,115.792 C16.4606897,116.154667 15.8824138,116.336 15.2261379,116.336 Z M24.5377241,117.296 L24.5377241,106.096 L20.7130345,106.096 L20.7130345,107.12 L23.3757931,107.12 L23.3757931,117.296 L24.5377241,117.296 Z M30.4764828,117.296 L35.2048966,106.912 L35.2048966,106.096 L26.91,106.096 L26.91,109.216 L28.0557931,109.216 L28.0557931,107.12 L33.8654483,107.12 L29.2177241,117.296 L30.4764828,117.296 Z\",\"id\":\"2017\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M8.26262069,197.296 L8.26262069,196.272 L2.04951724,196.272 L5.89034483,192.528 C6.61117241,191.834667 7.10068966,191.221333 7.35889655,190.688 C7.61710345,190.154667 7.7462069,189.6 7.7462069,189.024 C7.7462069,188.085333 7.41,187.346667 6.73758621,186.808 C6.06517241,186.269333 5.15337931,186 4.0022069,186 C3.14151724,186 2.36958621,186.138667 1.68641379,186.416 C1.00324138,186.693333 0.441103448,187.088 9.17335173e-13,187.6 L9.17335173e-13,187.6 L0.823034483,188.304 C1.55462069,187.472 2.58206897,187.056 3.90537931,187.056 C4.75531034,187.056 5.40889655,187.24 5.86613793,187.608 C6.32337931,187.976 6.552,188.490667 6.552,189.152 C6.552,189.578667 6.44710345,190.002667 6.23731034,190.424 C6.02751724,190.845333 5.62675862,191.344 5.03503448,191.92 L5.03503448,191.92 L0.338896552,196.48 L0.338896552,197.296 L8.26262069,197.296 Z M14.2175172,197.392 C15.0889655,197.392 15.8662759,197.162667 16.5494483,196.704 C17.2326207,196.245333 17.7678621,195.586667 18.1551724,194.728 C18.5424828,193.869333 18.7361379,192.858667 18.7361379,191.696 C18.7361379,190.533333 18.5424828,189.522667 18.1551724,188.664 C17.7678621,187.805333 17.2326207,187.146667 16.5494483,186.688 C15.8662759,186.229333 15.0889655,186 14.2175172,186 C13.346069,186 12.5687586,186.229333 11.8855862,186.688 C11.2024138,187.146667 10.6698621,187.805333 10.287931,188.664 C9.906,189.522667 9.71503448,190.533333 9.71503448,191.696 C9.71503448,192.858667 9.906,193.869333 10.287931,194.728 C10.6698621,195.586667 11.2024138,196.245333 11.8855862,196.704 C12.5687586,197.162667 13.346069,197.392 14.2175172,197.392 Z M14.2175172,196.336 C13.5612414,196.336 12.9829655,196.154667 12.4826897,195.792 C11.9824138,195.429333 11.5924138,194.901333 11.3126897,194.208 C11.0329655,193.514667 10.8931034,192.677333 10.8931034,191.696 C10.8931034,190.714667 11.0329655,189.877333 11.3126897,189.184 C11.5924138,188.490667 11.9824138,187.962667 12.4826897,187.6 C12.9829655,187.237333 13.5612414,187.056 14.2175172,187.056 C14.8737931,187.056 15.452069,187.237333 15.9523448,187.6 C16.4526207,187.962667 16.8426207,188.490667 17.1223448,189.184 C17.402069,189.877333 17.541931,190.714667 17.541931,191.696 C17.541931,192.677333 17.402069,193.514667 17.1223448,194.208 C16.8426207,194.901333 16.4526207,195.429333 15.9523448,195.792 C15.452069,196.154667 14.8737931,196.336 14.2175172,196.336 Z M23.5291034,197.296 L23.5291034,186.096 L19.7044138,186.096 L19.7044138,187.12 L22.3671724,187.12 L22.3671724,197.296 L23.5291034,197.296 Z M30.5168276,197.392 C31.4097931,197.392 32.1871034,197.261333 32.8487586,197 C33.5104138,196.738667 34.0187586,196.365333 34.3737931,195.88 C34.7288276,195.394667 34.9063448,194.826667 34.9063448,194.176 C34.9063448,193.514667 34.7153793,192.949333 34.3334483,192.48 C33.9515172,192.010667 33.4055172,191.658667 32.6954483,191.424 C33.2764138,191.2 33.7228966,190.877333 34.0348966,190.456 C34.3468966,190.034667 34.5028966,189.536 34.5028966,188.96 C34.5028966,188.362667 34.3361379,187.84 34.0026207,187.392 C33.6691034,186.944 33.2037931,186.6 32.6066897,186.36 C32.0095862,186.12 31.3129655,186 30.5168276,186 C29.3118621,186 28.3516552,186.266667 27.6362069,186.8 C26.9207586,187.333333 26.5630345,188.053333 26.5630345,188.96 C26.5630345,189.536 26.7136552,190.034667 27.0148966,190.456 C27.3161379,190.877333 27.7572414,191.2 28.3382069,191.424 C27.6281379,191.658667 27.0875172,192.008 26.7163448,192.472 C26.3451724,192.936 26.1595862,193.504 26.1595862,194.176 C26.1595862,195.168 26.5468966,195.952 27.3215172,196.528 C28.0961379,197.104 29.1612414,197.392 30.5168276,197.392 Z M30.5168276,191.008 C29.6453793,191.008 28.9622069,190.826667 28.4673103,190.464 C27.9724138,190.101333 27.7249655,189.610667 27.7249655,188.992 C27.7249655,188.373333 27.9751034,187.882667 28.4753793,187.52 C28.9756552,187.157333 29.6561379,186.976 30.5168276,186.976 C31.3667586,186.976 32.0472414,187.157333 32.5582759,187.52 C33.0693103,187.882667 33.3248276,188.378667 33.3248276,189.008 C33.3248276,189.616 33.0746897,190.101333 32.5744138,190.464 C32.0741379,190.826667 31.3882759,191.008 30.5168276,191.008 Z M30.5168276,196.416 C29.5162759,196.416 28.7362759,196.216 28.1768276,195.816 C27.6173793,195.416 27.3376552,194.864 27.3376552,194.16 C27.3376552,193.466667 27.620069,192.92 28.1848966,192.52 C28.7497241,192.12 29.5270345,191.92 30.5168276,191.92 C31.5173793,191.92 32.300069,192.12 32.8648966,192.52 C33.4297241,192.92 33.7121379,193.466667 33.7121379,194.16 C33.7121379,194.853333 33.4297241,195.402667 32.8648966,195.808 C32.300069,196.213333 31.5173793,196.416 30.5168276,196.416 Z\",\"id\":\"2018\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M9.27124138,277.296 L9.27124138,276.272 L3.05813793,276.272 L6.89896552,272.528 C7.6197931,271.834667 8.10931034,271.221333 8.36751724,270.688 C8.62572414,270.154667 8.75482759,269.6 8.75482759,269.024 C8.75482759,268.085333 8.41862069,267.346667 7.7462069,266.808 C7.0737931,266.269333 6.162,266 5.01082759,266 C4.15013793,266 3.3782069,266.138667 2.69503448,266.416 C2.01186207,266.693333 1.44972414,267.088 1.00862069,267.6 L1.00862069,267.6 L1.83165517,268.304 C2.56324138,267.472 3.59068966,267.056 4.914,267.056 C5.76393103,267.056 6.41751724,267.24 6.87475862,267.608 C7.332,267.976 7.56062069,268.490667 7.56062069,269.152 C7.56062069,269.578667 7.45572414,270.002667 7.24593103,270.424 C7.03613793,270.845333 6.63537931,271.344 6.04365517,271.92 L6.04365517,271.92 L1.34751724,276.48 L1.34751724,277.296 L9.27124138,277.296 Z M15.2261379,277.392 C16.0975862,277.392 16.8748966,277.162667 17.558069,276.704 C18.2412414,276.245333 18.7764828,275.586667 19.1637931,274.728 C19.5511034,273.869333 19.7447586,272.858667 19.7447586,271.696 C19.7447586,270.533333 19.5511034,269.522667 19.1637931,268.664 C18.7764828,267.805333 18.2412414,267.146667 17.558069,266.688 C16.8748966,266.229333 16.0975862,266 15.2261379,266 C14.3546897,266 13.5773793,266.229333 12.8942069,266.688 C12.2110345,267.146667 11.6784828,267.805333 11.2965517,268.664 C10.9146207,269.522667 10.7236552,270.533333 10.7236552,271.696 C10.7236552,272.858667 10.9146207,273.869333 11.2965517,274.728 C11.6784828,275.586667 12.2110345,276.245333 12.8942069,276.704 C13.5773793,277.162667 14.3546897,277.392 15.2261379,277.392 Z M15.2261379,276.336 C14.5698621,276.336 13.9915862,276.154667 13.4913103,275.792 C12.9910345,275.429333 12.6010345,274.901333 12.3213103,274.208 C12.0415862,273.514667 11.9017241,272.677333 11.9017241,271.696 C11.9017241,270.714667 12.0415862,269.877333 12.3213103,269.184 C12.6010345,268.490667 12.9910345,267.962667 13.4913103,267.6 C13.9915862,267.237333 14.5698621,267.056 15.2261379,267.056 C15.8824138,267.056 16.4606897,267.237333 16.9609655,267.6 C17.4612414,267.962667 17.8512414,268.490667 18.1309655,269.184 C18.4106897,269.877333 18.5505517,270.714667 18.5505517,271.696 C18.5505517,272.677333 18.4106897,273.514667 18.1309655,274.208 C17.8512414,274.901333 17.4612414,275.429333 16.9609655,275.792 C16.4606897,276.154667 15.8824138,276.336 15.2261379,276.336 Z M24.5377241,277.296 L24.5377241,266.096 L20.7130345,266.096 L20.7130345,267.12 L23.3757931,267.12 L23.3757931,277.296 L24.5377241,277.296 Z M30.2182759,277.392 C31.2511034,277.392 32.1548276,277.170667 32.9294483,276.728 C33.704069,276.285333 34.3065517,275.632 34.7368966,274.768 C35.1672414,273.904 35.3824138,272.848 35.3824138,271.6 C35.3824138,269.818667 34.9843448,268.44 34.1882069,267.464 C33.392069,266.488 32.2462759,266 30.7508276,266 C30.0192414,266 29.3602759,266.141333 28.773931,266.424 C28.1875862,266.706667 27.7276552,267.109333 27.3941379,267.632 C27.0606207,268.154667 26.8938621,268.757333 26.8938621,269.44 C26.8938621,270.112 27.0552414,270.701333 27.378,271.208 C27.7007586,271.714667 28.149931,272.106667 28.7255172,272.384 C29.3011034,272.661333 29.960069,272.8 30.7024138,272.8 C31.4985517,272.8 32.2032414,272.632 32.8164828,272.296 C33.4297241,271.96 33.8762069,271.488 34.155931,270.88 C34.1882069,271.210667 34.2043448,271.514667 34.2043448,271.792 C34.2043448,273.285333 33.8493103,274.424 33.1392414,275.208 C32.4291724,275.992 31.4501379,276.384 30.2021379,276.384 C29.2768966,276.384 28.5453103,276.208 28.0073793,275.856 L28.0073793,275.856 L27.5393793,276.784 C28.2064138,277.189333 29.0993793,277.392 30.2182759,277.392 Z M30.879931,271.824 C30.0084828,271.824 29.3172414,271.605333 28.8062069,271.168 C28.2951724,270.730667 28.0396552,270.144 28.0396552,269.408 C28.0396552,268.672 28.2951724,268.082667 28.8062069,267.64 C29.3172414,267.197333 29.9815862,266.976 30.7992414,266.976 C31.4232414,266.976 31.9611724,267.088 32.4130345,267.312 C32.8648966,267.536 33.2064828,267.829333 33.4377931,268.192 C33.6691034,268.554667 33.7847586,268.949333 33.7847586,269.376 C33.7847586,269.834667 33.6610345,270.250667 33.4135862,270.624 C33.1661379,270.997333 32.8245517,271.290667 32.3888276,271.504 C31.9531034,271.717333 31.4501379,271.824 30.879931,271.824 Z\",\"id\":\"2019\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M210.357931,101.2 L210.357931,98.848 L212.197655,98.848 L212.197655,96.736 L210.357931,96.736 L210.357931,94.64 L207.888828,94.64 L207.888828,96.736 L204.854897,96.736 L209.793103,90 L207.049655,90 L201.724138,97.104 L201.724138,98.848 L207.808138,98.848 L207.808138,101.2 L210.357931,101.2 Z M215.181155,96.692 C215.906017,96.692 216.494379,96.447 216.946241,95.957 C217.398103,95.467 217.624034,94.8113333 217.624034,93.99 C217.624034,93.1686667 217.398103,92.513 216.946241,92.023 C216.494379,91.533 215.906017,91.288 215.181155,91.288 C214.456293,91.288 213.865578,91.533 213.409009,92.023 C212.95244,92.513 212.724155,93.1686667 212.724155,93.99 C212.724155,94.8113333 212.95244,95.467 213.409009,95.957 C213.865578,96.447 214.456293,96.692 215.181155,96.692 Z M216.000155,101.2 L222.749845,91.4 L221.069483,91.4 L214.319793,101.2 L216.000155,101.2 Z M215.181155,95.544 C214.8705,95.544 214.621034,95.411 214.432759,95.145 C214.244483,94.879 214.150345,94.494 214.150345,93.99 C214.150345,93.486 214.244483,93.101 214.432759,92.835 C214.621034,92.569 214.8705,92.436 215.181155,92.436 C215.501224,92.436 215.753043,92.5666667 215.936612,92.828 C216.120181,93.0893333 216.211966,93.4766667 216.211966,93.99 C216.211966,94.5033333 216.120181,94.8906667 215.936612,95.152 C215.753043,95.4133333 215.501224,95.544 215.181155,95.544 Z M221.888483,101.312 C222.613345,101.312 223.20406,101.067 223.660629,100.577 C224.117198,100.087 224.345483,99.4313333 224.345483,98.61 C224.345483,97.7886667 224.117198,97.133 223.660629,96.643 C223.20406,96.153 222.613345,95.908 221.888483,95.908 C221.417793,95.908 220.996526,96.0176667 220.624681,96.237 C220.252836,96.4563333 219.963362,96.7713333 219.756259,97.182 C219.549155,97.5926667 219.445603,98.0686667 219.445603,98.61 C219.445603,99.1513333 219.549155,99.6273333 219.756259,100.038 C219.963362,100.448667 220.252836,100.763667 220.624681,100.983 C220.996526,101.202333 221.417793,101.312 221.888483,101.312 Z M221.888483,100.164 C221.577828,100.164 221.328362,100.033333 221.140086,99.772 C220.95181,99.5106667 220.857672,99.1233333 220.857672,98.61 C220.857672,98.0966667 220.95181,97.7093333 221.140086,97.448 C221.328362,97.1866667 221.577828,97.056 221.888483,97.056 C222.208552,97.056 222.460371,97.189 222.64394,97.455 C222.827509,97.721 222.919293,98.106 222.919293,98.61 C222.919293,99.114 222.827509,99.499 222.64394,99.765 C222.460371,100.031 222.208552,100.164 221.888483,100.164 Z\",\"id\":\"4%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M210.357931,181.2 L210.357931,178.848 L212.197655,178.848 L212.197655,176.736 L210.357931,176.736 L210.357931,174.64 L207.888828,174.64 L207.888828,176.736 L204.854897,176.736 L209.793103,170 L207.049655,170 L201.724138,177.104 L201.724138,178.848 L207.808138,178.848 L207.808138,181.2 L210.357931,181.2 Z M215.181155,176.692 C215.906017,176.692 216.494379,176.447 216.946241,175.957 C217.398103,175.467 217.624034,174.811333 217.624034,173.99 C217.624034,173.168667 217.398103,172.513 216.946241,172.023 C216.494379,171.533 215.906017,171.288 215.181155,171.288 C214.456293,171.288 213.865578,171.533 213.409009,172.023 C212.95244,172.513 212.724155,173.168667 212.724155,173.99 C212.724155,174.811333 212.95244,175.467 213.409009,175.957 C213.865578,176.447 214.456293,176.692 215.181155,176.692 Z M216.000155,181.2 L222.749845,171.4 L221.069483,171.4 L214.319793,181.2 L216.000155,181.2 Z M215.181155,175.544 C214.8705,175.544 214.621034,175.411 214.432759,175.145 C214.244483,174.879 214.150345,174.494 214.150345,173.99 C214.150345,173.486 214.244483,173.101 214.432759,172.835 C214.621034,172.569 214.8705,172.436 215.181155,172.436 C215.501224,172.436 215.753043,172.566667 215.936612,172.828 C216.120181,173.089333 216.211966,173.476667 216.211966,173.99 C216.211966,174.503333 216.120181,174.890667 215.936612,175.152 C215.753043,175.413333 215.501224,175.544 215.181155,175.544 Z M221.888483,181.312 C222.613345,181.312 223.20406,181.067 223.660629,180.577 C224.117198,180.087 224.345483,179.431333 224.345483,178.61 C224.345483,177.788667 224.117198,177.133 223.660629,176.643 C223.20406,176.153 222.613345,175.908 221.888483,175.908 C221.417793,175.908 220.996526,176.017667 220.624681,176.237 C220.252836,176.456333 219.963362,176.771333 219.756259,177.182 C219.549155,177.592667 219.445603,178.068667 219.445603,178.61 C219.445603,179.151333 219.549155,179.627333 219.756259,180.038 C219.963362,180.448667 220.252836,180.763667 220.624681,180.983 C220.996526,181.202333 221.417793,181.312 221.888483,181.312 Z M221.888483,180.164 C221.577828,180.164 221.328362,180.033333 221.140086,179.772 C220.95181,179.510667 220.857672,179.123333 220.857672,178.61 C220.857672,178.096667 220.95181,177.709333 221.140086,177.448 C221.328362,177.186667 221.577828,177.056 221.888483,177.056 C222.208552,177.056 222.460371,177.189 222.64394,177.455 C222.827509,177.721 222.919293,178.106 222.919293,178.61 C222.919293,179.114 222.827509,179.499 222.64394,179.765 C222.460371,180.031 222.208552,180.164 221.888483,180.164 Z\",\"id\":\"4%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M205.024345,261.392 C206.057172,261.392 206.925931,261.224 207.630621,260.888 C208.33531,260.552 208.859793,260.104 209.204069,259.544 C209.548345,258.984 209.720483,258.362667 209.720483,257.68 C209.720483,256.624 209.341241,255.781333 208.582759,255.152 C207.824276,254.522667 206.648897,254.208 205.056621,254.208 L205.056621,254.208 L204.136759,254.208 L204.314276,252.08 L209.026552,252.08 L209.026552,250 L202.135655,250 L201.55469,256.304 L204.443379,256.304 C205.411655,256.304 206.092138,256.426667 206.484828,256.672 C206.877517,256.917333 207.073862,257.28 207.073862,257.76 C207.073862,258.218667 206.885586,258.576 206.509034,258.832 C206.132483,259.088 205.616069,259.216 204.959793,259.216 C204.368069,259.216 203.792483,259.128 203.233034,258.952 C202.673586,258.776 202.17869,258.528 201.748345,258.208 L201.748345,258.208 L200.715517,260.192 C201.253448,260.576 201.907034,260.872 202.676276,261.08 C203.445517,261.288 204.228207,261.392 205.024345,261.392 Z M212.994466,256.692 C213.719328,256.692 214.30769,256.447 214.759552,255.957 C215.211414,255.467 215.437345,254.811333 215.437345,253.99 C215.437345,253.168667 215.211414,252.513 214.759552,252.023 C214.30769,251.533 213.719328,251.288 212.994466,251.288 C212.269603,251.288 211.678888,251.533 211.222319,252.023 C210.76575,252.513 210.537466,253.168667 210.537466,253.99 C210.537466,254.811333 210.76575,255.467 211.222319,255.957 C211.678888,256.447 212.269603,256.692 212.994466,256.692 Z M213.813466,261.2 L220.563155,251.4 L218.882793,251.4 L212.133103,261.2 L213.813466,261.2 Z M212.994466,255.544 C212.68381,255.544 212.434345,255.411 212.246069,255.145 C212.057793,254.879 211.963655,254.494 211.963655,253.99 C211.963655,253.486 212.057793,253.101 212.246069,252.835 C212.434345,252.569 212.68381,252.436 212.994466,252.436 C213.314534,252.436 213.566353,252.566667 213.749922,252.828 C213.933491,253.089333 214.025276,253.476667 214.025276,253.99 C214.025276,254.503333 213.933491,254.890667 213.749922,255.152 C213.566353,255.413333 213.314534,255.544 212.994466,255.544 Z M219.701793,261.312 C220.426655,261.312 221.017371,261.067 221.47394,260.577 C221.930509,260.087 222.158793,259.431333 222.158793,258.61 C222.158793,257.788667 221.930509,257.133 221.47394,256.643 C221.017371,256.153 220.426655,255.908 219.701793,255.908 C219.231103,255.908 218.809836,256.017667 218.437991,256.237 C218.066147,256.456333 217.776672,256.771333 217.569569,257.182 C217.362466,257.592667 217.258914,258.068667 217.258914,258.61 C217.258914,259.151333 217.362466,259.627333 217.569569,260.038 C217.776672,260.448667 218.066147,260.763667 218.437991,260.983 C218.809836,261.202333 219.231103,261.312 219.701793,261.312 Z M219.701793,260.164 C219.391138,260.164 219.141672,260.033333 218.953397,259.772 C218.765121,259.510667 218.670983,259.123333 218.670983,258.61 C218.670983,258.096667 218.765121,257.709333 218.953397,257.448 C219.141672,257.186667 219.391138,257.056 219.701793,257.056 C220.021862,257.056 220.273681,257.189 220.45725,257.455 C220.640819,257.721 220.732603,258.106 220.732603,258.61 C220.732603,259.114 220.640819,259.499 220.45725,259.765 C220.273681,260.031 220.021862,260.164 219.701793,260.164 Z\",\"id\":\"5%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M205.589172,133.2 L205.589172,122 L200.715517,122 L200.715517,124.08 L202.974828,124.08 L202.974828,133.2 L205.589172,133.2 Z M211.915241,133.2 L211.915241,122 L207.041586,122 L207.041586,124.08 L209.300897,124.08 L209.300897,133.2 L211.915241,133.2 Z M216.092948,128.692 C216.81781,128.692 217.406172,128.447 217.858034,127.957 C218.309897,127.467 218.535828,126.811333 218.535828,125.99 C218.535828,125.168667 218.309897,124.513 217.858034,124.023 C217.406172,123.533 216.81781,123.288 216.092948,123.288 C215.368086,123.288 214.777371,123.533 214.320802,124.023 C213.864233,124.513 213.635948,125.168667 213.635948,125.99 C213.635948,126.811333 213.864233,127.467 214.320802,127.957 C214.777371,128.447 215.368086,128.692 216.092948,128.692 Z M216.911948,133.2 L223.661638,123.4 L221.981276,123.4 L215.231586,133.2 L216.911948,133.2 Z M216.092948,127.544 C215.782293,127.544 215.532828,127.411 215.344552,127.145 C215.156276,126.879 215.062138,126.494 215.062138,125.99 C215.062138,125.486 215.156276,125.101 215.344552,124.835 C215.532828,124.569 215.782293,124.436 216.092948,124.436 C216.413017,124.436 216.664836,124.566667 216.848405,124.828 C217.031974,125.089333 217.123759,125.476667 217.123759,125.99 C217.123759,126.503333 217.031974,126.890667 216.848405,127.152 C216.664836,127.413333 216.413017,127.544 216.092948,127.544 Z M222.800276,133.312 C223.525138,133.312 224.115853,133.067 224.572422,132.577 C225.028991,132.087 225.257276,131.431333 225.257276,130.61 C225.257276,129.788667 225.028991,129.133 224.572422,128.643 C224.115853,128.153 223.525138,127.908 222.800276,127.908 C222.329586,127.908 221.908319,128.017667 221.536474,128.237 C221.164629,128.456333 220.875155,128.771333 220.668052,129.182 C220.460948,129.592667 220.357397,130.068667 220.357397,130.61 C220.357397,131.151333 220.460948,131.627333 220.668052,132.038 C220.875155,132.448667 221.164629,132.763667 221.536474,132.983 C221.908319,133.202333 222.329586,133.312 222.800276,133.312 Z M222.800276,132.164 C222.489621,132.164 222.240155,132.033333 222.051879,131.772 C221.863603,131.510667 221.769466,131.123333 221.769466,130.61 C221.769466,130.096667 221.863603,129.709333 222.051879,129.448 C222.240155,129.186667 222.489621,129.056 222.800276,129.056 C223.120345,129.056 223.372164,129.189 223.555733,129.455 C223.739302,129.721 223.831086,130.106 223.831086,130.61 C223.831086,131.114 223.739302,131.499 223.555733,131.765 C223.372164,132.031 223.120345,132.164 222.800276,132.164 Z\",\"id\":\"11%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M205.589172,213.392 L205.589172,202.192 L200.715517,202.192 L200.715517,204.272 L202.974828,204.272 L202.974828,213.392 L205.589172,213.392 Z M215.998138,213.392 L215.998138,211.28 L211.140621,211.28 L213.738828,208.848 C214.481172,208.165333 214.981448,207.557333 215.239655,207.024 C215.497862,206.490667 215.626966,205.92 215.626966,205.312 C215.626966,204.64 215.452138,204.056 215.102483,203.56 C214.752828,203.064 214.26331,202.68 213.633931,202.408 C213.004552,202.136 212.270276,202 211.431103,202 C210.430552,202 209.542966,202.184 208.768345,202.552 C207.993724,202.92 207.385862,203.429333 206.944759,204.08 L206.944759,204.08 L208.849034,205.296 C209.118,204.922667 209.451517,204.642667 209.849586,204.456 C210.247655,204.269333 210.694138,204.176 211.189034,204.176 C211.780759,204.176 212.229931,204.296 212.536552,204.536 C212.843172,204.776 212.996483,205.12 212.996483,205.568 C212.996483,205.877333 212.915793,206.189333 212.754414,206.504 C212.593034,206.818667 212.281034,207.194667 211.818414,207.632 L211.818414,207.632 L207.461172,211.712 L207.461172,213.392 L215.998138,213.392 Z M219.288259,208.884 C220.013121,208.884 220.601483,208.639 221.053345,208.149 C221.505207,207.659 221.731138,207.003333 221.731138,206.182 C221.731138,205.360667 221.505207,204.705 221.053345,204.215 C220.601483,203.725 220.013121,203.48 219.288259,203.48 C218.563397,203.48 217.972681,203.725 217.516112,204.215 C217.059543,204.705 216.831259,205.360667 216.831259,206.182 C216.831259,207.003333 217.059543,207.659 217.516112,208.149 C217.972681,208.639 218.563397,208.884 219.288259,208.884 Z M220.107259,213.392 L226.856948,203.592 L225.176586,203.592 L218.426897,213.392 L220.107259,213.392 Z M219.288259,207.736 C218.977603,207.736 218.728138,207.603 218.539862,207.337 C218.351586,207.071 218.257448,206.686 218.257448,206.182 C218.257448,205.678 218.351586,205.293 218.539862,205.027 C218.728138,204.761 218.977603,204.628 219.288259,204.628 C219.608328,204.628 219.860147,204.758667 220.043716,205.02 C220.227284,205.281333 220.319069,205.668667 220.319069,206.182 C220.319069,206.695333 220.227284,207.082667 220.043716,207.344 C219.860147,207.605333 219.608328,207.736 219.288259,207.736 Z M225.995586,213.504 C226.720448,213.504 227.311164,213.259 227.767733,212.769 C228.224302,212.279 228.452586,211.623333 228.452586,210.802 C228.452586,209.980667 228.224302,209.325 227.767733,208.835 C227.311164,208.345 226.720448,208.1 225.995586,208.1 C225.524897,208.1 225.103629,208.209667 224.731784,208.429 C224.35994,208.648333 224.070466,208.963333 223.863362,209.374 C223.656259,209.784667 223.552707,210.260667 223.552707,210.802 C223.552707,211.343333 223.656259,211.819333 223.863362,212.23 C224.070466,212.640667 224.35994,212.955667 224.731784,213.175 C225.103629,213.394333 225.524897,213.504 225.995586,213.504 Z M225.995586,212.356 C225.684931,212.356 225.435466,212.225333 225.24719,211.964 C225.058914,211.702667 224.964776,211.315333 224.964776,210.802 C224.964776,210.288667 225.058914,209.901333 225.24719,209.64 C225.435466,209.378667 225.684931,209.248 225.995586,209.248 C226.315655,209.248 226.567474,209.381 226.751043,209.647 C226.934612,209.913 227.026397,210.298 227.026397,210.802 C227.026397,211.306 226.934612,211.691 226.751043,211.957 C226.567474,212.223 226.315655,212.356 225.995586,212.356 Z\",\"id\":\"12%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M205.589172,293.2 L205.589172,282 L200.715517,282 L200.715517,284.08 L202.974828,284.08 L202.974828,293.2 L205.589172,293.2 Z M211.22131,293.392 C212.243379,293.392 213.106759,293.226667 213.811448,292.896 C214.516138,292.565333 215.040621,292.125333 215.384897,291.576 C215.729172,291.026667 215.90131,290.426667 215.90131,289.776 C215.90131,288.933333 215.637724,288.226667 215.110552,287.656 C214.583379,287.085333 213.824897,286.72 212.835103,286.56 L212.835103,286.56 L215.384897,283.68 L215.384897,282 L207.47731,282 L207.47731,284.08 L212.286414,284.08 L209.962552,286.688 L209.962552,288.4 L211.156759,288.4 C212.566138,288.4 213.270828,288.858667 213.270828,289.776 C213.270828,290.234667 213.082552,290.589333 212.706,290.84 C212.329448,291.090667 211.813034,291.216 211.156759,291.216 C210.565034,291.216 209.986759,291.128 209.421931,290.952 C208.857103,290.776 208.359517,290.528 207.929172,290.208 L207.929172,290.208 L206.912483,292.192 C207.450414,292.576 208.104,292.872 208.873241,293.08 C209.642483,293.288 210.425172,293.392 211.22131,293.392 Z M219.320534,288.692 C220.045397,288.692 220.633759,288.447 221.085621,287.957 C221.537483,287.467 221.763414,286.811333 221.763414,285.99 C221.763414,285.168667 221.537483,284.513 221.085621,284.023 C220.633759,283.533 220.045397,283.288 219.320534,283.288 C218.595672,283.288 218.004957,283.533 217.548388,284.023 C217.091819,284.513 216.863534,285.168667 216.863534,285.99 C216.863534,286.811333 217.091819,287.467 217.548388,287.957 C218.004957,288.447 218.595672,288.692 219.320534,288.692 Z M220.139534,293.2 L226.889224,283.4 L225.208862,283.4 L218.459172,293.2 L220.139534,293.2 Z M219.320534,287.544 C219.009879,287.544 218.760414,287.411 218.572138,287.145 C218.383862,286.879 218.289724,286.494 218.289724,285.99 C218.289724,285.486 218.383862,285.101 218.572138,284.835 C218.760414,284.569 219.009879,284.436 219.320534,284.436 C219.640603,284.436 219.892422,284.566667 220.075991,284.828 C220.25956,285.089333 220.351345,285.476667 220.351345,285.99 C220.351345,286.503333 220.25956,286.890667 220.075991,287.152 C219.892422,287.413333 219.640603,287.544 219.320534,287.544 Z M226.027862,293.312 C226.752724,293.312 227.34344,293.067 227.800009,292.577 C228.256578,292.087 228.484862,291.431333 228.484862,290.61 C228.484862,289.788667 228.256578,289.133 227.800009,288.643 C227.34344,288.153 226.752724,287.908 226.027862,287.908 C225.557172,287.908 225.135905,288.017667 224.76406,288.237 C224.392216,288.456333 224.102741,288.771333 223.895638,289.182 C223.688534,289.592667 223.584983,290.068667 223.584983,290.61 C223.584983,291.151333 223.688534,291.627333 223.895638,292.038 C224.102741,292.448667 224.392216,292.763667 224.76406,292.983 C225.135905,293.202333 225.557172,293.312 226.027862,293.312 Z M226.027862,292.164 C225.717207,292.164 225.467741,292.033333 225.279466,291.772 C225.09119,291.510667 224.997052,291.123333 224.997052,290.61 C224.997052,290.096667 225.09119,289.709333 225.279466,289.448 C225.467741,289.186667 225.717207,289.056 226.027862,289.056 C226.347931,289.056 226.59975,289.189 226.783319,289.455 C226.966888,289.721 227.058672,290.106 227.058672,290.61 C227.058672,291.114 226.966888,291.499 226.783319,291.765 C226.59975,292.031 226.347931,292.164 226.027862,292.164 Z\",\"id\":\"13%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":10}),React.createElement(\"g\",{\"id\":\"Group-25-Copy-4\",\"transform\":\"translate(278.856592, 15.968331)\",\"key\":11},[React.createElement(\"path\",{\"d\":\"M22.6798448,17.868 L22.6798448,15.32 L25.3062931,15.32 L25.3062931,14.494 L22.6798448,14.494 L22.6798448,11.932 L21.7902414,11.932 L21.7902414,14.494 L19.1637931,14.494 L19.1637931,15.32 L21.7902414,15.32 L21.7902414,17.868 L22.6798448,17.868 Z M30.1496897,19.884 C30.9310345,19.884 31.59,19.7556667 32.1265862,19.499 C32.6631724,19.2423333 33.0656121,18.89 33.3339052,18.442 C33.6021983,17.994 33.7363448,17.4853333 33.7363448,16.916 C33.7363448,16.0013333 33.4092155,15.2896667 32.7549569,14.781 C32.1006983,14.2723333 31.0581207,14.018 29.6272241,14.018 L29.6272241,14.018 L28.3563621,14.018 L28.6952586,10.896 L33.2138793,10.896 L33.2138793,10 L27.8056552,10 L27.2973103,14.914 L29.4012931,14.914 C30.5968448,14.914 31.4464397,15.0866667 31.9500776,15.432 C32.4537155,15.7773333 32.7055345,16.286 32.7055345,16.958 C32.7055345,17.5646667 32.4819569,18.05 32.0348017,18.414 C31.5876466,18.778 30.954569,18.96 30.135569,18.96 C29.5142586,18.96 28.9353103,18.855 28.3987241,18.645 C27.8621379,18.435 27.4291034,18.162 27.0996207,17.826 L27.0996207,17.826 L26.6053966,18.624 C26.9913621,19.0066667 27.5020603,19.3123333 28.1374914,19.541 C28.7729224,19.7696667 29.4436552,19.884 30.1496897,19.884 Z M36.687569,22.516 L36.687569,18.414 C36.9982241,18.89 37.3959569,19.2516667 37.8807672,19.499 C38.3655776,19.7463333 38.9092241,19.87 39.5117069,19.87 C40.2177414,19.87 40.850819,19.7136667 41.4109397,19.401 C41.9710603,19.0883333 42.4111552,18.6473333 42.7312241,18.078 C43.0512931,17.5086667 43.2113276,16.8553333 43.2113276,16.118 C43.2113276,15.39 43.0512931,14.7413333 42.7312241,14.172 C42.4111552,13.6026667 41.9687069,13.1616667 41.4038793,12.849 C40.8390517,12.5363333 40.2083276,12.38 39.5117069,12.38 C38.8903966,12.38 38.3326293,12.5106667 37.8384052,12.772 C37.344181,13.0333333 36.9464483,13.4066667 36.6452069,13.892 L36.6452069,13.892 L36.6452069,12.436 L35.685,12.436 L35.685,22.516 L36.687569,22.516 Z M39.4411034,18.988 C38.913931,18.988 38.4408879,18.869 38.0219741,18.631 C37.6030603,18.393 37.2735776,18.0546667 37.0335259,17.616 C36.7934741,17.1773333 36.6734483,16.678 36.6734483,16.118 C36.6734483,15.558 36.7934741,15.061 37.0335259,14.627 C37.2735776,14.193 37.6030603,13.8546667 38.0219741,13.612 C38.4408879,13.3693333 38.913931,13.248 39.4411034,13.248 C39.9588621,13.248 40.4295517,13.3693333 40.8531724,13.612 C41.2767931,13.8546667 41.6086293,14.193 41.848681,14.627 C42.0887328,15.061 42.2087586,15.558 42.2087586,16.118 C42.2087586,16.678 42.0887328,17.1773333 41.848681,17.616 C41.6086293,18.0546667 41.2767931,18.393 40.8531724,18.631 C40.4295517,18.869 39.9588621,18.988 39.4411034,18.988 Z M46.2613966,22.516 L46.2613966,18.414 C46.5720517,18.89 46.9697845,19.2516667 47.4545948,19.499 C47.9394052,19.7463333 48.4830517,19.87 49.0855345,19.87 C49.791569,19.87 50.4246466,19.7136667 50.9847672,19.401 C51.5448879,19.0883333 51.9849828,18.6473333 52.3050517,18.078 C52.6251207,17.5086667 52.7851552,16.8553333 52.7851552,16.118 C52.7851552,15.39 52.6251207,14.7413333 52.3050517,14.172 C51.9849828,13.6026667 51.5425345,13.1616667 50.9777069,12.849 C50.4128793,12.5363333 49.7821552,12.38 49.0855345,12.38 C48.4642241,12.38 47.9064569,12.5106667 47.4122328,12.772 C46.9180086,13.0333333 46.5202759,13.4066667 46.2190345,13.892 L46.2190345,13.892 L46.2190345,12.436 L45.2588276,12.436 L45.2588276,22.516 L46.2613966,22.516 Z M49.014931,18.988 C48.4877586,18.988 48.0147155,18.869 47.5958017,18.631 C47.1768879,18.393 46.8474052,18.0546667 46.6073534,17.616 C46.3673017,17.1773333 46.2472759,16.678 46.2472759,16.118 C46.2472759,15.558 46.3673017,15.061 46.6073534,14.627 C46.8474052,14.193 47.1768879,13.8546667 47.5958017,13.612 C48.0147155,13.3693333 48.4877586,13.248 49.014931,13.248 C49.5326897,13.248 50.0033793,13.3693333 50.427,13.612 C50.8506207,13.8546667 51.1824569,14.193 51.4225086,14.627 C51.6625603,15.061 51.7825862,15.558 51.7825862,16.118 C51.7825862,16.678 51.6625603,17.1773333 51.4225086,17.616 C51.1824569,18.0546667 50.8506207,18.393 50.427,18.631 C50.0033793,18.869 49.5326897,18.988 49.014931,18.988 Z\",\"id\":\"+5pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"71.1347869\",\"height\":\"31.9366629\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-5\",\"transform\":\"translate(278.856592, 97.140683)\",\"key\":12},[React.createElement(\"path\",{\"d\":\"M21.6712241,17.868 L21.6712241,15.32 L24.2976724,15.32 L24.2976724,14.494 L21.6712241,14.494 L21.6712241,11.932 L20.7816207,11.932 L20.7816207,14.494 L18.1551724,14.494 L18.1551724,15.32 L20.7816207,15.32 L20.7816207,17.868 L21.6712241,17.868 Z M28.8586552,19.8 L32.9960172,10.714 L32.9960172,10 L25.7379828,10 L25.7379828,12.73 L26.7405517,12.73 L26.7405517,10.896 L31.824,10.896 L27.7572414,19.8 L28.8586552,19.8 Z M36.0037241,22.516 L36.0037241,18.414 C36.3143793,18.89 36.7121121,19.2516667 37.1969224,19.499 C37.6817328,19.7463333 38.2253793,19.87 38.8278621,19.87 C39.5338966,19.87 40.1669741,19.7136667 40.7270948,19.401 C41.2872155,19.0883333 41.7273103,18.6473333 42.0473793,18.078 C42.3674483,17.5086667 42.5274828,16.8553333 42.5274828,16.118 C42.5274828,15.39 42.3674483,14.7413333 42.0473793,14.172 C41.7273103,13.6026667 41.2848621,13.1616667 40.7200345,12.849 C40.1552069,12.5363333 39.5244828,12.38 38.8278621,12.38 C38.2065517,12.38 37.6487845,12.5106667 37.1545603,12.772 C36.6603362,13.0333333 36.2626034,13.4066667 35.9613621,13.892 L35.9613621,13.892 L35.9613621,12.436 L35.0011552,12.436 L35.0011552,22.516 L36.0037241,22.516 Z M38.7572586,18.988 C38.2300862,18.988 37.7570431,18.869 37.3381293,18.631 C36.9192155,18.393 36.5897328,18.0546667 36.349681,17.616 C36.1096293,17.1773333 35.9896034,16.678 35.9896034,16.118 C35.9896034,15.558 36.1096293,15.061 36.349681,14.627 C36.5897328,14.193 36.9192155,13.8546667 37.3381293,13.612 C37.7570431,13.3693333 38.2300862,13.248 38.7572586,13.248 C39.2750172,13.248 39.7457069,13.3693333 40.1693276,13.612 C40.5929483,13.8546667 40.9247845,14.193 41.1648362,14.627 C41.4048879,15.061 41.5249138,15.558 41.5249138,16.118 C41.5249138,16.678 41.4048879,17.1773333 41.1648362,17.616 C40.9247845,18.0546667 40.5929483,18.393 40.1693276,18.631 C39.7457069,18.869 39.2750172,18.988 38.7572586,18.988 Z M45.5775517,22.516 L45.5775517,18.414 C45.8882069,18.89 46.2859397,19.2516667 46.77075,19.499 C47.2555603,19.7463333 47.7992069,19.87 48.4016897,19.87 C49.1077241,19.87 49.7408017,19.7136667 50.3009224,19.401 C50.8610431,19.0883333 51.3011379,18.6473333 51.6212069,18.078 C51.9412759,17.5086667 52.1013103,16.8553333 52.1013103,16.118 C52.1013103,15.39 51.9412759,14.7413333 51.6212069,14.172 C51.3011379,13.6026667 50.8586897,13.1616667 50.2938621,12.849 C49.7290345,12.5363333 49.0983103,12.38 48.4016897,12.38 C47.7803793,12.38 47.2226121,12.5106667 46.7283879,12.772 C46.2341638,13.0333333 45.836431,13.4066667 45.5351897,13.892 L45.5351897,13.892 L45.5351897,12.436 L44.5749828,12.436 L44.5749828,22.516 L45.5775517,22.516 Z M48.3310862,18.988 C47.8039138,18.988 47.3308707,18.869 46.9119569,18.631 C46.4930431,18.393 46.1635603,18.0546667 45.9235086,17.616 C45.6834569,17.1773333 45.563431,16.678 45.563431,16.118 C45.563431,15.558 45.6834569,15.061 45.9235086,14.627 C46.1635603,14.193 46.4930431,13.8546667 46.9119569,13.612 C47.3308707,13.3693333 47.8039138,13.248 48.3310862,13.248 C48.8488448,13.248 49.3195345,13.3693333 49.7431552,13.612 C50.1667759,13.8546667 50.4986121,14.193 50.7386638,14.627 C50.9787155,15.061 51.0987414,15.558 51.0987414,16.118 C51.0987414,16.678 50.9787155,17.1773333 50.7386638,17.616 C50.4986121,18.0546667 50.1667759,18.393 49.7431552,18.631 C49.3195345,18.869 48.8488448,18.988 48.3310862,18.988 Z\",\"id\":\"+7pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"71.1347869\",\"height\":\"31.9366629\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-6\",\"transform\":\"translate(278.856592, 175.651646)\",\"key\":13},[React.createElement(\"path\",{\"d\":\"M19.6539828,17.952 L19.6539828,15.404 L22.280431,15.404 L22.280431,14.578 L19.6539828,14.578 L19.6539828,12.016 L18.7643793,12.016 L18.7643793,14.578 L16.137931,14.578 L16.137931,15.404 L18.7643793,15.404 L18.7643793,17.952 L19.6539828,17.952 Z M27.7592586,19.968 C28.5406034,19.968 29.22075,19.8536667 29.7996983,19.625 C30.3786466,19.3963333 30.8234483,19.0696667 31.1341034,18.645 C31.4447586,18.2203333 31.6000862,17.7233333 31.6000862,17.154 C31.6000862,16.5753333 31.4329914,16.0806667 31.0988017,15.67 C30.7646121,15.2593333 30.2868621,14.9513333 29.6655517,14.746 C30.1738966,14.55 30.564569,14.2676667 30.837569,13.899 C31.110569,13.5303333 31.247069,13.094 31.247069,12.59 C31.247069,12.0673333 31.1011552,11.61 30.8093276,11.218 C30.5175,10.826 30.1103534,10.525 29.5878879,10.315 C29.0654224,10.105 28.4558793,10 27.7592586,10 C26.7049138,10 25.8647328,10.2333333 25.2387155,10.7 C24.6126983,11.1666667 24.2996897,11.7966667 24.2996897,12.59 C24.2996897,13.094 24.4314828,13.5303333 24.695069,13.899 C24.9586552,14.2676667 25.3446207,14.55 25.8529655,14.746 C25.2316552,14.9513333 24.7586121,15.257 24.4338362,15.663 C24.1090603,16.069 23.9466724,16.566 23.9466724,17.154 C23.9466724,18.022 24.285569,18.708 24.9633621,19.212 C25.6411552,19.716 26.5731207,19.968 27.7592586,19.968 Z M27.7592586,14.382 C26.9967414,14.382 26.3989655,14.2233333 25.965931,13.906 C25.5328966,13.5886667 25.3163793,13.1593333 25.3163793,12.618 C25.3163793,12.0766667 25.53525,11.6473333 25.9729914,11.33 C26.4107328,11.0126667 27.0061552,10.854 27.7592586,10.854 C28.5029483,10.854 29.0983707,11.0126667 29.5455259,11.33 C29.992681,11.6473333 30.2162586,12.0813333 30.2162586,12.632 C30.2162586,13.164 29.9973879,13.5886667 29.5596466,13.906 C29.1219052,14.2233333 28.5217759,14.382 27.7592586,14.382 Z M27.7592586,19.114 C26.8837759,19.114 26.2012759,18.939 25.7117586,18.589 C25.2222414,18.239 24.9774828,17.756 24.9774828,17.14 C24.9774828,16.5333333 25.2245948,16.055 25.718819,15.705 C26.2130431,15.355 26.8931897,15.18 27.7592586,15.18 C28.6347414,15.18 29.3195948,15.355 29.813819,15.705 C30.3080431,16.055 30.5551552,16.5333333 30.5551552,17.14 C30.5551552,17.7466667 30.3080431,18.2273333 29.813819,18.582 C29.3195948,18.9366667 28.6347414,19.114 27.7592586,19.114 Z M34.6783966,22.6 L34.6783966,18.498 C34.9890517,18.974 35.3867845,19.3356667 35.8715948,19.583 C36.3564052,19.8303333 36.9000517,19.954 37.5025345,19.954 C38.208569,19.954 38.8416466,19.7976667 39.4017672,19.485 C39.9618879,19.1723333 40.4019828,18.7313333 40.7220517,18.162 C41.0421207,17.5926667 41.2021552,16.9393333 41.2021552,16.202 C41.2021552,15.474 41.0421207,14.8253333 40.7220517,14.256 C40.4019828,13.6866667 39.9595345,13.2456667 39.3947069,12.933 C38.8298793,12.6203333 38.1991552,12.464 37.5025345,12.464 C36.8812241,12.464 36.3234569,12.5946667 35.8292328,12.856 C35.3350086,13.1173333 34.9372759,13.4906667 34.6360345,13.976 L34.6360345,13.976 L34.6360345,12.52 L33.6758276,12.52 L33.6758276,22.6 L34.6783966,22.6 Z M37.431931,19.072 C36.9047586,19.072 36.4317155,18.953 36.0128017,18.715 C35.5938879,18.477 35.2644052,18.1386667 35.0243534,17.7 C34.7843017,17.2613333 34.6642759,16.762 34.6642759,16.202 C34.6642759,15.642 34.7843017,15.145 35.0243534,14.711 C35.2644052,14.277 35.5938879,13.9386667 36.0128017,13.696 C36.4317155,13.4533333 36.9047586,13.332 37.431931,13.332 C37.9496897,13.332 38.4203793,13.4533333 38.844,13.696 C39.2676207,13.9386667 39.5994569,14.277 39.8395086,14.711 C40.0795603,15.145 40.1995862,15.642 40.1995862,16.202 C40.1995862,16.762 40.0795603,17.2613333 39.8395086,17.7 C39.5994569,18.1386667 39.2676207,18.477 38.844,18.715 C38.4203793,18.953 37.9496897,19.072 37.431931,19.072 Z M44.2522241,22.6 L44.2522241,18.498 C44.5628793,18.974 44.9606121,19.3356667 45.4454224,19.583 C45.9302328,19.8303333 46.4738793,19.954 47.0763621,19.954 C47.7823966,19.954 48.4154741,19.7976667 48.9755948,19.485 C49.5357155,19.1723333 49.9758103,18.7313333 50.2958793,18.162 C50.6159483,17.5926667 50.7759828,16.9393333 50.7759828,16.202 C50.7759828,15.474 50.6159483,14.8253333 50.2958793,14.256 C49.9758103,13.6866667 49.5333621,13.2456667 48.9685345,12.933 C48.4037069,12.6203333 47.7729828,12.464 47.0763621,12.464 C46.4550517,12.464 45.8972845,12.5946667 45.4030603,12.856 C44.9088362,13.1173333 44.5111034,13.4906667 44.2098621,13.976 L44.2098621,13.976 L44.2098621,12.52 L43.2496552,12.52 L43.2496552,22.6 L44.2522241,22.6 Z M47.0057586,19.072 C46.4785862,19.072 46.0055431,18.953 45.5866293,18.715 C45.1677155,18.477 44.8382328,18.1386667 44.598181,17.7 C44.3581293,17.2613333 44.2381034,16.762 44.2381034,16.202 C44.2381034,15.642 44.3581293,15.145 44.598181,14.711 C44.8382328,14.277 45.1677155,13.9386667 45.5866293,13.696 C46.0055431,13.4533333 46.4785862,13.332 47.0057586,13.332 C47.5235172,13.332 47.9942069,13.4533333 48.4178276,13.696 C48.8414483,13.9386667 49.1732845,14.277 49.4133362,14.711 C49.6533879,15.145 49.7734138,15.642 49.7734138,16.202 C49.7734138,16.762 49.6533879,17.2613333 49.4133362,17.7 C49.1732845,18.1386667 48.8414483,18.477 48.4178276,18.715 C47.9942069,18.953 47.5235172,19.072 47.0057586,19.072 Z\",\"id\":\"+8pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"67.1082895\",\"height\":\"31.9366629\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-7\",\"transform\":\"translate(278.856592, 255.493303)\",\"key\":14},[React.createElement(\"path\",{\"d\":\"M19.6539828,17.952 L19.6539828,15.404 L22.280431,15.404 L22.280431,14.578 L19.6539828,14.578 L19.6539828,12.016 L18.7643793,12.016 L18.7643793,14.578 L16.137931,14.578 L16.137931,15.404 L18.7643793,15.404 L18.7643793,17.952 L19.6539828,17.952 Z M27.7592586,19.968 C28.5406034,19.968 29.22075,19.8536667 29.7996983,19.625 C30.3786466,19.3963333 30.8234483,19.0696667 31.1341034,18.645 C31.4447586,18.2203333 31.6000862,17.7233333 31.6000862,17.154 C31.6000862,16.5753333 31.4329914,16.0806667 31.0988017,15.67 C30.7646121,15.2593333 30.2868621,14.9513333 29.6655517,14.746 C30.1738966,14.55 30.564569,14.2676667 30.837569,13.899 C31.110569,13.5303333 31.247069,13.094 31.247069,12.59 C31.247069,12.0673333 31.1011552,11.61 30.8093276,11.218 C30.5175,10.826 30.1103534,10.525 29.5878879,10.315 C29.0654224,10.105 28.4558793,10 27.7592586,10 C26.7049138,10 25.8647328,10.2333333 25.2387155,10.7 C24.6126983,11.1666667 24.2996897,11.7966667 24.2996897,12.59 C24.2996897,13.094 24.4314828,13.5303333 24.695069,13.899 C24.9586552,14.2676667 25.3446207,14.55 25.8529655,14.746 C25.2316552,14.9513333 24.7586121,15.257 24.4338362,15.663 C24.1090603,16.069 23.9466724,16.566 23.9466724,17.154 C23.9466724,18.022 24.285569,18.708 24.9633621,19.212 C25.6411552,19.716 26.5731207,19.968 27.7592586,19.968 Z M27.7592586,14.382 C26.9967414,14.382 26.3989655,14.2233333 25.965931,13.906 C25.5328966,13.5886667 25.3163793,13.1593333 25.3163793,12.618 C25.3163793,12.0766667 25.53525,11.6473333 25.9729914,11.33 C26.4107328,11.0126667 27.0061552,10.854 27.7592586,10.854 C28.5029483,10.854 29.0983707,11.0126667 29.5455259,11.33 C29.992681,11.6473333 30.2162586,12.0813333 30.2162586,12.632 C30.2162586,13.164 29.9973879,13.5886667 29.5596466,13.906 C29.1219052,14.2233333 28.5217759,14.382 27.7592586,14.382 Z M27.7592586,19.114 C26.8837759,19.114 26.2012759,18.939 25.7117586,18.589 C25.2222414,18.239 24.9774828,17.756 24.9774828,17.14 C24.9774828,16.5333333 25.2245948,16.055 25.718819,15.705 C26.2130431,15.355 26.8931897,15.18 27.7592586,15.18 C28.6347414,15.18 29.3195948,15.355 29.813819,15.705 C30.3080431,16.055 30.5551552,16.5333333 30.5551552,17.14 C30.5551552,17.7466667 30.3080431,18.2273333 29.813819,18.582 C29.3195948,18.9366667 28.6347414,19.114 27.7592586,19.114 Z M34.6783966,22.6 L34.6783966,18.498 C34.9890517,18.974 35.3867845,19.3356667 35.8715948,19.583 C36.3564052,19.8303333 36.9000517,19.954 37.5025345,19.954 C38.208569,19.954 38.8416466,19.7976667 39.4017672,19.485 C39.9618879,19.1723333 40.4019828,18.7313333 40.7220517,18.162 C41.0421207,17.5926667 41.2021552,16.9393333 41.2021552,16.202 C41.2021552,15.474 41.0421207,14.8253333 40.7220517,14.256 C40.4019828,13.6866667 39.9595345,13.2456667 39.3947069,12.933 C38.8298793,12.6203333 38.1991552,12.464 37.5025345,12.464 C36.8812241,12.464 36.3234569,12.5946667 35.8292328,12.856 C35.3350086,13.1173333 34.9372759,13.4906667 34.6360345,13.976 L34.6360345,13.976 L34.6360345,12.52 L33.6758276,12.52 L33.6758276,22.6 L34.6783966,22.6 Z M37.431931,19.072 C36.9047586,19.072 36.4317155,18.953 36.0128017,18.715 C35.5938879,18.477 35.2644052,18.1386667 35.0243534,17.7 C34.7843017,17.2613333 34.6642759,16.762 34.6642759,16.202 C34.6642759,15.642 34.7843017,15.145 35.0243534,14.711 C35.2644052,14.277 35.5938879,13.9386667 36.0128017,13.696 C36.4317155,13.4533333 36.9047586,13.332 37.431931,13.332 C37.9496897,13.332 38.4203793,13.4533333 38.844,13.696 C39.2676207,13.9386667 39.5994569,14.277 39.8395086,14.711 C40.0795603,15.145 40.1995862,15.642 40.1995862,16.202 C40.1995862,16.762 40.0795603,17.2613333 39.8395086,17.7 C39.5994569,18.1386667 39.2676207,18.477 38.844,18.715 C38.4203793,18.953 37.9496897,19.072 37.431931,19.072 Z M44.2522241,22.6 L44.2522241,18.498 C44.5628793,18.974 44.9606121,19.3356667 45.4454224,19.583 C45.9302328,19.8303333 46.4738793,19.954 47.0763621,19.954 C47.7823966,19.954 48.4154741,19.7976667 48.9755948,19.485 C49.5357155,19.1723333 49.9758103,18.7313333 50.2958793,18.162 C50.6159483,17.5926667 50.7759828,16.9393333 50.7759828,16.202 C50.7759828,15.474 50.6159483,14.8253333 50.2958793,14.256 C49.9758103,13.6866667 49.5333621,13.2456667 48.9685345,12.933 C48.4037069,12.6203333 47.7729828,12.464 47.0763621,12.464 C46.4550517,12.464 45.8972845,12.5946667 45.4030603,12.856 C44.9088362,13.1173333 44.5111034,13.4906667 44.2098621,13.976 L44.2098621,13.976 L44.2098621,12.52 L43.2496552,12.52 L43.2496552,22.6 L44.2522241,22.6 Z M47.0057586,19.072 C46.4785862,19.072 46.0055431,18.953 45.5866293,18.715 C45.1677155,18.477 44.8382328,18.1386667 44.598181,17.7 C44.3581293,17.2613333 44.2381034,16.762 44.2381034,16.202 C44.2381034,15.642 44.3581293,15.145 44.598181,14.711 C44.8382328,14.277 45.1677155,13.9386667 45.5866293,13.696 C46.0055431,13.4533333 46.4785862,13.332 47.0057586,13.332 C47.5235172,13.332 47.9942069,13.4533333 48.4178276,13.696 C48.8414483,13.9386667 49.1732845,14.277 49.4133362,14.711 C49.6533879,15.145 49.7734138,15.642 49.7734138,16.202 C49.7734138,16.762 49.6533879,17.2613333 49.4133362,17.7 C49.1732845,18.1386667 48.8414483,18.477 48.4178276,18.715 C47.9942069,18.953 47.5235172,19.072 47.0057586,19.072 Z\",\"id\":\"+8pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"67.1082895\",\"height\":\"31.9366629\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"path\",{\"d\":\"M206.581655,53.2 L210.777517,43.68 L210.777517,42 L201.724138,42 L201.724138,45.936 L204.048,45.936 L204.048,44.112 L207.792,44.112 L203.741379,53.2 L206.581655,53.2 Z M214.148328,48.692 C214.87319,48.692 215.461552,48.447 215.913414,47.957 C216.365276,47.467 216.591207,46.8113333 216.591207,45.99 C216.591207,45.1686667 216.365276,44.513 215.913414,44.023 C215.461552,43.533 214.87319,43.288 214.148328,43.288 C213.423466,43.288 212.83275,43.533 212.376181,44.023 C211.919612,44.513 211.691328,45.1686667 211.691328,45.99 C211.691328,46.8113333 211.919612,47.467 212.376181,47.957 C212.83275,48.447 213.423466,48.692 214.148328,48.692 Z M214.967328,53.2 L221.717017,43.4 L220.036655,43.4 L213.286966,53.2 L214.967328,53.2 Z M214.148328,47.544 C213.837672,47.544 213.588207,47.411 213.399931,47.145 C213.211655,46.879 213.117517,46.494 213.117517,45.99 C213.117517,45.486 213.211655,45.101 213.399931,44.835 C213.588207,44.569 213.837672,44.436 214.148328,44.436 C214.468397,44.436 214.720216,44.5666667 214.903784,44.828 C215.087353,45.0893333 215.179138,45.4766667 215.179138,45.99 C215.179138,46.5033333 215.087353,46.8906667 214.903784,47.152 C214.720216,47.4133333 214.468397,47.544 214.148328,47.544 Z M220.855655,53.312 C221.580517,53.312 222.171233,53.067 222.627802,52.577 C223.084371,52.087 223.312655,51.4313333 223.312655,50.61 C223.312655,49.7886667 223.084371,49.133 222.627802,48.643 C222.171233,48.153 221.580517,47.908 220.855655,47.908 C220.384966,47.908 219.963698,48.0176667 219.591853,48.237 C219.220009,48.4563333 218.930534,48.7713333 218.723431,49.182 C218.516328,49.5926667 218.412776,50.0686667 218.412776,50.61 C218.412776,51.1513333 218.516328,51.6273333 218.723431,52.038 C218.930534,52.4486667 219.220009,52.7636667 219.591853,52.983 C219.963698,53.2023333 220.384966,53.312 220.855655,53.312 Z M220.855655,52.164 C220.545,52.164 220.295534,52.0333333 220.107259,51.772 C219.918983,51.5106667 219.824845,51.1233333 219.824845,50.61 C219.824845,50.0966667 219.918983,49.7093333 220.107259,49.448 C220.295534,49.1866667 220.545,49.056 220.855655,49.056 C221.175724,49.056 221.427543,49.189 221.611112,49.455 C221.794681,49.721 221.886466,50.106 221.886466,50.61 C221.886466,51.114 221.794681,51.499 221.611112,51.765 C221.427543,52.031 221.175724,52.164 220.855655,52.164 Z\",\"id\":\"7%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":15}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-58\",\"fill\":\"#F3F3F3\",\"x\":\"52.0305737\",\"y\":\"1.70530257e-13\",\"width\":\"134.216579\",\"height\":\"303.398298\",\"key\":16}),React.createElement(\"g\",{\"id\":\"Group-26-Copy\",\"transform\":\"translate(52.448276, 0.000000)\",\"key\":17},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-50\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"2.68433158\",\"height\":\"31.9366629\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-51\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32\",\"width\":\"9.39516054\",\"height\":\"31.9366629\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-28-Copy\",\"transform\":\"translate(52.448276, 80.000000)\",\"key\":18},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-52\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"5.36866316\",\"height\":\"31.9366629\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-53\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32\",\"width\":\"14.7638237\",\"height\":\"31.9366629\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-30-Copy\",\"transform\":\"translate(52.448276, 160.000000)\",\"key\":19},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-54\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"5.36866316\",\"height\":\"31.9366629\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-55\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32\",\"width\":\"16.1059895\",\"height\":\"31.9366629\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-31-Copy\",\"transform\":\"translate(52.448276, 240.000000)\",\"key\":20},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-56\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"6.71082895\",\"height\":\"31.9366629\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-57\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32\",\"width\":\"17.4481553\",\"height\":\"31.9366629\",\"key\":1})])])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph2Mobile.defaultProps = {\"width\":\"351px\",\"height\":\"304px\",\"viewBox\":\"0 0 351 304\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph2Mobile;\n\nSchoolYearsGapsInAttainmentGraph2Mobile.default = SchoolYearsGapsInAttainmentGraph2Mobile;\n","\"use strict\";\n\nexports.__esModule = true;\nexports.parsePath = parsePath;\n\nfunction parsePath(path) {\n  var pathname = path || \"/\";\n  var search = \"\";\n  var hash = \"\";\n  var hashIndex = pathname.indexOf(\"#\");\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf(\"?\");\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === \"?\" ? \"\" : search,\n    hash: hash === \"#\" ? \"\" : hash\n  };\n}","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","const support = function (feature) {\n  if (typeof document === `undefined`) {\n    return false\n  }\n  const fakeLink = document.createElement(`link`)\n  try {\n    if (fakeLink.relList && typeof fakeLink.relList.supports === `function`) {\n      return fakeLink.relList.supports(feature)\n    }\n  } catch (err) {\n    return false\n  }\n  return false\n}\n\nconst linkPrefetchStrategy = function (url, options) {\n  return new Promise((resolve, reject) => {\n    if (typeof document === `undefined`) {\n      reject()\n      return\n    }\n\n    const link = document.createElement(`link`)\n    link.setAttribute(`rel`, `prefetch`)\n    link.setAttribute(`href`, url)\n\n    Object.keys(options).forEach(key => {\n      link.setAttribute(key, options[key])\n    })\n\n    link.onload = resolve\n    link.onerror = reject\n\n    const parentElement =\n      document.getElementsByTagName(`head`)[0] ||\n      document.getElementsByName(`script`)[0].parentNode\n    parentElement.appendChild(link)\n  })\n}\n\nconst xhrPrefetchStrategy = function (url) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n    req.open(`GET`, url, true)\n\n    req.onload = () => {\n      if (req.status === 200) {\n        resolve()\n      } else {\n        reject()\n      }\n    }\n\n    req.send(null)\n  })\n}\n\nconst supportedPrefetchStrategy = support(`prefetch`)\n  ? linkPrefetchStrategy\n  : xhrPrefetchStrategy\n\nconst preFetched = {}\n\nconst prefetch = function (url, options) {\n  return new Promise(resolve => {\n    if (preFetched[url]) {\n      resolve()\n      return\n    }\n\n    supportedPrefetchStrategy(url, options)\n      .then(() => {\n        resolve()\n        preFetched[url] = true\n      })\n      .catch(() => {}) // 404s are logged to the console anyway\n  })\n}\n\nexport default prefetch\n","import prefetchHelper from \"./prefetch\"\nimport emitter from \"./emitter\"\nimport { setMatchPaths, findPath, findMatchPath } from \"./find-path\"\n\n/**\n * Available resource loading statuses\n */\nexport const PageResourceStatus = {\n  /**\n   * At least one of critical resources failed to load\n   */\n  Error: `error`,\n  /**\n   * Resources loaded successfully\n   */\n  Success: `success`,\n}\n\nconst preferDefault = m => (m && m.default) || m\n\nconst stripSurroundingSlashes = s => {\n  s = s[0] === `/` ? s.slice(1) : s\n  s = s.endsWith(`/`) ? s.slice(0, -1) : s\n  return s\n}\n\nconst createPageDataUrl = path => {\n  const fixedPath = path === `/` ? `index` : stripSurroundingSlashes(path)\n  return `${__PATH_PREFIX__}/page-data/${fixedPath}/page-data.json`\n}\n\nfunction doFetch(url, method = `GET`) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n    req.open(method, url, true)\n    req.onreadystatechange = () => {\n      if (req.readyState == 4) {\n        resolve(req)\n      }\n    }\n    req.send(null)\n  })\n}\n\nconst doesConnectionSupportPrefetch = () => {\n  if (\n    `connection` in navigator &&\n    typeof navigator.connection !== `undefined`\n  ) {\n    if ((navigator.connection.effectiveType || ``).includes(`2g`)) {\n      return false\n    }\n    if (navigator.connection.saveData) {\n      return false\n    }\n  }\n  return true\n}\n\nconst toPageResources = (pageData, component = null) => {\n  const page = {\n    componentChunkName: pageData.componentChunkName,\n    path: pageData.path,\n    webpackCompilationHash: pageData.webpackCompilationHash,\n    matchPath: pageData.matchPath,\n    staticQueryHashes: pageData.staticQueryHashes,\n  }\n\n  return {\n    component,\n    json: pageData.result,\n    page,\n  }\n}\n\nexport class BaseLoader {\n  constructor(loadComponent, matchPaths) {\n    // Map of pagePath -> Page. Where Page is an object with: {\n    //   status: PageResourceStatus.Success || PageResourceStatus.Error,\n    //   payload: PageResources, // undefined if PageResourceStatus.Error\n    // }\n    // PageResources is {\n    //   component,\n    //   json: pageData.result,\n    //   page: {\n    //     componentChunkName,\n    //     path,\n    //     webpackCompilationHash,\n    //     staticQueryHashes\n    //   },\n    //   staticQueryResults\n    // }\n    this.pageDb = new Map()\n    this.inFlightDb = new Map()\n    this.staticQueryDb = {}\n    this.pageDataDb = new Map()\n    this.prefetchTriggered = new Set()\n    this.prefetchCompleted = new Set()\n    this.loadComponent = loadComponent\n    setMatchPaths(matchPaths)\n  }\n\n  inFlightNetworkRequests = new Map()\n\n  memoizedGet(url) {\n    let inFlightPromise = this.inFlightNetworkRequests.get(url)\n\n    if (!inFlightPromise) {\n      inFlightPromise = doFetch(url, `GET`)\n      this.inFlightNetworkRequests.set(url, inFlightPromise)\n    }\n\n    // Prefer duplication with then + catch over .finally to prevent problems in ie11 + firefox\n    return inFlightPromise\n      .then(response => {\n        this.inFlightNetworkRequests.delete(url)\n        return response\n      })\n      .catch(err => {\n        this.inFlightNetworkRequests.delete(url)\n        throw err\n      })\n  }\n\n  setApiRunner(apiRunner) {\n    this.apiRunner = apiRunner\n    this.prefetchDisabled = apiRunner(`disableCorePrefetching`).some(a => a)\n  }\n\n  fetchPageDataJson(loadObj) {\n    const { pagePath, retries = 0 } = loadObj\n    const url = createPageDataUrl(pagePath)\n    return this.memoizedGet(url).then(req => {\n      const { status, responseText } = req\n\n      // Handle 200\n      if (status === 200) {\n        try {\n          const jsonPayload = JSON.parse(responseText)\n          if (jsonPayload.path === undefined) {\n            throw new Error(`not a valid pageData response`)\n          }\n\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Success,\n            payload: jsonPayload,\n          })\n        } catch (err) {\n          // continue regardless of error\n        }\n      }\n\n      // Handle 404\n      if (status === 404 || status === 200) {\n        // If the request was for a 404 page and it doesn't exist, we're done\n        if (pagePath === `/404.html`) {\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Error,\n          })\n        }\n\n        // Need some code here to cache the 404 request. In case\n        // multiple loadPageDataJsons result in 404s\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, { pagePath: `/404.html`, notFound: true })\n        )\n      }\n\n      // handle 500 response (Unrecoverable)\n      if (status === 500) {\n        return Object.assign(loadObj, {\n          status: PageResourceStatus.Error,\n        })\n      }\n\n      // Handle everything else, including status === 0, and 503s. Should retry\n      if (retries < 3) {\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, { retries: retries + 1 })\n        )\n      }\n\n      // Retried 3 times already, result is an error.\n      return Object.assign(loadObj, {\n        status: PageResourceStatus.Error,\n      })\n    })\n  }\n\n  loadPageDataJson(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDataDb.has(pagePath)) {\n      return Promise.resolve(this.pageDataDb.get(pagePath))\n    }\n\n    return this.fetchPageDataJson({ pagePath }).then(pageData => {\n      this.pageDataDb.set(pagePath, pageData)\n\n      return pageData\n    })\n  }\n\n  findMatchPath(rawPath) {\n    return findMatchPath(rawPath)\n  }\n\n  // TODO check all uses of this and whether they use undefined for page resources not exist\n  loadPage(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDb.has(pagePath)) {\n      const page = this.pageDb.get(pagePath)\n      return Promise.resolve(page.payload)\n    }\n\n    if (this.inFlightDb.has(pagePath)) {\n      return this.inFlightDb.get(pagePath)\n    }\n\n    const inFlightPromise = Promise.all([\n      this.loadAppData(),\n      this.loadPageDataJson(pagePath),\n    ]).then(allData => {\n      const result = allData[1]\n      if (result.status === PageResourceStatus.Error) {\n        return {\n          status: PageResourceStatus.Error,\n        }\n      }\n\n      let pageData = result.payload\n      const { componentChunkName, staticQueryHashes = [] } = pageData\n\n      const finalResult = {}\n\n      const componentChunkPromise = this.loadComponent(componentChunkName).then(\n        component => {\n          finalResult.createdAt = new Date()\n          let pageResources\n          if (!component) {\n            finalResult.status = PageResourceStatus.Error\n          } else {\n            finalResult.status = PageResourceStatus.Success\n            if (result.notFound === true) {\n              finalResult.notFound = true\n            }\n            pageData = Object.assign(pageData, {\n              webpackCompilationHash: allData[0]\n                ? allData[0].webpackCompilationHash\n                : ``,\n            })\n            pageResources = toPageResources(pageData, component)\n          }\n          // undefined if final result is an error\n          return pageResources\n        }\n      )\n\n      const staticQueryBatchPromise = Promise.all(\n        staticQueryHashes.map(staticQueryHash => {\n          // Check for cache in case this static query result has already been loaded\n          if (this.staticQueryDb[staticQueryHash]) {\n            const jsonPayload = this.staticQueryDb[staticQueryHash]\n            return { staticQueryHash, jsonPayload }\n          }\n\n          return this.memoizedGet(\n            `${__PATH_PREFIX__}/page-data/sq/d/${staticQueryHash}.json`\n          ).then(req => {\n            const jsonPayload = JSON.parse(req.responseText)\n            return { staticQueryHash, jsonPayload }\n          })\n        })\n      ).then(staticQueryResults => {\n        const staticQueryResultsMap = {}\n\n        staticQueryResults.forEach(({ staticQueryHash, jsonPayload }) => {\n          staticQueryResultsMap[staticQueryHash] = jsonPayload\n          this.staticQueryDb[staticQueryHash] = jsonPayload\n        })\n\n        return staticQueryResultsMap\n      })\n\n      return Promise.all([componentChunkPromise, staticQueryBatchPromise]).then(\n        ([pageResources, staticQueryResults]) => {\n          let payload\n          if (pageResources) {\n            payload = { ...pageResources, staticQueryResults }\n            finalResult.payload = payload\n            emitter.emit(`onPostLoadPageResources`, {\n              page: payload,\n              pageResources: payload,\n            })\n          }\n\n          this.pageDb.set(pagePath, finalResult)\n\n          return payload\n        }\n      )\n    })\n\n    inFlightPromise\n      .then(response => {\n        this.inFlightDb.delete(pagePath)\n      })\n      .catch(error => {\n        this.inFlightDb.delete(pagePath)\n        throw error\n      })\n\n    this.inFlightDb.set(pagePath, inFlightPromise)\n\n    return inFlightPromise\n  }\n\n  // returns undefined if loading page ran into errors\n  loadPageSync(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDb.has(pagePath)) {\n      const pageData = this.pageDb.get(pagePath).payload\n      return pageData\n    }\n    return undefined\n  }\n\n  shouldPrefetch(pagePath) {\n    // Skip prefetching if we know user is on slow or constrained connection\n    if (!doesConnectionSupportPrefetch()) {\n      return false\n    }\n\n    // Check if the page exists.\n    if (this.pageDb.has(pagePath)) {\n      return false\n    }\n\n    return true\n  }\n\n  prefetch(pagePath) {\n    if (!this.shouldPrefetch(pagePath)) {\n      return false\n    }\n\n    // Tell plugins with custom prefetching logic that they should start\n    // prefetching this path.\n    if (!this.prefetchTriggered.has(pagePath)) {\n      this.apiRunner(`onPrefetchPathname`, { pathname: pagePath })\n      this.prefetchTriggered.add(pagePath)\n    }\n\n    // If a plugin has disabled core prefetching, stop now.\n    if (this.prefetchDisabled) {\n      return false\n    }\n\n    const realPath = findPath(pagePath)\n    // Todo make doPrefetch logic cacheable\n    // eslint-disable-next-line consistent-return\n    this.doPrefetch(realPath).then(() => {\n      if (!this.prefetchCompleted.has(pagePath)) {\n        this.apiRunner(`onPostPrefetchPathname`, { pathname: pagePath })\n        this.prefetchCompleted.add(pagePath)\n      }\n    })\n\n    return true\n  }\n\n  doPrefetch(pagePath) {\n    throw new Error(`doPrefetch not implemented`)\n  }\n\n  hovering(rawPath) {\n    this.loadPage(rawPath)\n  }\n\n  getResourceURLsForPathname(rawPath) {\n    const pagePath = findPath(rawPath)\n    const page = this.pageDataDb.get(pagePath)\n    if (page) {\n      const pageResources = toPageResources(page.payload)\n\n      return [\n        ...createComponentUrls(pageResources.page.componentChunkName),\n        createPageDataUrl(pagePath),\n      ]\n    } else {\n      return null\n    }\n  }\n\n  isPageNotFound(rawPath) {\n    const pagePath = findPath(rawPath)\n    const page = this.pageDb.get(pagePath)\n    return page && page.notFound === true\n  }\n\n  loadAppData(retries = 0) {\n    return this.memoizedGet(`${__PATH_PREFIX__}/page-data/app-data.json`).then(\n      req => {\n        const { status, responseText } = req\n\n        let appData\n\n        if (status !== 200 && retries < 3) {\n          // Retry 3 times incase of non-200 responses\n          return this.loadAppData(retries + 1)\n        }\n\n        // Handle 200\n        if (status === 200) {\n          try {\n            const jsonPayload = JSON.parse(responseText)\n            if (jsonPayload.webpackCompilationHash === undefined) {\n              throw new Error(`not a valid app-data response`)\n            }\n\n            appData = jsonPayload\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        return appData\n      }\n    )\n  }\n}\n\nconst createComponentUrls = componentChunkName =>\n  (window.___chunkMapping[componentChunkName] || []).map(\n    chunk => __PATH_PREFIX__ + chunk\n  )\n\nexport class ProdLoader extends BaseLoader {\n  constructor(asyncRequires, matchPaths) {\n    const loadComponent = chunkName =>\n      asyncRequires.components[chunkName]\n        ? asyncRequires.components[chunkName]()\n            .then(preferDefault)\n            // loader will handle the case when component is null\n            .catch(() => null)\n        : Promise.resolve()\n\n    super(loadComponent, matchPaths)\n  }\n\n  doPrefetch(pagePath) {\n    const pageDataUrl = createPageDataUrl(pagePath)\n    return prefetchHelper(pageDataUrl, {\n      crossOrigin: `anonymous`,\n      as: `fetch`,\n    })\n      .then(() =>\n        // This was just prefetched, so will return a response from\n        // the cache instead of making another request to the server\n        this.loadPageDataJson(pagePath)\n      )\n      .then(result => {\n        if (result.status !== PageResourceStatus.Success) {\n          return Promise.resolve()\n        }\n        const pageData = result.payload\n        const chunkName = pageData.componentChunkName\n        const componentUrls = createComponentUrls(chunkName)\n        return Promise.all(componentUrls.map(prefetchHelper)).then(\n          () => pageData\n        )\n      })\n  }\n\n  loadPageDataJson(rawPath) {\n    return super.loadPageDataJson(rawPath).then(data => {\n      if (data.notFound) {\n        // check if html file exist using HEAD request:\n        // if it does we should navigate to it instead of showing 404\n        return doFetch(rawPath, `HEAD`).then(req => {\n          if (req.status === 200) {\n            // page (.html file) actually exist (or we asked for 404 )\n            // returning page resources status as errored to trigger\n            // regular browser navigation to given page\n            return {\n              status: PageResourceStatus.Error,\n            }\n          }\n\n          // if HEAD request wasn't 200, return notFound result\n          // and show 404 page\n          return data\n        })\n      }\n      return data\n    })\n  }\n}\n\nlet instance\n\nexport const setLoader = _loader => {\n  instance = _loader\n}\n\nexport const publicLoader = {\n  // Deprecated methods. As far as we're aware, these are only used by\n  // core gatsby and the offline plugin, however there's a very small\n  // chance they're called by others.\n  getResourcesForPathname: rawPath => {\n    console.warn(\n      `Warning: getResourcesForPathname is deprecated. Use loadPage instead`\n    )\n    return instance.i.loadPage(rawPath)\n  },\n  getResourcesForPathnameSync: rawPath => {\n    console.warn(\n      `Warning: getResourcesForPathnameSync is deprecated. Use loadPageSync instead`\n    )\n    return instance.i.loadPageSync(rawPath)\n  },\n  enqueue: rawPath => instance.prefetch(rawPath),\n\n  // Real methods\n  getResourceURLsForPathname: rawPath =>\n    instance.getResourceURLsForPathname(rawPath),\n  loadPage: rawPath => instance.loadPage(rawPath),\n  loadPageSync: rawPath => instance.loadPageSync(rawPath),\n  prefetch: rawPath => instance.prefetch(rawPath),\n  isPageNotFound: rawPath => instance.isPageNotFound(rawPath),\n  hovering: rawPath => instance.hovering(rawPath),\n  loadAppData: () => instance.loadAppData(),\n}\n\nexport default publicLoader\n\nexport function getStaticQueryResults() {\n  return instance.staticQueryDb\n}\n","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport GapsInAttainmentExpectedStandardDesktop from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-1-desktop.svg\";\nimport GapsInAttainmentExpectedStandardMobile from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-1-mobile.svg\";\nimport GapsInAttainmentHigherStandardDesktop from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-2-desktop.svg\";\nimport GapsInAttainmentHigherStandardMobile from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-2-mobile.svg\";\nimport GapsInAttainmentMarginalReturnsDesktop from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-3-desktop.svg\";\nimport GapsInAttainmentMarginalReturnsMobile from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-3-mobile.svg\";\nimport ResizableGraph from \"../../../../src/components/research/resizable-graph\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  GapsInAttainmentExpectedStandardDesktop,\n  GapsInAttainmentExpectedStandardMobile,\n  GapsInAttainmentHigherStandardDesktop,\n  GapsInAttainmentHigherStandardMobile,\n  GapsInAttainmentMarginalReturnsDesktop,\n  GapsInAttainmentMarginalReturnsMobile,\n  ResizableGraph,\n  React\n};","var scope_0 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/0e349365bd363f31f2a1c9aa041b1ae0.js').default;\nvar scope_1 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/25c245c1b20933e1b650708f21aeb114.js').default;\nvar scope_2 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/79f14b9479292b7d10aea0aeb8e9f89c.js').default;\nvar scope_3 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/7c89f80585d992fa5a88bbe0f14e3ab8.js').default;\nvar scope_4 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/8b7c7aec4f65ad9fe66ec189d282a08b.js').default;\nvar scope_5 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/9a5998c393fef1db65f1596110ddf461.js').default;\nvar scope_6 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/c8a41e13395a6fcbf4fab349f7b47bdb.js').default;\nvar scope_7 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/e92f8988d65cf25c087d226e6c0ef06f.js').default;export default\n        Object.assign({}, scope_0,\nscope_1,\nscope_2,\nscope_3,\nscope_4,\nscope_5,\nscope_6,\nscope_7 )\n    ","import React from \"react\"\nimport { MDXProvider, withMDXComponents } from \"@mdx-js/react\"\nimport { MDXScopeProvider } from \"./context\"\n\n/**\n * so, this import is weird right?\n *\n * # What it looks like:\n * we're importing a webpack loader directly into our runtime bundle\n *\n * # What it's actually doing:\n * We configure the `mdx-components` loader in gatsby-node's\n * `onCreateWebpackConfig`. The configuration sets the loader to handle its\n * own file, so if we import `./loaders/mdx-components`, the `mdx-components`\n * loader handles loading itself.\n *\n * # Why does this work?\n * The loader doesn't use the file argument to itself and instead returns\n * a generated file that includes the `gatsby-config` mdxPlugins wrapped in\n * require() statements. This results in the `mdxPlugins` being required\n * and available to the code after this import.\n *\n * # Have a better solution to this?\n * Submit a PR\n */\nimport { plugins as mdxPlugins } from \"./loaders/mdx-components\"\nimport scopeContexts from \"./loaders/mdx-scopes\"\n\nconst componentsAndGuards = {}\n\nconst componentFromGuards = arr =>\n  function GatsbyMDXComponentFinder(props) {\n    const { Component } = arr.find(({ guard }) => (guard ? guard(props) : true))\n    return <Component {...props} />\n  }\n\nmdxPlugins.forEach(({ guards = {}, components }) => {\n  Object.entries(components).forEach(([componentName, Component]) => {\n    if (componentsAndGuards[componentName]) {\n      componentsAndGuards.push({ guard: guards[componentName], Component })\n    } else {\n      componentsAndGuards[componentName] = [\n        { guard: guards[componentName], Component },\n      ]\n    }\n  })\n})\n\nconst components = Object.entries(componentsAndGuards)\n  .map(([name, arr]) => {\n    return {\n      [name]: componentFromGuards(\n        arr.concat({ guard: undefined, Component: name })\n      ),\n    }\n  })\n  .reduce((acc, obj) => {\n    return { ...acc, ...obj }\n  }, {})\n\n// merge any components in wrapRootElement above this wrapRoot\nconst MDXConsumer = withMDXComponents(\n  ({ components: componentsFromContext, children }) => (\n    <MDXScopeProvider __mdxScope={scopeContexts}>\n      <MDXProvider components={{ ...componentsFromContext, ...components }}>\n        {children}\n      </MDXProvider>\n    </MDXScopeProvider>\n  )\n)\n\nconst WrapRootElement = ({ element }) => <MDXConsumer>{element}</MDXConsumer>\n\nexport default WrapRootElement\n","import wrap from \"./wrap-root-element\"\nexport const wrapRootElement = wrap\n","module.exports = {plugins: []}","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport EarlyYearsProvisionSVG from \"../../../../src/content/early-years/svg/early-years-graph-2.svg\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  EarlyYearsProvisionSVG,\n  React\n};","var React = require('react');\n\nfunction EarlyYearsGraph1 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 22\"),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"transform\":\"translate(-826.000000, -653.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(826.000000, 654.000000)\"},[React.createElement(\"g\",{\"transform\":\"translate(170.500000, 0.000000)\",\"key\":0},[React.createElement(\"path\",{\"d\":\"M25.516,72 L25.516,38.4 L11.02,38.4 L11.02,44.64 L17.74,44.64 L17.74,72 L25.516,72 Z M44.332,72 L44.332,38.4 L29.836,38.4 L29.836,44.64 L36.556,44.64 L36.556,72 L44.332,72 Z\",\"id\":\"11\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M61.72,46 L61.72,41.584 C61.72,40.6346667 61.9733333,39.8906667 62.48,39.352 C62.9866667,38.8133333 63.672,38.544 64.536,38.544 C65.3146667,38.544 65.9146667,38.7733333 66.336,39.232 C66.7573333,39.6906667 66.968,40.3573333 66.968,41.232 L66.968,41.232 L66.968,46 L68.104,46 L68.104,41.584 C68.104,40.6346667 68.3546667,39.8906667 68.856,39.352 C69.3573333,38.8133333 70.0453333,38.544 70.92,38.544 C71.688,38.544 72.2826667,38.7733333 72.704,39.232 C73.1253333,39.6906667 73.336,40.3573333 73.336,41.232 L73.336,41.232 L73.336,46 L74.472,46 L74.472,41.12 C74.472,39.936 74.1706667,39.04 73.568,38.432 C72.9653333,37.824 72.136,37.52 71.08,37.52 C70.3333333,37.52 69.6693333,37.6773333 69.088,37.992 C68.5066667,38.3066667 68.0613333,38.7413333 67.752,39.296 C67.496,38.7093333 67.1093333,38.2666667 66.592,37.968 C66.0746667,37.6693333 65.464,37.52 64.76,37.52 C64.0666667,37.52 63.4533333,37.6586667 62.92,37.936 C62.3866667,38.2133333 61.9706667,38.608 61.672,39.12 L61.672,39.12 L61.672,37.584 L60.584,37.584 L60.584,46 L61.72,46 Z M81,46.08 C81.8106667,46.08 82.5413333,45.896 83.192,45.528 C83.8426667,45.16 84.352,44.6506667 84.72,44 C85.088,43.3493333 85.272,42.6133333 85.272,41.792 C85.272,40.9706667 85.088,40.2346667 84.72,39.584 C84.352,38.9333333 83.8426667,38.4266667 83.192,38.064 C82.5413333,37.7013333 81.8106667,37.52 81,37.52 C80.1893333,37.52 79.4586667,37.7013333 78.808,38.064 C78.1573333,38.4266667 77.6453333,38.9333333 77.272,39.584 C76.8986667,40.2346667 76.712,40.9706667 76.712,41.792 C76.712,42.6133333 76.8986667,43.3493333 77.272,44 C77.6453333,44.6506667 78.1573333,45.16 78.808,45.528 C79.4586667,45.896 80.1893333,46.08 81,46.08 Z M81,45.072 C80.4026667,45.072 79.8666667,44.936 79.392,44.664 C78.9173333,44.392 78.544,44.0053333 78.272,43.504 C78,43.0026667 77.864,42.432 77.864,41.792 C77.864,41.152 78,40.5813333 78.272,40.08 C78.544,39.5786667 78.9173333,39.192 79.392,38.92 C79.8666667,38.648 80.4026667,38.512 81,38.512 C81.5973333,38.512 82.1333333,38.648 82.608,38.92 C83.0826667,39.192 83.4533333,39.5786667 83.72,40.08 C83.9866667,40.5813333 84.12,41.152 84.12,41.792 C84.12,42.432 83.9866667,43.0026667 83.72,43.504 C83.4533333,44.0053333 83.0826667,44.392 82.608,44.664 C82.1333333,44.936 81.5973333,45.072 81,45.072 Z M88.728,46 L88.728,41.584 C88.728,40.6346667 88.992,39.8906667 89.52,39.352 C90.048,38.8133333 90.7653333,38.544 91.672,38.544 C92.4826667,38.544 93.1066667,38.7733333 93.544,39.232 C93.9813333,39.6906667 94.2,40.3573333 94.2,41.232 L94.2,41.232 L94.2,46 L95.336,46 L95.336,41.12 C95.336,39.9466667 95.024,39.0533333 94.4,38.44 C93.776,37.8266667 92.936,37.52 91.88,37.52 C91.1546667,37.52 90.5173333,37.6613333 89.968,37.944 C89.4186667,38.2266667 88.9893333,38.624 88.68,39.136 L88.68,39.136 L88.68,37.584 L87.592,37.584 L87.592,46 L88.728,46 Z M101.08,46.08 C101.421333,46.08 101.749333,46.0293333 102.064,45.928 C102.378667,45.8266667 102.642667,45.68 102.856,45.488 L102.856,45.488 L102.456,44.672 C102.296,44.8106667 102.106667,44.9173333 101.888,44.992 C101.669333,45.0666667 101.442667,45.104 101.208,45.104 C100.738667,45.104 100.378667,44.9733333 100.128,44.712 C99.8773333,44.4506667 99.752,44.0693333 99.752,43.568 L99.752,43.568 L99.752,38.544 L102.312,38.544 L102.312,37.584 L99.752,37.584 L99.752,35.744 L98.616,35.744 L98.616,37.584 L97.112,37.584 L97.112,38.544 L98.616,38.544 L98.616,43.632 C98.616,44.4106667 98.8293333,45.0133333 99.256,45.44 C99.6826667,45.8666667 100.290667,46.08 101.08,46.08 Z M106.056,46 L106.056,41.584 C106.056,40.6346667 106.32,39.8906667 106.848,39.352 C107.376,38.8133333 108.093333,38.544 109,38.544 C109.810667,38.544 110.434667,38.7733333 110.872,39.232 C111.309333,39.6906667 111.528,40.3573333 111.528,41.232 L111.528,41.232 L111.528,46 L112.664,46 L112.664,41.12 C112.664,39.9466667 112.352,39.0533333 111.728,38.44 C111.104,37.8266667 110.264,37.52 109.208,37.52 C108.504,37.52 107.88,37.6533333 107.336,37.92 C106.792,38.1866667 106.365333,38.5653333 106.056,39.056 L106.056,39.056 L106.056,34.128 L104.92,34.128 L104.92,46 L106.056,46 Z M118.008,46.08 C119.096,46.08 119.946667,45.864 120.56,45.432 C121.173333,45 121.48,44.416 121.48,43.68 C121.48,43.136 121.336,42.7093333 121.048,42.4 C120.76,42.0906667 120.413333,41.872 120.008,41.744 C119.602667,41.616 119.064,41.488 118.392,41.36 C117.848,41.264 117.421333,41.1706667 117.112,41.08 C116.802667,40.9893333 116.544,40.848 116.336,40.656 C116.128,40.464 116.024,40.208 116.024,39.888 C116.024,39.472 116.208,39.136 116.576,38.88 C116.944,38.624 117.490667,38.496 118.216,38.496 C119.176,38.496 120.002667,38.736 120.696,39.216 L120.696,39.216 L121.192,38.304 C120.84,38.0693333 120.392,37.88 119.848,37.736 C119.304,37.592 118.76,37.52 118.216,37.52 C117.170667,37.52 116.354667,37.744 115.768,38.192 C115.181333,38.64 114.888,39.216 114.888,39.92 C114.888,40.4853333 115.034667,40.928 115.328,41.248 C115.621333,41.568 115.976,41.7946667 116.392,41.928 C116.808,42.0613333 117.357333,42.192 118.04,42.32 C118.552,42.4053333 118.962667,42.4933333 119.272,42.584 C119.581333,42.6746667 119.837333,42.808 120.04,42.984 C120.242667,43.16 120.344,43.4026667 120.344,43.712 C120.344,44.1493333 120.16,44.488 119.792,44.728 C119.424,44.968 118.856,45.088 118.088,45.088 C117.512,45.088 116.957333,45 116.424,44.824 C115.890667,44.648 115.448,44.4213333 115.096,44.144 L115.096,44.144 L114.584,45.04 C114.936,45.3386667 115.424,45.5866667 116.048,45.784 C116.672,45.9813333 117.325333,46.08 118.008,46.08 Z M64.92,76.08 C65.7093333,76.08 66.424,75.8986667 67.064,75.536 C67.704,75.1733333 68.2053333,74.6666667 68.568,74.016 C68.9306667,73.3653333 69.112,72.624 69.112,71.792 C69.112,70.96 68.9306667,70.2186667 68.568,69.568 C68.2053333,68.9173333 67.704,68.4133333 67.064,68.056 C66.424,67.6986667 65.7093333,67.52 64.92,67.52 C64.2373333,67.52 63.6213333,67.6613333 63.072,67.944 C62.5226667,68.2266667 62.072,68.64 61.72,69.184 L61.72,69.184 L61.72,64.128 L60.584,64.128 L60.584,76 L61.672,76 L61.672,74.336 C62.0133333,74.9013333 62.464,75.3333333 63.024,75.632 C63.584,75.9306667 64.216,76.08 64.92,76.08 Z M64.84,75.072 C64.2426667,75.072 63.7066667,74.936 63.232,74.664 C62.7573333,74.392 62.384,74.0053333 62.112,73.504 C61.84,73.0026667 61.704,72.432 61.704,71.792 C61.704,71.152 61.84,70.5813333 62.112,70.08 C62.384,69.5786667 62.7573333,69.192 63.232,68.92 C63.7066667,68.648 64.2426667,68.512 64.84,68.512 C65.4266667,68.512 65.96,68.648 66.44,68.92 C66.92,69.192 67.296,69.5786667 67.568,70.08 C67.84,70.5813333 67.976,71.152 67.976,71.792 C67.976,72.432 67.84,73.0026667 67.568,73.504 C67.296,74.0053333 66.92,74.392 66.44,74.664 C65.96,74.936 65.4266667,75.072 64.84,75.072 Z M75,76.08 C75.672,76.08 76.288,75.9626667 76.848,75.728 C77.408,75.4933333 77.8746667,75.152 78.248,74.704 L78.248,74.704 L77.608,73.968 C77.288,74.3306667 76.9093333,74.6053333 76.472,74.792 C76.0346667,74.9786667 75.5546667,75.072 75.032,75.072 C74.104,75.072 73.336,74.8026667 72.728,74.264 C72.12,73.7253333 71.784,73.0186667 71.72,72.144 L71.72,72.144 L78.76,72.144 L78.776,71.792 C78.776,70.96 78.6,70.2213333 78.248,69.576 C77.896,68.9306667 77.4106667,68.4266667 76.792,68.064 C76.1733333,67.7013333 75.4746667,67.52 74.696,67.52 C73.9173333,67.52 73.216,67.7013333 72.592,68.064 C71.968,68.4266667 71.4773333,68.9333333 71.12,69.584 C70.7626667,70.2346667 70.584,70.9706667 70.584,71.792 C70.584,72.6133333 70.7706667,73.3493333 71.144,74 C71.5173333,74.6506667 72.0373333,75.16 72.704,75.528 C73.3706667,75.896 74.136,76.08 75,76.08 Z M77.688,71.296 L71.72,71.296 C71.7946667,70.464 72.1066667,69.7893333 72.656,69.272 C73.2053333,68.7546667 73.8853333,68.496 74.696,68.496 C75.5173333,68.496 76.2026667,68.7546667 76.752,69.272 C77.3013333,69.7893333 77.6133333,70.464 77.688,71.296 L77.688,71.296 Z M82.232,76 L82.232,71.584 C82.232,70.6346667 82.496,69.8906667 83.024,69.352 C83.552,68.8133333 84.2693333,68.544 85.176,68.544 C85.9866667,68.544 86.6106667,68.7733333 87.048,69.232 C87.4853333,69.6906667 87.704,70.3573333 87.704,71.232 L87.704,71.232 L87.704,76 L88.84,76 L88.84,71.12 C88.84,69.9466667 88.528,69.0533333 87.904,68.44 C87.28,67.8266667 86.44,67.52 85.384,67.52 C84.68,67.52 84.056,67.6533333 83.512,67.92 C82.968,68.1866667 82.5413333,68.5653333 82.232,69.056 L82.232,69.056 L82.232,64.128 L81.096,64.128 L81.096,76 L82.232,76 Z M92.504,65.744 C92.7386667,65.744 92.936,65.664 93.096,65.504 C93.256,65.344 93.336,65.1466667 93.336,64.912 C93.336,64.6986667 93.256,64.5146667 93.096,64.36 C92.936,64.2053333 92.7386667,64.128 92.504,64.128 C92.2693333,64.128 92.072,64.208 91.912,64.368 C91.752,64.528 91.672,64.7146667 91.672,64.928 C91.672,65.152 91.752,65.344 91.912,65.504 C92.072,65.664 92.2693333,65.744 92.504,65.744 Z M93.064,76 L93.064,67.584 L91.928,67.584 L91.928,76 L93.064,76 Z M97.368,76 L97.368,71.584 C97.368,70.6346667 97.632,69.8906667 98.16,69.352 C98.688,68.8133333 99.4053333,68.544 100.312,68.544 C101.122667,68.544 101.746667,68.7733333 102.184,69.232 C102.621333,69.6906667 102.84,70.3573333 102.84,71.232 L102.84,71.232 L102.84,76 L103.976,76 L103.976,71.12 C103.976,69.9466667 103.664,69.0533333 103.04,68.44 C102.416,67.8266667 101.576,67.52 100.52,67.52 C99.7946667,67.52 99.1573333,67.6613333 98.608,67.944 C98.0586667,68.2266667 97.6293333,68.624 97.32,69.136 L97.32,69.136 L97.32,67.584 L96.232,67.584 L96.232,76 L97.368,76 Z M110.408,76.08 C111.112,76.08 111.744,75.9306667 112.304,75.632 C112.864,75.3333333 113.314667,74.9013333 113.656,74.336 L113.656,74.336 L113.656,76 L114.744,76 L114.744,64.128 L113.608,64.128 L113.608,69.184 C113.256,68.64 112.805333,68.2266667 112.256,67.944 C111.706667,67.6613333 111.090667,67.52 110.408,67.52 C109.618667,67.52 108.904,67.6986667 108.264,68.056 C107.624,68.4133333 107.122667,68.9173333 106.76,69.568 C106.397333,70.2186667 106.216,70.96 106.216,71.792 C106.216,72.624 106.397333,73.3653333 106.76,74.016 C107.122667,74.6666667 107.624,75.1733333 108.264,75.536 C108.904,75.8986667 109.618667,76.08 110.408,76.08 Z M110.504,75.072 C109.906667,75.072 109.370667,74.936 108.896,74.664 C108.421333,74.392 108.048,74.0053333 107.776,73.504 C107.504,73.0026667 107.368,72.432 107.368,71.792 C107.368,71.152 107.504,70.5813333 107.776,70.08 C108.048,69.5786667 108.421333,69.192 108.896,68.92 C109.370667,68.648 109.906667,68.512 110.504,68.512 C111.090667,68.512 111.621333,68.648 112.096,68.92 C112.570667,69.192 112.944,69.5786667 113.216,70.08 C113.488,70.5813333 113.624,71.152 113.624,71.792 C113.624,72.432 113.488,73.0026667 113.216,73.504 C112.944,74.0053333 112.570667,74.392 112.096,74.664 C111.621333,74.936 111.090667,75.072 110.504,75.072 Z\",\"id\":\"monthsbehind\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"1.5\",\"strokeLinejoin\":\"round\",\"x\":\"0\",\"y\":\"5\",\"width\":\"130\",\"height\":\"87.5\",\"key\":2}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"1.5\",\"fill\":\"#FFFFFF\",\"strokeLinejoin\":\"round\",\"x\":\"8\",\"y\":\"0\",\"width\":\"8\",\"height\":\"11\",\"key\":3}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-2\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"1.5\",\"fill\":\"#FFFFFF\",\"strokeLinejoin\":\"round\",\"x\":\"114\",\"y\":\"0\",\"width\":\"8\",\"height\":\"11\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"0\",\"y1\":\"16.5\",\"x2\":\"129.5\",\"y2\":\"16.5\",\"id\":\"Line-4\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"1.5\",\"strokeLinecap\":\"square\",\"key\":5})]),React.createElement(\"path\",{\"d\":\"M40.268,86 L40.268,84.976 L33.996,84.976 L33.996,74.8 L32.812,74.8 L32.812,86 L40.268,86 Z M45.436,86.08 C46.2466667,86.08 46.9773333,85.896 47.628,85.528 C48.2786667,85.16 48.788,84.6506667 49.156,84 C49.524,83.3493333 49.708,82.6133333 49.708,81.792 C49.708,80.9706667 49.524,80.2346667 49.156,79.584 C48.788,78.9333333 48.2786667,78.4266667 47.628,78.064 C46.9773333,77.7013333 46.2466667,77.52 45.436,77.52 C44.6253333,77.52 43.8946667,77.7013333 43.244,78.064 C42.5933333,78.4266667 42.0813333,78.9333333 41.708,79.584 C41.3346667,80.2346667 41.148,80.9706667 41.148,81.792 C41.148,82.6133333 41.3346667,83.3493333 41.708,84 C42.0813333,84.6506667 42.5933333,85.16 43.244,85.528 C43.8946667,85.896 44.6253333,86.08 45.436,86.08 Z M45.436,85.072 C44.8386667,85.072 44.3026667,84.936 43.828,84.664 C43.3533333,84.392 42.98,84.0053333 42.708,83.504 C42.436,83.0026667 42.3,82.432 42.3,81.792 C42.3,81.152 42.436,80.5813333 42.708,80.08 C42.98,79.5786667 43.3533333,79.192 43.828,78.92 C44.3026667,78.648 44.8386667,78.512 45.436,78.512 C46.0333333,78.512 46.5693333,78.648 47.044,78.92 C47.5186667,79.192 47.8893333,79.5786667 48.156,80.08 C48.4226667,80.5813333 48.556,81.152 48.556,81.792 C48.556,82.432 48.4226667,83.0026667 48.156,83.504 C47.8893333,84.0053333 47.5186667,84.392 47.044,84.664 C46.5693333,84.936 46.0333333,85.072 45.436,85.072 Z M54.812,86 L57.468,79.104 L60.124,86 L61.196,86 L64.38,77.584 L63.34,77.584 L60.668,84.736 L57.98,77.584 L57.004,77.584 L54.3,84.736 L51.66,77.584 L50.572,77.584 L53.74,86 L54.812,86 Z M72.54,86.08 C73.628,86.08 74.4786667,85.864 75.092,85.432 C75.7053333,85 76.012,84.416 76.012,83.68 C76.012,83.136 75.868,82.7093333 75.58,82.4 C75.292,82.0906667 74.9453333,81.872 74.54,81.744 C74.1346667,81.616 73.596,81.488 72.924,81.36 C72.38,81.264 71.9533333,81.1706667 71.644,81.08 C71.3346667,80.9893333 71.076,80.848 70.868,80.656 C70.66,80.464 70.556,80.208 70.556,79.888 C70.556,79.472 70.74,79.136 71.108,78.88 C71.476,78.624 72.0226667,78.496 72.748,78.496 C73.708,78.496 74.5346667,78.736 75.228,79.216 L75.228,79.216 L75.724,78.304 C75.372,78.0693333 74.924,77.88 74.38,77.736 C73.836,77.592 73.292,77.52 72.748,77.52 C71.7026667,77.52 70.8866667,77.744 70.3,78.192 C69.7133333,78.64 69.42,79.216 69.42,79.92 C69.42,80.4853333 69.5666667,80.928 69.86,81.248 C70.1533333,81.568 70.508,81.7946667 70.924,81.928 C71.34,82.0613333 71.8893333,82.192 72.572,82.32 C73.084,82.4053333 73.4946667,82.4933333 73.804,82.584 C74.1133333,82.6746667 74.3693333,82.808 74.572,82.984 C74.7746667,83.16 74.876,83.4026667 74.876,83.712 C74.876,84.1493333 74.692,84.488 74.324,84.728 C73.956,84.968 73.388,85.088 72.62,85.088 C72.044,85.088 71.4893333,85 70.956,84.824 C70.4226667,84.648 69.98,84.4213333 69.628,84.144 L69.628,84.144 L69.116,85.04 C69.468,85.3386667 69.956,85.5866667 70.58,85.784 C71.204,85.9813333 71.8573333,86.08 72.54,86.08 Z M81.548,86.08 C82.3586667,86.08 83.0893333,85.896 83.74,85.528 C84.3906667,85.16 84.9,84.6506667 85.268,84 C85.636,83.3493333 85.82,82.6133333 85.82,81.792 C85.82,80.9706667 85.636,80.2346667 85.268,79.584 C84.9,78.9333333 84.3906667,78.4266667 83.74,78.064 C83.0893333,77.7013333 82.3586667,77.52 81.548,77.52 C80.7373333,77.52 80.0066667,77.7013333 79.356,78.064 C78.7053333,78.4266667 78.1933333,78.9333333 77.82,79.584 C77.4466667,80.2346667 77.26,80.9706667 77.26,81.792 C77.26,82.6133333 77.4466667,83.3493333 77.82,84 C78.1933333,84.6506667 78.7053333,85.16 79.356,85.528 C80.0066667,85.896 80.7373333,86.08 81.548,86.08 Z M81.548,85.072 C80.9506667,85.072 80.4146667,84.936 79.94,84.664 C79.4653333,84.392 79.092,84.0053333 78.82,83.504 C78.548,83.0026667 78.412,82.432 78.412,81.792 C78.412,81.152 78.548,80.5813333 78.82,80.08 C79.092,79.5786667 79.4653333,79.192 79.94,78.92 C80.4146667,78.648 80.9506667,78.512 81.548,78.512 C82.1453333,78.512 82.6813333,78.648 83.156,78.92 C83.6306667,79.192 84.0013333,79.5786667 84.268,80.08 C84.5346667,80.5813333 84.668,81.152 84.668,81.792 C84.668,82.432 84.5346667,83.0026667 84.268,83.504 C84.0013333,84.0053333 83.6306667,84.392 83.156,84.664 C82.6813333,84.936 82.1453333,85.072 81.548,85.072 Z M91.628,86.08 C92.3426667,86.08 92.988,85.9386667 93.564,85.656 C94.14,85.3733333 94.5933333,84.96 94.924,84.416 L94.924,84.416 L94.076,83.84 C93.7986667,84.256 93.4466667,84.5653333 93.02,84.768 C92.5933333,84.9706667 92.1293333,85.072 91.628,85.072 C91.02,85.072 90.4733333,84.936 89.988,84.664 C89.5026667,84.392 89.124,84.008 88.852,83.512 C88.58,83.016 88.444,82.4426667 88.444,81.792 C88.444,81.152 88.58,80.5813333 88.852,80.08 C89.124,79.5786667 89.5026667,79.192 89.988,78.92 C90.4733333,78.648 91.02,78.512 91.628,78.512 C92.1293333,78.512 92.5933333,78.616 93.02,78.824 C93.4466667,79.032 93.7986667,79.344 94.076,79.76 L94.076,79.76 L94.924,79.184 C94.5933333,78.64 94.1426667,78.2266667 93.572,77.944 C93.0013333,77.6613333 92.3533333,77.52 91.628,77.52 C90.796,77.52 90.052,77.7013333 89.396,78.064 C88.74,78.4266667 88.2253333,78.9333333 87.852,79.584 C87.4786667,80.2346667 87.292,80.9706667 87.292,81.792 C87.292,82.6133333 87.4786667,83.352 87.852,84.008 C88.2253333,84.664 88.74,85.1733333 89.396,85.536 C90.052,85.8986667 90.796,86.08 91.628,86.08 Z M97.724,75.744 C97.9586667,75.744 98.156,75.664 98.316,75.504 C98.476,75.344 98.556,75.1466667 98.556,74.912 C98.556,74.6986667 98.476,74.5146667 98.316,74.36 C98.156,74.2053333 97.9586667,74.128 97.724,74.128 C97.4893333,74.128 97.292,74.208 97.132,74.368 C96.972,74.528 96.892,74.7146667 96.892,74.928 C96.892,75.152 96.972,75.344 97.132,75.504 C97.292,75.664 97.4893333,75.744 97.724,75.744 Z M98.284,86 L98.284,77.584 L97.148,77.584 L97.148,86 L98.284,86 Z M104.892,86.08 C105.702667,86.08 106.433333,85.896 107.084,85.528 C107.734667,85.16 108.244,84.6506667 108.612,84 C108.98,83.3493333 109.164,82.6133333 109.164,81.792 C109.164,80.9706667 108.98,80.2346667 108.612,79.584 C108.244,78.9333333 107.734667,78.4266667 107.084,78.064 C106.433333,77.7013333 105.702667,77.52 104.892,77.52 C104.081333,77.52 103.350667,77.7013333 102.7,78.064 C102.049333,78.4266667 101.537333,78.9333333 101.164,79.584 C100.790667,80.2346667 100.604,80.9706667 100.604,81.792 C100.604,82.6133333 100.790667,83.3493333 101.164,84 C101.537333,84.6506667 102.049333,85.16 102.7,85.528 C103.350667,85.896 104.081333,86.08 104.892,86.08 Z M104.892,85.072 C104.294667,85.072 103.758667,84.936 103.284,84.664 C102.809333,84.392 102.436,84.0053333 102.164,83.504 C101.892,83.0026667 101.756,82.432 101.756,81.792 C101.756,81.152 101.892,80.5813333 102.164,80.08 C102.436,79.5786667 102.809333,79.192 103.284,78.92 C103.758667,78.648 104.294667,78.512 104.892,78.512 C105.489333,78.512 106.025333,78.648 106.5,78.92 C106.974667,79.192 107.345333,79.5786667 107.612,80.08 C107.878667,80.5813333 108.012,81.152 108.012,81.792 C108.012,82.432 107.878667,83.0026667 107.612,83.504 C107.345333,84.0053333 106.974667,84.392 106.5,84.664 C106.025333,84.936 105.489333,85.072 104.892,85.072 Z M115.052,82.16 L115.052,81.168 L110.86,81.168 L110.86,82.16 L115.052,82.16 Z M5.508,116.08 C6.18,116.08 6.796,115.962667 7.356,115.728 C7.916,115.493333 8.38266667,115.152 8.756,114.704 L8.756,114.704 L8.116,113.968 C7.796,114.330667 7.41733333,114.605333 6.98,114.792 C6.54266667,114.978667 6.06266667,115.072 5.54,115.072 C4.612,115.072 3.844,114.802667 3.236,114.264 C2.628,113.725333 2.292,113.018667 2.228,112.144 L2.228,112.144 L9.268,112.144 L9.284,111.792 C9.284,110.96 9.108,110.221333 8.756,109.576 C8.404,108.930667 7.91866667,108.426667 7.3,108.064 C6.68133333,107.701333 5.98266667,107.52 5.204,107.52 C4.42533333,107.52 3.724,107.701333 3.1,108.064 C2.476,108.426667 1.98533333,108.933333 1.628,109.584 C1.27066667,110.234667 1.092,110.970667 1.092,111.792 C1.092,112.613333 1.27866667,113.349333 1.652,114 C2.02533333,114.650667 2.54533333,115.16 3.212,115.528 C3.87866667,115.896 4.644,116.08 5.508,116.08 Z M8.196,111.296 L2.228,111.296 C2.30266667,110.464 2.61466667,109.789333 3.164,109.272 C3.71333333,108.754667 4.39333333,108.496 5.204,108.496 C6.02533333,108.496 6.71066667,108.754667 7.26,109.272 C7.80933333,109.789333 8.12133333,110.464 8.196,111.296 L8.196,111.296 Z M15.092,116.08 C15.8066667,116.08 16.452,115.938667 17.028,115.656 C17.604,115.373333 18.0573333,114.96 18.388,114.416 L18.388,114.416 L17.54,113.84 C17.2626667,114.256 16.9106667,114.565333 16.484,114.768 C16.0573333,114.970667 15.5933333,115.072 15.092,115.072 C14.484,115.072 13.9373333,114.936 13.452,114.664 C12.9666667,114.392 12.588,114.008 12.316,113.512 C12.044,113.016 11.908,112.442667 11.908,111.792 C11.908,111.152 12.044,110.581333 12.316,110.08 C12.588,109.578667 12.9666667,109.192 13.452,108.92 C13.9373333,108.648 14.484,108.512 15.092,108.512 C15.5933333,108.512 16.0573333,108.616 16.484,108.824 C16.9106667,109.032 17.2626667,109.344 17.54,109.76 L17.54,109.76 L18.388,109.184 C18.0573333,108.64 17.6066667,108.226667 17.036,107.944 C16.4653333,107.661333 15.8173333,107.52 15.092,107.52 C14.26,107.52 13.516,107.701333 12.86,108.064 C12.204,108.426667 11.6893333,108.933333 11.316,109.584 C10.9426667,110.234667 10.756,110.970667 10.756,111.792 C10.756,112.613333 10.9426667,113.352 11.316,114.008 C11.6893333,114.664 12.204,115.173333 12.86,115.536 C13.516,115.898667 14.26,116.08 15.092,116.08 Z M24.052,116.08 C24.8626667,116.08 25.5933333,115.896 26.244,115.528 C26.8946667,115.16 27.404,114.650667 27.772,114 C28.14,113.349333 28.324,112.613333 28.324,111.792 C28.324,110.970667 28.14,110.234667 27.772,109.584 C27.404,108.933333 26.8946667,108.426667 26.244,108.064 C25.5933333,107.701333 24.8626667,107.52 24.052,107.52 C23.2413333,107.52 22.5106667,107.701333 21.86,108.064 C21.2093333,108.426667 20.6973333,108.933333 20.324,109.584 C19.9506667,110.234667 19.764,110.970667 19.764,111.792 C19.764,112.613333 19.9506667,113.349333 20.324,114 C20.6973333,114.650667 21.2093333,115.16 21.86,115.528 C22.5106667,115.896 23.2413333,116.08 24.052,116.08 Z M24.052,115.072 C23.4546667,115.072 22.9186667,114.936 22.444,114.664 C21.9693333,114.392 21.596,114.005333 21.324,113.504 C21.052,113.002667 20.916,112.432 20.916,111.792 C20.916,111.152 21.052,110.581333 21.324,110.08 C21.596,109.578667 21.9693333,109.192 22.444,108.92 C22.9186667,108.648 23.4546667,108.512 24.052,108.512 C24.6493333,108.512 25.1853333,108.648 25.66,108.92 C26.1346667,109.192 26.5053333,109.578667 26.772,110.08 C27.0386667,110.581333 27.172,111.152 27.172,111.792 C27.172,112.432 27.0386667,113.002667 26.772,113.504 C26.5053333,114.005333 26.1346667,114.392 25.66,114.664 C25.1853333,114.936 24.6493333,115.072 24.052,115.072 Z M31.78,116 L31.78,111.584 C31.78,110.634667 32.044,109.890667 32.572,109.352 C33.1,108.813333 33.8173333,108.544 34.724,108.544 C35.5346667,108.544 36.1586667,108.773333 36.596,109.232 C37.0333333,109.690667 37.252,110.357333 37.252,111.232 L37.252,111.232 L37.252,116 L38.388,116 L38.388,111.12 C38.388,109.946667 38.076,109.053333 37.452,108.44 C36.828,107.826667 35.988,107.52 34.932,107.52 C34.2066667,107.52 33.5693333,107.661333 33.02,107.944 C32.4706667,108.226667 32.0413333,108.624 31.732,109.136 L31.732,109.136 L31.732,107.584 L30.644,107.584 L30.644,116 L31.78,116 Z M44.916,116.08 C45.7266667,116.08 46.4573333,115.896 47.108,115.528 C47.7586667,115.16 48.268,114.650667 48.636,114 C49.004,113.349333 49.188,112.613333 49.188,111.792 C49.188,110.970667 49.004,110.234667 48.636,109.584 C48.268,108.933333 47.7586667,108.426667 47.108,108.064 C46.4573333,107.701333 45.7266667,107.52 44.916,107.52 C44.1053333,107.52 43.3746667,107.701333 42.724,108.064 C42.0733333,108.426667 41.5613333,108.933333 41.188,109.584 C40.8146667,110.234667 40.628,110.970667 40.628,111.792 C40.628,112.613333 40.8146667,113.349333 41.188,114 C41.5613333,114.650667 42.0733333,115.16 42.724,115.528 C43.3746667,115.896 44.1053333,116.08 44.916,116.08 Z M44.916,115.072 C44.3186667,115.072 43.7826667,114.936 43.308,114.664 C42.8333333,114.392 42.46,114.005333 42.188,113.504 C41.916,113.002667 41.78,112.432 41.78,111.792 C41.78,111.152 41.916,110.581333 42.188,110.08 C42.46,109.578667 42.8333333,109.192 43.308,108.92 C43.7826667,108.648 44.3186667,108.512 44.916,108.512 C45.5133333,108.512 46.0493333,108.648 46.524,108.92 C46.9986667,109.192 47.3693333,109.578667 47.636,110.08 C47.9026667,110.581333 48.036,111.152 48.036,111.792 C48.036,112.432 47.9026667,113.002667 47.636,113.504 C47.3693333,114.005333 46.9986667,114.392 46.524,114.664 C46.0493333,114.936 45.5133333,115.072 44.916,115.072 Z M52.644,116 L52.644,111.584 C52.644,110.634667 52.8973333,109.890667 53.404,109.352 C53.9106667,108.813333 54.596,108.544 55.46,108.544 C56.2386667,108.544 56.8386667,108.773333 57.26,109.232 C57.6813333,109.690667 57.892,110.357333 57.892,111.232 L57.892,111.232 L57.892,116 L59.028,116 L59.028,111.584 C59.028,110.634667 59.2786667,109.890667 59.78,109.352 C60.2813333,108.813333 60.9693333,108.544 61.844,108.544 C62.612,108.544 63.2066667,108.773333 63.628,109.232 C64.0493333,109.690667 64.26,110.357333 64.26,111.232 L64.26,111.232 L64.26,116 L65.396,116 L65.396,111.12 C65.396,109.936 65.0946667,109.04 64.492,108.432 C63.8893333,107.824 63.06,107.52 62.004,107.52 C61.2573333,107.52 60.5933333,107.677333 60.012,107.992 C59.4306667,108.306667 58.9853333,108.741333 58.676,109.296 C58.42,108.709333 58.0333333,108.266667 57.516,107.968 C56.9986667,107.669333 56.388,107.52 55.684,107.52 C54.9906667,107.52 54.3773333,107.658667 53.844,107.936 C53.3106667,108.213333 52.8946667,108.608 52.596,109.12 L52.596,109.12 L52.596,107.584 L51.508,107.584 L51.508,116 L52.644,116 Z M69.06,105.744 C69.2946667,105.744 69.492,105.664 69.652,105.504 C69.812,105.344 69.892,105.146667 69.892,104.912 C69.892,104.698667 69.812,104.514667 69.652,104.36 C69.492,104.205333 69.2946667,104.128 69.06,104.128 C68.8253333,104.128 68.628,104.208 68.468,104.368 C68.308,104.528 68.228,104.714667 68.228,104.928 C68.228,105.152 68.308,105.344 68.468,105.504 C68.628,105.664 68.8253333,105.744 69.06,105.744 Z M69.62,116 L69.62,107.584 L68.484,107.584 L68.484,116 L69.62,116 Z M76.276,116.08 C76.9906667,116.08 77.636,115.938667 78.212,115.656 C78.788,115.373333 79.2413333,114.96 79.572,114.416 L79.572,114.416 L78.724,113.84 C78.4466667,114.256 78.0946667,114.565333 77.668,114.768 C77.2413333,114.970667 76.7773333,115.072 76.276,115.072 C75.668,115.072 75.1213333,114.936 74.636,114.664 C74.1506667,114.392 73.772,114.008 73.5,113.512 C73.228,113.016 73.092,112.442667 73.092,111.792 C73.092,111.152 73.228,110.581333 73.5,110.08 C73.772,109.578667 74.1506667,109.192 74.636,108.92 C75.1213333,108.648 75.668,108.512 76.276,108.512 C76.7773333,108.512 77.2413333,108.616 77.668,108.824 C78.0946667,109.032 78.4466667,109.344 78.724,109.76 L78.724,109.76 L79.572,109.184 C79.2413333,108.64 78.7906667,108.226667 78.22,107.944 C77.6493333,107.661333 77.0013333,107.52 76.276,107.52 C75.444,107.52 74.7,107.701333 74.044,108.064 C73.388,108.426667 72.8733333,108.933333 72.5,109.584 C72.1266667,110.234667 71.94,110.970667 71.94,111.792 C71.94,112.613333 72.1266667,113.352 72.5,114.008 C72.8733333,114.664 73.388,115.173333 74.044,115.536 C74.7,115.898667 75.444,116.08 76.276,116.08 Z M87.316,116 L87.316,108.544 L89.876,108.544 L89.876,107.584 L87.284,107.584 L87.284,106.592 C87.284,106.069333 87.4093333,105.674667 87.66,105.408 C87.9106667,105.141333 88.2813333,105.008 88.772,105.008 C89.2733333,105.008 89.6893333,105.146667 90.02,105.424 L90.02,105.424 L90.404,104.576 C90.2013333,104.405333 89.9506667,104.274667 89.652,104.184 C89.3533333,104.093333 89.044,104.048 88.724,104.048 C87.9133333,104.048 87.2866667,104.272 86.844,104.72 C86.4013333,105.168 86.18,105.776 86.18,106.544 L86.18,106.544 L86.18,107.584 L84.676,107.584 L84.676,108.544 L86.18,108.544 L86.18,116 L87.316,116 Z M93.78,116.08 C94.4626667,116.08 95.052,115.957333 95.548,115.712 C96.044,115.466667 96.42,115.125333 96.676,114.688 L96.676,114.688 L96.676,116 L97.764,116 L97.764,110.784 C97.764,109.706667 97.4706667,108.893333 96.884,108.344 C96.2973333,107.794667 95.4546667,107.52 94.356,107.52 C93.6946667,107.52 93.0653333,107.618667 92.468,107.816 C91.8706667,108.013333 91.3586667,108.293333 90.932,108.656 L90.932,108.656 L91.444,109.504 C91.796,109.194667 92.2173333,108.952 92.708,108.776 C93.1986667,108.6 93.7106667,108.512 94.244,108.512 C95.0226667,108.512 95.6146667,108.701333 96.02,109.08 C96.4253333,109.458667 96.628,110.010667 96.628,110.736 L96.628,110.736 L96.628,111.248 L93.956,111.248 C92.8253333,111.248 92.0013333,111.466667 91.484,111.904 C90.9666667,112.341333 90.708,112.917333 90.708,113.632 C90.708,114.368 90.9853333,114.96 91.54,115.408 C92.0946667,115.856 92.8413333,116.08 93.78,116.08 Z M93.956,115.184 C93.284,115.184 92.7613333,115.042667 92.388,114.76 C92.0146667,114.477333 91.828,114.090667 91.828,113.6 C91.828,112.597333 92.548,112.096 93.988,112.096 L93.988,112.096 L96.628,112.096 L96.628,113.472 C96.404,114.026667 96.0626667,114.450667 95.604,114.744 C95.1453333,115.037333 94.596,115.184 93.956,115.184 Z M101.988,116 L101.988,111.584 C101.988,110.634667 102.241333,109.890667 102.748,109.352 C103.254667,108.813333 103.94,108.544 104.804,108.544 C105.582667,108.544 106.182667,108.773333 106.604,109.232 C107.025333,109.690667 107.236,110.357333 107.236,111.232 L107.236,111.232 L107.236,116 L108.372,116 L108.372,111.584 C108.372,110.634667 108.622667,109.890667 109.124,109.352 C109.625333,108.813333 110.313333,108.544 111.188,108.544 C111.956,108.544 112.550667,108.773333 112.972,109.232 C113.393333,109.690667 113.604,110.357333 113.604,111.232 L113.604,111.232 L113.604,116 L114.74,116 L114.74,111.12 C114.74,109.936 114.438667,109.04 113.836,108.432 C113.233333,107.824 112.404,107.52 111.348,107.52 C110.601333,107.52 109.937333,107.677333 109.356,107.992 C108.774667,108.306667 108.329333,108.741333 108.02,109.296 C107.764,108.709333 107.377333,108.266667 106.86,107.968 C106.342667,107.669333 105.732,107.52 105.028,107.52 C104.334667,107.52 103.721333,107.658667 103.188,107.936 C102.654667,108.213333 102.238667,108.608 101.94,109.12 L101.94,109.12 L101.94,107.584 L100.852,107.584 L100.852,116 L101.988,116 Z M118.404,105.744 C118.638667,105.744 118.836,105.664 118.996,105.504 C119.156,105.344 119.236,105.146667 119.236,104.912 C119.236,104.698667 119.156,104.514667 118.996,104.36 C118.836,104.205333 118.638667,104.128 118.404,104.128 C118.169333,104.128 117.972,104.208 117.812,104.368 C117.652,104.528 117.572,104.714667 117.572,104.928 C117.572,105.152 117.652,105.344 117.812,105.504 C117.972,105.664 118.169333,105.744 118.404,105.744 Z M118.964,116 L118.964,107.584 L117.828,107.584 L117.828,116 L118.964,116 Z M123.268,116 L123.268,104.128 L122.132,104.128 L122.132,116 L123.268,116 Z M127.012,105.744 C127.246667,105.744 127.444,105.664 127.604,105.504 C127.764,105.344 127.844,105.146667 127.844,104.912 C127.844,104.698667 127.764,104.514667 127.604,104.36 C127.444,104.205333 127.246667,104.128 127.012,104.128 C126.777333,104.128 126.58,104.208 126.42,104.368 C126.26,104.528 126.18,104.714667 126.18,104.928 C126.18,105.152 126.26,105.344 126.42,105.504 C126.58,105.664 126.777333,105.744 127.012,105.744 Z M127.572,116 L127.572,107.584 L126.436,107.584 L126.436,116 L127.572,116 Z M134.308,116.08 C134.98,116.08 135.596,115.962667 136.156,115.728 C136.716,115.493333 137.182667,115.152 137.556,114.704 L137.556,114.704 L136.916,113.968 C136.596,114.330667 136.217333,114.605333 135.78,114.792 C135.342667,114.978667 134.862667,115.072 134.34,115.072 C133.412,115.072 132.644,114.802667 132.036,114.264 C131.428,113.725333 131.092,113.018667 131.028,112.144 L131.028,112.144 L138.068,112.144 L138.084,111.792 C138.084,110.96 137.908,110.221333 137.556,109.576 C137.204,108.930667 136.718667,108.426667 136.1,108.064 C135.481333,107.701333 134.782667,107.52 134.004,107.52 C133.225333,107.52 132.524,107.701333 131.9,108.064 C131.276,108.426667 130.785333,108.933333 130.428,109.584 C130.070667,110.234667 129.892,110.970667 129.892,111.792 C129.892,112.613333 130.078667,113.349333 130.452,114 C130.825333,114.650667 131.345333,115.16 132.012,115.528 C132.678667,115.896 133.444,116.08 134.308,116.08 Z M136.996,111.296 L131.028,111.296 C131.102667,110.464 131.414667,109.789333 131.964,109.272 C132.513333,108.754667 133.193333,108.496 134.004,108.496 C134.825333,108.496 135.510667,108.754667 136.06,109.272 C136.609333,109.789333 136.921333,110.464 136.996,111.296 L136.996,111.296 Z M142.66,116.08 C143.748,116.08 144.598667,115.864 145.212,115.432 C145.825333,115 146.132,114.416 146.132,113.68 C146.132,113.136 145.988,112.709333 145.7,112.4 C145.412,112.090667 145.065333,111.872 144.66,111.744 C144.254667,111.616 143.716,111.488 143.044,111.36 C142.5,111.264 142.073333,111.170667 141.764,111.08 C141.454667,110.989333 141.196,110.848 140.988,110.656 C140.78,110.464 140.676,110.208 140.676,109.888 C140.676,109.472 140.86,109.136 141.228,108.88 C141.596,108.624 142.142667,108.496 142.868,108.496 C143.828,108.496 144.654667,108.736 145.348,109.216 L145.348,109.216 L145.844,108.304 C145.492,108.069333 145.044,107.88 144.5,107.736 C143.956,107.592 143.412,107.52 142.868,107.52 C141.822667,107.52 141.006667,107.744 140.42,108.192 C139.833333,108.64 139.54,109.216 139.54,109.92 C139.54,110.485333 139.686667,110.928 139.98,111.248 C140.273333,111.568 140.628,111.794667 141.044,111.928 C141.46,112.061333 142.009333,112.192 142.692,112.32 C143.204,112.405333 143.614667,112.493333 143.924,112.584 C144.233333,112.674667 144.489333,112.808 144.692,112.984 C144.894667,113.16 144.996,113.402667 144.996,113.712 C144.996,114.149333 144.812,114.488 144.444,114.728 C144.076,114.968 143.508,115.088 142.74,115.088 C142.164,115.088 141.609333,115 141.076,114.824 C140.542667,114.648 140.1,114.421333 139.748,114.144 L139.748,114.144 L139.236,115.04 C139.588,115.338667 140.076,115.586667 140.7,115.784 C141.324,115.981333 141.977333,116.08 142.66,116.08 Z\",\"id\":\"Lowsocio-economicfamilies\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M327.332,86 L327.332,77.088 L331.732,84.576 L332.292,84.576 L336.692,77.04 L336.692,86 L337.828,86 L337.828,74.8 L336.852,74.8 L332.036,83.104 L327.172,74.8 L326.196,74.8 L326.196,86 L327.332,86 Z M341.812,75.744 C342.046667,75.744 342.244,75.664 342.404,75.504 C342.564,75.344 342.644,75.1466667 342.644,74.912 C342.644,74.6986667 342.564,74.5146667 342.404,74.36 C342.244,74.2053333 342.046667,74.128 341.812,74.128 C341.577333,74.128 341.38,74.208 341.22,74.368 C341.06,74.528 340.98,74.7146667 340.98,74.928 C340.98,75.152 341.06,75.344 341.22,75.504 C341.38,75.664 341.577333,75.744 341.812,75.744 Z M342.372,86 L342.372,77.584 L341.236,77.584 L341.236,86 L342.372,86 Z M348.884,86.08 C349.588,86.08 350.22,85.9306667 350.78,85.632 C351.34,85.3333333 351.790667,84.9013333 352.132,84.336 L352.132,84.336 L352.132,86 L353.22,86 L353.22,74.128 L352.084,74.128 L352.084,79.184 C351.732,78.64 351.281333,78.2266667 350.732,77.944 C350.182667,77.6613333 349.566667,77.52 348.884,77.52 C348.094667,77.52 347.38,77.6986667 346.74,78.056 C346.1,78.4133333 345.598667,78.9173333 345.236,79.568 C344.873333,80.2186667 344.692,80.96 344.692,81.792 C344.692,82.624 344.873333,83.3653333 345.236,84.016 C345.598667,84.6666667 346.1,85.1733333 346.74,85.536 C347.38,85.8986667 348.094667,86.08 348.884,86.08 Z M348.98,85.072 C348.382667,85.072 347.846667,84.936 347.372,84.664 C346.897333,84.392 346.524,84.0053333 346.252,83.504 C345.98,83.0026667 345.844,82.432 345.844,81.792 C345.844,81.152 345.98,80.5813333 346.252,80.08 C346.524,79.5786667 346.897333,79.192 347.372,78.92 C347.846667,78.648 348.382667,78.512 348.98,78.512 C349.566667,78.512 350.097333,78.648 350.572,78.92 C351.046667,79.192 351.42,79.5786667 351.692,80.08 C351.964,80.5813333 352.1,81.152 352.1,81.792 C352.1,82.432 351.964,83.0026667 351.692,83.504 C351.42,84.0053333 351.046667,84.392 350.572,84.664 C350.097333,84.936 349.566667,85.072 348.98,85.072 Z M359.732,86.08 C360.436,86.08 361.068,85.9306667 361.628,85.632 C362.188,85.3333333 362.638667,84.9013333 362.98,84.336 L362.98,84.336 L362.98,86 L364.068,86 L364.068,74.128 L362.932,74.128 L362.932,79.184 C362.58,78.64 362.129333,78.2266667 361.58,77.944 C361.030667,77.6613333 360.414667,77.52 359.732,77.52 C358.942667,77.52 358.228,77.6986667 357.588,78.056 C356.948,78.4133333 356.446667,78.9173333 356.084,79.568 C355.721333,80.2186667 355.54,80.96 355.54,81.792 C355.54,82.624 355.721333,83.3653333 356.084,84.016 C356.446667,84.6666667 356.948,85.1733333 357.588,85.536 C358.228,85.8986667 358.942667,86.08 359.732,86.08 Z M359.828,85.072 C359.230667,85.072 358.694667,84.936 358.22,84.664 C357.745333,84.392 357.372,84.0053333 357.1,83.504 C356.828,83.0026667 356.692,82.432 356.692,81.792 C356.692,81.152 356.828,80.5813333 357.1,80.08 C357.372,79.5786667 357.745333,79.192 358.22,78.92 C358.694667,78.648 359.230667,78.512 359.828,78.512 C360.414667,78.512 360.945333,78.648 361.42,78.92 C361.894667,79.192 362.268,79.5786667 362.54,80.08 C362.812,80.5813333 362.948,81.152 362.948,81.792 C362.948,82.432 362.812,83.0026667 362.54,83.504 C362.268,84.0053333 361.894667,84.392 361.42,84.664 C360.945333,84.936 360.414667,85.072 359.828,85.072 Z M368.372,86 L368.372,74.128 L367.236,74.128 L367.236,86 L368.372,86 Z M375.108,86.08 C375.78,86.08 376.396,85.9626667 376.956,85.728 C377.516,85.4933333 377.982667,85.152 378.356,84.704 L378.356,84.704 L377.716,83.968 C377.396,84.3306667 377.017333,84.6053333 376.58,84.792 C376.142667,84.9786667 375.662667,85.072 375.14,85.072 C374.212,85.072 373.444,84.8026667 372.836,84.264 C372.228,83.7253333 371.892,83.0186667 371.828,82.144 L371.828,82.144 L378.868,82.144 L378.884,81.792 C378.884,80.96 378.708,80.2213333 378.356,79.576 C378.004,78.9306667 377.518667,78.4266667 376.9,78.064 C376.281333,77.7013333 375.582667,77.52 374.804,77.52 C374.025333,77.52 373.324,77.7013333 372.7,78.064 C372.076,78.4266667 371.585333,78.9333333 371.228,79.584 C370.870667,80.2346667 370.692,80.9706667 370.692,81.792 C370.692,82.6133333 370.878667,83.3493333 371.252,84 C371.625333,84.6506667 372.145333,85.16 372.812,85.528 C373.478667,85.896 374.244,86.08 375.108,86.08 Z M377.796,81.296 L371.828,81.296 C371.902667,80.464 372.214667,79.7893333 372.764,79.272 C373.313333,78.7546667 373.993333,78.496 374.804,78.496 C375.625333,78.496 376.310667,78.7546667 376.86,79.272 C377.409333,79.7893333 377.721333,80.464 377.796,81.296 L377.796,81.296 Z M385.972,75.744 C386.206667,75.744 386.404,75.664 386.564,75.504 C386.724,75.344 386.804,75.1466667 386.804,74.912 C386.804,74.6986667 386.724,74.5146667 386.564,74.36 C386.404,74.2053333 386.206667,74.128 385.972,74.128 C385.737333,74.128 385.54,74.208 385.38,74.368 C385.22,74.528 385.14,74.7146667 385.14,74.928 C385.14,75.152 385.22,75.344 385.38,75.504 C385.54,75.664 385.737333,75.744 385.972,75.744 Z M386.532,86 L386.532,77.584 L385.396,77.584 L385.396,86 L386.532,86 Z M390.836,86 L390.836,81.584 C390.836,80.6346667 391.1,79.8906667 391.628,79.352 C392.156,78.8133333 392.873333,78.544 393.78,78.544 C394.590667,78.544 395.214667,78.7733333 395.652,79.232 C396.089333,79.6906667 396.308,80.3573333 396.308,81.232 L396.308,81.232 L396.308,86 L397.444,86 L397.444,81.12 C397.444,79.9466667 397.132,79.0533333 396.508,78.44 C395.884,77.8266667 395.044,77.52 393.988,77.52 C393.262667,77.52 392.625333,77.6613333 392.076,77.944 C391.526667,78.2266667 391.097333,78.624 390.788,79.136 L390.788,79.136 L390.788,77.584 L389.7,77.584 L389.7,86 L390.836,86 Z M404.02,86.08 C404.734667,86.08 405.38,85.9386667 405.956,85.656 C406.532,85.3733333 406.985333,84.96 407.316,84.416 L407.316,84.416 L406.468,83.84 C406.190667,84.256 405.838667,84.5653333 405.412,84.768 C404.985333,84.9706667 404.521333,85.072 404.02,85.072 C403.412,85.072 402.865333,84.936 402.38,84.664 C401.894667,84.392 401.516,84.008 401.244,83.512 C400.972,83.016 400.836,82.4426667 400.836,81.792 C400.836,81.152 400.972,80.5813333 401.244,80.08 C401.516,79.5786667 401.894667,79.192 402.38,78.92 C402.865333,78.648 403.412,78.512 404.02,78.512 C404.521333,78.512 404.985333,78.616 405.412,78.824 C405.838667,79.032 406.190667,79.344 406.468,79.76 L406.468,79.76 L407.316,79.184 C406.985333,78.64 406.534667,78.2266667 405.964,77.944 C405.393333,77.6613333 404.745333,77.52 404.02,77.52 C403.188,77.52 402.444,77.7013333 401.788,78.064 C401.132,78.4266667 400.617333,78.9333333 400.244,79.584 C399.870667,80.2346667 399.684,80.9706667 399.684,81.792 C399.684,82.6133333 399.870667,83.352 400.244,84.008 C400.617333,84.664 401.132,85.1733333 401.788,85.536 C402.444,85.8986667 403.188,86.08 404.02,86.08 Z M412.98,86.08 C413.790667,86.08 414.521333,85.896 415.172,85.528 C415.822667,85.16 416.332,84.6506667 416.7,84 C417.068,83.3493333 417.252,82.6133333 417.252,81.792 C417.252,80.9706667 417.068,80.2346667 416.7,79.584 C416.332,78.9333333 415.822667,78.4266667 415.172,78.064 C414.521333,77.7013333 413.790667,77.52 412.98,77.52 C412.169333,77.52 411.438667,77.7013333 410.788,78.064 C410.137333,78.4266667 409.625333,78.9333333 409.252,79.584 C408.878667,80.2346667 408.692,80.9706667 408.692,81.792 C408.692,82.6133333 408.878667,83.3493333 409.252,84 C409.625333,84.6506667 410.137333,85.16 410.788,85.528 C411.438667,85.896 412.169333,86.08 412.98,86.08 Z M412.98,85.072 C412.382667,85.072 411.846667,84.936 411.372,84.664 C410.897333,84.392 410.524,84.0053333 410.252,83.504 C409.98,83.0026667 409.844,82.432 409.844,81.792 C409.844,81.152 409.98,80.5813333 410.252,80.08 C410.524,79.5786667 410.897333,79.192 411.372,78.92 C411.846667,78.648 412.382667,78.512 412.98,78.512 C413.577333,78.512 414.113333,78.648 414.588,78.92 C415.062667,79.192 415.433333,79.5786667 415.7,80.08 C415.966667,80.5813333 416.1,81.152 416.1,81.792 C416.1,82.432 415.966667,83.0026667 415.7,83.504 C415.433333,84.0053333 415.062667,84.392 414.588,84.664 C414.113333,84.936 413.577333,85.072 412.98,85.072 Z M420.708,86 L420.708,81.584 C420.708,80.6346667 420.961333,79.8906667 421.468,79.352 C421.974667,78.8133333 422.66,78.544 423.524,78.544 C424.302667,78.544 424.902667,78.7733333 425.324,79.232 C425.745333,79.6906667 425.956,80.3573333 425.956,81.232 L425.956,81.232 L425.956,86 L427.092,86 L427.092,81.584 C427.092,80.6346667 427.342667,79.8906667 427.844,79.352 C428.345333,78.8133333 429.033333,78.544 429.908,78.544 C430.676,78.544 431.270667,78.7733333 431.692,79.232 C432.113333,79.6906667 432.324,80.3573333 432.324,81.232 L432.324,81.232 L432.324,86 L433.46,86 L433.46,81.12 C433.46,79.936 433.158667,79.04 432.556,78.432 C431.953333,77.824 431.124,77.52 430.068,77.52 C429.321333,77.52 428.657333,77.6773333 428.076,77.992 C427.494667,78.3066667 427.049333,78.7413333 426.74,79.296 C426.484,78.7093333 426.097333,78.2666667 425.58,77.968 C425.062667,77.6693333 424.452,77.52 423.748,77.52 C423.054667,77.52 422.441333,77.6586667 421.908,77.936 C421.374667,78.2133333 420.958667,78.608 420.66,79.12 L420.66,79.12 L420.66,77.584 L419.572,77.584 L419.572,86 L420.708,86 Z M440.116,86.08 C440.788,86.08 441.404,85.9626667 441.964,85.728 C442.524,85.4933333 442.990667,85.152 443.364,84.704 L443.364,84.704 L442.724,83.968 C442.404,84.3306667 442.025333,84.6053333 441.588,84.792 C441.150667,84.9786667 440.670667,85.072 440.148,85.072 C439.22,85.072 438.452,84.8026667 437.844,84.264 C437.236,83.7253333 436.9,83.0186667 436.836,82.144 L436.836,82.144 L443.876,82.144 L443.892,81.792 C443.892,80.96 443.716,80.2213333 443.364,79.576 C443.012,78.9306667 442.526667,78.4266667 441.908,78.064 C441.289333,77.7013333 440.590667,77.52 439.812,77.52 C439.033333,77.52 438.332,77.7013333 437.708,78.064 C437.084,78.4266667 436.593333,78.9333333 436.236,79.584 C435.878667,80.2346667 435.7,80.9706667 435.7,81.792 C435.7,82.6133333 435.886667,83.3493333 436.26,84 C436.633333,84.6506667 437.153333,85.16 437.82,85.528 C438.486667,85.896 439.252,86.08 440.116,86.08 Z M442.804,81.296 L436.836,81.296 C436.910667,80.464 437.222667,79.7893333 437.772,79.272 C438.321333,78.7546667 439.001333,78.496 439.812,78.496 C440.633333,78.496 441.318667,78.7546667 441.868,79.272 C442.417333,79.7893333 442.729333,80.464 442.804,81.296 L442.804,81.296 Z M356.292,116 L356.292,108.544 L358.852,108.544 L358.852,107.584 L356.26,107.584 L356.26,106.592 C356.26,106.069333 356.385333,105.674667 356.636,105.408 C356.886667,105.141333 357.257333,105.008 357.748,105.008 C358.249333,105.008 358.665333,105.146667 358.996,105.424 L358.996,105.424 L359.38,104.576 C359.177333,104.405333 358.926667,104.274667 358.628,104.184 C358.329333,104.093333 358.02,104.048 357.7,104.048 C356.889333,104.048 356.262667,104.272 355.82,104.72 C355.377333,105.168 355.156,105.776 355.156,106.544 L355.156,106.544 L355.156,107.584 L353.652,107.584 L353.652,108.544 L355.156,108.544 L355.156,116 L356.292,116 Z M362.756,116.08 C363.438667,116.08 364.028,115.957333 364.524,115.712 C365.02,115.466667 365.396,115.125333 365.652,114.688 L365.652,114.688 L365.652,116 L366.74,116 L366.74,110.784 C366.74,109.706667 366.446667,108.893333 365.86,108.344 C365.273333,107.794667 364.430667,107.52 363.332,107.52 C362.670667,107.52 362.041333,107.618667 361.444,107.816 C360.846667,108.013333 360.334667,108.293333 359.908,108.656 L359.908,108.656 L360.42,109.504 C360.772,109.194667 361.193333,108.952 361.684,108.776 C362.174667,108.6 362.686667,108.512 363.22,108.512 C363.998667,108.512 364.590667,108.701333 364.996,109.08 C365.401333,109.458667 365.604,110.010667 365.604,110.736 L365.604,110.736 L365.604,111.248 L362.932,111.248 C361.801333,111.248 360.977333,111.466667 360.46,111.904 C359.942667,112.341333 359.684,112.917333 359.684,113.632 C359.684,114.368 359.961333,114.96 360.516,115.408 C361.070667,115.856 361.817333,116.08 362.756,116.08 Z M362.932,115.184 C362.26,115.184 361.737333,115.042667 361.364,114.76 C360.990667,114.477333 360.804,114.090667 360.804,113.6 C360.804,112.597333 361.524,112.096 362.964,112.096 L362.964,112.096 L365.604,112.096 L365.604,113.472 C365.38,114.026667 365.038667,114.450667 364.58,114.744 C364.121333,115.037333 363.572,115.184 362.932,115.184 Z M370.964,116 L370.964,111.584 C370.964,110.634667 371.217333,109.890667 371.724,109.352 C372.230667,108.813333 372.916,108.544 373.78,108.544 C374.558667,108.544 375.158667,108.773333 375.58,109.232 C376.001333,109.690667 376.212,110.357333 376.212,111.232 L376.212,111.232 L376.212,116 L377.348,116 L377.348,111.584 C377.348,110.634667 377.598667,109.890667 378.1,109.352 C378.601333,108.813333 379.289333,108.544 380.164,108.544 C380.932,108.544 381.526667,108.773333 381.948,109.232 C382.369333,109.690667 382.58,110.357333 382.58,111.232 L382.58,111.232 L382.58,116 L383.716,116 L383.716,111.12 C383.716,109.936 383.414667,109.04 382.812,108.432 C382.209333,107.824 381.38,107.52 380.324,107.52 C379.577333,107.52 378.913333,107.677333 378.332,107.992 C377.750667,108.306667 377.305333,108.741333 376.996,109.296 C376.74,108.709333 376.353333,108.266667 375.836,107.968 C375.318667,107.669333 374.708,107.52 374.004,107.52 C373.310667,107.52 372.697333,107.658667 372.164,107.936 C371.630667,108.213333 371.214667,108.608 370.916,109.12 L370.916,109.12 L370.916,107.584 L369.828,107.584 L369.828,116 L370.964,116 Z M387.38,105.744 C387.614667,105.744 387.812,105.664 387.972,105.504 C388.132,105.344 388.212,105.146667 388.212,104.912 C388.212,104.698667 388.132,104.514667 387.972,104.36 C387.812,104.205333 387.614667,104.128 387.38,104.128 C387.145333,104.128 386.948,104.208 386.788,104.368 C386.628,104.528 386.548,104.714667 386.548,104.928 C386.548,105.152 386.628,105.344 386.788,105.504 C386.948,105.664 387.145333,105.744 387.38,105.744 Z M387.94,116 L387.94,107.584 L386.804,107.584 L386.804,116 L387.94,116 Z M392.244,116 L392.244,104.128 L391.108,104.128 L391.108,116 L392.244,116 Z M395.988,105.744 C396.222667,105.744 396.42,105.664 396.58,105.504 C396.74,105.344 396.82,105.146667 396.82,104.912 C396.82,104.698667 396.74,104.514667 396.58,104.36 C396.42,104.205333 396.222667,104.128 395.988,104.128 C395.753333,104.128 395.556,104.208 395.396,104.368 C395.236,104.528 395.156,104.714667 395.156,104.928 C395.156,105.152 395.236,105.344 395.396,105.504 C395.556,105.664 395.753333,105.744 395.988,105.744 Z M396.548,116 L396.548,107.584 L395.412,107.584 L395.412,116 L396.548,116 Z M403.284,116.08 C403.956,116.08 404.572,115.962667 405.132,115.728 C405.692,115.493333 406.158667,115.152 406.532,114.704 L406.532,114.704 L405.892,113.968 C405.572,114.330667 405.193333,114.605333 404.756,114.792 C404.318667,114.978667 403.838667,115.072 403.316,115.072 C402.388,115.072 401.62,114.802667 401.012,114.264 C400.404,113.725333 400.068,113.018667 400.004,112.144 L400.004,112.144 L407.044,112.144 L407.06,111.792 C407.06,110.96 406.884,110.221333 406.532,109.576 C406.18,108.930667 405.694667,108.426667 405.076,108.064 C404.457333,107.701333 403.758667,107.52 402.98,107.52 C402.201333,107.52 401.5,107.701333 400.876,108.064 C400.252,108.426667 399.761333,108.933333 399.404,109.584 C399.046667,110.234667 398.868,110.970667 398.868,111.792 C398.868,112.613333 399.054667,113.349333 399.428,114 C399.801333,114.650667 400.321333,115.16 400.988,115.528 C401.654667,115.896 402.42,116.08 403.284,116.08 Z M405.972,111.296 L400.004,111.296 C400.078667,110.464 400.390667,109.789333 400.94,109.272 C401.489333,108.754667 402.169333,108.496 402.98,108.496 C403.801333,108.496 404.486667,108.754667 405.036,109.272 C405.585333,109.789333 405.897333,110.464 405.972,111.296 L405.972,111.296 Z M411.636,116.08 C412.724,116.08 413.574667,115.864 414.188,115.432 C414.801333,115 415.108,114.416 415.108,113.68 C415.108,113.136 414.964,112.709333 414.676,112.4 C414.388,112.090667 414.041333,111.872 413.636,111.744 C413.230667,111.616 412.692,111.488 412.02,111.36 C411.476,111.264 411.049333,111.170667 410.74,111.08 C410.430667,110.989333 410.172,110.848 409.964,110.656 C409.756,110.464 409.652,110.208 409.652,109.888 C409.652,109.472 409.836,109.136 410.204,108.88 C410.572,108.624 411.118667,108.496 411.844,108.496 C412.804,108.496 413.630667,108.736 414.324,109.216 L414.324,109.216 L414.82,108.304 C414.468,108.069333 414.02,107.88 413.476,107.736 C412.932,107.592 412.388,107.52 411.844,107.52 C410.798667,107.52 409.982667,107.744 409.396,108.192 C408.809333,108.64 408.516,109.216 408.516,109.92 C408.516,110.485333 408.662667,110.928 408.956,111.248 C409.249333,111.568 409.604,111.794667 410.02,111.928 C410.436,112.061333 410.985333,112.192 411.668,112.32 C412.18,112.405333 412.590667,112.493333 412.9,112.584 C413.209333,112.674667 413.465333,112.808 413.668,112.984 C413.870667,113.16 413.972,113.402667 413.972,113.712 C413.972,114.149333 413.788,114.488 413.42,114.728 C413.052,114.968 412.484,115.088 411.716,115.088 C411.14,115.088 410.585333,115 410.052,114.824 C409.518667,114.648 409.076,114.421333 408.724,114.144 L408.724,114.144 L408.212,115.04 C408.564,115.338667 409.052,115.586667 409.676,115.784 C410.3,115.981333 410.953333,116.08 411.636,116.08 Z\",\"id\":\"Middleincomefamilies\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"g\",{\"transform\":\"translate(54.000000, 0.000000)\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"1.5\",\"key\":3},[React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"19.5\",\"cy\":\"11.5\",\"r\":\"11.5\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M39,44 C39,32.954305 30.2695526,24 19.5,24 C8.73044738,24 0,32.954305 0,44\",\"id\":\"Oval-Copy\",\"key\":1})]),React.createElement(\"g\",{\"transform\":\"translate(331.000000, 4.000000)\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"1.5\",\"key\":4},[React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"7.5\",\"cy\":\"18.5\",\"r\":\"4.5\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M15,31 C15,26.581722 11.6421356,23 7.5,23 C3.35786438,23 0,26.581722 0,31\",\"id\":\"Oval-Copy\",\"key\":1}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"31.5\",\"cy\":\"4.5\",\"r\":\"4.5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M39,17 C39,12.581722 35.6421356,9 31.5,9 C27.3578644,9 24,12.581722 24,17\",\"id\":\"Oval-Copy\",\"key\":3}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"54.5\",\"cy\":\"18.5\",\"r\":\"4.5\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M62,31 C62,26.581722 58.6421356,23 54.5,23 C50.3578644,23 47,26.581722 47,31\",\"id\":\"Oval-Copy\",\"key\":5}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"31.5\",\"cy\":\"35.5\",\"r\":\"4.5\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M39,48 C39,43.581722 35.6421356,40 31.5,40 C27.3578644,40 24,43.581722 24,48\",\"id\":\"Oval-Copy\",\"key\":7}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"77.5\",\"cy\":\"4.5\",\"r\":\"4.5\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M85,17 C85,12.581722 81.6421356,9 77.5,9 C73.3578644,9 70,12.581722 70,17\",\"id\":\"Oval-Copy\",\"key\":9}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"100.5\",\"cy\":\"18.5\",\"r\":\"4.5\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M108,31 C108,26.581722 104.642136,23 100.5,23 C96.3578644,23 93,26.581722 93,31\",\"id\":\"Oval-Copy\",\"key\":11}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"77.5\",\"cy\":\"35.5\",\"r\":\"4.5\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M85,48 C85,43.581722 81.6421356,40 77.5,40 C73.3578644,40 70,43.581722 70,48\",\"id\":\"Oval-Copy\",\"key\":13})])])))]);\n}\n\nEarlyYearsGraph1.defaultProps = {\"width\":\"445px\",\"height\":\"126px\",\"viewBox\":\"0 0 445 126\",\"version\":\"1.1\"};\n\nmodule.exports = EarlyYearsGraph1;\n\nEarlyYearsGraph1.default = EarlyYearsGraph1;\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.ScrollContainer = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _scrollHandler = require(\"./scroll-handler\");\n\nvar _router = require(\"@reach/router\");\n\n// TODO: In Gatsby v3, this file should be removed.\n// We are deprecating this in V2 in favor of useScrollRestoration\nvar propTypes = {\n  scrollKey: _propTypes.default.string.isRequired,\n  shouldUpdateScroll: _propTypes.default.func,\n  children: _propTypes.default.element.isRequired\n};\nvar hasNotWarnedDeprecation = true;\n\nvar ScrollContainerImplementation = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ScrollContainerImplementation, _React$Component);\n\n  function ScrollContainerImplementation(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    if (process.env.NODE_ENV !== \"production\" && hasNotWarnedDeprecation) {\n      hasNotWarnedDeprecation = false;\n      console.log(\"Deprecation Warning:\\n\\n  Gatsby <ScrollContainer> is deprecated in Gatsby v2 and will be removed in Gatsby v3.\\n  Update to the React hook alternative useScrollRestoration, like this:.\\n  \\n  ```\\n  import React from 'react';\\n  import { useScrollRestoration } from 'gatsby-react-router-scroll';\\n\\n  function Component() {\\n    const scrollRestoration = useScrollRestoration('\" + _this.props.scrollKey + \"');\\n\\n    return <ul {...scrollRestoration} />;\\n  }\\n  ```\\n  \");\n    }\n\n    return _this;\n  }\n\n  var _proto = ScrollContainerImplementation.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/no-find-dom-node\n    var node = _reactDom.default.findDOMNode(this);\n\n    var _this$props = this.props,\n        location = _this$props.location,\n        scrollKey = _this$props.scrollKey;\n    if (!node) return;\n    node.addEventListener(\"scroll\", function () {\n      _this2.props.context.save(location, scrollKey, node.scrollTop);\n    });\n    var position = this.props.context.read(location, scrollKey);\n    node.scrollTo(0, position || 0);\n  };\n\n  _proto.render = function render() {\n    return this.props.children;\n  };\n\n  return ScrollContainerImplementation;\n}(React.Component);\n\nvar ScrollContainer = function ScrollContainer(props) {\n  return /*#__PURE__*/React.createElement(_router.Location, null, function (_ref) {\n    var location = _ref.location;\n    return /*#__PURE__*/React.createElement(_scrollHandler.ScrollContext.Consumer, null, function (context) {\n      return /*#__PURE__*/React.createElement(ScrollContainerImplementation, (0, _extends2.default)({}, props, {\n        context: context,\n        location: location\n      }));\n    });\n  });\n};\n\nexports.ScrollContainer = ScrollContainer;\nScrollContainer.propTypes = propTypes;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.BreadcrumbConsumer = exports.BreadcrumbProvider = exports.BreadcrumbContext = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n/* eslint-disable import/no-extraneous-dependencies */\nvar BreadcrumbContext = _react.default.createContext('Breadcrumb');\n\nexports.BreadcrumbContext = BreadcrumbContext;\n\nvar BreadcrumbProvider = function BreadcrumbProvider(_ref) {\n  var children = _ref.children,\n      defaultCrumb = _ref.defaultCrumb;\n\n  var _React$useState = _react.default.useState(defaultCrumb ? [(0, _extends2.default)({\n    pathname: defaultCrumb.location.pathname\n  }, defaultCrumb)] : []),\n      crumbs = _React$useState[0],\n      setCrumbs = _React$useState[1];\n\n  var updateCrumbs = function updateCrumbs(_ref2) {\n    var location = _ref2.location,\n        crumbLabel = _ref2.crumbLabel,\n        crumbSeparator = _ref2.crumbSeparator,\n        crumbStyle = _ref2.crumbStyle,\n        crumbActiveStyle = _ref2.crumbActiveStyle;\n    // check to see if the path is already in the breadcrumb\n    var indexOfFirstOccurrenceOfCurrentPath = crumbs.findIndex(function (crumb) {\n      return crumb.pathname === location.pathname;\n    }); // when path exists in breadcrumb we need to remove any crumbs after\n    // that pathname\n\n    if (indexOfFirstOccurrenceOfCurrentPath > -1 && indexOfFirstOccurrenceOfCurrentPath < crumbs.length - 1) {\n      setCrumbs(crumbs.slice(0, indexOfFirstOccurrenceOfCurrentPath));\n    } // when path does not exist we add it to the end of the breadcrumb\n\n\n    if (indexOfFirstOccurrenceOfCurrentPath === -1) {\n      setCrumbs([].concat(crumbs, [(0, _extends2.default)((0, _extends2.default)({}, location), {}, {\n        crumbLabel: crumbLabel,\n        crumbSeparator: crumbSeparator,\n        crumbStyle: crumbStyle,\n        crumbActiveStyle: crumbActiveStyle\n      })]));\n    }\n  };\n\n  var crumb = {\n    crumbs: crumbs,\n    updateCrumbs: updateCrumbs\n  };\n  return /*#__PURE__*/_react.default.createElement(BreadcrumbContext.Provider, {\n    value: crumb\n  }, children);\n};\n\nexports.BreadcrumbProvider = BreadcrumbProvider;\nvar BreadcrumbConsumer = BreadcrumbContext.Consumer;\nexports.BreadcrumbConsumer = BreadcrumbConsumer;\nBreadcrumbProvider.defaultProps = {\n  defaultCrumb: null\n};\nBreadcrumbProvider.propTypes = {\n  children: _propTypes.default.node.isRequired,\n  defaultCrumb: _propTypes.default.shape({\n    location: _propTypes.default.shape({\n      pathname: _propTypes.default.string\n    }),\n    crumbLabel: _propTypes.default.string,\n    crumbSeparator: _propTypes.default.string,\n    crumbStyle: _propTypes.default.shape(),\n    crumbActiveStyle: _propTypes.default.shape()\n  })\n};","import { serializeStyles } from '@emotion/serialize';\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nexport default css;","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.OptionsConsumer = exports.OptionsProvider = exports.OptionsContext = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n/* eslint-disable import/no-extraneous-dependencies */\nvar OptionsContext = _react.default.createContext('Options');\n\nexports.OptionsContext = OptionsContext;\n\nvar OptionsProvider = function OptionsProvider(_ref) {\n  var children = _ref.children,\n      _ref$useAutoGen = _ref.useAutoGen,\n      useAutoGen = _ref$useAutoGen === void 0 ? false : _ref$useAutoGen,\n      _ref$usePathPrefix = _ref.usePathPrefix,\n      usePathPrefix = _ref$usePathPrefix === void 0 ? null : _ref$usePathPrefix;\n  var options = {\n    useAutoGen: useAutoGen,\n    usePathPrefix: usePathPrefix\n  };\n  return /*#__PURE__*/_react.default.createElement(OptionsContext.Provider, {\n    value: options\n  }, children);\n};\n\nexports.OptionsProvider = OptionsProvider;\nvar OptionsConsumer = OptionsContext.Consumer;\nexports.OptionsConsumer = OptionsConsumer;\nOptionsProvider.defaultProps = {\n  useAutoGen: false,\n  usePathPrefix: null\n};\nOptionsProvider.propTypes = {\n  children: _propTypes.default.node.isRequired,\n  useAutoGen: _propTypes.default.bool,\n  usePathPrefix: _propTypes.default.string\n};","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph2Desktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 3\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Gaps-in-attainment\",\"transform\":\"translate(-829.000000, -2298.000000)\"},React.createElement(\"g\",{\"id\":\"Group-3\",\"transform\":\"translate(829.000000, 2298.000000)\"},[React.createElement(\"text\",{\"id\":\"2%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":0},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"15\",\"key\":0},\"2\"),React.createElement(\"tspan\",{\"x\":\"343.44\",\"y\":\"15\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"2016-copy\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":1},React.createElement(\"tspan\",{\"x\":\"0.8\",\"y\":\"27\"},\"2016\")),React.createElement(\"text\",{\"id\":\"2017-copy\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":2},React.createElement(\"tspan\",{\"x\":\"1.12\",\"y\":\"87\"},\"2017\")),React.createElement(\"text\",{\"id\":\"2018-copy\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":3},React.createElement(\"tspan\",{\"x\":\"0.336\",\"y\":\"147\"},\"2018\")),React.createElement(\"text\",{\"id\":\"2019-copy\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":4},React.createElement(\"tspan\",{\"x\":\"0.8\",\"y\":\"207\"},\"2019\")),React.createElement(\"text\",{\"id\":\"4%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":5},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"75\",\"key\":0},\"4\"),React.createElement(\"tspan\",{\"x\":\"345.024\",\"y\":\"75\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"4%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":6},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"135\",\"key\":0},\"4\"),React.createElement(\"tspan\",{\"x\":\"345.024\",\"y\":\"135\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"5%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":7},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"195\",\"key\":0},\"5\"),React.createElement(\"tspan\",{\"x\":\"343.52\",\"y\":\"195\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"11%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":8},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"99\",\"key\":0},\"11\"),React.createElement(\"tspan\",{\"x\":\"346.544\",\"y\":\"99\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"12%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":9},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"159\",\"key\":0},\"12\"),React.createElement(\"tspan\",{\"x\":\"349.712\",\"y\":\"159\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"13%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":10},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"219\",\"key\":0},\"13\"),React.createElement(\"tspan\",{\"x\":\"349.744\",\"y\":\"219\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-4\",\"transform\":\"translate(392.000000, 12.000000)\",\"key\":11},[React.createElement(\"text\",{\"id\":\"+5pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"7.021\",\"y\":\"14\"},\"+5pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"53\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-5\",\"transform\":\"translate(392.000000, 73.000000)\",\"key\":12},[React.createElement(\"text\",{\"id\":\"+7pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"8.86\",\"y\":\"14\"},\"+7pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"53\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-6\",\"transform\":\"translate(392.000000, 132.000000)\",\"key\":13},[React.createElement(\"text\",{\"id\":\"+8pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"7.517\",\"y\":\"14\"},\"+8pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"50\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-7\",\"transform\":\"translate(392.000000, 192.000000)\",\"key\":14},[React.createElement(\"text\",{\"id\":\"+8pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"6.517\",\"y\":\"14\"},\"+8pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"50\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"text\",{\"id\":\"7%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":15},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"39\",\"key\":0},\"7\"),React.createElement(\"tspan\",{\"x\":\"343.92\",\"y\":\"39\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-58\",\"fill\":\"#F3F3F3\",\"x\":\"48\",\"y\":\"0\",\"width\":\"274\",\"height\":\"228\",\"key\":16}),React.createElement(\"g\",{\"id\":\"Group-26-Copy\",\"transform\":\"translate(48.000000, 0.000000)\",\"key\":17},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-50\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"5\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-51\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"19\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-28-Copy\",\"transform\":\"translate(48.000000, 60.000000)\",\"key\":18},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-52\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"11\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-53\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"30\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-30-Copy\",\"transform\":\"translate(48.000000, 120.000000)\",\"key\":19},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-54\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"11\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-55\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"33\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-31-Copy\",\"transform\":\"translate(48.000000, 180.000000)\",\"key\":20},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-56\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"14\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-57\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"36\",\"height\":\"24\",\"key\":1})])])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph2Desktop.defaultProps = {\"width\":\"446px\",\"height\":\"228px\",\"viewBox\":\"0 0 446 228\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph2Desktop;\n\nSchoolYearsGapsInAttainmentGraph2Desktop.default = SchoolYearsGapsInAttainmentGraph2Desktop;\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _gatsby = require(\"gatsby\");\n\nvar _getManifestPathname = _interopRequireDefault(require(\"./get-manifest-pathname\"));\n\n/* global __MANIFEST_PLUGIN_HAS_LOCALISATION__ */\n// when we don't have localisation in our manifest, we tree shake everything away\nif (__MANIFEST_PLUGIN_HAS_LOCALISATION__) {\n  var withPrefix = _gatsby.withAssetPrefix || _gatsby.withPrefix;\n\n  exports.onRouteUpdate = function (_ref, pluginOptions) {\n    var location = _ref.location;\n    var localize = pluginOptions.localize;\n    var manifestFilename = (0, _getManifestPathname.default)(location.pathname, localize);\n    var manifestEl = document.head.querySelector(\"link[rel=\\\"manifest\\\"]\");\n\n    if (manifestEl) {\n      manifestEl.setAttribute(\"href\", withPrefix(manifestFilename));\n    }\n  };\n}","/*\n  Why commonjs and not ES imports/exports?\n\n  This module is used to alias `create-react-context` package, but drop the the actual implementation part\n  because Gatsby requires version of react that has implementatoin baked in.\n  \n  Package source is using ES modules:\n    - https://github.com/jamiebuilds/create-react-context/blob/v0.3.0/src/index.js\n  \n  But to build this package `babel-plugin-add-module-exports` is used ( https://www.npmjs.com/package/babel-plugin-add-module-exports).\n  Which result in both `module.exports` and `exports.default` being set to same thing.\n\n  We don't use that babel plugin so we only have `exports.default`.\n\n  This cause problems in various 3rd party react components that rely on `module.exports` being set.\n  See https://github.com/gatsbyjs/gatsby/issues/23645 for example of it.\n  \n  Instead of adding same babel plugin we mimic output here. Adding babel plugin just for this would:\n   a) unnecesairly slow down compilation for all other files (if we just apply it everywhere)\n   b) or complicate babel-loader configuration with overwrite specifically for this file\n*/\n\nconst { createContext } = require(`react`)\n\nmodule.exports = createContext\nmodule.exports.default = createContext\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };","function stylis_min(W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {}\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;","import { StyleSheet } from '@emotion/sheet';\nimport Stylis from '@emotion/stylis';\nimport '@emotion/weak-memoize'; // https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\n\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\n\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexport default createCache;","var isBrowser = \"object\" !== 'undefined';\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\n\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };","import _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement, Component } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\nimport css from '@emotion/css';\nexport { default as css } from '@emotion/css';\nvar EmotionCacheContext = createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return forwardRef(render);\n}; // thus we only need to replace what is a valid character for JS, but not for CSS\n\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = createElement(type, newProps);\n  return ele;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  // use Context.read for the theme when it's stable\n  if (typeof props.css === 'function') {\n    return createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n} // $FlowFixMe\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)jsx.*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  createElementArgArray[1] = newProps;\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return createElement(ThemeContext.Consumer, null, function (theme) {\n      var serialized = serializeStyles([styles(theme)]);\n      return createElement(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = serializeStyles([styles]);\n  return createElement(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n}); // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return InnerGlobal;\n}(Component);\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = withEmotionCache(function (props, context) {\n  return createElement(ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = serializeStyles(args, context.registered);\n      {\n        insertStyles(context, serialized, false);\n      }\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n    return ele;\n  });\n});\nexport { CacheProvider, ClassNames, Global, ThemeContext, jsx, keyframes, withEmotionCache };","var React = require('react');\n\nfunction EarlyYearsGraph2 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 11\"),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"transform\":\"translate(-176.000000, -1936.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(165.000000, 1810.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(13.000000, 126.000000)\"},[React.createElement(\"text\",{\"id\":\"Half-a-grade-at-GCSE\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":0},[React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"20\",\"key\":0},\"Half a grade at \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"50\",\"key\":1},\"GCSE level \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"80\",\"key\":2},\"English\")]),React.createElement(\"text\",{\"id\":\"A-third-of-a-grade-a\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":1},[React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"144\",\"key\":0},\"A third of a grade at \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"174\",\"key\":1},\"GCSE level \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"204\",\"key\":2},\"Mathematics\")]),React.createElement(\"text\",{\"id\":\"More-likely-to-take\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":2},[React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"263\",\"key\":0},\"More likely to take \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"293\",\"key\":1},\"four or more A-\"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"323\",\"key\":2},\"levels\")]),React.createElement(\"g\",{\"transform\":\"translate(-0.000000, 249.000000)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":3},React.createElement(\"g\",{\"transform\":\"translate(-1.194444, 4.777778)\"},[React.createElement(\"path\",{\"d\":\"M10.1702925,0.361401335 C8.0988222,0.366461158 6.03556233,0.596153776 4.01443573,1.04628784 C3.60475469,1.13752972 3.31334605,1.50097898 3.31334605,1.92069751 L3.31334605,28.368739 C3.31334605,28.9082581 3.78674236,29.3253712 4.32196823,29.2574436 C6.09900327,29.0319135 7.88829464,28.9167964 9.67975323,28.9127336 C15.3153437,28.9127359 19.4232401,30.1215675 22.2556848,31.9735506 C22.8519148,32.3633932 23.6426197,31.9350534 23.6417625,31.2226864 L23.6116044,6.18186476 C23.6113411,5.96330921 23.5311897,5.75238892 23.3862407,5.58881516 C20.1066451,1.88781899 15.431991,0.361401335 10.1702925,0.361401335 Z M10.1706944,2.15238889 L10.6326169,2.15736043 C15.0830958,2.24051475 18.9858563,3.53668444 21.7621427,6.46798412 L21.8189167,6.53122222 L21.8475833,29.6616389 L21.5003428,29.4853311 C18.5307359,28.0177275 14.6298613,27.1210693 9.67772159,27.1210693 L8.7443429,27.1328197 C7.8113992,27.1542009 6.87987831,27.2044653 5.95084066,27.2835298 L5.10386111,27.3647222 L5.10386111,2.64808333 L5.83182968,2.5174305 C7.02702782,2.31842662 8.23431384,2.20053348 9.44542339,2.16470617 L10.1706944,2.15238889 Z\",\"id\":\"Stroke-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.2940468,0.366469151 C30.08272,0.366469151 25.3659588,1.91732779 22.0784044,5.59057295 C21.9313834,5.75484218 21.8500957,5.96755454 21.8500957,6.18800757 L21.8500957,31.2186511 C21.8500957,31.9278871 22.6351246,32.355865 23.2312592,31.9716266 C26.1155175,30.1125785 30.2124535,28.9077474 35.8142622,28.9077474 C37.5913898,28.9162312 39.370824,29.0346485 41.1380709,29.2622951 C41.6738357,29.3313093 42.1483547,28.9139945 42.1483547,28.3738029 L42.1483547,1.92576144 C42.1483547,1.50591978 41.8567788,1.14239858 41.4469441,1.05128035 C39.4269293,0.602172028 37.3638251,0.372565509 35.2940468,0.366469151 Z M35.2898611,2.15716667 L36.0161983,2.17008829 C37.4702007,2.21362725 38.9182736,2.37478876 40.3555,2.65405556 L40.3555,27.3671111 L39.5228094,27.2861928 C38.29107,27.17876 37.0552603,27.1219878 35.8185336,27.1160909 L35.208393,27.1207182 C30.3703696,27.1945795 26.5647802,28.1482376 23.6416389,29.6652222 L23.6416389,6.53838889 L23.4134538,6.78544219 C26.2114382,3.65920257 30.2643757,2.25306185 34.8185316,2.16279274 L35.2898611,2.15716667 Z\",\"id\":\"Stroke-3\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M4.20917939,2.76488344 C4.70393447,2.76488344 5.10501272,3.16596168 5.10501272,3.66071677 C5.10501272,4.11424227 4.76799558,4.4890532 4.33073866,4.5483722 L4.20917939,4.5565501 L2.16433333,4.55561111 L2.16433333,29.799 L2.27591332,29.7767778 C2.6919855,29.6924947 3.14139644,29.6090041 3.62175169,29.5282978 L4.11233302,29.4485932 C10.0009572,28.5238891 16.3015406,28.5512756 22.2823301,30.1580377 L22.998443,30.3584703 L23.1132529,30.400428 C23.5164769,30.5796563 23.735235,31.0337584 23.6084097,31.46919 C23.4815843,31.9046216 23.0531995,32.1702345 22.6167992,32.104911 L22.4978028,32.0787694 L21.7872647,31.8802863 C16.0907404,30.3560879 10.040994,30.3312246 4.39027647,31.2185697 C3.74976448,31.3191507 3.16212356,31.4253403 2.63315454,31.5324684 L1.78079522,31.7172072 L1.49709016,31.7867604 C0.966862808,31.9264732 0.447185202,31.5625456 0.38025142,31.0357487 L0.372999369,30.9204949 L0.372999369,3.66071677 C0.372999369,3.20719127 0.710016505,2.83238034 1.14727343,2.77306134 L1.2688327,2.76488344 L4.20917939,2.76488344 Z\",\"id\":\"Stroke-5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M44.089026,2.76482061 C44.5425515,2.76482061 44.9173625,3.10183774 44.9766815,3.53909466 L44.9848594,3.66065394 L44.9848594,30.9204321 C44.9848594,31.5079206 44.4288746,31.9363864 43.8607756,31.7866994 L43.5770744,31.7171495 L43.1103562,31.6128648 C42.4862756,31.4787391 41.7682546,31.3442559 40.9676223,31.2185355 C35.0813586,30.2942367 28.762076,30.3597527 22.860044,32.0787101 C22.3850257,32.2170584 21.8877939,31.9441334 21.7494456,31.4691152 C21.6110973,30.9940969 21.8840222,30.4968651 22.3590405,30.3585168 C28.5514059,28.5550003 35.1212907,28.4868861 41.2455556,29.4485574 C41.7462692,29.5271826 42.2168366,29.6092557 42.6548634,29.6927852 L43.1923056,29.799 L43.1923056,4.55561111 L41.1486794,4.55648728 C40.6951539,4.55648728 40.6704301,4.02059025 40.6111111,3.58333333 L40.6029332,3.46177406 C40.6029332,3.00824856 40.5898632,2.83231752 41.0271201,2.77299851 L41.1486794,2.76482061 L44.089026,2.76482061 Z\",\"id\":\"Stroke-7\",\"key\":3})])),React.createElement(\"g\",{\"transform\":\"translate(-0.000000, 294.000000)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4},React.createElement(\"g\",{\"transform\":\"translate(-1.194444, 4.777778)\"},[React.createElement(\"path\",{\"d\":\"M10.1702925,0.361401335 C8.0988222,0.366461158 6.03556233,0.596153776 4.01443573,1.04628784 C3.60475469,1.13752972 3.31334605,1.50097898 3.31334605,1.92069751 L3.31334605,28.368739 C3.31334605,28.9082581 3.78674236,29.3253712 4.32196823,29.2574436 C6.09900327,29.0319135 7.88829464,28.9167964 9.67975323,28.9127336 C15.3153437,28.9127359 19.4232401,30.1215675 22.2556848,31.9735506 C22.8519148,32.3633932 23.6426197,31.9350534 23.6417625,31.2226864 L23.6116044,6.18186476 C23.6113411,5.96330921 23.5311897,5.75238892 23.3862407,5.58881516 C20.1066451,1.88781899 15.431991,0.361401335 10.1702925,0.361401335 Z M10.1706944,2.15238889 L10.6326169,2.15736043 C15.0830958,2.24051475 18.9858563,3.53668444 21.7621427,6.46798412 L21.8189167,6.53122222 L21.8475833,29.6616389 L21.5003428,29.4853311 C18.5307359,28.0177275 14.6298613,27.1210693 9.67772159,27.1210693 L8.7443429,27.1328197 C7.8113992,27.1542009 6.87987831,27.2044653 5.95084066,27.2835298 L5.10386111,27.3647222 L5.10386111,2.64808333 L5.83182968,2.5174305 C7.02702782,2.31842662 8.23431384,2.20053348 9.44542339,2.16470617 L10.1706944,2.15238889 Z\",\"id\":\"Stroke-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.2940468,0.366469151 C30.08272,0.366469151 25.3659588,1.91732779 22.0784044,5.59057295 C21.9313834,5.75484218 21.8500957,5.96755454 21.8500957,6.18800757 L21.8500957,31.2186511 C21.8500957,31.9278871 22.6351246,32.355865 23.2312592,31.9716266 C26.1155175,30.1125785 30.2124535,28.9077474 35.8142622,28.9077474 C37.5913898,28.9162312 39.370824,29.0346485 41.1380709,29.2622951 C41.6738357,29.3313093 42.1483547,28.9139945 42.1483547,28.3738029 L42.1483547,1.92576144 C42.1483547,1.50591978 41.8567788,1.14239858 41.4469441,1.05128035 C39.4269293,0.602172028 37.3638251,0.372565509 35.2940468,0.366469151 Z M35.2898611,2.15716667 L36.0161983,2.17008829 C37.4702007,2.21362725 38.9182736,2.37478876 40.3555,2.65405556 L40.3555,27.3671111 L39.5228094,27.2861928 C38.29107,27.17876 37.0552603,27.1219878 35.8185336,27.1160909 L35.208393,27.1207182 C30.3703696,27.1945795 26.5647802,28.1482376 23.6416389,29.6652222 L23.6416389,6.53838889 L23.4134538,6.78544219 C26.2114382,3.65920257 30.2643757,2.25306185 34.8185316,2.16279274 L35.2898611,2.15716667 Z\",\"id\":\"Stroke-3\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M4.20917939,2.76488344 C4.70393447,2.76488344 5.10501272,3.16596168 5.10501272,3.66071677 C5.10501272,4.11424227 4.76799558,4.4890532 4.33073866,4.5483722 L4.20917939,4.5565501 L2.16433333,4.55561111 L2.16433333,29.799 L2.27591332,29.7767778 C2.6919855,29.6924947 3.14139644,29.6090041 3.62175169,29.5282978 L4.11233302,29.4485932 C10.0009572,28.5238891 16.3015406,28.5512756 22.2823301,30.1580377 L22.998443,30.3584703 L23.1132529,30.400428 C23.5164769,30.5796563 23.735235,31.0337584 23.6084097,31.46919 C23.4815843,31.9046216 23.0531995,32.1702345 22.6167992,32.104911 L22.4978028,32.0787694 L21.7872647,31.8802863 C16.0907404,30.3560879 10.040994,30.3312246 4.39027647,31.2185697 C3.74976448,31.3191507 3.16212356,31.4253403 2.63315454,31.5324684 L1.78079522,31.7172072 L1.49709016,31.7867604 C0.966862808,31.9264732 0.447185202,31.5625456 0.38025142,31.0357487 L0.372999369,30.9204949 L0.372999369,3.66071677 C0.372999369,3.20719127 0.710016505,2.83238034 1.14727343,2.77306134 L1.2688327,2.76488344 L4.20917939,2.76488344 Z\",\"id\":\"Stroke-5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M44.089026,2.76482061 C44.5425515,2.76482061 44.9173625,3.10183774 44.9766815,3.53909466 L44.9848594,3.66065394 L44.9848594,30.9204321 C44.9848594,31.5079206 44.4288746,31.9363864 43.8607756,31.7866994 L43.5770744,31.7171495 L43.1103562,31.6128648 C42.4862756,31.4787391 41.7682546,31.3442559 40.9676223,31.2185355 C35.0813586,30.2942367 28.762076,30.3597527 22.860044,32.0787101 C22.3850257,32.2170584 21.8877939,31.9441334 21.7494456,31.4691152 C21.6110973,30.9940969 21.8840222,30.4968651 22.3590405,30.3585168 C28.5514059,28.5550003 35.1212907,28.4868861 41.2455556,29.4485574 C41.7462692,29.5271826 42.2168366,29.6092557 42.6548634,29.6927852 L43.1923056,29.799 L43.1923056,4.55561111 L41.1486794,4.55648728 C40.6951539,4.55648728 40.6704301,4.02059025 40.6111111,3.58333333 L40.6029332,3.46177406 C40.6029332,3.00824856 40.5898632,2.83231752 41.0271201,2.77299851 L41.1486794,2.76482061 L44.089026,2.76482061 Z\",\"id\":\"Stroke-7\",\"key\":3})])),React.createElement(\"g\",{\"transform\":\"translate(57.000000, 249.000000)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":5},React.createElement(\"g\",{\"transform\":\"translate(-1.194444, 4.777778)\"},[React.createElement(\"path\",{\"d\":\"M10.1702925,0.361401335 C8.0988222,0.366461158 6.03556233,0.596153776 4.01443573,1.04628784 C3.60475469,1.13752972 3.31334605,1.50097898 3.31334605,1.92069751 L3.31334605,28.368739 C3.31334605,28.9082581 3.78674236,29.3253712 4.32196823,29.2574436 C6.09900327,29.0319135 7.88829464,28.9167964 9.67975323,28.9127336 C15.3153437,28.9127359 19.4232401,30.1215675 22.2556848,31.9735506 C22.8519148,32.3633932 23.6426197,31.9350534 23.6417625,31.2226864 L23.6116044,6.18186476 C23.6113411,5.96330921 23.5311897,5.75238892 23.3862407,5.58881516 C20.1066451,1.88781899 15.431991,0.361401335 10.1702925,0.361401335 Z M10.1706944,2.15238889 L10.6326169,2.15736043 C15.0830958,2.24051475 18.9858563,3.53668444 21.7621427,6.46798412 L21.8189167,6.53122222 L21.8475833,29.6616389 L21.5003428,29.4853311 C18.5307359,28.0177275 14.6298613,27.1210693 9.67772159,27.1210693 L8.7443429,27.1328197 C7.8113992,27.1542009 6.87987831,27.2044653 5.95084066,27.2835298 L5.10386111,27.3647222 L5.10386111,2.64808333 L5.83182968,2.5174305 C7.02702782,2.31842662 8.23431384,2.20053348 9.44542339,2.16470617 L10.1706944,2.15238889 Z\",\"id\":\"Stroke-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.2940468,0.366469151 C30.08272,0.366469151 25.3659588,1.91732779 22.0784044,5.59057295 C21.9313834,5.75484218 21.8500957,5.96755454 21.8500957,6.18800757 L21.8500957,31.2186511 C21.8500957,31.9278871 22.6351246,32.355865 23.2312592,31.9716266 C26.1155175,30.1125785 30.2124535,28.9077474 35.8142622,28.9077474 C37.5913898,28.9162312 39.370824,29.0346485 41.1380709,29.2622951 C41.6738357,29.3313093 42.1483547,28.9139945 42.1483547,28.3738029 L42.1483547,1.92576144 C42.1483547,1.50591978 41.8567788,1.14239858 41.4469441,1.05128035 C39.4269293,0.602172028 37.3638251,0.372565509 35.2940468,0.366469151 Z M35.2898611,2.15716667 L36.0161983,2.17008829 C37.4702007,2.21362725 38.9182736,2.37478876 40.3555,2.65405556 L40.3555,27.3671111 L39.5228094,27.2861928 C38.29107,27.17876 37.0552603,27.1219878 35.8185336,27.1160909 L35.208393,27.1207182 C30.3703696,27.1945795 26.5647802,28.1482376 23.6416389,29.6652222 L23.6416389,6.53838889 L23.4134538,6.78544219 C26.2114382,3.65920257 30.2643757,2.25306185 34.8185316,2.16279274 L35.2898611,2.15716667 Z\",\"id\":\"Stroke-3\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M4.20917939,2.76488344 C4.70393447,2.76488344 5.10501272,3.16596168 5.10501272,3.66071677 C5.10501272,4.11424227 4.76799558,4.4890532 4.33073866,4.5483722 L4.20917939,4.5565501 L2.16433333,4.55561111 L2.16433333,29.799 L2.27591332,29.7767778 C2.6919855,29.6924947 3.14139644,29.6090041 3.62175169,29.5282978 L4.11233302,29.4485932 C10.0009572,28.5238891 16.3015406,28.5512756 22.2823301,30.1580377 L22.998443,30.3584703 L23.1132529,30.400428 C23.5164769,30.5796563 23.735235,31.0337584 23.6084097,31.46919 C23.4815843,31.9046216 23.0531995,32.1702345 22.6167992,32.104911 L22.4978028,32.0787694 L21.7872647,31.8802863 C16.0907404,30.3560879 10.040994,30.3312246 4.39027647,31.2185697 C3.74976448,31.3191507 3.16212356,31.4253403 2.63315454,31.5324684 L1.78079522,31.7172072 L1.49709016,31.7867604 C0.966862808,31.9264732 0.447185202,31.5625456 0.38025142,31.0357487 L0.372999369,30.9204949 L0.372999369,3.66071677 C0.372999369,3.20719127 0.710016505,2.83238034 1.14727343,2.77306134 L1.2688327,2.76488344 L4.20917939,2.76488344 Z\",\"id\":\"Stroke-5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M44.089026,2.76482061 C44.5425515,2.76482061 44.9173625,3.10183774 44.9766815,3.53909466 L44.9848594,3.66065394 L44.9848594,30.9204321 C44.9848594,31.5079206 44.4288746,31.9363864 43.8607756,31.7866994 L43.5770744,31.7171495 L43.1103562,31.6128648 C42.4862756,31.4787391 41.7682546,31.3442559 40.9676223,31.2185355 C35.0813586,30.2942367 28.762076,30.3597527 22.860044,32.0787101 C22.3850257,32.2170584 21.8877939,31.9441334 21.7494456,31.4691152 C21.6110973,30.9940969 21.8840222,30.4968651 22.3590405,30.3585168 C28.5514059,28.5550003 35.1212907,28.4868861 41.2455556,29.4485574 C41.7462692,29.5271826 42.2168366,29.6092557 42.6548634,29.6927852 L43.1923056,29.799 L43.1923056,4.55561111 L41.1486794,4.55648728 C40.6951539,4.55648728 40.6704301,4.02059025 40.6111111,3.58333333 L40.6029332,3.46177406 C40.6029332,3.00824856 40.5898632,2.83231752 41.0271201,2.77299851 L41.1486794,2.76482061 L44.089026,2.76482061 Z\",\"id\":\"Stroke-7\",\"key\":3})])),React.createElement(\"g\",{\"transform\":\"translate(57.000000, 294.000000)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":6},React.createElement(\"g\",{\"transform\":\"translate(-1.194444, 4.777778)\"},[React.createElement(\"path\",{\"d\":\"M10.1702925,0.361401335 C8.0988222,0.366461158 6.03556233,0.596153776 4.01443573,1.04628784 C3.60475469,1.13752972 3.31334605,1.50097898 3.31334605,1.92069751 L3.31334605,28.368739 C3.31334605,28.9082581 3.78674236,29.3253712 4.32196823,29.2574436 C6.09900327,29.0319135 7.88829464,28.9167964 9.67975323,28.9127336 C15.3153437,28.9127359 19.4232401,30.1215675 22.2556848,31.9735506 C22.8519148,32.3633932 23.6426197,31.9350534 23.6417625,31.2226864 L23.6116044,6.18186476 C23.6113411,5.96330921 23.5311897,5.75238892 23.3862407,5.58881516 C20.1066451,1.88781899 15.431991,0.361401335 10.1702925,0.361401335 Z M10.1706944,2.15238889 L10.6326169,2.15736043 C15.0830958,2.24051475 18.9858563,3.53668444 21.7621427,6.46798412 L21.8189167,6.53122222 L21.8475833,29.6616389 L21.5003428,29.4853311 C18.5307359,28.0177275 14.6298613,27.1210693 9.67772159,27.1210693 L8.7443429,27.1328197 C7.8113992,27.1542009 6.87987831,27.2044653 5.95084066,27.2835298 L5.10386111,27.3647222 L5.10386111,2.64808333 L5.83182968,2.5174305 C7.02702782,2.31842662 8.23431384,2.20053348 9.44542339,2.16470617 L10.1706944,2.15238889 Z\",\"id\":\"Stroke-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.2940468,0.366469151 C30.08272,0.366469151 25.3659588,1.91732779 22.0784044,5.59057295 C21.9313834,5.75484218 21.8500957,5.96755454 21.8500957,6.18800757 L21.8500957,31.2186511 C21.8500957,31.9278871 22.6351246,32.355865 23.2312592,31.9716266 C26.1155175,30.1125785 30.2124535,28.9077474 35.8142622,28.9077474 C37.5913898,28.9162312 39.370824,29.0346485 41.1380709,29.2622951 C41.6738357,29.3313093 42.1483547,28.9139945 42.1483547,28.3738029 L42.1483547,1.92576144 C42.1483547,1.50591978 41.8567788,1.14239858 41.4469441,1.05128035 C39.4269293,0.602172028 37.3638251,0.372565509 35.2940468,0.366469151 Z M35.2898611,2.15716667 L36.0161983,2.17008829 C37.4702007,2.21362725 38.9182736,2.37478876 40.3555,2.65405556 L40.3555,27.3671111 L39.5228094,27.2861928 C38.29107,27.17876 37.0552603,27.1219878 35.8185336,27.1160909 L35.208393,27.1207182 C30.3703696,27.1945795 26.5647802,28.1482376 23.6416389,29.6652222 L23.6416389,6.53838889 L23.4134538,6.78544219 C26.2114382,3.65920257 30.2643757,2.25306185 34.8185316,2.16279274 L35.2898611,2.15716667 Z\",\"id\":\"Stroke-3\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M4.20917939,2.76488344 C4.70393447,2.76488344 5.10501272,3.16596168 5.10501272,3.66071677 C5.10501272,4.11424227 4.76799558,4.4890532 4.33073866,4.5483722 L4.20917939,4.5565501 L2.16433333,4.55561111 L2.16433333,29.799 L2.27591332,29.7767778 C2.6919855,29.6924947 3.14139644,29.6090041 3.62175169,29.5282978 L4.11233302,29.4485932 C10.0009572,28.5238891 16.3015406,28.5512756 22.2823301,30.1580377 L22.998443,30.3584703 L23.1132529,30.400428 C23.5164769,30.5796563 23.735235,31.0337584 23.6084097,31.46919 C23.4815843,31.9046216 23.0531995,32.1702345 22.6167992,32.104911 L22.4978028,32.0787694 L21.7872647,31.8802863 C16.0907404,30.3560879 10.040994,30.3312246 4.39027647,31.2185697 C3.74976448,31.3191507 3.16212356,31.4253403 2.63315454,31.5324684 L1.78079522,31.7172072 L1.49709016,31.7867604 C0.966862808,31.9264732 0.447185202,31.5625456 0.38025142,31.0357487 L0.372999369,30.9204949 L0.372999369,3.66071677 C0.372999369,3.20719127 0.710016505,2.83238034 1.14727343,2.77306134 L1.2688327,2.76488344 L4.20917939,2.76488344 Z\",\"id\":\"Stroke-5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M44.089026,2.76482061 C44.5425515,2.76482061 44.9173625,3.10183774 44.9766815,3.53909466 L44.9848594,3.66065394 L44.9848594,30.9204321 C44.9848594,31.5079206 44.4288746,31.9363864 43.8607756,31.7866994 L43.5770744,31.7171495 L43.1103562,31.6128648 C42.4862756,31.4787391 41.7682546,31.3442559 40.9676223,31.2185355 C35.0813586,30.2942367 28.762076,30.3597527 22.860044,32.0787101 C22.3850257,32.2170584 21.8877939,31.9441334 21.7494456,31.4691152 C21.6110973,30.9940969 21.8840222,30.4968651 22.3590405,30.3585168 C28.5514059,28.5550003 35.1212907,28.4868861 41.2455556,29.4485574 C41.7462692,29.5271826 42.2168366,29.6092557 42.6548634,29.6927852 L43.1923056,29.799 L43.1923056,4.55561111 L41.1486794,4.55648728 C40.6951539,4.55648728 40.6704301,4.02059025 40.6111111,3.58333333 L40.6029332,3.46177406 C40.6029332,3.00824856 40.5898632,2.83231752 41.0271201,2.77299851 L41.1486794,2.76482061 L44.089026,2.76482061 Z\",\"id\":\"Stroke-7\",\"key\":3})])),React.createElement(\"circle\",{\"id\":\"Oval-Copy-7\",\"fill\":\"#3772FF\",\"transform\":\"translate(50.000000, 50.000000) rotate(-180.000000) translate(-50.000000, -50.000000) \",\"cx\":\"50\",\"cy\":\"50\",\"r\":\"50\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M75,75 C75,47.3857625 52.6142375,25 25,25 C-2.61423749,25 -25,47.3857625 -25,75\",\"id\":\"Oval-Copy-9\",\"fill\":\"#EFEFEF\",\"transform\":\"translate(25.000000, 50.000000) rotate(-90.000000) translate(-25.000000, -50.000000) \",\"key\":8}),React.createElement(\"circle\",{\"id\":\"Oval\",\"fill\":\"#FFFFFF\",\"cx\":\"50.4672897\",\"cy\":\"50.4672897\",\"r\":\"25.2336449\",\"key\":9}),React.createElement(\"polygon\",{\"id\":\"Clip-2\",\"points\":\"-1.8189894e-12 125 49.7995098 125 49.7995098 198.730756 -1.8189894e-12 198.730756\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M49.7995098,174.153192 L6.67892157,198.730756 C-7.07009804,175.22073 1.08872549,145.158364 24.9034314,131.585246 C32.8338235,127.064422 40.6426471,125 49.7995098,125 L49.7995098,174.153192 Z\",\"id\":\"Fill-1\",\"fill\":\"#EFEFEF\",\"key\":11}),React.createElement(\"polygon\",{\"id\":\"Clip-5\",\"points\":\"6.67892157 174.153192 92.920098 174.153192 92.920098 223.315966 6.67892157 223.315966\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M49.7995098,174.153192 L92.920098,198.730756 C79.170098,222.240783 48.7181373,230.296192 24.9034314,216.722106 C16.9740196,212.20225 11.2573529,206.558721 6.67892157,198.730756 L49.7995098,174.153192 Z\",\"id\":\"Fill-4\",\"fill\":\"#EFEFEF\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M49.7995098,174.153192 L49.7995098,125 C77.2985294,125 99.5906863,147.005989 99.5906863,174.153192 C99.5906863,183.193872 97.4985294,190.901824 92.920098,198.730756 L49.7995098,174.153192 Z\",\"id\":\"Fill-7\",\"fill\":\"#FFBA08\",\"key\":14}),React.createElement(\"ellipse\",{\"id\":\"Oval-Copy-10\",\"fill\":\"#FFFFFF\",\"cx\":\"50.4716981\",\"cy\":\"174.965666\",\"rx\":\"25\",\"ry\":\"24.7663551\",\"key\":15})]))))]);\n}\n\nEarlyYearsGraph2.defaultProps = {\"width\":\"319px\",\"height\":\"338px\",\"viewBox\":\"0 0 319 338\",\"version\":\"1.1\"};\n\nmodule.exports = EarlyYearsGraph2;\n\nEarlyYearsGraph2.default = EarlyYearsGraph2;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport loader from \"./loader\"\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.loadPageSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.AppProviders = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _breadcrumbContext = require(\"./breadcrumb-context\");\n\nvar _optionsContext = require(\"./options-context\");\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable import/prefer-default-export */\n\n/* eslint-disable react/prop-types */\nvar AppProviders = function AppProviders(_ref) {\n  var element = _ref.element,\n      pluginOptions = _ref.pluginOptions;\n  var defaultCrumb = pluginOptions.defaultCrumb,\n      useClassNames = pluginOptions.useClassNames,\n      useAutoGen = pluginOptions.useAutoGen,\n      usePathPrefix = pluginOptions.usePathPrefix;\n  return /*#__PURE__*/_react.default.createElement(_optionsContext.OptionsProvider, {\n    useAutoGen: useAutoGen || false,\n    useClassNames: useClassNames || false,\n    usePathPrefix: usePathPrefix || null\n  }, /*#__PURE__*/_react.default.createElement(_breadcrumbContext.BreadcrumbProvider, {\n    defaultCrumb: defaultCrumb || null\n  }, element));\n};\n\nexports.AppProviders = AppProviders;","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","var React = require('react');\n\nfunction SchoolYearsExecutiveSummary (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 12\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Executive-summary\",\"transform\":\"translate(-906.000000, -728.000000)\"},React.createElement(\"g\",{\"id\":\"Group-7\",\"transform\":\"translate(830.000000, 728.000000)\"},React.createElement(\"g\",{\"id\":\"Group-12\",\"transform\":\"translate(76.000000, 0.000000)\"},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-5\",\"fillOpacity\":\"0.1\",\"fill\":\"#FFBA08\",\"x\":\"53\",\"y\":\"0\",\"width\":\"114\",\"height\":\"190\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-4\",\"fillOpacity\":\"0.1\",\"fill\":\"#3772FF\",\"x\":\"179\",\"y\":\"0\",\"width\":\"114\",\"height\":\"190\",\"key\":1}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"fill\":\"#FFBA08\",\"x\":\"53\",\"y\":\"81\",\"width\":\"114\",\"height\":\"109\",\"key\":2}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy\",\"fill\":\"#3772FF\",\"x\":\"179\",\"y\":\"50\",\"width\":\"114\",\"height\":\"140\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M96.535,111.216 C97.687,111.216 98.656,111.027 99.442,110.649 C100.228,110.271 100.813,109.767 101.197,109.137 C101.581,108.507 101.773,107.808 101.773,107.04 C101.773,105.852 101.35,104.904 100.504,104.196 C99.658,103.488 98.347,103.134 96.571,103.134 L96.571,103.134 L95.545,103.134 L95.743,100.74 L100.999,100.74 L100.999,98.4 L93.313,98.4 L92.665,105.492 L95.887,105.492 C96.967,105.492 97.726,105.63 98.164,105.906 C98.602,106.182 98.821,106.59 98.821,107.13 C98.821,107.646 98.611,108.048 98.191,108.336 C97.771,108.624 97.195,108.768 96.463,108.768 C95.803,108.768 95.161,108.669 94.537,108.471 C93.913,108.273 93.361,107.994 92.881,107.634 L92.881,107.634 L91.729,109.866 C92.329,110.298 93.058,110.631 93.916,110.865 C94.774,111.099 95.647,111.216 96.535,111.216 Z M108.145,111 L112.825,100.29 L112.825,98.4 L102.727,98.4 L102.727,102.828 L105.319,102.828 L105.319,100.776 L109.495,100.776 L104.977,111 L108.145,111 Z M116.635,105.848 C117.456333,105.848 118.123,105.568 118.635,105.008 C119.147,104.448 119.403,103.698667 119.403,102.76 C119.403,101.821333 119.147,101.072 118.635,100.512 C118.123,99.952 117.456333,99.672 116.635,99.672 C115.813667,99.672 115.144333,99.952 114.627,100.512 C114.109667,101.072 113.851,101.821333 113.851,102.76 C113.851,103.698667 114.109667,104.448 114.627,105.008 C115.144333,105.568 115.813667,105.848 116.635,105.848 Z M117.563,111 L125.211,99.8 L123.307,99.8 L115.659,111 L117.563,111 Z M116.635,104.536 C116.283,104.536 116.000333,104.384 115.787,104.08 C115.573667,103.776 115.467,103.336 115.467,102.76 C115.467,102.184 115.573667,101.744 115.787,101.44 C116.000333,101.136 116.283,100.984 116.635,100.984 C116.997667,100.984 117.283,101.133333 117.491,101.432 C117.699,101.730667 117.803,102.173333 117.803,102.76 C117.803,103.346667 117.699,103.789333 117.491,104.088 C117.283,104.386667 116.997667,104.536 116.635,104.536 Z M124.235,111.128 C125.056333,111.128 125.725667,110.848 126.243,110.288 C126.760333,109.728 127.019,108.978667 127.019,108.04 C127.019,107.101333 126.760333,106.352 126.243,105.792 C125.725667,105.232 125.056333,104.952 124.235,104.952 C123.701667,104.952 123.224333,105.077333 122.803,105.328 C122.381667,105.578667 122.053667,105.938667 121.819,106.408 C121.584333,106.877333 121.467,107.421333 121.467,108.04 C121.467,108.658667 121.584333,109.202667 121.819,109.672 C122.053667,110.141333 122.381667,110.501333 122.803,110.752 C123.224333,111.002667 123.701667,111.128 124.235,111.128 Z M124.235,109.816 C123.883,109.816 123.600333,109.666667 123.387,109.368 C123.173667,109.069333 123.067,108.626667 123.067,108.04 C123.067,107.453333 123.173667,107.010667 123.387,106.712 C123.600333,106.413333 123.883,106.264 124.235,106.264 C124.597667,106.264 124.883,106.416 125.091,106.72 C125.299,107.024 125.403,107.464 125.403,108.04 C125.403,108.616 125.299,109.056 125.091,109.36 C124.883,109.664 124.597667,109.816 124.235,109.816 Z\",\"id\":\"57%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"text\",{\"id\":\"0%\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":5},[React.createElement(\"tspan\",{\"x\":\"20.46\",\"y\":\"161\",\"key\":0},\"0\"),React.createElement(\"tspan\",{\"x\":\"31.052\",\"y\":\"161\",\"fontSize\":\"12\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"50%\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":6},[React.createElement(\"tspan\",{\"x\":\"10.404\",\"y\":\"88\",\"key\":0},\"50\"),React.createElement(\"tspan\",{\"x\":\"30.052\",\"y\":\"88\",\"fontSize\":\"12\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"100%\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":7},[React.createElement(\"tspan\",{\"x\":\"3.092\",\"y\":\"15\",\"key\":0},\"100\"),React.createElement(\"tspan\",{\"x\":\"30.052\",\"y\":\"15\",\"fontSize\":\"12\",\"key\":1},\"%\")]),React.createElement(\"path\",{\"d\":\"M223.089,80 L227.769,69.29 L227.769,67.4 L217.671,67.4 L217.671,71.828 L220.263,71.828 L220.263,69.776 L224.439,69.776 L219.921,80 L223.089,80 Z M238.551,80 L238.551,77.354 L240.603,77.354 L240.603,74.978 L238.551,74.978 L238.551,72.62 L235.797,72.62 L235.797,74.978 L232.413,74.978 L237.921,67.4 L234.861,67.4 L228.921,75.392 L228.921,77.354 L235.707,77.354 L235.707,80 L238.551,80 Z M243.981,74.848 C244.802333,74.848 245.469,74.568 245.981,74.008 C246.493,73.448 246.749,72.6986667 246.749,71.76 C246.749,70.8213333 246.493,70.072 245.981,69.512 C245.469,68.952 244.802333,68.672 243.981,68.672 C243.159667,68.672 242.490333,68.952 241.973,69.512 C241.455667,70.072 241.197,70.8213333 241.197,71.76 C241.197,72.6986667 241.455667,73.448 241.973,74.008 C242.490333,74.568 243.159667,74.848 243.981,74.848 Z M244.909,80 L252.557,68.8 L250.653,68.8 L243.005,80 L244.909,80 Z M243.981,73.536 C243.629,73.536 243.346333,73.384 243.133,73.08 C242.919667,72.776 242.813,72.336 242.813,71.76 C242.813,71.184 242.919667,70.744 243.133,70.44 C243.346333,70.136 243.629,69.984 243.981,69.984 C244.343667,69.984 244.629,70.1333333 244.837,70.432 C245.045,70.7306667 245.149,71.1733333 245.149,71.76 C245.149,72.3466667 245.045,72.7893333 244.837,73.088 C244.629,73.3866667 244.343667,73.536 243.981,73.536 Z M251.581,80.128 C252.402333,80.128 253.071667,79.848 253.589,79.288 C254.106333,78.728 254.365,77.9786667 254.365,77.04 C254.365,76.1013333 254.106333,75.352 253.589,74.792 C253.071667,74.232 252.402333,73.952 251.581,73.952 C251.047667,73.952 250.570333,74.0773333 250.149,74.328 C249.727667,74.5786667 249.399667,74.9386667 249.165,75.408 C248.930333,75.8773333 248.813,76.4213333 248.813,77.04 C248.813,77.6586667 248.930333,78.2026667 249.165,78.672 C249.399667,79.1413333 249.727667,79.5013333 250.149,79.752 C250.570333,80.0026667 251.047667,80.128 251.581,80.128 Z M251.581,78.816 C251.229,78.816 250.946333,78.6666667 250.733,78.368 C250.519667,78.0693333 250.413,77.6266667 250.413,77.04 C250.413,76.4533333 250.519667,76.0106667 250.733,75.712 C250.946333,75.4133333 251.229,75.264 251.581,75.264 C251.943667,75.264 252.229,75.416 252.437,75.72 C252.645,76.024 252.749,76.464 252.749,77.04 C252.749,77.616 252.645,78.056 252.437,78.36 C252.229,78.664 251.943667,78.816 251.581,78.816 Z\",\"id\":\"74%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":8})]))))]);\n}\n\nSchoolYearsExecutiveSummary.defaultProps = {\"width\":\"293px\",\"height\":\"190px\",\"viewBox\":\"0 0 293 190\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsExecutiveSummary;\n\nSchoolYearsExecutiveSummary.default = SchoolYearsExecutiveSummary;\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { ImageNode } from \"../common/types\";\n\ninterface ResearchImageProps {\n  imageName: string;\n  objectPosition: string;\n  classNames: Array<string>;\n}\n\ninterface PureResearchImageProps {\n  data: ImageNode;\n  objectPosition: string;\n  classNames: string[];\n}\n\nexport const PureResearchImage = ({\n  data,\n  objectPosition,\n  classNames,\n}: PureResearchImageProps) => {\n  return (\n    <Img\n      imgStyle={{ objectPosition }}\n      fluid={data.node.childImageSharp.fluid}\n      className={`research-image-wrapper ${classNames.join(\" \")}`}\n    />\n  );\n};\n\nconst ResearchImage = ({\n  imageName,\n  objectPosition,\n  classNames,\n}: ResearchImageProps) => {\n  const data = useStaticQuery(graphql`\n    query {\n      images: allFile(filter: {relativePath: {regex: \"/research/.*\\\\.jpg/\"}}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 1440) {\n                ...GatsbyImageSharpFluid\n                originalName\n              }\n            }\n          }\n        }\n      }\n    }\n    \n  `);\n\n  const img: ImageNode = data.images.edges.find((image: ImageNode) => {\n    if (image.node.childImageSharp.fluid) {\n      return image.node.childImageSharp.fluid.originalName === imageName;\n    }\n    return false;\n  });\n\n  return (\n    <PureResearchImage\n      data={img}\n      objectPosition={objectPosition}\n      classNames={classNames}\n    ></PureResearchImage>\n  );\n};\n\nResearchImage.defaultProps = {\n  objectPosition: \"center\",\n  classNames: [],\n};\n\nexport default ResearchImage;\n","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph1Desktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 7\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Gaps-in-attainment\",\"transform\":\"translate(-164.000000, -2286.000000)\"},React.createElement(\"g\",{\"id\":\"Group-7\",\"transform\":\"translate(164.000000, 2286.000000)\"},[React.createElement(\"text\",{\"id\":\"39%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":0},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"15\",\"key\":0},\"39\"),React.createElement(\"tspan\",{\"x\":\"353.664\",\"y\":\"15\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"2016\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":1},React.createElement(\"tspan\",{\"x\":\"0.8\",\"y\":\"27\"},\"2016\")),React.createElement(\"text\",{\"id\":\"2017\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":2},React.createElement(\"tspan\",{\"x\":\"1.12\",\"y\":\"87\"},\"2017\")),React.createElement(\"text\",{\"id\":\"2018\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":3},React.createElement(\"tspan\",{\"x\":\"0.336\",\"y\":\"147\"},\"2018\")),React.createElement(\"text\",{\"id\":\"2019\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":4},React.createElement(\"tspan\",{\"x\":\"0.8\",\"y\":\"207\"},\"2019\")),React.createElement(\"text\",{\"id\":\"47%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":5},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"75\",\"key\":0},\"47\"),React.createElement(\"tspan\",{\"x\":\"354.944\",\"y\":\"75\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"51%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":6},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"135\",\"key\":0},\"51\"),React.createElement(\"tspan\",{\"x\":\"349.792\",\"y\":\"135\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"51%-copy\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":7},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"195\",\"key\":0},\"51\"),React.createElement(\"tspan\",{\"x\":\"349.792\",\"y\":\"195\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"67%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":8},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"99\",\"key\":0},\"67\"),React.createElement(\"tspan\",{\"x\":\"354.112\",\"y\":\"99\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"70%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":9},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"159\",\"key\":0},\"70\"),React.createElement(\"tspan\",{\"x\":\"354.784\",\"y\":\"159\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"71%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":10},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"219\",\"key\":0},\"71\"),React.createElement(\"tspan\",{\"x\":\"350.192\",\"y\":\"219\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"g\",{\"id\":\"Group-25\",\"transform\":\"translate(392.000000, 12.000000)\",\"key\":11},[React.createElement(\"text\",{\"id\":\"+21pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"4.48\",\"y\":\"14\"},\"+21pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"53\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy\",\"transform\":\"translate(392.000000, 73.000000)\",\"key\":12},[React.createElement(\"text\",{\"id\":\"+20pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"4.373\",\"y\":\"14\"},\"+20pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"53\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-2\",\"transform\":\"translate(392.000000, 132.000000)\",\"key\":13},[React.createElement(\"text\",{\"id\":\"+20pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"3.373\",\"y\":\"14\"},\"+20pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"50\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-3\",\"transform\":\"translate(392.000000, 192.000000)\",\"key\":14},[React.createElement(\"text\",{\"id\":\"+19pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"4.193\",\"y\":\"14\"},\"+19pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"50\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"text\",{\"id\":\"60%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":15},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"39\",\"key\":0},\"60\"),React.createElement(\"tspan\",{\"x\":\"355.056\",\"y\":\"39\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"fill\":\"#F3F3F3\",\"x\":\"48\",\"y\":\"1.42108547e-14\",\"width\":\"274\",\"height\":\"228\",\"key\":16}),React.createElement(\"g\",{\"id\":\"Group-26\",\"transform\":\"translate(48.000000, 0.000000)\",\"key\":17},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-50\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"107\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-51\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"164\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-28\",\"transform\":\"translate(48.000000, 60.000000)\",\"key\":18},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-52\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"128\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-53\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"183\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-30\",\"transform\":\"translate(48.000000, 120.000000)\",\"key\":19},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-54\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"140\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-55\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"192\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-31\",\"transform\":\"translate(48.000000, 180.000000)\",\"key\":20},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-56\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"139\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-57\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"195\",\"height\":\"24\",\"key\":1})])])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph1Desktop.defaultProps = {\"width\":\"446px\",\"height\":\"228px\",\"viewBox\":\"0 0 446 228\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph1Desktop;\n\nSchoolYearsGapsInAttainmentGraph1Desktop.default = SchoolYearsGapsInAttainmentGraph1Desktop;\n","const plugins = require(`./api-runner-browser-plugins`)\nconst {\n  getResourcesForPathname,\n  getResourcesForPathnameSync,\n  getResourceURLsForPathname,\n  loadPage,\n  loadPageSync,\n} = require(`./loader`).publicLoader\n\nexports.apiRunner = (api, args = {}, defaultReturn, argTransform) => {\n  // Hooks for gatsby-cypress's API handler\n  if (process.env.CYPRESS_SUPPORT) {\n    if (window.___apiHandler) {\n      window.___apiHandler(api)\n    } else if (window.___resolvedAPIs) {\n      window.___resolvedAPIs.push(api)\n    } else {\n      window.___resolvedAPIs = [api]\n    }\n  }\n\n  let results = plugins.map(plugin => {\n    if (!plugin.plugin[api]) {\n      return undefined\n    }\n\n    // Deprecated April 2019. Use `loadPageSync` instead\n    args.getResourcesForPathnameSync = getResourcesForPathnameSync\n    // Deprecated April 2019. Use `loadPage` instead\n    args.getResourcesForPathname = getResourcesForPathname\n    args.getResourceURLsForPathname = getResourceURLsForPathname\n    args.loadPage = loadPage\n    args.loadPageSync = loadPageSync\n\n    const result = plugin.plugin[api](args, plugin.options)\n    if (result && argTransform) {\n      args = argTransform({ args, result, plugin })\n    }\n    return result\n  })\n\n  // Filter out undefined results.\n  results = results.filter(result => typeof result !== `undefined`)\n\n  if (results.length > 0) {\n    return results\n  } else if (defaultReturn) {\n    return [defaultReturn]\n  } else {\n    return []\n  }\n}\n\nexports.apiRunnerAsync = (api, args, defaultReturn) =>\n  plugins.reduce(\n    (previous, next) =>\n      next.plugin[api]\n        ? previous.then(() => next.plugin[api](args, next.options))\n        : previous,\n    Promise.resolve()\n  )\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n"],"sourceRoot":""}