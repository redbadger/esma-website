{"version":3,"sources":["webpack:///./node_modules/gatsby-link/index.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/gatsby-react-router-scroll/session-storage.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js","webpack:///./src/components/research/further-reading.tsx","webpack:///./node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack:///./.cache/normalize-page-path.js","webpack:///./.cache/find-path.js","webpack:///./src/content/early-years/svg/early-years-graph-4.svg","webpack:///./node_modules/gatsby-react-router-scroll/use-scroll-restoration.js","webpack:///./src/content/further-education/svg/further-educations-inequalities-in-funding-mobile.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./node_modules/mitt/dist/mitt.es.js","webpack:///./.cache/emitter.js","webpack:///./.cache/polyfills/object-assign.js","webpack:///./node_modules/gatsby-react-router-scroll/index.js","webpack:///./node_modules/@mdx-js/react/dist/esm.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./.cache/react-lifecycles-compat.js","webpack:///./node_modules/@reach/router/es/lib/history.js","webpack:///./node_modules/gatsby-image/index.js","webpack:///./node_modules/gatsby-plugin-manifest/get-manifest-pathname.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/gatsby-plugin-mdx/context.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-3-desktop.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js","webpack:///./src/content/further-education/svg/apprenticeships-desktop.svg","webpack:///./src/content/school-years/svg/school-years-type-and-quality-of-schooling-desktop.svg","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/0e349365bd363f31f2a1c9aa041b1ae0.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/gatsby-react-router-scroll/scroll-handler.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js","webpack:///./gatsby-browser.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js","webpack:///./src/util/mq.ts","webpack:///./.cache/page-renderer.js","webpack:///./node_modules/webfontloader/webfontloader.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/e92f8988d65cf25c087d226e6c0ef06f.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@reach/router/es/lib/utils.js","webpack:///./.cache/api-runner-browser-plugins.js","webpack:///src/gatsby-browser.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/@mikaelkristiansson/domready/ready.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/9a5998c393fef1db65f1596110ddf461.js","webpack:///./node_modules/@emotion/hash/dist/hash.browser.esm.js","webpack:///./node_modules/@emotion/unitless/dist/unitless.browser.esm.js","webpack:///./node_modules/@emotion/memoize/dist/memoize.browser.esm.js","webpack:///./node_modules/@emotion/serialize/dist/serialize.browser.esm.js","webpack:///./.cache/register-service-worker.js","webpack:///./.cache/_this_is_virtual_fs_path_/$virtual/async-requires.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/c8a41e13395a6fcbf4fab349f7b47bdb.js","webpack:///./node_modules/babel-runtime/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/8b7c7aec4f65ad9fe66ec189d282a08b.js","webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/babel-runtime/helpers/extends.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/2aee96ade916d3e63008cf2702274c40.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-3-mobile.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/79f14b9479292b7d10aea0aeb8e9f89c.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js","webpack:///./.cache/route-announcer-props.js","webpack:///./.cache/navigation.js","webpack:///./node_modules/shallow-compare/es/index.js","webpack:///./.cache/ensure-resources.js","webpack:///./.cache/production-app.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/@babel/runtime/helpers/inheritsLoose.js","webpack:///./src/util/useWindowSize.ts","webpack:///./src/components/research/resizable-graph.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/content/early-years/svg/early-years-graph-3.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/@reach/router/es/index.js","webpack:///./node_modules/gatsby-plugin-breadcrumb/gatsby-browser.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-1-mobile.svg","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/5125b0f2af394d48a8a9b4e6ef21c0c8.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js","webpack:///./src/content/further-education/svg/apprenticeships-tablet.svg","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./.cache/strip-prefix.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-2-mobile.svg","webpack:///./node_modules/gatsby-link/parse-path.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js","webpack:///./.cache/prefetch.js","webpack:///./.cache/loader.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/25c245c1b20933e1b650708f21aeb114.js","webpack:///./node_modules/gatsby-plugin-mdx/loaders/mdx-scopes.js","webpack:///./node_modules/gatsby-plugin-mdx/wrap-root-element.js","webpack:///./node_modules/gatsby-plugin-mdx/gatsby-browser.js","webpack:///./node_modules/gatsby-plugin-mdx/loaders/mdx-components.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/7c89f80585d992fa5a88bbe0f14e3ab8.js","webpack:///./src/content/early-years/svg/early-years-graph-1.svg","webpack:///./node_modules/gatsby-react-router-scroll/scroll-container.js","webpack:///./node_modules/gatsby-plugin-breadcrumb/components/breadcrumb-context.js","webpack:///./node_modules/@emotion/css/dist/css.browser.esm.js","webpack:///./src/content/further-education/svg/apprenticeships-mobile.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/gatsby-plugin-breadcrumb/components/options-context.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-2-desktop.svg","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/gatsby-plugin-manifest/gatsby-browser.js","webpack:///./.cache/create-react-context.js","webpack:///./src/content/further-education/svg/further-educations-inequalities-in-funding-tablet.svg","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/@emotion/sheet/dist/sheet.browser.esm.js","webpack:///./node_modules/@emotion/stylis/dist/stylis.browser.esm.js","webpack:///./node_modules/@emotion/cache/dist/cache.browser.esm.js","webpack:///./node_modules/@emotion/utils/dist/utils.browser.esm.js","webpack:///./node_modules/@emotion/core/dist/core.browser.esm.js","webpack:///./src/content/early-years/svg/early-years-graph-2.svg","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/gatsby-plugin-breadcrumb/components/app-providers.js","webpack:///./.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/22ab73544f79b3cf8f18563241de4721.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/fn/object/assign.js","webpack:///./src/content/school-years/svg/school-years-executive-summary.svg","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./src/components/research/research-image.tsx","webpack:///./src/content/school-years/svg/school-years-gaps-in-attainment-graph-1-desktop.svg","webpack:///./.cache/api-runner-browser.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js"],"names":["_interopRequireDefault","exports","__esModule","withPrefix","withAssetPrefix","path","getGlobalPathPrefix","navigateTo","replace","push","navigate","default","_objectWithoutPropertiesLoose2","_extends2","_assertThisInitialized2","_inheritsLoose2","_propTypes","_react","_router","_utils","_parsePath","parsePath","isAbsolutePath","startsWith","prefix","_ref","_prefix","getGlobalBasePrefix","isLocalLink","base","endsWith","slice","rewriteLinkPath","relativeTo","current","resolve","absolutify","NavLinkPropTypes","activeClassName","string","activeStyle","object","partiallyActive","bool","GatsbyLink","_React$Component","props","_this","call","this","defaultGetProps","_ref2","isPartiallyCurrent","isCurrent","className","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","location","pathname","componentDidMount","componentWillUnmount","io","_this$io","instance","el","unobserve","disconnect","ref","cb","_this2","innerRef","hasOwnProperty","entries","forEach","entry","target","isIntersecting","intersectionRatio","observe","render","_this3","_this$props","_this$props$getProps","getProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","createElement","Location","_ref3","prefixedTo","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","shouldReplace","encodeURI","___navigate","href","Component","propTypes","func","isRequired","showDeprecationWarning","functionName","altFunctionName","version","console","warn","_default","forwardRef","options","___push","___replace","module","Object","defineProperty","get","a","ceil","Math","floor","it","isNaN","SessionStorage","read","key","stateKey","getStateKey","value","sessionStorage","getItem","JSON","parse","save","storedValue","stringify","setItem","stateKeyBase","f","getOwnPropertySymbols","toInteger","min","furtherReadingStyles","components","ul","children","li","bulletStyles","role","css","FurtherReading","_typeof","_getRequireWildcardCache","WeakMap","cache","obj","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","set","undefined","charAt","length","pathCache","Map","matchPaths","trimPathname","rawPathname","decodeURIComponent","stripPrefix","__BASE_PATH__","split","URL","setMatchPaths","findMatchPath","trimmedPathname","cleanPath","pickPaths","map","matchPath","originalPath","pick","normalizePagePath","route","grabMatchParams","params","findPath","foundPath","React","EarlyYearsGraph4","defaultProps","useScrollRestoration","identifier","useLocation","useContext","_scrollHandler","ScrollContext","useRef","useLayoutEffect","position","scrollTo","onScroll","scrollTop","FurtherEducationsInequalitiesInFundingMobile","$export","S","F","assign","emitter","all","create","on","type","handler","off","splice","indexOf","emit","evt","mitt","ScrollContainer","ScrollHandler","_scrollContainer","_useScrollRestoration","_defineProperty","enumerable","configurable","writable","_extends","i","arguments","source","apply","ownKeys","enumerableOnly","keys","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","MDXContext","createContext","withMDXComponents","allComponents","useMDXComponents","contextComponents","MDXProvider","disableParentContext","Provider","DEFAULTS","inlineCode","wrapper","Fragment","MDXCreateElement","propComponents","mdxType","originalType","parentName","etc","concat","args","argsLength","createElementArgArray","Array","newProps","displayName","global","self","Function","__g","polyfill","getLocation","_source$location","search","hash","origin","protocol","host","hostname","port","canUseDOM","decodeURI","history","createHistory","listeners","transitioning","resolveTransition","_onTransitionComplete","listen","listener","popstateListener","action","addEventListener","removeEventListener","fn","_ref$replace","go","Date","now","replaceState","pushState","transition","Promise","res","createMemorySource","initialPath","searchIndex","initialLocation","substr","index","stack","states","name","_","uri","_uri$split","_uri$split$","_uri$split2","_uri$split2$","newIndex","document","globalHistory","require","convertProps","convertedProps","resolutions","sizes","critical","fixed","fluid","loading","groupByMedia","matchesMedia","media","isBrowser","matchMedia","matches","getImageCacheKey","srcData","getCurrentSrcData","src","currentData","isArray","some","image","hasArtDirectionSupport","foundMedia","findIndex","noMedia","imageCache","inImageCache","cacheKey","hasNativeLazyLoadSupport","HTMLImageElement","hasIOSupport","generateImageSources","imageVariants","srcSet","srcSetWebp","withMedia","without","variant","generateTracedSVGSources","_ref4","tracedSVG","generateBase64Sources","_ref5","base64","generateNoscriptSource","_ref6","isWebp","listenToIntersections","observer","delete","rootMargin","noscriptImg","title","alt","width","height","crossOrigin","draggable","Placeholder","generateSources","spreadProps","ariaHidden","baseImage","Img","onLoad","onError","otherProps","top","left","objectFit","objectPosition","Image","seenBefore","isCritical","addNoScript","fadeIn","useIOSupport","isVisible","imgLoaded","imgCached","imageRef","createRef","placeholderRef","handleImageLoaded","onStartLoad","wasCached","img","complete","cleanUpListeners","imageInCache","setState","currentSrc","_convertProps","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","durationFadeIn","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","opacity","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","overflow","maxWidth","maxHeight","paddingBottom","aspectRatio","bottom","right","dangerouslySetInnerHTML","__html","_imageVariants","_image","divStyle","display","fixedObject","shape","number","srcWebp","fluidObject","requireFixedOrFluid","originalPropTypes","propName","componentName","_PropTypes$checkPropT","Error","checkPropTypes","oneOfType","arrayOf","oneOf","localizedManifests","localizedManifest","find","app","start_url","lang","toIObject","arrayIndexOf","IE_PROTO","names","O","result","dP","createDesc","isObject","is","GatsbyMDXScopeContext","useMDXScope","scope","contextScope","MDXScopeProvider","__mdxScope","DESCRIPTORS","getKeys","gOPS","pIE","toObject","IObject","$assign","A","B","Symbol","K","k","T","aLen","getSymbols","isEnum","j","SchoolYearsGapsInAttainmentGraph3Desktop","defined","ApprenticeshipsDesktop","SchoolYearsTypeAndQualityOfSchoolingDesktop","QualityOfSchoolingSVGMobile","QualityOfSchoolingSVGTable","QualityOfSchoolingSVGDesktop","ResizableGraph","ResearchImage","bitmap","_interopRequireWildcard","_sessionStorage","_len","_key","_stateStorage","scrollListener","scrollY","windowScroll","shouldUpdateScroll","scrollToHash","node","getElementById","substring","scrollIntoView","prevRouterProps","routerProps","scrollPosition","_this$props$location","_this$props$location2","element","TypeError","anObject","IE8_DOM_DEFINE","toPrimitive","P","Attributes","BreakPoint","screenSizes","sm","md","lg","xl","mq","size","PageRenderer","pageResources","json","pageContext","__params","pathContext","pageElement","apiRunner","loader","publicLoader","component","page","pop","aa","b","c","ba","d","unshift","p","toString","q","ca","o","da","FontFace","t","cssText","setAttribute","appendChild","createTextNode","u","getElementsByTagName","documentElement","insertBefore","lastChild","v","parentNode","removeChild","w","g","y","z","m","rel","onload","onerror","setTimeout","onreadystatechange","readyState","tagName","C","D","E","G","match","parseInt","I","test","J","H","ga","toLowerCase","ha","h","events","classes","L","ja","M","N","Q","s","start","fonts","load","fa","then","race","clearTimeout","R","exec","navigator","userAgent","la","U","offsetWidth","serif","V","ma","W","X","na","oa","qa","l","n","r","x","xa","vendor","ra","sa","ta","ua","context","timeout","ia","ka","pa","projectId","api","fontfamily","fontStyle","fontWeight","id","urls","families","testStrings","ya","za","latin","cyrillic","greek","khmer","Hanuman","Aa","thin","extralight","ultralight","light","regular","book","medium","semibold","demibold","bold","extrabold","ultrabold","black","heavy","Ba","italic","normal","Ca","Ea","Fa","Arimo","Cousine","Tinos","Ga","Ha","text","va","Da","encodeURIComponent","wa","Typekit","config","async","__webfontfontdeckmodule__","weight","ea","Y","custom","fontdeck","monotype","typekit","google","Z","_arrayLikeToArray","arr","len","arr2","_toConsumableArray","iter","iterator","from","minLen","constructor","routes","default_","uriPathname","uriSegments","segmentize","isRootUri","ranked","rankRoutes","missed","routeSegments","max","routeSegment","uriSegment","isSplat","dynamicMatch","paramRe","reservedNames","_to$split","toPathname","toQuery","basePathname","toSegments","baseSegments","addQuery","allSegments","segments","segment","insertParams","_path$split","pathBase","_path$split$","query","constructedPath","_params$location","_params$location$sear","searchSplit","validateRedirect","isDynamic","sort","rankRoute","score","reduce","isRootSegment","SEGMENT_POINTS","shallowCompare","obj1","obj2","obj1Keys","every","plugin","WebFont","val","valueOf","ie10","appVersion","fns","doc","hack","doScroll","loaded","shift","definition","SchoolYearsOverviewSVG","str","charCodeAt","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","processStyleName","arg","styleName","p1","p2","cursor","styles","next","handleInterpolation","mergedProps","registered","interpolation","couldBeSelectorInterpolation","__emotion_styles","anim","interpolated","_i","createStringFromObject","previousCursor","cached","labelPattern","stringMode","strings","raw","lastIndex","identifierName","error","serviceWorker","register","reg","installingWorker","installing","log","controller","___swUpdated","___failedResources","reload","catch","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","ReferenceError","CovidImpactRedundanciesSVG","CovidImpactChildCareSVG","condition","format","argIndex","framesToPop","_assign","_assign2","ApprenticeshipsMobile","ApprenticeshipsTablet","SchoolYearsGapsInAttainmentGraph3Mobile","OverviewSVG","core","ctx","hide","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","expProto","virtual","RouteAnnouncerProps","padding","clip","whiteSpace","border","redirectMap","redirects","redirect","fromPath","maybeRedirect","toPath","onPreRouteUpdate","prevLocation","onRouteUpdate","timeoutId","loadPage","status","PageResourceStatus","webpackCompilationHash","___webpackCompilationHash","postMessage","gatsbyApi","reachNavigate","results","getSavedScrollPosition","RouteAnnouncer","announcementRef","nextProps","requestAnimationFrame","pageName","pageHeadings","querySelectorAll","textContent","newAnnouncement","innerText","RouteUpdates","shouldFireRouteUpdate","getSnapshotBeforeUpdate","shallowDiffers","EnsureResources","loadPageSync","getDerivedStateFromProps","loadResources","rawPath","shouldComponentUpdate","nextState","ProdLoader","asyncRequires","setLoader","setApiRunner","___emitter","apiRunnerAsync","RouteHandler","baseuri","basepath","DataContext","GatsbyRoot","staticQueryResults","getStaticQueryResults","LocationHandler","Consumer","pagePath","browserLoc","SiteRoot","App","renderer","ReactDOM","hydrate","domReady","__e","subClass","superClass","__proto__","useWindowSize","useState","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","graphContainerStyles","fullSpan","mobile","tablet","desktop","Graph","prefetchPathname","StaticQueryContext","StaticQueryDataRenderer","staticQueryData","data","finalData","StaticQuery","useStaticQuery","Number","graphql","unstable_collectionGraphql","EarlyYearsGraph3","shared","uid","_classCallCheck","Constructor","_possibleConstructorReturn","_inherits","setPrototypeOf","createNamedContext","defaultValue","Ctx","LocationContext","LocationProvider","_temp","getContext","refs","unlisten","_props$history","componentDidCatch","info","isRedirect","_navigate","unmounted","ServerLocation","url","BaseContext","Router","baseContext","locationContext","RouterImpl","_React$PureComponent","_props","_navigate2","primary","_props$component","domProps","Children","toArray","array","child","createRoute","clone","cloneElement","FocusWrapper","FocusHandler","wrapperProps","PureComponent","FocusContext","requestFocus","FocusHandlerImpl","initialRender","focusHandlerCount","_React$Component2","_temp2","_this4","_len2","_key2","shouldFocus","focus","myURIChanged","navigatedUpToMe","contains","activeElement","_this5","_props2","_props2$component","Comp","outline","tabIndex","_props$getProps","anchorProps","encodedHref","event","shouldNavigate","_location$state","restState","RedirectRequest","redirectTo","RedirectImpl","_React$Component3","_props3","_props3$replace","noThrow","resolvedTo","_props4","Redirect","_ref7","Match","_ref8","_ref9","_ref10","resolvedPath","useNavigate","useParams","useMatch","stripSlashes","elementPath","wrapRootElement","_appProviders","pluginOptions","AppProviders","SchoolYearsGapsInAttainmentGraph1Mobile","SchoolYearsGapsInAttainmentGraph2Mobile","hashIndex","_inheritsLoose","supportedPrefetchStrategy","feature","fakeLink","relList","supports","err","support","reject","link","getElementsByName","req","XMLHttpRequest","open","send","preFetched","prefetch","Success","preferDefault","createPageDataUrl","doFetch","method","toPageResources","pageData","componentChunkName","staticQueryHashes","BaseLoader","loadComponent","inFlightNetworkRequests","pageDb","inFlightDb","staticQueryDb","pageDataDb","prefetchTriggered","Set","prefetchCompleted","memoizedGet","inFlightPromise","response","prefetchDisabled","fetchPageDataJson","loadObj","retries","responseText","jsonPayload","payload","notFound","loadPageDataJson","loadAppData","allData","finalResult","componentChunkPromise","createdAt","staticQueryBatchPromise","staticQueryHash","staticQueryResultsMap","shouldPrefetch","connection","effectiveType","includes","saveData","doesConnectionSupportPrefetch","add","realPath","doPrefetch","getResourceURLsForPathname","createComponentUrls","isPageNotFound","appData","___chunkMapping","chunk","__PATH_PREFIX__","chunkName","pageDataUrl","prefetchHelper","as","componentUrls","_loader","getResourcesForPathname","getResourcesForPathnameSync","GapsInAttainmentExpectedStandardDesktop","GapsInAttainmentExpectedStandardMobile","GapsInAttainmentHigherStandardDesktop","GapsInAttainmentHigherStandardMobile","GapsInAttainmentMarginalReturnsDesktop","GapsInAttainmentMarginalReturnsMobile","scope_0","scope_1","scope_2","scope_3","scope_4","scope_5","scope_6","scope_7","scope_8","scope_9","scope_10","componentsAndGuards","mdxPlugins","guards","guard","componentFromGuards","MDXConsumer","componentsFromContext","scopeContexts","plugins","EarlyYearsProvisionSVG","EarlyYearsGraph1","_reactDom","scrollKey","ScrollContainerImplementation","findDOMNode","BreadcrumbConsumer","BreadcrumbProvider","BreadcrumbContext","defaultCrumb","_React$useState","crumbs","setCrumbs","crumb","updateCrumbs","crumbLabel","crumbSeparator","crumbStyle","crumbActiveStyle","indexOfFirstOccurrenceOfCurrentPath","px","random","OptionsConsumer","OptionsProvider","OptionsContext","_ref$useAutoGen","useAutoGen","_ref$usePathPrefix","usePathPrefix","$keys","enumBugKeys","SchoolYearsGapsInAttainmentGraph2Desktop","cof","aFunction","that","FurtherEducationsInequalitiesInFundingTablet","StyleSheet","isSpeedy","speedy","tags","ctr","nonce","container","before","insert","rule","_tag","tag","createStyleElement","nextSibling","sheet","styleSheets","ownerNode","sheetForTag","isImportRule","insertRule","cssRules","flush","trim","use","toSheet","block","Sheet","ruleSheet","content","selectors","parents","line","column","ns","depth","at","delimiter","stylisOptions","stylis","inserted","head","_insert","nodes","getAttribute","stylisPlugins","selector","serialized","shouldCache","getRegisteredStyles","registeredStyles","classNames","rawClassName","insertStyles","isStringTag","EmotionCacheContext","HTMLElement","ThemeContext","typePropName","theme","cssProp","Emotion","Global","InnerGlobal","updater","querySelector","nextElementSibling","classnames","cls","toAdd","merge","cx","ele","EarlyYearsGraph2","ProdPageRenderer","InternalPageRenderer","store","mode","copyright","_breadcrumbContext","_optionsContext","useClassNames","InequalitiesSpendingDesktop","InequalitiesSpendingMobile","InequalitiesSpendingTablet","SchoolYearsExecutiveSummary","PureResearchImage","childImageSharp","imageName","images","edges","originalName","SchoolYearsGapsInAttainmentGraph1Desktop","defaultReturn","argTransform","previous"],"mappings":"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","file":"app-d3231d894fa1f4fd131f.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.withAssetPrefix = withAssetPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _utils = require(\"@reach/router/lib/utils\");\n\nvar _parsePath = require(\"./parse-path\");\n\nexports.parsePath = _parsePath.parsePath;\n\nvar isAbsolutePath = function isAbsolutePath(path) {\n  return path === null || path === void 0 ? void 0 : path.startsWith(\"/\");\n};\n\nfunction withPrefix(path, prefix) {\n  var _ref, _prefix;\n\n  if (prefix === void 0) {\n    prefix = getGlobalBasePrefix();\n  }\n\n  if (!isLocalLink(path)) {\n    return path;\n  }\n\n  if (path.startsWith(\"./\") || path.startsWith(\"../\")) {\n    return path;\n  }\n\n  var base = (_ref = (_prefix = prefix) !== null && _prefix !== void 0 ? _prefix : getGlobalPathPrefix()) !== null && _ref !== void 0 ? _ref : \"/\";\n  return \"\" + ((base === null || base === void 0 ? void 0 : base.endsWith(\"/\")) ? base.slice(0, -1) : base) + (path.startsWith(\"/\") ? path : \"/\" + path);\n} // These global values are wrapped in typeof clauses to ensure the values exist.\n// This is especially problematic in unit testing of this component.\n\n\nvar getGlobalPathPrefix = function getGlobalPathPrefix() {\n  return process.env.NODE_ENV !== \"production\" ? typeof __PATH_PREFIX__ !== \"undefined\" ? __PATH_PREFIX__ : undefined : __PATH_PREFIX__;\n};\n\nvar getGlobalBasePrefix = function getGlobalBasePrefix() {\n  return process.env.NODE_ENV !== \"production\" ? typeof __BASE_PATH__ !== \"undefined\" ? __BASE_PATH__ : undefined : __BASE_PATH__;\n};\n\nvar isLocalLink = function isLocalLink(path) {\n  return path && !path.startsWith(\"http://\") && !path.startsWith(\"https://\") && !path.startsWith(\"//\");\n};\n\nfunction withAssetPrefix(path) {\n  return withPrefix(path, getGlobalPathPrefix());\n}\n\nfunction absolutify(path, current) {\n  // If it's already absolute, return as-is\n  if (isAbsolutePath(path)) {\n    return path;\n  }\n\n  return (0, _utils.resolve)(path, current);\n}\n\nvar rewriteLinkPath = function rewriteLinkPath(path, relativeTo) {\n  if (typeof path === \"number\") {\n    return path;\n  }\n\n  if (!isLocalLink(path)) {\n    return path;\n  }\n\n  return isAbsolutePath(path) ? withPrefix(path) : absolutify(path, relativeTo);\n};\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object,\n  partiallyActive: _propTypes.default.bool\n}; // Set up IntersectionObserver\n\nvar createIntersectionObserver = function createIntersectionObserver(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n  return {\n    instance: io,\n    el: el\n  };\n};\n\nvar GatsbyLink = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // Default to no support for IntersectionObserver\n\n    _this.defaultGetProps = function (_ref2) {\n      var isPartiallyCurrent = _ref2.isPartiallyCurrent,\n          isCurrent = _ref2.isCurrent;\n\n      if (_this.props.partiallyActive ? isPartiallyCurrent : isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    };\n\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    _this.state = {\n      IOSupported: IOSupported\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(this.props.to, window.location.pathname)).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(this.props.to, window.location.pathname)).pathname);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (!this.io) {\n      return;\n    }\n\n    var _this$io = this.io,\n        instance = _this$io.instance,\n        el = _this$io.el;\n    instance.unobserve(el);\n    instance.disconnect();\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.props.innerRef && this.props.innerRef.hasOwnProperty(\"current\")) {\n      this.props.innerRef.current = ref;\n    } else if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      this.io = createIntersectionObserver(ref, function () {\n        ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(_this2.props.to, window.location.pathname)).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $innerRef = _this$props.innerRef,\n        partiallyActive = _this$props.partiallyActive,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"activeClassName\", \"activeStyle\", \"innerRef\", \"partiallyActive\", \"state\", \"replace\"]);\n\n    if (process.env.NODE_ENV !== \"production\" && !isLocalLink(to)) {\n      console.warn(\"External link \" + to + \" was detected in a Link component. Use the Link component only for internal links. See: https://gatsby.dev/internal-links\");\n    }\n\n    return /*#__PURE__*/_react.default.createElement(_router.Location, null, function (_ref3) {\n      var location = _ref3.location;\n      var prefixedTo = rewriteLinkPath(to, location.pathname);\n      return isLocalLink(prefixedTo) ? /*#__PURE__*/_react.default.createElement(_router.Link, (0, _extends2.default)({\n        to: prefixedTo,\n        state: state,\n        getProps: getProps,\n        innerRef: _this3.handleRef,\n        onMouseEnter: function onMouseEnter(e) {\n          if (_onMouseEnter) {\n            _onMouseEnter(e);\n          }\n\n          ___loader.hovering((0, _parsePath.parsePath)(prefixedTo).pathname);\n        },\n        onClick: function onClick(e) {\n          if (_onClick) {\n            _onClick(e);\n          }\n\n          if (e.button === 0 && // ignore right clicks\n          !_this3.props.target && // let browser handle \"target=_blank\"\n          !e.defaultPrevented && // onClick prevented default\n          !e.metaKey && // ignore clicks with modifier keys...\n          !e.altKey && !e.ctrlKey && !e.shiftKey) {\n            e.preventDefault();\n            var shouldReplace = replace;\n            var isCurrent = encodeURI(prefixedTo) === window.location.pathname;\n\n            if (typeof replace !== \"boolean\" && isCurrent) {\n              shouldReplace = true;\n            } // Make sure the necessary scripts and data are\n            // loaded before continuing.\n\n\n            window.___navigate(prefixedTo, {\n              state: state,\n              replace: shouldReplace\n            });\n          }\n\n          return true;\n        }\n      }, rest)) : /*#__PURE__*/_react.default.createElement(\"a\", (0, _extends2.default)({\n        href: prefixedTo\n      }, rest));\n    });\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool,\n  state: _propTypes.default.object\n});\n\nvar showDeprecationWarning = function showDeprecationWarning(functionName, altFunctionName, version) {\n  return console.warn(\"The \\\"\" + functionName + \"\\\" method is now deprecated and will be removed in Gatsby v\" + version + \". Please use \\\"\" + altFunctionName + \"\\\" instead.\");\n};\n\nvar _default = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  return /*#__PURE__*/_react.default.createElement(GatsbyLink, (0, _extends2.default)({\n    innerRef: ref\n  }, props));\n});\n\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(rewriteLinkPath(to, window.location.pathname), options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  showDeprecationWarning(\"push\", \"navigate\", 3);\n\n  window.___push(rewriteLinkPath(to, window.location.pathname));\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  showDeprecationWarning(\"replace\", \"navigate\", 3);\n\n  window.___replace(rewriteLinkPath(to, window.location.pathname));\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  showDeprecationWarning(\"navigateTo\", \"navigate\", 3);\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","\"use strict\";\n\nexports.__esModule = true;\nexports.SessionStorage = void 0;\nvar STATE_KEY_PREFIX = \"@@scroll|\";\nvar GATSBY_ROUTER_SCROLL_STATE = \"___GATSBY_REACT_ROUTER_SCROLL\";\n\nvar SessionStorage = /*#__PURE__*/function () {\n  function SessionStorage() {}\n\n  var _proto = SessionStorage.prototype;\n\n  _proto.read = function read(location, key) {\n    var stateKey = this.getStateKey(location, key);\n\n    try {\n      var value = window.sessionStorage.getItem(stateKey);\n      return value ? JSON.parse(value) : 0;\n    } catch (e) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"[gatsby-react-router-scroll] Unable to access sessionStorage; sessionStorage is not available.\");\n      }\n\n      if (window && window[GATSBY_ROUTER_SCROLL_STATE] && window[GATSBY_ROUTER_SCROLL_STATE][stateKey]) {\n        return window[GATSBY_ROUTER_SCROLL_STATE][stateKey];\n      }\n\n      return 0;\n    }\n  };\n\n  _proto.save = function save(location, key, value) {\n    var stateKey = this.getStateKey(location, key);\n    var storedValue = JSON.stringify(value);\n\n    try {\n      window.sessionStorage.setItem(stateKey, storedValue);\n    } catch (e) {\n      if (window && window[GATSBY_ROUTER_SCROLL_STATE]) {\n        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);\n      } else {\n        window[GATSBY_ROUTER_SCROLL_STATE] = {};\n        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);\n      }\n\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"[gatsby-react-router-scroll] Unable to save state in sessionStorage; sessionStorage is not available.\");\n      }\n    }\n  };\n\n  _proto.getStateKey = function getStateKey(location, key) {\n    var stateKeyBase = \"\" + STATE_KEY_PREFIX + location.pathname;\n    return key === null || typeof key === \"undefined\" ? stateKeyBase : stateKeyBase + \"|\" + key;\n  };\n\n  return SessionStorage;\n}();\n\nexports.SessionStorage = SessionStorage;","exports.f = Object.getOwnPropertySymbols;\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { MDXProvider } from \"@mdx-js/react\";\n\nconst furtherReadingStyles = css`\n  border: 1px solid;\n  border-radius: 0.625rem;\n  padding: 1.5rem 6rem;\n  grid-column: 1 / span 2;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 13.75rem;\n`;\n\nconst Flattened = ({ children }) => children;\n\nconst Bulleted = props => {\n  const bulletStyles = css`\n    display: flex;\n    align-items: top;\n    line-height: 1.875rem;\n    margin-bottom: 1rem;\n    .further-reading-bullet-point {\n      min-width: 1rem;\n      height: 0.375rem;\n      display: inline-block;\n      margin-right: 0.75rem;\n      margin-top: 0.75rem;\n      border-radius: 4px;\n    }\n  `;\n\n  return (\n    <div role=\"listitem\" css={bulletStyles}>\n      <span className=\"further-reading-bullet-point\" />\n      <span className=\"bullet-point-text\" {...props} />\n    </div>\n  );\n};\n\nconst components = {\n  ul: Flattened,\n  li: Bulleted,\n};\n\nconst FurtherReading = ({ children }) => {\n  return (\n    <MDXProvider components={components}>\n      <div\n        className=\"further-reading-container\"\n        role=\"list\"\n        css={furtherReadingStyles}\n      >\n        {children}\n      </div>\n    </MDXProvider>\n  );\n};\n\nexport default FurtherReading;\n","var _typeof = require(\"../helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;","export default path => {\n  if (path === undefined) {\n    return path\n  }\n  if (path === `/`) {\n    return `/`\n  }\n  if (path.charAt(path.length - 1) === `/`) {\n    return path.slice(0, -1)\n  }\n  return path\n}\n","import { pick } from \"@reach/router/lib/utils\"\nimport stripPrefix from \"./strip-prefix\"\nimport normalizePagePath from \"./normalize-page-path\"\n\nconst pathCache = new Map()\nlet matchPaths = []\n\nconst trimPathname = rawPathname => {\n  const pathname = decodeURIComponent(rawPathname)\n  // Remove the pathPrefix from the pathname.\n  const trimmedPathname = stripPrefix(pathname, __BASE_PATH__)\n    // Remove any hashfragment\n    .split(`#`)[0]\n    // Remove search query\n    .split(`?`)[0]\n\n  return trimmedPathname\n}\n\nfunction absolutify(path) {\n  // If it's already absolute, return as-is\n  if (\n    path.startsWith(`/`) ||\n    path.startsWith(`https://`) ||\n    path.startsWith(`http://`)\n  ) {\n    return path\n  }\n  // Calculate path relative to current location, adding a trailing slash to\n  // match behavior of @reach/router\n  return new URL(\n    path,\n    window.location.href + (window.location.href.endsWith(`/`) ? `` : `/`)\n  ).pathname\n}\n\n/**\n * Set list of matchPaths\n *\n * @param {Array<{path: string, matchPath: string}>} value collection of matchPaths\n */\nexport const setMatchPaths = value => {\n  matchPaths = value\n}\n\n/**\n * Return a matchpath url\n * if `match-paths.json` contains `{ \"/foo*\": \"/page1\", ...}`, then\n * `/foo?bar=far` => `/page1`\n *\n * @param {string} rawPathname A raw pathname\n * @return {string|null}\n */\nexport const findMatchPath = rawPathname => {\n  const trimmedPathname = cleanPath(rawPathname)\n\n  const pickPaths = matchPaths.map(({ path, matchPath }) => {\n    return {\n      path: matchPath,\n      originalPath: path,\n    }\n  })\n\n  const path = pick(pickPaths, trimmedPathname)\n\n  if (path) {\n    return normalizePagePath(path.route.originalPath)\n  }\n\n  return null\n}\n\n/**\n * Return a matchpath params from reach/router rules\n * if `match-paths.json` contains `{ \":bar/*foo\" }`, and the path is /baz/zaz/zoo\n * then it returns\n *  { bar: baz, foo: zaz/zoo }\n *\n * @param {string} rawPathname A raw pathname\n * @return {object}\n */\nexport const grabMatchParams = rawPathname => {\n  const trimmedPathname = cleanPath(rawPathname)\n\n  const pickPaths = matchPaths.map(({ path, matchPath }) => {\n    return {\n      path: matchPath,\n      originalPath: path,\n    }\n  })\n\n  const path = pick(pickPaths, trimmedPathname)\n\n  if (path) {\n    return path.params\n  }\n\n  return {}\n}\n\n// Given a raw URL path, returns the cleaned version of it (trim off\n// `#` and query params), or if it matches an entry in\n// `match-paths.json`, its matched path is returned\n//\n// E.g. `/foo?bar=far` => `/foo`\n//\n// Or if `match-paths.json` contains `{ \"/foo*\": \"/page1\", ...}`, then\n// `/foo?bar=far` => `/page1`\nexport const findPath = rawPathname => {\n  const trimmedPathname = trimPathname(absolutify(rawPathname))\n  if (pathCache.has(trimmedPathname)) {\n    return pathCache.get(trimmedPathname)\n  }\n\n  let foundPath = findMatchPath(trimmedPathname)\n\n  if (!foundPath) {\n    foundPath = cleanPath(rawPathname)\n  }\n\n  pathCache.set(trimmedPathname, foundPath)\n\n  return foundPath\n}\n\n/**\n * Clean a url and converts /index.html => /\n * E.g. `/foo?bar=far` => `/foo`\n *\n * @param {string} rawPathname A raw pathname\n * @return {string}\n */\nexport const cleanPath = rawPathname => {\n  const trimmedPathname = trimPathname(absolutify(rawPathname))\n\n  let foundPath = trimmedPathname\n  if (foundPath === `/index.html`) {\n    foundPath = `/`\n  }\n\n  foundPath = normalizePagePath(foundPath)\n\n  return foundPath\n}\n","var React = require('react');\n\nfunction EarlyYearsGraph4 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 11\"),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"transform\":\"translate(-164.000000, -992.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(165.000000, 992.000000)\"},[React.createElement(\"text\",{\"id\":\"of-eligible-children\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"18\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":0},[React.createElement(\"tspan\",{\"x\":\"188.438\",\"y\":\"18\",\"key\":0},\"of eligible children accessed \"),React.createElement(\"tspan\",{\"x\":\"192.155\",\"y\":\"48\",\"key\":1},\"child care during lockdown\")]),React.createElement(\"path\",{\"d\":\"M30,12 C36.0012891,12 39.0774609,15.0744141 41.7896484,17.7884766 C44.3439844,20.3410547 46.6653516,22.546875 51.2109375,22.546875 L51.2109375,22.546875 L54.7265625,22.546875 C57.6344531,22.546875 60,24.9124219 60,27.8203125 C60,36.3194531 53.1329297,43.2215625 44.7188672,43.5742969 C41.3167969,47.5951172 36.5939063,50.671875 30,50.671875 C23.3925,50.671875 18.6635156,47.5825781 15.2600391,43.5498047 C6.7425,43.0735547 0,36.2364844 0,27.8203125 C0,24.9124219 2.36554688,22.546875 5.2734375,22.546875 L5.2734375,22.546875 L8.7890625,22.546875 C13.3346484,22.546875 15.6560156,20.3410547 18.2103516,17.7884766 C20.9225391,15.0744141 23.9987109,12 30,12 Z M7.31601563,26.0625 L5.2734375,26.0625 C4.30359375,26.0625 3.515625,26.8504687 3.515625,27.8203125 C3.515625,33.3814453 7.36640625,38.0392969 12.4409766,39.5572266 C9.37792969,34.3389844 7.84300781,28.7095313 7.31601563,26.0625 L7.31601563,26.0625 Z M54.7265625,26.0625 L52.6839844,26.0625 C52.1569922,28.7095312 50.6220703,34.3389844 47.5590234,39.5572266 C52.6335938,38.0392969 56.484375,33.3814453 56.484375,27.8203125 C56.484375,26.8504687 55.6964063,26.0625 54.7265625,26.0625 L54.7265625,26.0625 Z\",\"id\":\"Combined-Shape\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"1.5\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"text\",{\"id\":\"7%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"48\",\"fontWeight\":\"bold\",\"lineSpacing\":\"62\",\"fill\":\"#2D3142\",\"key\":2},React.createElement(\"tspan\",{\"x\":\"85.5\",\"y\":\"46\"},\"7%\"))])))]);\n}\n\nEarlyYearsGraph4.defaultProps = {\"width\":\"445px\",\"height\":\"62px\",\"viewBox\":\"0 0 445 62\",\"version\":\"1.1\"};\n\nmodule.exports = EarlyYearsGraph4;\n\nEarlyYearsGraph4.default = EarlyYearsGraph4;\n","\"use strict\";\n\nexports.__esModule = true;\nexports.useScrollRestoration = useScrollRestoration;\n\nvar _scrollHandler = require(\"./scroll-handler\");\n\nvar _react = require(\"react\");\n\nvar _router = require(\"@reach/router\");\n\nfunction useScrollRestoration(identifier) {\n  var location = (0, _router.useLocation)();\n  var state = (0, _react.useContext)(_scrollHandler.ScrollContext);\n  var ref = (0, _react.useRef)();\n  (0, _react.useLayoutEffect)(function () {\n    if (ref.current) {\n      var position = state.read(location, identifier);\n      ref.current.scrollTo(0, position || 0);\n    }\n  }, []);\n  return {\n    ref: ref,\n    onScroll: function onScroll() {\n      if (ref.current) {\n        state.save(location, identifier, ref.current.scrollTop);\n      }\n    }\n  };\n}","var React = require('react');\n\nfunction FurtherEducationsInequalitiesInFundingMobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 6\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Mobile/Timeline/School-years/Early-years-foundation-stage-Copy\",\"transform\":\"translate(-12.000000, -2267.000000)\"},React.createElement(\"g\",{\"id\":\"Group-6\",\"transform\":\"translate(12.000000, 2267.000000)\"},[React.createElement(\"g\",{\"id\":\"Group-5\",\"key\":0},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.000000, 48.000000)\",\"key\":0},[React.createElement(\"polygon\",{\"id\":\"Line\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"350.999182 291 350.999406 291.571188 40.9996296 292 40.999406 291.428812\",\"key\":0}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-6\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"transform\":\"translate(40.991302, 148.501037) rotate(-90.000000) translate(-40.991302, -148.501037) \",\"points\":\"182.992114 148.006822 182.992339 149.009735 -101.009735 148.995252 -101.009735 147.992339\",\"key\":1}),React.createElement(\"polygon\",{\"id\":\"Line-Copy\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"350.999182 234 350.999406 234.571188 40.9996296 235 40.999406 234.428812\",\"key\":2}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-2\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"350.999182 177 350.999406 177.571188 40.9996296 178 40.999406 177.428812\",\"key\":3}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-3\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"350.999182 120 350.999406 120.571188 40.9996296 121 40.999406 120.428812\",\"key\":4}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-4\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"350.999182 63 350.999406 63.5711883 40.9996296 64 40.999406 63.4288117\",\"key\":5}),React.createElement(\"polygon\",{\"id\":\"Path\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"350.983836 6.000021 350.98406 6.57121053 40.9842836 7.0000231 40.98406 6.42883358\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M51,57.870447 C62.1867563,72.7579308 71.231448,83.5504606 78.1340749,90.2480366 C85.0367019,96.9456125 96.6489189,106.196352 112.970726,118.000256 L142.730679,115.225034 C169.923107,103.50743 186.78708,97.6486285 193.3226,97.6486285 C199.858119,97.6486285 203.76776,97.6486285 205.051522,97.6486285 L215.905152,42.1441891 L226.758782,39.3689672 L236.211944,42.1441891 C240.564688,46.6526201 244.591035,50.1473441 248.290984,52.628361 C251.990932,55.1093779 258.234687,58.5013159 267.022248,62.8041749 L277.525761,14.3919695 C284.472815,14.7706554 289.666219,14.7706554 293.105972,14.3919695 C296.545725,14.0132835 301.622423,12.8826376 308.336066,11.0000315 L329.693208,20.8674874 L339.671546,28.5764373 L350,31.9683753\",\"id\":\"Path-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M42,142.359858 L60.9290981,154.483479 L73.0226886,157.902962 L82.4872377,155.726927 L93.8797504,160.389858 L104.395916,169.093997 L112.984118,172.513479 L134.542258,175.000376 L144.883154,166.6071 L154.522972,164.120203 L165.740216,151.68572 L175.555303,151.68572 L185.8962,139.872961 L196.587635,144.535893 L206.052184,117.18003 L228.311401,117.18003 L235.847986,119.356064 L247.415769,115.003995 L257.931934,99.7717535 L268.097561,92.0002016 L278.788996,107.543305 L301.223483,115.003995 L309.461146,115.003995 L319.802042,124.329858 C326.65441,122.940226 331.854069,122.422123 335.401021,122.775547 C338.947973,123.128972 344.147632,124.683282 351,127.438478\",\"id\":\"Path-8\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M42,193.31687 L64.960295,193.31687 L71.971072,190.554206 L84.0646625,190.554206 L104.571185,197.000422 L112.633579,194.851683 L123.850822,194.851683 L133.140102,193.31687 L156.450936,180.731401 L175.905842,160.164902 C189.579577,150.860886 200.563128,143.903065 208.856495,139.29144 C217.149861,134.679815 229.535567,128.642883 246.013613,121.180643 L258.808281,121.180643 L268.097561,100.000218 L298.068633,100.000218 L320.853659,111.357837 L329.44186,114.120501 L343.112876,112.892651 L351,115.348352\",\"id\":\"Path-9\",\"stroke\":\"#DF886C\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M42,235.000502 L53.7430516,235.000502 L72.4968803,228.712863 L83.3635848,228.712863 L92.8281339,225.569044 L102.818491,228.712863 L125.778786,228.712863 L135.068066,223.053989 L177.132728,189.415122 L187.298355,183.756247 L196.587635,181.241192 L206.052184,174.324789 L238.827567,162.692658 L258.457742,159.548839 L267.747022,151.374908 C276.935169,151.202935 283.8291,150.469377 288.428815,149.174235 C293.028529,147.879092 296.183378,145.783213 297.893364,142.886596 L308.935337,141.000305 L328.390244,149.174235 L351,149.174235\",\"id\":\"Path-10\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":10}),React.createElement(\"polyline\",{\"id\":\"Path-11\",\"stroke\":\"#7DCFB6\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"points\":\"166 249.814487 175.947844 263.000561 186.244734 246.988899 196.890672 243.849358 216.437312 239.767954 228.653962 239.767954 235.111334 237.570275 247.851555 237.570275 257.973922 229.407467 267.398195 219.04698 278.39318 210.570218 289.039117 216.535347 298.812437 210.570218 308.585757 213.395805 319.406219 210.570218 329.005015 192.360878 340 182.000391\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M3.9175919,336.416091 L3.9175919,325.216091 L0.125591896,325.216091 L0.125591896,326.240091 L2.7655919,326.240091 L2.7655919,336.416091 L3.9175919,336.416091 Z M9.5495919,336.512091 C10.5735919,336.512091 11.4695919,336.290758 12.2375919,335.848091 C13.0055919,335.405424 13.6029252,334.752091 14.0295919,333.888091 C14.4562586,333.024091 14.6695919,331.968091 14.6695919,330.720091 C14.6695919,328.938758 14.2749252,327.560091 13.4855919,326.584091 C12.6962586,325.608091 11.5602586,325.120091 10.0775919,325.120091 C9.35225856,325.120091 8.69892523,325.261424 8.1175919,325.544091 C7.53625856,325.826758 7.08025856,326.229424 6.7495919,326.752091 C6.41892523,327.274758 6.2535919,327.877424 6.2535919,328.560091 C6.2535919,329.232091 6.4135919,329.821424 6.7335919,330.328091 C7.0535919,330.834758 7.49892523,331.226758 8.0695919,331.504091 C8.64025856,331.781424 9.2935919,331.920091 10.0295919,331.920091 C10.8189252,331.920091 11.5175919,331.752091 12.1255919,331.416091 C12.7335919,331.080091 13.1762586,330.608091 13.4535919,330.000091 C13.4855919,330.330758 13.5015919,330.634758 13.5015919,330.912091 C13.5015919,332.405424 13.1495919,333.544091 12.4455919,334.328091 C11.7415919,335.112091 10.7709252,335.504091 9.5335919,335.504091 C8.61625856,335.504091 7.89092523,335.328091 7.3575919,334.976091 L7.3575919,334.976091 L6.8935919,335.904091 C7.55492523,336.309424 8.44025856,336.512091 9.5495919,336.512091 Z M10.2055919,330.944091 C9.3415919,330.944091 8.65625856,330.725424 8.1495919,330.288091 C7.64292523,329.850758 7.3895919,329.264091 7.3895919,328.528091 C7.3895919,327.792091 7.64292523,327.202758 8.1495919,326.760091 C8.65625856,326.317424 9.31492523,326.096091 10.1255919,326.096091 C10.7442586,326.096091 11.2775919,326.208091 11.7255919,326.432091 C12.1735919,326.656091 12.5122586,326.949424 12.7415919,327.312091 C12.9709252,327.674758 13.0855919,328.069424 13.0855919,328.496091 C13.0855919,328.954758 12.9629252,329.370758 12.7175919,329.744091 C12.4722586,330.117424 12.1335919,330.410758 11.7015919,330.624091 C11.2695919,330.837424 10.7709252,330.944091 10.2055919,330.944091 Z M20.5895919,336.512091 C21.4749252,336.512091 22.2455919,336.381424 22.9015919,336.120091 C23.5575919,335.858758 24.0615919,335.485424 24.4135919,335.000091 C24.7655919,334.514758 24.9415919,333.946758 24.9415919,333.296091 C24.9415919,332.634758 24.7522586,332.069424 24.3735919,331.600091 C23.9949252,331.130758 23.4535919,330.778758 22.7495919,330.544091 C23.3255919,330.320091 23.7682586,329.997424 24.0775919,329.576091 C24.3869252,329.154758 24.5415919,328.656091 24.5415919,328.080091 C24.5415919,327.482758 24.3762586,326.960091 24.0455919,326.512091 C23.7149252,326.064091 23.2535919,325.720091 22.6615919,325.480091 C22.0695919,325.240091 21.3789252,325.120091 20.5895919,325.120091 C19.3949252,325.120091 18.4429252,325.386758 17.7335919,325.920091 C17.0242586,326.453424 16.6695919,327.173424 16.6695919,328.080091 C16.6695919,328.656091 16.8189252,329.154758 17.1175919,329.576091 C17.4162586,329.997424 17.8535919,330.320091 18.4295919,330.544091 C17.7255919,330.778758 17.1895919,331.128091 16.8215919,331.592091 C16.4535919,332.056091 16.2695919,332.624091 16.2695919,333.296091 C16.2695919,334.288091 16.6535919,335.072091 17.4215919,335.648091 C18.1895919,336.224091 19.2455919,336.512091 20.5895919,336.512091 Z M20.5895919,330.128091 C19.7255919,330.128091 19.0482586,329.946758 18.5575919,329.584091 C18.0669252,329.221424 17.8215919,328.730758 17.8215919,328.112091 C17.8215919,327.493424 18.0695919,327.002758 18.5655919,326.640091 C19.0615919,326.277424 19.7362586,326.096091 20.5895919,326.096091 C21.4322586,326.096091 22.1069252,326.277424 22.6135919,326.640091 C23.1202586,327.002758 23.3735919,327.498758 23.3735919,328.128091 C23.3735919,328.736091 23.1255919,329.221424 22.6295919,329.584091 C22.1335919,329.946758 21.4535919,330.128091 20.5895919,330.128091 Z M20.5895919,335.536091 C19.5975919,335.536091 18.8242586,335.336091 18.2695919,334.936091 C17.7149252,334.536091 17.4375919,333.984091 17.4375919,333.280091 C17.4375919,332.586758 17.7175919,332.040091 18.2775919,331.640091 C18.8375919,331.240091 19.6082586,331.040091 20.5895919,331.040091 C21.5815919,331.040091 22.3575919,331.240091 22.9175919,331.640091 C23.4775919,332.040091 23.7575919,332.586758 23.7575919,333.280091 C23.7575919,333.973424 23.4775919,334.522758 22.9175919,334.928091 C22.3575919,335.333424 21.5815919,335.536091 20.5895919,335.536091 Z M29.5015919,336.512091 C30.5255919,336.512091 31.4215919,336.290758 32.1895919,335.848091 C32.9575919,335.405424 33.5549252,334.752091 33.9815919,333.888091 C34.4082586,333.024091 34.6215919,331.968091 34.6215919,330.720091 C34.6215919,328.938758 34.2269252,327.560091 33.4375919,326.584091 C32.6482586,325.608091 31.5122586,325.120091 30.0295919,325.120091 C29.3042586,325.120091 28.6509252,325.261424 28.0695919,325.544091 C27.4882586,325.826758 27.0322586,326.229424 26.7015919,326.752091 C26.3709252,327.274758 26.2055919,327.877424 26.2055919,328.560091 C26.2055919,329.232091 26.3655919,329.821424 26.6855919,330.328091 C27.0055919,330.834758 27.4509252,331.226758 28.0215919,331.504091 C28.5922586,331.781424 29.2455919,331.920091 29.9815919,331.920091 C30.7709252,331.920091 31.4695919,331.752091 32.0775919,331.416091 C32.6855919,331.080091 33.1282586,330.608091 33.4055919,330.000091 C33.4375919,330.330758 33.4535919,330.634758 33.4535919,330.912091 C33.4535919,332.405424 33.1015919,333.544091 32.3975919,334.328091 C31.6935919,335.112091 30.7229252,335.504091 29.4855919,335.504091 C28.5682586,335.504091 27.8429252,335.328091 27.3095919,334.976091 L27.3095919,334.976091 L26.8455919,335.904091 C27.5069252,336.309424 28.3922586,336.512091 29.5015919,336.512091 Z M30.1575919,330.944091 C29.2935919,330.944091 28.6082586,330.725424 28.1015919,330.288091 C27.5949252,329.850758 27.3415919,329.264091 27.3415919,328.528091 C27.3415919,327.792091 27.5949252,327.202758 28.1015919,326.760091 C28.6082586,326.317424 29.2669252,326.096091 30.0775919,326.096091 C30.6962586,326.096091 31.2295919,326.208091 31.6775919,326.432091 C32.1255919,326.656091 32.4642586,326.949424 32.6935919,327.312091 C32.9229252,327.674758 33.0375919,328.069424 33.0375919,328.496091 C33.0375919,328.954758 32.9149252,329.370758 32.6695919,329.744091 C32.4242586,330.117424 32.0855919,330.410758 31.6535919,330.624091 C31.2215919,330.837424 30.7229252,330.944091 30.1575919,330.944091 Z M40.6055919,332.576091 L40.6055919,331.584091 L36.4135919,331.584091 L36.4135919,332.576091 L40.6055919,332.576091 Z M45.3575919,336.512091 C46.3815919,336.512091 47.2775919,336.290758 48.0455919,335.848091 C48.8135919,335.405424 49.4109252,334.752091 49.8375919,333.888091 C50.2642586,333.024091 50.4775919,331.968091 50.4775919,330.720091 C50.4775919,328.938758 50.0829252,327.560091 49.2935919,326.584091 C48.5042586,325.608091 47.3682586,325.120091 45.8855919,325.120091 C45.1602586,325.120091 44.5069252,325.261424 43.9255919,325.544091 C43.3442586,325.826758 42.8882586,326.229424 42.5575919,326.752091 C42.2269252,327.274758 42.0615919,327.877424 42.0615919,328.560091 C42.0615919,329.232091 42.2215919,329.821424 42.5415919,330.328091 C42.8615919,330.834758 43.3069252,331.226758 43.8775919,331.504091 C44.4482586,331.781424 45.1015919,331.920091 45.8375919,331.920091 C46.6269252,331.920091 47.3255919,331.752091 47.9335919,331.416091 C48.5415919,331.080091 48.9842586,330.608091 49.2615919,330.000091 C49.2935919,330.330758 49.3095919,330.634758 49.3095919,330.912091 C49.3095919,332.405424 48.9575919,333.544091 48.2535919,334.328091 C47.5495919,335.112091 46.5789252,335.504091 45.3415919,335.504091 C44.4242586,335.504091 43.6989252,335.328091 43.1655919,334.976091 L43.1655919,334.976091 L42.7015919,335.904091 C43.3629252,336.309424 44.2482586,336.512091 45.3575919,336.512091 Z M46.0135919,330.944091 C45.1495919,330.944091 44.4642586,330.725424 43.9575919,330.288091 C43.4509252,329.850758 43.1975919,329.264091 43.1975919,328.528091 C43.1975919,327.792091 43.4509252,327.202758 43.9575919,326.760091 C44.4642586,326.317424 45.1229252,326.096091 45.9335919,326.096091 C46.5522586,326.096091 47.0855919,326.208091 47.5335919,326.432091 C47.9815919,326.656091 48.3202586,326.949424 48.5495919,327.312091 C48.7789252,327.674758 48.8935919,328.069424 48.8935919,328.496091 C48.8935919,328.954758 48.7709252,329.370758 48.5255919,329.744091 C48.2802586,330.117424 47.9415919,330.410758 47.5095919,330.624091 C47.0775919,330.837424 46.5789252,330.944091 46.0135919,330.944091 Z M56.6055919,336.512091 C57.4695919,336.512091 58.2402586,336.282758 58.9175919,335.824091 C59.5949252,335.365424 60.1255919,334.706758 60.5095919,333.848091 C60.8935919,332.989424 61.0855919,331.978758 61.0855919,330.816091 C61.0855919,329.653424 60.8935919,328.642758 60.5095919,327.784091 C60.1255919,326.925424 59.5949252,326.266758 58.9175919,325.808091 C58.2402586,325.349424 57.4695919,325.120091 56.6055919,325.120091 C55.7415919,325.120091 54.9709252,325.349424 54.2935919,325.808091 C53.6162586,326.266758 53.0882586,326.925424 52.7095919,327.784091 C52.3309252,328.642758 52.1415919,329.653424 52.1415919,330.816091 C52.1415919,331.978758 52.3309252,332.989424 52.7095919,333.848091 C53.0882586,334.706758 53.6162586,335.365424 54.2935919,335.824091 C54.9709252,336.282758 55.7415919,336.512091 56.6055919,336.512091 Z M56.6055919,335.456091 C55.9549252,335.456091 55.3815919,335.274758 54.8855919,334.912091 C54.3895919,334.549424 54.0029252,334.021424 53.7255919,333.328091 C53.4482586,332.634758 53.3095919,331.797424 53.3095919,330.816091 C53.3095919,329.834758 53.4482586,328.997424 53.7255919,328.304091 C54.0029252,327.610758 54.3895919,327.082758 54.8855919,326.720091 C55.3815919,326.357424 55.9549252,326.176091 56.6055919,326.176091 C57.2562586,326.176091 57.8295919,326.357424 58.3255919,326.720091 C58.8215919,327.082758 59.2082586,327.610758 59.4855919,328.304091 C59.7629252,328.997424 59.9015919,329.834758 59.9015919,330.816091 C59.9015919,331.797424 59.7629252,332.634758 59.4855919,333.328091 C59.2082586,334.021424 58.8215919,334.549424 58.3255919,334.912091 C57.8295919,335.274758 57.2562586,335.456091 56.6055919,335.456091 Z\",\"id\":\"1989-90\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(30.605592, 330.816091) rotate(-45.000000) translate(-30.605592, -330.816091) \",\"key\":12}),React.createElement(\"path\",{\"d\":\"M37.4198907,334.29784 L37.4198907,323.09784 L33.6278907,323.09784 L33.6278907,324.12184 L36.2678907,324.12184 L36.2678907,334.29784 L37.4198907,334.29784 Z M43.0518907,334.39384 C44.0758907,334.39384 44.9718907,334.172507 45.7398907,333.72984 C46.5078907,333.287174 47.105224,332.63384 47.5318907,331.76984 C47.9585573,330.90584 48.1718907,329.84984 48.1718907,328.60184 C48.1718907,326.820507 47.777224,325.44184 46.9878907,324.46584 C46.1985573,323.48984 45.0625573,323.00184 43.5798907,323.00184 C42.8545573,323.00184 42.201224,323.143174 41.6198907,323.42584 C41.0385573,323.708507 40.5825573,324.111174 40.2518907,324.63384 C39.921224,325.156507 39.7558907,325.759174 39.7558907,326.44184 C39.7558907,327.11384 39.9158907,327.703174 40.2358907,328.20984 C40.5558907,328.716507 41.001224,329.108507 41.5718907,329.38584 C42.1425573,329.663174 42.7958907,329.80184 43.5318907,329.80184 C44.321224,329.80184 45.0198907,329.63384 45.6278907,329.29784 C46.2358907,328.96184 46.6785573,328.48984 46.9558907,327.88184 C46.9878907,328.212507 47.0038907,328.516507 47.0038907,328.79384 C47.0038907,330.287174 46.6518907,331.42584 45.9478907,332.20984 C45.2438907,332.99384 44.273224,333.38584 43.0358907,333.38584 C42.1185573,333.38584 41.393224,333.20984 40.8598907,332.85784 L40.8598907,332.85784 L40.3958907,333.78584 C41.057224,334.191174 41.9425573,334.39384 43.0518907,334.39384 Z M43.7078907,328.82584 C42.8438907,328.82584 42.1585573,328.607174 41.6518907,328.16984 C41.145224,327.732507 40.8918907,327.14584 40.8918907,326.40984 C40.8918907,325.67384 41.145224,325.084507 41.6518907,324.64184 C42.1585573,324.199174 42.817224,323.97784 43.6278907,323.97784 C44.2465573,323.97784 44.7798907,324.08984 45.2278907,324.31384 C45.6758907,324.53784 46.0145573,324.831174 46.2438907,325.19384 C46.473224,325.556507 46.5878907,325.951174 46.5878907,326.37784 C46.5878907,326.836507 46.465224,327.252507 46.2198907,327.62584 C45.9745573,327.999174 45.6358907,328.292507 45.2038907,328.50584 C44.7718907,328.719174 44.273224,328.82584 43.7078907,328.82584 Z M52.7958907,334.39384 C53.8198907,334.39384 54.7158907,334.172507 55.4838907,333.72984 C56.2518907,333.287174 56.849224,332.63384 57.2758907,331.76984 C57.7025573,330.90584 57.9158907,329.84984 57.9158907,328.60184 C57.9158907,326.820507 57.521224,325.44184 56.7318907,324.46584 C55.9425573,323.48984 54.8065573,323.00184 53.3238907,323.00184 C52.5985573,323.00184 51.945224,323.143174 51.3638907,323.42584 C50.7825573,323.708507 50.3265573,324.111174 49.9958907,324.63384 C49.665224,325.156507 49.4998907,325.759174 49.4998907,326.44184 C49.4998907,327.11384 49.6598907,327.703174 49.9798907,328.20984 C50.2998907,328.716507 50.745224,329.108507 51.3158907,329.38584 C51.8865573,329.663174 52.5398907,329.80184 53.2758907,329.80184 C54.065224,329.80184 54.7638907,329.63384 55.3718907,329.29784 C55.9798907,328.96184 56.4225573,328.48984 56.6998907,327.88184 C56.7318907,328.212507 56.7478907,328.516507 56.7478907,328.79384 C56.7478907,330.287174 56.3958907,331.42584 55.6918907,332.20984 C54.9878907,332.99384 54.017224,333.38584 52.7798907,333.38584 C51.8625573,333.38584 51.137224,333.20984 50.6038907,332.85784 L50.6038907,332.85784 L50.1398907,333.78584 C50.801224,334.191174 51.6865573,334.39384 52.7958907,334.39384 Z M53.4518907,328.82584 C52.5878907,328.82584 51.9025573,328.607174 51.3958907,328.16984 C50.889224,327.732507 50.6358907,327.14584 50.6358907,326.40984 C50.6358907,325.67384 50.889224,325.084507 51.3958907,324.64184 C51.9025573,324.199174 52.561224,323.97784 53.3718907,323.97784 C53.9905573,323.97784 54.5238907,324.08984 54.9718907,324.31384 C55.4198907,324.53784 55.7585573,324.831174 55.9878907,325.19384 C56.217224,325.556507 56.3318907,325.951174 56.3318907,326.37784 C56.3318907,326.836507 56.209224,327.252507 55.9638907,327.62584 C55.7185573,327.999174 55.3798907,328.292507 54.9478907,328.50584 C54.5158907,328.719174 54.017224,328.82584 53.4518907,328.82584 Z M62.9238907,334.39384 C63.7985573,334.39384 64.5398907,334.24984 65.1478907,333.96184 C65.7558907,333.67384 66.2145573,333.28184 66.5238907,332.78584 C66.833224,332.28984 66.9878907,331.72184 66.9878907,331.08184 C66.9878907,330.164507 66.681224,329.420507 66.0678907,328.84984 C65.4545573,328.279174 64.561224,327.96184 63.3878907,327.89784 L63.3878907,327.89784 L66.5558907,323.91384 L66.5558907,323.09784 L59.3558907,323.09784 L59.3558907,324.12184 L65.0838907,324.12184 L61.9798907,328.00984 L61.9798907,328.85784 L62.7798907,328.85784 C63.793224,328.85784 64.5505573,329.055174 65.0518907,329.44984 C65.553224,329.844507 65.8038907,330.388507 65.8038907,331.08184 C65.8038907,331.78584 65.553224,332.33784 65.0518907,332.73784 C64.5505573,333.13784 63.841224,333.33784 62.9238907,333.33784 C62.2198907,333.33784 61.5585573,333.21784 60.9398907,332.97784 C60.321224,332.73784 59.825224,332.42584 59.4518907,332.04184 L59.4518907,332.04184 L58.8918907,332.95384 C59.329224,333.391174 59.9078907,333.740507 60.6278907,334.00184 C61.3478907,334.263174 62.113224,334.39384 62.9238907,334.39384 Z M72.9238907,330.45784 L72.9238907,329.46584 L68.7318907,329.46584 L68.7318907,330.45784 L72.9238907,330.45784 Z M77.6758907,334.39384 C78.6998907,334.39384 79.5958907,334.172507 80.3638907,333.72984 C81.1318907,333.287174 81.729224,332.63384 82.1558907,331.76984 C82.5825573,330.90584 82.7958907,329.84984 82.7958907,328.60184 C82.7958907,326.820507 82.401224,325.44184 81.6118907,324.46584 C80.8225573,323.48984 79.6865573,323.00184 78.2038907,323.00184 C77.4785573,323.00184 76.825224,323.143174 76.2438907,323.42584 C75.6625573,323.708507 75.2065573,324.111174 74.8758907,324.63384 C74.545224,325.156507 74.3798907,325.759174 74.3798907,326.44184 C74.3798907,327.11384 74.5398907,327.703174 74.8598907,328.20984 C75.1798907,328.716507 75.625224,329.108507 76.1958907,329.38584 C76.7665573,329.663174 77.4198907,329.80184 78.1558907,329.80184 C78.945224,329.80184 79.6438907,329.63384 80.2518907,329.29784 C80.8598907,328.96184 81.3025573,328.48984 81.5798907,327.88184 C81.6118907,328.212507 81.6278907,328.516507 81.6278907,328.79384 C81.6278907,330.287174 81.2758907,331.42584 80.5718907,332.20984 C79.8678907,332.99384 78.897224,333.38584 77.6598907,333.38584 C76.7425573,333.38584 76.017224,333.20984 75.4838907,332.85784 L75.4838907,332.85784 L75.0198907,333.78584 C75.681224,334.191174 76.5665573,334.39384 77.6758907,334.39384 Z M78.3318907,328.82584 C77.4678907,328.82584 76.7825573,328.607174 76.2758907,328.16984 C75.769224,327.732507 75.5158907,327.14584 75.5158907,326.40984 C75.5158907,325.67384 75.769224,325.084507 76.2758907,324.64184 C76.7825573,324.199174 77.441224,323.97784 78.2518907,323.97784 C78.8705573,323.97784 79.4038907,324.08984 79.8518907,324.31384 C80.2998907,324.53784 80.6385573,324.831174 80.8678907,325.19384 C81.097224,325.556507 81.2118907,325.951174 81.2118907,326.37784 C81.2118907,326.836507 81.089224,327.252507 80.8438907,327.62584 C80.5985573,327.999174 80.2598907,328.292507 79.8278907,328.50584 C79.3958907,328.719174 78.897224,328.82584 78.3318907,328.82584 Z M91.7398907,334.29784 L91.7398907,331.35384 L93.9798907,331.35384 L93.9798907,330.32984 L91.7398907,330.32984 L91.7398907,327.73784 L90.6198907,327.73784 L90.6198907,330.32984 L85.7558907,330.32984 L91.4838907,323.09784 L90.2038907,323.09784 L84.2678907,330.52184 L84.2678907,331.35384 L90.5878907,331.35384 L90.5878907,334.29784 L91.7398907,334.29784 Z\",\"id\":\"1993-94\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(63.803891, 328.697840) rotate(-45.000000) translate(-63.803891, -328.697840) \",\"key\":13}),React.createElement(\"path\",{\"d\":\"M75.6815064,336.416091 L75.6815064,325.216091 L71.8895064,325.216091 L71.8895064,326.240091 L74.5295064,326.240091 L74.5295064,336.416091 L75.6815064,336.416091 Z M81.3135064,336.512091 C82.3375064,336.512091 83.2335064,336.290758 84.0015064,335.848091 C84.7695064,335.405424 85.3668397,334.752091 85.7935064,333.888091 C86.2201731,333.024091 86.4335064,331.968091 86.4335064,330.720091 C86.4335064,328.938758 86.0388397,327.560091 85.2495064,326.584091 C84.4601731,325.608091 83.3241731,325.120091 81.8415064,325.120091 C81.1161731,325.120091 80.4628397,325.261424 79.8815064,325.544091 C79.3001731,325.826758 78.8441731,326.229424 78.5135064,326.752091 C78.1828397,327.274758 78.0175064,327.877424 78.0175064,328.560091 C78.0175064,329.232091 78.1775064,329.821424 78.4975064,330.328091 C78.8175064,330.834758 79.2628397,331.226758 79.8335064,331.504091 C80.4041731,331.781424 81.0575064,331.920091 81.7935064,331.920091 C82.5828397,331.920091 83.2815064,331.752091 83.8895064,331.416091 C84.4975064,331.080091 84.9401731,330.608091 85.2175064,330.000091 C85.2495064,330.330758 85.2655064,330.634758 85.2655064,330.912091 C85.2655064,332.405424 84.9135064,333.544091 84.2095064,334.328091 C83.5055064,335.112091 82.5348397,335.504091 81.2975064,335.504091 C80.3801731,335.504091 79.6548397,335.328091 79.1215064,334.976091 L79.1215064,334.976091 L78.6575064,335.904091 C79.3188397,336.309424 80.2041731,336.512091 81.3135064,336.512091 Z M81.9695064,330.944091 C81.1055064,330.944091 80.4201731,330.725424 79.9135064,330.288091 C79.4068397,329.850758 79.1535064,329.264091 79.1535064,328.528091 C79.1535064,327.792091 79.4068397,327.202758 79.9135064,326.760091 C80.4201731,326.317424 81.0788397,326.096091 81.8895064,326.096091 C82.5081731,326.096091 83.0415064,326.208091 83.4895064,326.432091 C83.9375064,326.656091 84.2761731,326.949424 84.5055064,327.312091 C84.7348397,327.674758 84.8495064,328.069424 84.8495064,328.496091 C84.8495064,328.954758 84.7268397,329.370758 84.4815064,329.744091 C84.2361731,330.117424 83.8975064,330.410758 83.4655064,330.624091 C83.0335064,330.837424 82.5348397,330.944091 81.9695064,330.944091 Z M91.0575064,336.512091 C92.0815064,336.512091 92.9775064,336.290758 93.7455064,335.848091 C94.5135064,335.405424 95.1108397,334.752091 95.5375064,333.888091 C95.9641731,333.024091 96.1775064,331.968091 96.1775064,330.720091 C96.1775064,328.938758 95.7828397,327.560091 94.9935064,326.584091 C94.2041731,325.608091 93.0681731,325.120091 91.5855064,325.120091 C90.8601731,325.120091 90.2068397,325.261424 89.6255064,325.544091 C89.0441731,325.826758 88.5881731,326.229424 88.2575064,326.752091 C87.9268397,327.274758 87.7615064,327.877424 87.7615064,328.560091 C87.7615064,329.232091 87.9215064,329.821424 88.2415064,330.328091 C88.5615064,330.834758 89.0068397,331.226758 89.5775064,331.504091 C90.1481731,331.781424 90.8015064,331.920091 91.5375064,331.920091 C92.3268397,331.920091 93.0255064,331.752091 93.6335064,331.416091 C94.2415064,331.080091 94.6841731,330.608091 94.9615064,330.000091 C94.9935064,330.330758 95.0095064,330.634758 95.0095064,330.912091 C95.0095064,332.405424 94.6575064,333.544091 93.9535064,334.328091 C93.2495064,335.112091 92.2788397,335.504091 91.0415064,335.504091 C90.1241731,335.504091 89.3988397,335.328091 88.8655064,334.976091 L88.8655064,334.976091 L88.4015064,335.904091 C89.0628397,336.309424 89.9481731,336.512091 91.0575064,336.512091 Z M91.7135064,330.944091 C90.8495064,330.944091 90.1641731,330.725424 89.6575064,330.288091 C89.1508397,329.850758 88.8975064,329.264091 88.8975064,328.528091 C88.8975064,327.792091 89.1508397,327.202758 89.6575064,326.760091 C90.1641731,326.317424 90.8228397,326.096091 91.6335064,326.096091 C92.2521731,326.096091 92.7855064,326.208091 93.2335064,326.432091 C93.6815064,326.656091 94.0201731,326.949424 94.2495064,327.312091 C94.4788397,327.674758 94.5935064,328.069424 94.5935064,328.496091 C94.5935064,328.954758 94.4708397,329.370758 94.2255064,329.744091 C93.9801731,330.117424 93.6415064,330.410758 93.2095064,330.624091 C92.7775064,330.837424 92.2788397,330.944091 91.7135064,330.944091 Z M101.057506,336.416091 L105.745506,326.032091 L105.745506,325.216091 L97.5215064,325.216091 L97.5215064,328.336091 L98.6575064,328.336091 L98.6575064,326.240091 L104.417506,326.240091 L99.8095064,336.416091 L101.057506,336.416091 Z M111.585506,332.576091 L111.585506,331.584091 L107.393506,331.584091 L107.393506,332.576091 L111.585506,332.576091 Z M116.337506,336.512091 C117.361506,336.512091 118.257506,336.290758 119.025506,335.848091 C119.793506,335.405424 120.39084,334.752091 120.817506,333.888091 C121.244173,333.024091 121.457506,331.968091 121.457506,330.720091 C121.457506,328.938758 121.06284,327.560091 120.273506,326.584091 C119.484173,325.608091 118.348173,325.120091 116.865506,325.120091 C116.140173,325.120091 115.48684,325.261424 114.905506,325.544091 C114.324173,325.826758 113.868173,326.229424 113.537506,326.752091 C113.20684,327.274758 113.041506,327.877424 113.041506,328.560091 C113.041506,329.232091 113.201506,329.821424 113.521506,330.328091 C113.841506,330.834758 114.28684,331.226758 114.857506,331.504091 C115.428173,331.781424 116.081506,331.920091 116.817506,331.920091 C117.60684,331.920091 118.305506,331.752091 118.913506,331.416091 C119.521506,331.080091 119.964173,330.608091 120.241506,330.000091 C120.273506,330.330758 120.289506,330.634758 120.289506,330.912091 C120.289506,332.405424 119.937506,333.544091 119.233506,334.328091 C118.529506,335.112091 117.55884,335.504091 116.321506,335.504091 C115.404173,335.504091 114.67884,335.328091 114.145506,334.976091 L114.145506,334.976091 L113.681506,335.904091 C114.34284,336.309424 115.228173,336.512091 116.337506,336.512091 Z M116.993506,330.944091 C116.129506,330.944091 115.444173,330.725424 114.937506,330.288091 C114.43084,329.850758 114.177506,329.264091 114.177506,328.528091 C114.177506,327.792091 114.43084,327.202758 114.937506,326.760091 C115.444173,326.317424 116.10284,326.096091 116.913506,326.096091 C117.532173,326.096091 118.065506,326.208091 118.513506,326.432091 C118.961506,326.656091 119.300173,326.949424 119.529506,327.312091 C119.75884,327.674758 119.873506,328.069424 119.873506,328.496091 C119.873506,328.954758 119.75084,329.370758 119.505506,329.744091 C119.260173,330.117424 118.921506,330.410758 118.489506,330.624091 C118.057506,330.837424 117.55884,330.944091 116.993506,330.944091 Z M127.377506,336.512091 C128.26284,336.512091 129.033506,336.381424 129.689506,336.120091 C130.345506,335.858758 130.849506,335.485424 131.201506,335.000091 C131.553506,334.514758 131.729506,333.946758 131.729506,333.296091 C131.729506,332.634758 131.540173,332.069424 131.161506,331.600091 C130.78284,331.130758 130.241506,330.778758 129.537506,330.544091 C130.113506,330.320091 130.556173,329.997424 130.865506,329.576091 C131.17484,329.154758 131.329506,328.656091 131.329506,328.080091 C131.329506,327.482758 131.164173,326.960091 130.833506,326.512091 C130.50284,326.064091 130.041506,325.720091 129.449506,325.480091 C128.857506,325.240091 128.16684,325.120091 127.377506,325.120091 C126.18284,325.120091 125.23084,325.386758 124.521506,325.920091 C123.812173,326.453424 123.457506,327.173424 123.457506,328.080091 C123.457506,328.656091 123.60684,329.154758 123.905506,329.576091 C124.204173,329.997424 124.641506,330.320091 125.217506,330.544091 C124.513506,330.778758 123.977506,331.128091 123.609506,331.592091 C123.241506,332.056091 123.057506,332.624091 123.057506,333.296091 C123.057506,334.288091 123.441506,335.072091 124.209506,335.648091 C124.977506,336.224091 126.033506,336.512091 127.377506,336.512091 Z M127.377506,330.128091 C126.513506,330.128091 125.836173,329.946758 125.345506,329.584091 C124.85484,329.221424 124.609506,328.730758 124.609506,328.112091 C124.609506,327.493424 124.857506,327.002758 125.353506,326.640091 C125.849506,326.277424 126.524173,326.096091 127.377506,326.096091 C128.220173,326.096091 128.89484,326.277424 129.401506,326.640091 C129.908173,327.002758 130.161506,327.498758 130.161506,328.128091 C130.161506,328.736091 129.913506,329.221424 129.417506,329.584091 C128.921506,329.946758 128.241506,330.128091 127.377506,330.128091 Z M127.377506,335.536091 C126.385506,335.536091 125.612173,335.336091 125.057506,334.936091 C124.50284,334.536091 124.225506,333.984091 124.225506,333.280091 C124.225506,332.586758 124.505506,332.040091 125.065506,331.640091 C125.625506,331.240091 126.396173,331.040091 127.377506,331.040091 C128.369506,331.040091 129.145506,331.240091 129.705506,331.640091 C130.265506,332.040091 130.545506,332.586758 130.545506,333.280091 C130.545506,333.973424 130.265506,334.522758 129.705506,334.928091 C129.145506,335.333424 128.369506,335.536091 127.377506,335.536091 Z\",\"id\":\"1997-98\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(101.809506, 330.816091) rotate(-45.000000) translate(-101.809506, -330.816091) \",\"key\":14}),React.createElement(\"path\",{\"d\":\"M116.553714,336.416091 L116.553714,335.392091 L110.393714,335.392091 L114.201714,331.648091 C114.916381,330.954758 115.401714,330.341424 115.657714,329.808091 C115.913714,329.274758 116.041714,328.720091 116.041714,328.144091 C116.041714,327.205424 115.708381,326.466758 115.041714,325.928091 C114.375047,325.389424 113.471047,325.120091 112.329714,325.120091 C111.476381,325.120091 110.711047,325.258758 110.033714,325.536091 C109.356381,325.813424 108.799047,326.208091 108.361714,326.720091 L108.361714,326.720091 L109.177714,327.424091 C109.903047,326.592091 110.921714,326.176091 112.233714,326.176091 C113.076381,326.176091 113.724381,326.360091 114.177714,326.728091 C114.631047,327.096091 114.857714,327.610758 114.857714,328.272091 C114.857714,328.698758 114.753714,329.122758 114.545714,329.544091 C114.337714,329.965424 113.940381,330.464091 113.353714,331.040091 L113.353714,331.040091 L108.697714,335.600091 L108.697714,336.416091 L116.553714,336.416091 Z M122.457714,336.512091 C123.321714,336.512091 124.092381,336.282758 124.769714,335.824091 C125.447047,335.365424 125.977714,334.706758 126.361714,333.848091 C126.745714,332.989424 126.937714,331.978758 126.937714,330.816091 C126.937714,329.653424 126.745714,328.642758 126.361714,327.784091 C125.977714,326.925424 125.447047,326.266758 124.769714,325.808091 C124.092381,325.349424 123.321714,325.120091 122.457714,325.120091 C121.593714,325.120091 120.823047,325.349424 120.145714,325.808091 C119.468381,326.266758 118.940381,326.925424 118.561714,327.784091 C118.183047,328.642758 117.993714,329.653424 117.993714,330.816091 C117.993714,331.978758 118.183047,332.989424 118.561714,333.848091 C118.940381,334.706758 119.468381,335.365424 120.145714,335.824091 C120.823047,336.282758 121.593714,336.512091 122.457714,336.512091 Z M122.457714,335.456091 C121.807047,335.456091 121.233714,335.274758 120.737714,334.912091 C120.241714,334.549424 119.855047,334.021424 119.577714,333.328091 C119.300381,332.634758 119.161714,331.797424 119.161714,330.816091 C119.161714,329.834758 119.300381,328.997424 119.577714,328.304091 C119.855047,327.610758 120.241714,327.082758 120.737714,326.720091 C121.233714,326.357424 121.807047,326.176091 122.457714,326.176091 C123.108381,326.176091 123.681714,326.357424 124.177714,326.720091 C124.673714,327.082758 125.060381,327.610758 125.337714,328.304091 C125.615047,328.997424 125.753714,329.834758 125.753714,330.816091 C125.753714,331.797424 125.615047,332.634758 125.337714,333.328091 C125.060381,334.021424 124.673714,334.549424 124.177714,334.912091 C123.681714,335.274758 123.108381,335.456091 122.457714,335.456091 Z M133.049714,336.512091 C133.913714,336.512091 134.684381,336.282758 135.361714,335.824091 C136.039047,335.365424 136.569714,334.706758 136.953714,333.848091 C137.337714,332.989424 137.529714,331.978758 137.529714,330.816091 C137.529714,329.653424 137.337714,328.642758 136.953714,327.784091 C136.569714,326.925424 136.039047,326.266758 135.361714,325.808091 C134.684381,325.349424 133.913714,325.120091 133.049714,325.120091 C132.185714,325.120091 131.415047,325.349424 130.737714,325.808091 C130.060381,326.266758 129.532381,326.925424 129.153714,327.784091 C128.775047,328.642758 128.585714,329.653424 128.585714,330.816091 C128.585714,331.978758 128.775047,332.989424 129.153714,333.848091 C129.532381,334.706758 130.060381,335.365424 130.737714,335.824091 C131.415047,336.282758 132.185714,336.512091 133.049714,336.512091 Z M133.049714,335.456091 C132.399047,335.456091 131.825714,335.274758 131.329714,334.912091 C130.833714,334.549424 130.447047,334.021424 130.169714,333.328091 C129.892381,332.634758 129.753714,331.797424 129.753714,330.816091 C129.753714,329.834758 129.892381,328.997424 130.169714,328.304091 C130.447047,327.610758 130.833714,327.082758 131.329714,326.720091 C131.825714,326.357424 132.399047,326.176091 133.049714,326.176091 C133.700381,326.176091 134.273714,326.357424 134.769714,326.720091 C135.265714,327.082758 135.652381,327.610758 135.929714,328.304091 C136.207047,328.997424 136.345714,329.834758 136.345714,330.816091 C136.345714,331.797424 136.207047,332.634758 135.929714,333.328091 C135.652381,334.021424 135.265714,334.549424 134.769714,334.912091 C134.273714,335.274758 133.700381,335.456091 133.049714,335.456091 Z M142.281714,336.416091 L142.281714,325.216091 L138.489714,325.216091 L138.489714,326.240091 L141.129714,326.240091 L141.129714,336.416091 L142.281714,336.416091 Z M149.273714,332.576091 L149.273714,331.584091 L145.081714,331.584091 L145.081714,332.576091 L149.273714,332.576091 Z M155.529714,336.512091 C156.393714,336.512091 157.164381,336.282758 157.841714,335.824091 C158.519047,335.365424 159.049714,334.706758 159.433714,333.848091 C159.817714,332.989424 160.009714,331.978758 160.009714,330.816091 C160.009714,329.653424 159.817714,328.642758 159.433714,327.784091 C159.049714,326.925424 158.519047,326.266758 157.841714,325.808091 C157.164381,325.349424 156.393714,325.120091 155.529714,325.120091 C154.665714,325.120091 153.895047,325.349424 153.217714,325.808091 C152.540381,326.266758 152.012381,326.925424 151.633714,327.784091 C151.255047,328.642758 151.065714,329.653424 151.065714,330.816091 C151.065714,331.978758 151.255047,332.989424 151.633714,333.848091 C152.012381,334.706758 152.540381,335.365424 153.217714,335.824091 C153.895047,336.282758 154.665714,336.512091 155.529714,336.512091 Z M155.529714,335.456091 C154.879047,335.456091 154.305714,335.274758 153.809714,334.912091 C153.313714,334.549424 152.927047,334.021424 152.649714,333.328091 C152.372381,332.634758 152.233714,331.797424 152.233714,330.816091 C152.233714,329.834758 152.372381,328.997424 152.649714,328.304091 C152.927047,327.610758 153.313714,327.082758 153.809714,326.720091 C154.305714,326.357424 154.879047,326.176091 155.529714,326.176091 C156.180381,326.176091 156.753714,326.357424 157.249714,326.720091 C157.745714,327.082758 158.132381,327.610758 158.409714,328.304091 C158.687047,328.997424 158.825714,329.834758 158.825714,330.816091 C158.825714,331.797424 158.687047,332.634758 158.409714,333.328091 C158.132381,334.021424 157.745714,334.549424 157.249714,334.912091 C156.753714,335.274758 156.180381,335.456091 155.529714,335.456091 Z M169.305714,336.416091 L169.305714,335.392091 L163.145714,335.392091 L166.953714,331.648091 C167.668381,330.954758 168.153714,330.341424 168.409714,329.808091 C168.665714,329.274758 168.793714,328.720091 168.793714,328.144091 C168.793714,327.205424 168.460381,326.466758 167.793714,325.928091 C167.127047,325.389424 166.223047,325.120091 165.081714,325.120091 C164.228381,325.120091 163.463047,325.258758 162.785714,325.536091 C162.108381,325.813424 161.551047,326.208091 161.113714,326.720091 L161.113714,326.720091 L161.929714,327.424091 C162.655047,326.592091 163.673714,326.176091 164.985714,326.176091 C165.828381,326.176091 166.476381,326.360091 166.929714,326.728091 C167.383047,327.096091 167.609714,327.610758 167.609714,328.272091 C167.609714,328.698758 167.505714,329.122758 167.297714,329.544091 C167.089714,329.965424 166.692381,330.464091 166.105714,331.040091 L166.105714,331.040091 L161.449714,335.600091 L161.449714,336.416091 L169.305714,336.416091 Z\",\"id\":\"2001-02\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(138.833714, 330.816091) rotate(-45.000000) translate(-138.833714, -330.816091) \",\"key\":15}),React.createElement(\"path\",{\"d\":\"M150.033922,336.416091 L150.033922,335.392091 L143.873922,335.392091 L147.681922,331.648091 C148.396588,330.954758 148.881922,330.341424 149.137922,329.808091 C149.393922,329.274758 149.521922,328.720091 149.521922,328.144091 C149.521922,327.205424 149.188588,326.466758 148.521922,325.928091 C147.855255,325.389424 146.951255,325.120091 145.809922,325.120091 C144.956588,325.120091 144.191255,325.258758 143.513922,325.536091 C142.836588,325.813424 142.279255,326.208091 141.841922,326.720091 L141.841922,326.720091 L142.657922,327.424091 C143.383255,326.592091 144.401922,326.176091 145.713922,326.176091 C146.556588,326.176091 147.204588,326.360091 147.657922,326.728091 C148.111255,327.096091 148.337922,327.610758 148.337922,328.272091 C148.337922,328.698758 148.233922,329.122758 148.025922,329.544091 C147.817922,329.965424 147.420588,330.464091 146.833922,331.040091 L146.833922,331.040091 L142.177922,335.600091 L142.177922,336.416091 L150.033922,336.416091 Z M155.937922,336.512091 C156.801922,336.512091 157.572588,336.282758 158.249922,335.824091 C158.927255,335.365424 159.457922,334.706758 159.841922,333.848091 C160.225922,332.989424 160.417922,331.978758 160.417922,330.816091 C160.417922,329.653424 160.225922,328.642758 159.841922,327.784091 C159.457922,326.925424 158.927255,326.266758 158.249922,325.808091 C157.572588,325.349424 156.801922,325.120091 155.937922,325.120091 C155.073922,325.120091 154.303255,325.349424 153.625922,325.808091 C152.948588,326.266758 152.420588,326.925424 152.041922,327.784091 C151.663255,328.642758 151.473922,329.653424 151.473922,330.816091 C151.473922,331.978758 151.663255,332.989424 152.041922,333.848091 C152.420588,334.706758 152.948588,335.365424 153.625922,335.824091 C154.303255,336.282758 155.073922,336.512091 155.937922,336.512091 Z M155.937922,335.456091 C155.287255,335.456091 154.713922,335.274758 154.217922,334.912091 C153.721922,334.549424 153.335255,334.021424 153.057922,333.328091 C152.780588,332.634758 152.641922,331.797424 152.641922,330.816091 C152.641922,329.834758 152.780588,328.997424 153.057922,328.304091 C153.335255,327.610758 153.721922,327.082758 154.217922,326.720091 C154.713922,326.357424 155.287255,326.176091 155.937922,326.176091 C156.588588,326.176091 157.161922,326.357424 157.657922,326.720091 C158.153922,327.082758 158.540588,327.610758 158.817922,328.304091 C159.095255,328.997424 159.233922,329.834758 159.233922,330.816091 C159.233922,331.797424 159.095255,332.634758 158.817922,333.328091 C158.540588,334.021424 158.153922,334.549424 157.657922,334.912091 C157.161922,335.274758 156.588588,335.456091 155.937922,335.456091 Z M166.529922,336.512091 C167.393922,336.512091 168.164588,336.282758 168.841922,335.824091 C169.519255,335.365424 170.049922,334.706758 170.433922,333.848091 C170.817922,332.989424 171.009922,331.978758 171.009922,330.816091 C171.009922,329.653424 170.817922,328.642758 170.433922,327.784091 C170.049922,326.925424 169.519255,326.266758 168.841922,325.808091 C168.164588,325.349424 167.393922,325.120091 166.529922,325.120091 C165.665922,325.120091 164.895255,325.349424 164.217922,325.808091 C163.540588,326.266758 163.012588,326.925424 162.633922,327.784091 C162.255255,328.642758 162.065922,329.653424 162.065922,330.816091 C162.065922,331.978758 162.255255,332.989424 162.633922,333.848091 C163.012588,334.706758 163.540588,335.365424 164.217922,335.824091 C164.895255,336.282758 165.665922,336.512091 166.529922,336.512091 Z M166.529922,335.456091 C165.879255,335.456091 165.305922,335.274758 164.809922,334.912091 C164.313922,334.549424 163.927255,334.021424 163.649922,333.328091 C163.372588,332.634758 163.233922,331.797424 163.233922,330.816091 C163.233922,329.834758 163.372588,328.997424 163.649922,328.304091 C163.927255,327.610758 164.313922,327.082758 164.809922,326.720091 C165.305922,326.357424 165.879255,326.176091 166.529922,326.176091 C167.180588,326.176091 167.753922,326.357424 168.249922,326.720091 C168.745922,327.082758 169.132588,327.610758 169.409922,328.304091 C169.687255,328.997424 169.825922,329.834758 169.825922,330.816091 C169.825922,331.797424 169.687255,332.634758 169.409922,333.328091 C169.132588,334.021424 168.745922,334.549424 168.249922,334.912091 C167.753922,335.274758 167.180588,335.456091 166.529922,335.456091 Z M176.193922,336.512091 C177.079255,336.512091 177.825922,336.365424 178.433922,336.072091 C179.041922,335.778758 179.497922,335.376091 179.801922,334.864091 C180.105922,334.352091 180.257922,333.770758 180.257922,333.120091 C180.257922,332.074758 179.887255,331.261424 179.145922,330.680091 C178.404588,330.098758 177.223255,329.808091 175.601922,329.808091 L175.601922,329.808091 L174.161922,329.808091 L174.545922,326.240091 L179.665922,326.240091 L179.665922,325.216091 L173.537922,325.216091 L172.961922,330.832091 L175.345922,330.832091 C176.700588,330.832091 177.663255,331.029424 178.233922,331.424091 C178.804588,331.818758 179.089922,332.400091 179.089922,333.168091 C179.089922,333.861424 178.836588,334.416091 178.329922,334.832091 C177.823255,335.248091 177.105922,335.456091 176.177922,335.456091 C175.473922,335.456091 174.817922,335.336091 174.209922,335.096091 C173.601922,334.856091 173.111255,334.544091 172.737922,334.160091 L172.737922,334.160091 L172.177922,335.072091 C172.615255,335.509424 173.193922,335.858758 173.913922,336.120091 C174.633922,336.381424 175.393922,336.512091 176.193922,336.512091 Z M186.033922,332.576091 L186.033922,331.584091 L181.841922,331.584091 L181.841922,332.576091 L186.033922,332.576091 Z M192.289922,336.512091 C193.153922,336.512091 193.924588,336.282758 194.601922,335.824091 C195.279255,335.365424 195.809922,334.706758 196.193922,333.848091 C196.577922,332.989424 196.769922,331.978758 196.769922,330.816091 C196.769922,329.653424 196.577922,328.642758 196.193922,327.784091 C195.809922,326.925424 195.279255,326.266758 194.601922,325.808091 C193.924588,325.349424 193.153922,325.120091 192.289922,325.120091 C191.425922,325.120091 190.655255,325.349424 189.977922,325.808091 C189.300588,326.266758 188.772588,326.925424 188.393922,327.784091 C188.015255,328.642758 187.825922,329.653424 187.825922,330.816091 C187.825922,331.978758 188.015255,332.989424 188.393922,333.848091 C188.772588,334.706758 189.300588,335.365424 189.977922,335.824091 C190.655255,336.282758 191.425922,336.512091 192.289922,336.512091 Z M192.289922,335.456091 C191.639255,335.456091 191.065922,335.274758 190.569922,334.912091 C190.073922,334.549424 189.687255,334.021424 189.409922,333.328091 C189.132588,332.634758 188.993922,331.797424 188.993922,330.816091 C188.993922,329.834758 189.132588,328.997424 189.409922,328.304091 C189.687255,327.610758 190.073922,327.082758 190.569922,326.720091 C191.065922,326.357424 191.639255,326.176091 192.289922,326.176091 C192.940588,326.176091 193.513922,326.357424 194.009922,326.720091 C194.505922,327.082758 194.892588,327.610758 195.169922,328.304091 C195.447255,328.997424 195.585922,329.834758 195.585922,330.816091 C195.585922,331.797424 195.447255,332.634758 195.169922,333.328091 C194.892588,334.021424 194.505922,334.549424 194.009922,334.912091 C193.513922,335.274758 192.940588,335.456091 192.289922,335.456091 Z M203.009922,336.512091 C203.735255,336.512091 204.388588,336.370758 204.969922,336.088091 C205.551255,335.805424 206.007255,335.402758 206.337922,334.880091 C206.668588,334.357424 206.833922,333.754758 206.833922,333.072091 C206.833922,332.400091 206.673922,331.810758 206.353922,331.304091 C206.033922,330.797424 205.588588,330.405424 205.017922,330.128091 C204.447255,329.850758 203.793922,329.712091 203.057922,329.712091 C202.268588,329.712091 201.569922,329.880091 200.961922,330.216091 C200.353922,330.552091 199.911255,331.024091 199.633922,331.632091 C199.601922,331.290758 199.585922,330.986758 199.585922,330.720091 C199.585922,329.226758 199.937922,328.088091 200.641922,327.304091 C201.345922,326.520091 202.316588,326.128091 203.553922,326.128091 C204.471255,326.128091 205.196588,326.304091 205.729922,326.656091 L205.729922,326.656091 L206.193922,325.728091 C205.532588,325.322758 204.647255,325.120091 203.537922,325.120091 C202.513922,325.120091 201.617922,325.341424 200.849922,325.784091 C200.081922,326.226758 199.484588,326.880091 199.057922,327.744091 C198.631255,328.608091 198.417922,329.664091 198.417922,330.912091 C198.417922,332.693424 198.812588,334.072091 199.601922,335.048091 C200.391255,336.024091 201.527255,336.512091 203.009922,336.512091 Z M202.961922,335.536091 C202.343255,335.536091 201.809922,335.424091 201.361922,335.200091 C200.913922,334.976091 200.575255,334.682758 200.345922,334.320091 C200.116588,333.957424 200.001922,333.562758 200.001922,333.136091 C200.001922,332.677424 200.124588,332.261424 200.369922,331.888091 C200.615255,331.514758 200.953922,331.221424 201.385922,331.008091 C201.817922,330.794758 202.316588,330.688091 202.881922,330.688091 C203.745922,330.688091 204.431255,330.906758 204.937922,331.344091 C205.444588,331.781424 205.697922,332.368091 205.697922,333.104091 C205.697922,333.840091 205.444588,334.429424 204.937922,334.872091 C204.431255,335.314758 203.772588,335.536091 202.961922,335.536091 Z\",\"id\":\"2005-06\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(174.337922, 330.816091) rotate(-45.000000) translate(-174.337922, -330.816091) \",\"key\":16}),React.createElement(\"path\",{\"d\":\"M190.730129,336.416091 L190.730129,335.392091 L184.570129,335.392091 L188.378129,331.648091 C189.092796,330.954758 189.578129,330.341424 189.834129,329.808091 C190.090129,329.274758 190.218129,328.720091 190.218129,328.144091 C190.218129,327.205424 189.884796,326.466758 189.218129,325.928091 C188.551463,325.389424 187.647463,325.120091 186.506129,325.120091 C185.652796,325.120091 184.887463,325.258758 184.210129,325.536091 C183.532796,325.813424 182.975463,326.208091 182.538129,326.720091 L182.538129,326.720091 L183.354129,327.424091 C184.079463,326.592091 185.098129,326.176091 186.410129,326.176091 C187.252796,326.176091 187.900796,326.360091 188.354129,326.728091 C188.807463,327.096091 189.034129,327.610758 189.034129,328.272091 C189.034129,328.698758 188.930129,329.122758 188.722129,329.544091 C188.514129,329.965424 188.116796,330.464091 187.530129,331.040091 L187.530129,331.040091 L182.874129,335.600091 L182.874129,336.416091 L190.730129,336.416091 Z M196.634129,336.512091 C197.498129,336.512091 198.268796,336.282758 198.946129,335.824091 C199.623463,335.365424 200.154129,334.706758 200.538129,333.848091 C200.922129,332.989424 201.114129,331.978758 201.114129,330.816091 C201.114129,329.653424 200.922129,328.642758 200.538129,327.784091 C200.154129,326.925424 199.623463,326.266758 198.946129,325.808091 C198.268796,325.349424 197.498129,325.120091 196.634129,325.120091 C195.770129,325.120091 194.999463,325.349424 194.322129,325.808091 C193.644796,326.266758 193.116796,326.925424 192.738129,327.784091 C192.359463,328.642758 192.170129,329.653424 192.170129,330.816091 C192.170129,331.978758 192.359463,332.989424 192.738129,333.848091 C193.116796,334.706758 193.644796,335.365424 194.322129,335.824091 C194.999463,336.282758 195.770129,336.512091 196.634129,336.512091 Z M196.634129,335.456091 C195.983463,335.456091 195.410129,335.274758 194.914129,334.912091 C194.418129,334.549424 194.031463,334.021424 193.754129,333.328091 C193.476796,332.634758 193.338129,331.797424 193.338129,330.816091 C193.338129,329.834758 193.476796,328.997424 193.754129,328.304091 C194.031463,327.610758 194.418129,327.082758 194.914129,326.720091 C195.410129,326.357424 195.983463,326.176091 196.634129,326.176091 C197.284796,326.176091 197.858129,326.357424 198.354129,326.720091 C198.850129,327.082758 199.236796,327.610758 199.514129,328.304091 C199.791463,328.997424 199.930129,329.834758 199.930129,330.816091 C199.930129,331.797424 199.791463,332.634758 199.514129,333.328091 C199.236796,334.021424 198.850129,334.549424 198.354129,334.912091 C197.858129,335.274758 197.284796,335.456091 196.634129,335.456091 Z M207.226129,336.512091 C208.090129,336.512091 208.860796,336.282758 209.538129,335.824091 C210.215463,335.365424 210.746129,334.706758 211.130129,333.848091 C211.514129,332.989424 211.706129,331.978758 211.706129,330.816091 C211.706129,329.653424 211.514129,328.642758 211.130129,327.784091 C210.746129,326.925424 210.215463,326.266758 209.538129,325.808091 C208.860796,325.349424 208.090129,325.120091 207.226129,325.120091 C206.362129,325.120091 205.591463,325.349424 204.914129,325.808091 C204.236796,326.266758 203.708796,326.925424 203.330129,327.784091 C202.951463,328.642758 202.762129,329.653424 202.762129,330.816091 C202.762129,331.978758 202.951463,332.989424 203.330129,333.848091 C203.708796,334.706758 204.236796,335.365424 204.914129,335.824091 C205.591463,336.282758 206.362129,336.512091 207.226129,336.512091 Z M207.226129,335.456091 C206.575463,335.456091 206.002129,335.274758 205.506129,334.912091 C205.010129,334.549424 204.623463,334.021424 204.346129,333.328091 C204.068796,332.634758 203.930129,331.797424 203.930129,330.816091 C203.930129,329.834758 204.068796,328.997424 204.346129,328.304091 C204.623463,327.610758 205.010129,327.082758 205.506129,326.720091 C206.002129,326.357424 206.575463,326.176091 207.226129,326.176091 C207.876796,326.176091 208.450129,326.357424 208.946129,326.720091 C209.442129,327.082758 209.828796,327.610758 210.106129,328.304091 C210.383463,328.997424 210.522129,329.834758 210.522129,330.816091 C210.522129,331.797424 210.383463,332.634758 210.106129,333.328091 C209.828796,334.021424 209.442129,334.549424 208.946129,334.912091 C208.450129,335.274758 207.876796,335.456091 207.226129,335.456091 Z M216.314129,336.512091 C217.338129,336.512091 218.234129,336.290758 219.002129,335.848091 C219.770129,335.405424 220.367463,334.752091 220.794129,333.888091 C221.220796,333.024091 221.434129,331.968091 221.434129,330.720091 C221.434129,328.938758 221.039463,327.560091 220.250129,326.584091 C219.460796,325.608091 218.324796,325.120091 216.842129,325.120091 C216.116796,325.120091 215.463463,325.261424 214.882129,325.544091 C214.300796,325.826758 213.844796,326.229424 213.514129,326.752091 C213.183463,327.274758 213.018129,327.877424 213.018129,328.560091 C213.018129,329.232091 213.178129,329.821424 213.498129,330.328091 C213.818129,330.834758 214.263463,331.226758 214.834129,331.504091 C215.404796,331.781424 216.058129,331.920091 216.794129,331.920091 C217.583463,331.920091 218.282129,331.752091 218.890129,331.416091 C219.498129,331.080091 219.940796,330.608091 220.218129,330.000091 C220.250129,330.330758 220.266129,330.634758 220.266129,330.912091 C220.266129,332.405424 219.914129,333.544091 219.210129,334.328091 C218.506129,335.112091 217.535463,335.504091 216.298129,335.504091 C215.380796,335.504091 214.655463,335.328091 214.122129,334.976091 L214.122129,334.976091 L213.658129,335.904091 C214.319463,336.309424 215.204796,336.512091 216.314129,336.512091 Z M216.970129,330.944091 C216.106129,330.944091 215.420796,330.725424 214.914129,330.288091 C214.407463,329.850758 214.154129,329.264091 214.154129,328.528091 C214.154129,327.792091 214.407463,327.202758 214.914129,326.760091 C215.420796,326.317424 216.079463,326.096091 216.890129,326.096091 C217.508796,326.096091 218.042129,326.208091 218.490129,326.432091 C218.938129,326.656091 219.276796,326.949424 219.506129,327.312091 C219.735463,327.674758 219.850129,328.069424 219.850129,328.496091 C219.850129,328.954758 219.727463,329.370758 219.482129,329.744091 C219.236796,330.117424 218.898129,330.410758 218.466129,330.624091 C218.034129,330.837424 217.535463,330.944091 216.970129,330.944091 Z M227.418129,332.576091 L227.418129,331.584091 L223.226129,331.584091 L223.226129,332.576091 L227.418129,332.576091 Z M232.314129,336.416091 L232.314129,325.216091 L228.522129,325.216091 L228.522129,326.240091 L231.162129,326.240091 L231.162129,336.416091 L232.314129,336.416091 Z M239.450129,336.512091 C240.314129,336.512091 241.084796,336.282758 241.762129,335.824091 C242.439463,335.365424 242.970129,334.706758 243.354129,333.848091 C243.738129,332.989424 243.930129,331.978758 243.930129,330.816091 C243.930129,329.653424 243.738129,328.642758 243.354129,327.784091 C242.970129,326.925424 242.439463,326.266758 241.762129,325.808091 C241.084796,325.349424 240.314129,325.120091 239.450129,325.120091 C238.586129,325.120091 237.815463,325.349424 237.138129,325.808091 C236.460796,326.266758 235.932796,326.925424 235.554129,327.784091 C235.175463,328.642758 234.986129,329.653424 234.986129,330.816091 C234.986129,331.978758 235.175463,332.989424 235.554129,333.848091 C235.932796,334.706758 236.460796,335.365424 237.138129,335.824091 C237.815463,336.282758 238.586129,336.512091 239.450129,336.512091 Z M239.450129,335.456091 C238.799463,335.456091 238.226129,335.274758 237.730129,334.912091 C237.234129,334.549424 236.847463,334.021424 236.570129,333.328091 C236.292796,332.634758 236.154129,331.797424 236.154129,330.816091 C236.154129,329.834758 236.292796,328.997424 236.570129,328.304091 C236.847463,327.610758 237.234129,327.082758 237.730129,326.720091 C238.226129,326.357424 238.799463,326.176091 239.450129,326.176091 C240.100796,326.176091 240.674129,326.357424 241.170129,326.720091 C241.666129,327.082758 242.052796,327.610758 242.330129,328.304091 C242.607463,328.997424 242.746129,329.834758 242.746129,330.816091 C242.746129,331.797424 242.607463,332.634758 242.330129,333.328091 C242.052796,334.021424 241.666129,334.549424 241.170129,334.912091 C240.674129,335.274758 240.100796,335.456091 239.450129,335.456091 Z\",\"id\":\"2009-10\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(213.234129, 330.816091) rotate(-45.000000) translate(-213.234129, -330.816091) \",\"key\":17}),React.createElement(\"path\",{\"d\":\"M22.2927149,292.000603 L22.2927149,291.104603 L16.8047149,291.104603 L16.8047149,287.450603 L20.6827149,287.450603 L20.6827149,286.750603 L16.8047149,286.750603 L16.8047149,285.574603 C16.8047149,284.753269 17.0380482,284.125603 17.5047149,283.691603 C17.9713816,283.257603 18.6667149,283.040603 19.5907149,283.040603 C20.6453816,283.040603 21.4807149,283.264603 22.0967149,283.712603 L22.0967149,283.712603 L22.4747149,282.858603 C21.7560482,282.363936 20.8227149,282.116603 19.6747149,282.116603 C18.4240482,282.116603 17.4627149,282.426936 16.7907149,283.047603 C16.1187149,283.668269 15.7827149,284.510603 15.7827149,285.574603 L15.7827149,285.574603 L15.7827149,286.750603 L14.2007149,286.750603 L14.2007149,287.450603 L15.7827149,287.450603 L15.7827149,291.104603 L14.2007149,291.104603 L14.2007149,292.000603 L22.2927149,292.000603 Z M27.3327149,292.084603 C28.0887149,292.084603 28.7630482,291.883936 29.3557149,291.482603 C29.9483816,291.081269 30.4127149,290.504936 30.7487149,289.753603 C31.0847149,289.002269 31.2527149,288.117936 31.2527149,287.100603 C31.2527149,286.083269 31.0847149,285.198936 30.7487149,284.447603 C30.4127149,283.696269 29.9483816,283.119936 29.3557149,282.718603 C28.7630482,282.317269 28.0887149,282.116603 27.3327149,282.116603 C26.5767149,282.116603 25.9023816,282.317269 25.3097149,282.718603 C24.7170482,283.119936 24.2550482,283.696269 23.9237149,284.447603 C23.5923816,285.198936 23.4267149,286.083269 23.4267149,287.100603 C23.4267149,288.117936 23.5923816,289.002269 23.9237149,289.753603 C24.2550482,290.504936 24.7170482,291.081269 25.3097149,291.482603 C25.9023816,291.883936 26.5767149,292.084603 27.3327149,292.084603 Z M27.3327149,291.160603 C26.7633816,291.160603 26.2617149,291.001936 25.8277149,290.684603 C25.3937149,290.367269 25.0553816,289.905269 24.8127149,289.298603 C24.5700482,288.691936 24.4487149,287.959269 24.4487149,287.100603 C24.4487149,286.241936 24.5700482,285.509269 24.8127149,284.902603 C25.0553816,284.295936 25.3937149,283.833936 25.8277149,283.516603 C26.2617149,283.199269 26.7633816,283.040603 27.3327149,283.040603 C27.9020482,283.040603 28.4037149,283.199269 28.8377149,283.516603 C29.2717149,283.833936 29.6100482,284.295936 29.8527149,284.902603 C30.0953816,285.509269 30.2167149,286.241936 30.2167149,287.100603 C30.2167149,287.959269 30.0953816,288.691936 29.8527149,289.298603 C29.6100482,289.905269 29.2717149,290.367269 28.8377149,290.684603 C28.4037149,291.001936 27.9020482,291.160603 27.3327149,291.160603 Z\",\"id\":\"£0\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":18}),React.createElement(\"path\",{\"d\":\"M15.2282121,239.388 L15.2282121,238.492 L9.74021214,238.492 L9.74021214,234.838 L13.6182121,234.838 L13.6182121,234.138 L9.74021214,234.138 L9.74021214,232.962 C9.74021214,232.140667 9.97354547,231.513 10.4402121,231.079 C10.9068788,230.645 11.6022121,230.428 12.5262121,230.428 C13.5808788,230.428 14.4162121,230.652 15.0322121,231.1 L15.0322121,231.1 L15.4102121,230.246 C14.6915455,229.751333 13.7582121,229.504 12.6102121,229.504 C11.3595455,229.504 10.3982121,229.814333 9.72621214,230.435 C9.05421214,231.055667 8.71821214,231.898 8.71821214,232.962 L8.71821214,232.962 L8.71821214,234.138 L7.13621214,234.138 L7.13621214,234.838 L8.71821214,234.838 L8.71821214,238.492 L7.13621214,238.492 L7.13621214,239.388 L15.2282121,239.388 Z M23.0542121,239.388 L23.0542121,238.492 L17.6642121,238.492 L20.9962121,235.216 C21.6215455,234.609333 22.0462121,234.072667 22.2702121,233.606 C22.4942121,233.139333 22.6062121,232.654 22.6062121,232.15 C22.6062121,231.328667 22.3145455,230.682333 21.7312121,230.211 C21.1478788,229.739667 20.3568788,229.504 19.3582121,229.504 C18.6115455,229.504 17.9418788,229.625333 17.3492121,229.868 C16.7565455,230.110667 16.2688788,230.456 15.8862121,230.904 L15.8862121,230.904 L16.6002121,231.52 C17.2348788,230.792 18.1262121,230.428 19.2742121,230.428 C20.0115455,230.428 20.5785455,230.589 20.9752121,230.911 C21.3718788,231.233 21.5702121,231.683333 21.5702121,232.262 C21.5702121,232.635333 21.4792121,233.006333 21.2972121,233.375 C21.1152121,233.743667 20.7675455,234.18 20.2542121,234.684 L20.2542121,234.684 L16.1802121,238.674 L16.1802121,239.388 L23.0542121,239.388 Z M25.9662121,239.388 L25.9662121,237.288 L27.7022121,235.692 L30.6702121,239.388 L31.8882121,239.388 L28.4442121,235.034 L31.5942121,232.024 L30.3622121,232.024 L25.9662121,236.042 L25.9662121,229 L24.9722121,229 L24.9722121,239.388 L25.9662121,239.388 Z\",\"id\":\"£2k\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":19}),React.createElement(\"path\",{\"d\":\"M13.9262121,182.388 L13.9262121,181.492 L8.43821214,181.492 L8.43821214,177.838 L12.3162121,177.838 L12.3162121,177.138 L8.43821214,177.138 L8.43821214,175.962 C8.43821214,175.140667 8.67154547,174.513 9.13821214,174.079 C9.60487881,173.645 10.3002121,173.428 11.2242121,173.428 C12.2788788,173.428 13.1142121,173.652 13.7302121,174.1 L13.7302121,174.1 L14.1082121,173.246 C13.3895455,172.751333 12.4562121,172.504 11.3082121,172.504 C10.0575455,172.504 9.09621214,172.814333 8.42421214,173.435 C7.75221214,174.055667 7.41621214,174.898 7.41621214,175.962 L7.41621214,175.962 L7.41621214,177.138 L5.83421214,177.138 L5.83421214,177.838 L7.41621214,177.838 L7.41621214,181.492 L5.83421214,181.492 L5.83421214,182.388 L13.9262121,182.388 Z M21.4302121,182.388 L21.4302121,179.812 L23.3902121,179.812 L23.3902121,178.916 L21.4302121,178.916 L21.4302121,176.648 L20.4502121,176.648 L20.4502121,178.916 L16.1942121,178.916 L21.2062121,172.588 L20.0862121,172.588 L14.8922121,179.084 L14.8922121,179.812 L20.4222121,179.812 L20.4222121,182.388 L21.4302121,182.388 Z M25.9662121,182.388 L25.9662121,180.288 L27.7022121,178.692 L30.6702121,182.388 L31.8882121,182.388 L28.4442121,178.034 L31.5942121,175.024 L30.3622121,175.024 L25.9662121,179.042 L25.9662121,172 L24.9722121,172 L24.9722121,182.388 L25.9662121,182.388 Z\",\"id\":\"£4k\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":20}),React.createElement(\"path\",{\"d\":\"M14.6542121,125.388 L14.6542121,124.492 L9.16621214,124.492 L9.16621214,120.838 L13.0442121,120.838 L13.0442121,120.138 L9.16621214,120.138 L9.16621214,118.962 C9.16621214,118.140667 9.39954547,117.513 9.86621214,117.079 C10.3328788,116.645 11.0282121,116.428 11.9522121,116.428 C13.0068788,116.428 13.8422121,116.652 14.4582121,117.1 L14.4582121,117.1 L14.8362121,116.246 C14.1175455,115.751333 13.1842121,115.504 12.0362121,115.504 C10.7855455,115.504 9.82421214,115.814333 9.15221214,116.435 C8.48021214,117.055667 8.14421214,117.898 8.14421214,118.962 L8.14421214,118.962 L8.14421214,120.138 L6.56221214,120.138 L6.56221214,120.838 L8.14421214,120.838 L8.14421214,124.492 L6.56221214,124.492 L6.56221214,125.388 L14.6542121,125.388 Z M19.8062121,125.472 C20.4408788,125.472 21.0125455,125.348333 21.5212121,125.101 C22.0298788,124.853667 22.4288788,124.501333 22.7182121,124.044 C23.0075455,123.586667 23.1522121,123.059333 23.1522121,122.462 C23.1522121,121.874 23.0122121,121.358333 22.7322121,120.915 C22.4522121,120.471667 22.0625455,120.128667 21.5632121,119.886 C21.0638788,119.643333 20.4922121,119.522 19.8482121,119.522 C19.1575455,119.522 18.5462121,119.669 18.0142121,119.963 C17.4822121,120.257 17.0948788,120.67 16.8522121,121.202 C16.8242121,120.903333 16.8102121,120.637333 16.8102121,120.404 C16.8102121,119.097333 17.1182121,118.101 17.7342121,117.415 C18.3502121,116.729 19.1995455,116.386 20.2822121,116.386 C21.0848788,116.386 21.7195455,116.54 22.1862121,116.848 L22.1862121,116.848 L22.5922121,116.036 C22.0135455,115.681333 21.2388788,115.504 20.2682121,115.504 C19.3722121,115.504 18.5882121,115.697667 17.9162121,116.085 C17.2442121,116.472333 16.7215455,117.044 16.3482121,117.8 C15.9748788,118.556 15.7882121,119.48 15.7882121,120.572 C15.7882121,122.130667 16.1335455,123.337 16.8242121,124.191 C17.5148788,125.045 18.5088788,125.472 19.8062121,125.472 Z M19.7642121,124.618 C19.2228788,124.618 18.7562121,124.52 18.3642121,124.324 C17.9722121,124.128 17.6758788,123.871333 17.4752121,123.554 C17.2745455,123.236667 17.1742121,122.891333 17.1742121,122.518 C17.1742121,122.116667 17.2815455,121.752667 17.4962121,121.426 C17.7108788,121.099333 18.0072121,120.842667 18.3852121,120.656 C18.7632121,120.469333 19.1995455,120.376 19.6942121,120.376 C20.4502121,120.376 21.0498788,120.567333 21.4932121,120.95 C21.9365455,121.332667 22.1582121,121.846 22.1582121,122.49 C22.1582121,123.134 21.9365455,123.649667 21.4932121,124.037 C21.0498788,124.424333 20.4735455,124.618 19.7642121,124.618 Z M25.9662121,125.388 L25.9662121,123.288 L27.7022121,121.692 L30.6702121,125.388 L31.8882121,125.388 L28.4442121,121.034 L31.5942121,118.024 L30.3622121,118.024 L25.9662121,122.042 L25.9662121,115 L24.9722121,115 L24.9722121,125.388 L25.9662121,125.388 Z\",\"id\":\"£6k\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":21}),React.createElement(\"path\",{\"d\":\"M14.2482121,69.388 L14.2482121,68.492 L8.76021214,68.492 L8.76021214,64.838 L12.6382121,64.838 L12.6382121,64.138 L8.76021214,64.138 L8.76021214,62.962 C8.76021214,62.1406667 8.99354547,61.513 9.46021214,61.079 C9.92687881,60.645 10.6222121,60.428 11.5462121,60.428 C12.6008788,60.428 13.4362121,60.652 14.0522121,61.1 L14.0522121,61.1 L14.4302121,60.246 C13.7115455,59.7513333 12.7782121,59.504 11.6302121,59.504 C10.3795455,59.504 9.41821214,59.8143333 8.74621214,60.435 C8.07421214,61.0556667 7.73821214,61.898 7.73821214,62.962 L7.73821214,62.962 L7.73821214,64.138 L6.15621214,64.138 L6.15621214,64.838 L7.73821214,64.838 L7.73821214,68.492 L6.15621214,68.492 L6.15621214,69.388 L14.2482121,69.388 Z M19.1062121,69.472 C19.8808788,69.472 20.5552121,69.3576667 21.1292121,69.129 C21.7032121,68.9003333 22.1442121,68.5736667 22.4522121,68.149 C22.7602121,67.7243333 22.9142121,67.2273333 22.9142121,66.658 C22.9142121,66.0793333 22.7485455,65.5846667 22.4172121,65.174 C22.0858788,64.7633333 21.6122121,64.4553333 20.9962121,64.25 C21.5002121,64.054 21.8875455,63.7716667 22.1582121,63.403 C22.4288788,63.0343333 22.5642121,62.598 22.5642121,62.094 C22.5642121,61.5713333 22.4195455,61.114 22.1302121,60.722 C21.8408788,60.33 21.4372121,60.029 20.9192121,59.819 C20.4012121,59.609 19.7968788,59.504 19.1062121,59.504 C18.0608788,59.504 17.2278788,59.7373333 16.6072121,60.204 C15.9865455,60.6706667 15.6762121,61.3006667 15.6762121,62.094 C15.6762121,62.598 15.8068788,63.0343333 16.0682121,63.403 C16.3295455,63.7716667 16.7122121,64.054 17.2162121,64.25 C16.6002121,64.4553333 16.1312121,64.761 15.8092121,65.167 C15.4872121,65.573 15.3262121,66.07 15.3262121,66.658 C15.3262121,67.526 15.6622121,68.212 16.3342121,68.716 C17.0062121,69.22 17.9302121,69.472 19.1062121,69.472 Z M19.1062121,63.886 C18.3502121,63.886 17.7575455,63.7273333 17.3282121,63.41 C16.8988788,63.0926667 16.6842121,62.6633333 16.6842121,62.122 C16.6842121,61.5806667 16.9012121,61.1513333 17.3352121,60.834 C17.7692121,60.5166667 18.3595455,60.358 19.1062121,60.358 C19.8435455,60.358 20.4338788,60.5166667 20.8772121,60.834 C21.3205455,61.1513333 21.5422121,61.5853333 21.5422121,62.136 C21.5422121,62.668 21.3252121,63.0926667 20.8912121,63.41 C20.4572121,63.7273333 19.8622121,63.886 19.1062121,63.886 Z M19.1062121,68.618 C18.2382121,68.618 17.5615455,68.443 17.0762121,68.093 C16.5908788,67.743 16.3482121,67.26 16.3482121,66.644 C16.3482121,66.0373333 16.5932121,65.559 17.0832121,65.209 C17.5732121,64.859 18.2475455,64.684 19.1062121,64.684 C19.9742121,64.684 20.6532121,64.859 21.1432121,65.209 C21.6332121,65.559 21.8782121,66.0373333 21.8782121,66.644 C21.8782121,67.2506667 21.6332121,67.7313333 21.1432121,68.086 C20.6532121,68.4406667 19.9742121,68.618 19.1062121,68.618 Z M25.9662121,69.388 L25.9662121,67.288 L27.7022121,65.692 L30.6702121,69.388 L31.8882121,69.388 L28.4442121,65.034 L31.5942121,62.024 L30.3622121,62.024 L25.9662121,66.042 L25.9662121,59 L24.9722121,59 L24.9722121,69.388 L25.9662121,69.388 Z\",\"id\":\"£8k\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M8.85821214,10.388 L8.85821214,9.492 L3.37021214,9.492 L3.37021214,5.838 L7.24821214,5.838 L7.24821214,5.138 L3.37021214,5.138 L3.37021214,3.962 C3.37021214,3.14066667 3.60354547,2.513 4.07021214,2.079 C4.53687881,1.645 5.23221214,1.428 6.15621214,1.428 C7.21087881,1.428 8.04621214,1.652 8.66221214,2.1 L8.66221214,2.1 L9.04021214,1.246 C8.32154547,0.751333333 7.38821214,0.504 6.24021214,0.504 C4.98954547,0.504 4.02821214,0.814333333 3.35621214,1.435 C2.68421214,2.05566667 2.34821214,2.898 2.34821214,3.962 L2.34821214,3.962 L2.34821214,5.138 L0.766212141,5.138 L0.766212141,5.838 L2.34821214,5.838 L2.34821214,9.492 L0.766212141,9.492 L0.766212141,10.388 L8.85821214,10.388 Z M12.7082121,10.388 L12.7082121,0.588 L9.39021214,0.588 L9.39021214,1.484 L11.7002121,1.484 L11.7002121,10.388 L12.7082121,10.388 Z M18.9522121,10.472 C19.7082121,10.472 20.3825455,10.2713333 20.9752121,9.87 C21.5678788,9.46866667 22.0322121,8.89233333 22.3682121,8.141 C22.7042121,7.38966667 22.8722121,6.50533333 22.8722121,5.488 C22.8722121,4.47066667 22.7042121,3.58633333 22.3682121,2.835 C22.0322121,2.08366667 21.5678788,1.50733333 20.9752121,1.106 C20.3825455,0.704666667 19.7082121,0.504 18.9522121,0.504 C18.1962121,0.504 17.5218788,0.704666667 16.9292121,1.106 C16.3365455,1.50733333 15.8745455,2.08366667 15.5432121,2.835 C15.2118788,3.58633333 15.0462121,4.47066667 15.0462121,5.488 C15.0462121,6.50533333 15.2118788,7.38966667 15.5432121,8.141 C15.8745455,8.89233333 16.3365455,9.46866667 16.9292121,9.87 C17.5218788,10.2713333 18.1962121,10.472 18.9522121,10.472 Z M18.9522121,9.548 C18.3828788,9.548 17.8812121,9.38933333 17.4472121,9.072 C17.0132121,8.75466667 16.6748788,8.29266667 16.4322121,7.686 C16.1895455,7.07933333 16.0682121,6.34666667 16.0682121,5.488 C16.0682121,4.62933333 16.1895455,3.89666667 16.4322121,3.29 C16.6748788,2.68333333 17.0132121,2.22133333 17.4472121,1.904 C17.8812121,1.58666667 18.3828788,1.428 18.9522121,1.428 C19.5215455,1.428 20.0232121,1.58666667 20.4572121,1.904 C20.8912121,2.22133333 21.2295455,2.68333333 21.4722121,3.29 C21.7148788,3.89666667 21.8362121,4.62933333 21.8362121,5.488 C21.8362121,6.34666667 21.7148788,7.07933333 21.4722121,7.686 C21.2295455,8.29266667 20.8912121,8.75466667 20.4572121,9.072 C20.0232121,9.38933333 19.5215455,9.548 18.9522121,9.548 Z M25.9662121,10.388 L25.9662121,8.288 L27.7022121,6.692 L30.6702121,10.388 L31.8882121,10.388 L28.4442121,6.034 L31.5942121,3.024 L30.3622121,3.024 L25.9662121,7.042 L25.9662121,0 L24.9722121,0 L24.9722121,10.388 L25.9662121,10.388 Z\",\"id\":\"£10k\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":23})]),React.createElement(\"text\",{\"id\":\"Mean-expenditure-per\",\"transform\":\"translate(175.500000, 20.000000) rotate(-360.000000) translate(-175.500000, -20.000000) \",\"fontFamily\":\"Montserrat-SemiBold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"500\",\"lineSpacing\":\"20\",\"fill\":\"#2D3142\",\"key\":1},[React.createElement(\"tspan\",{\"x\":\"0\",\"y\":\"15\",\"key\":0},\"Mean expenditure per pupil, 2019-20 \"),React.createElement(\"tspan\",{\"x\":\"0\",\"y\":\"35\",\"key\":1},\"prices\")])]),React.createElement(\"path\",{\"d\":\"M234.550655,384.769133 L234.550655,383.745133 L228.390655,383.745133 L232.198655,380.001133 C232.913322,379.307799 233.398655,378.694466 233.654655,378.161133 C233.910655,377.627799 234.038655,377.073133 234.038655,376.497133 C234.038655,375.558466 233.705322,374.819799 233.038655,374.281133 C232.371989,373.742466 231.467989,373.473133 230.326655,373.473133 C229.473322,373.473133 228.707989,373.611799 228.030655,373.889133 C227.353322,374.166466 226.795989,374.561133 226.358655,375.073133 L226.358655,375.073133 L227.174655,375.777133 C227.899989,374.945133 228.918655,374.529133 230.230655,374.529133 C231.073322,374.529133 231.721322,374.713133 232.174655,375.081133 C232.627989,375.449133 232.854655,375.963799 232.854655,376.625133 C232.854655,377.051799 232.750655,377.475799 232.542655,377.897133 C232.334655,378.318466 231.937322,378.817133 231.350655,379.393133 L231.350655,379.393133 L226.694655,383.953133 L226.694655,384.769133 L234.550655,384.769133 Z M240.454655,384.865133 C241.318655,384.865133 242.089322,384.635799 242.766655,384.177133 C243.443989,383.718466 243.974655,383.059799 244.358655,382.201133 C244.742655,381.342466 244.934655,380.331799 244.934655,379.169133 C244.934655,378.006466 244.742655,376.995799 244.358655,376.137133 C243.974655,375.278466 243.443989,374.619799 242.766655,374.161133 C242.089322,373.702466 241.318655,373.473133 240.454655,373.473133 C239.590655,373.473133 238.819989,373.702466 238.142655,374.161133 C237.465322,374.619799 236.937322,375.278466 236.558655,376.137133 C236.179989,376.995799 235.990655,378.006466 235.990655,379.169133 C235.990655,380.331799 236.179989,381.342466 236.558655,382.201133 C236.937322,383.059799 237.465322,383.718466 238.142655,384.177133 C238.819989,384.635799 239.590655,384.865133 240.454655,384.865133 Z M240.454655,383.809133 C239.803989,383.809133 239.230655,383.627799 238.734655,383.265133 C238.238655,382.902466 237.851989,382.374466 237.574655,381.681133 C237.297322,380.987799 237.158655,380.150466 237.158655,379.169133 C237.158655,378.187799 237.297322,377.350466 237.574655,376.657133 C237.851989,375.963799 238.238655,375.435799 238.734655,375.073133 C239.230655,374.710466 239.803989,374.529133 240.454655,374.529133 C241.105322,374.529133 241.678655,374.710466 242.174655,375.073133 C242.670655,375.435799 243.057322,375.963799 243.334655,376.657133 C243.611989,377.350466 243.750655,378.187799 243.750655,379.169133 C243.750655,380.150466 243.611989,380.987799 243.334655,381.681133 C243.057322,382.374466 242.670655,382.902466 242.174655,383.265133 C241.678655,383.627799 241.105322,383.809133 240.454655,383.809133 Z M249.686655,384.769133 L249.686655,373.569133 L245.894655,373.569133 L245.894655,374.593133 L248.534655,374.593133 L248.534655,384.769133 L249.686655,384.769133 Z M255.702655,384.865133 C256.577322,384.865133 257.318655,384.721133 257.926655,384.433133 C258.534655,384.145133 258.993322,383.753133 259.302655,383.257133 C259.611989,382.761133 259.766655,382.193133 259.766655,381.553133 C259.766655,380.635799 259.459989,379.891799 258.846655,379.321133 C258.233322,378.750466 257.339989,378.433133 256.166655,378.369133 L256.166655,378.369133 L259.334655,374.385133 L259.334655,373.569133 L252.134655,373.569133 L252.134655,374.593133 L257.862655,374.593133 L254.758655,378.481133 L254.758655,379.329133 L255.558655,379.329133 C256.571989,379.329133 257.329322,379.526466 257.830655,379.921133 C258.331989,380.315799 258.582655,380.859799 258.582655,381.553133 C258.582655,382.257133 258.331989,382.809133 257.830655,383.209133 C257.329322,383.609133 256.619989,383.809133 255.702655,383.809133 C254.998655,383.809133 254.337322,383.689133 253.718655,383.449133 C253.099989,383.209133 252.603989,382.897133 252.230655,382.513133 L252.230655,382.513133 L251.670655,383.425133 C252.107989,383.862466 252.686655,384.211799 253.406655,384.473133 C254.126655,384.734466 254.891989,384.865133 255.702655,384.865133 Z M265.702655,380.929133 L265.702655,379.937133 L261.510655,379.937133 L261.510655,380.929133 L265.702655,380.929133 Z M270.598655,384.769133 L270.598655,373.569133 L266.806655,373.569133 L266.806655,374.593133 L269.446655,374.593133 L269.446655,384.769133 L270.598655,384.769133 Z M280.550655,384.769133 L280.550655,381.825133 L282.790655,381.825133 L282.790655,380.801133 L280.550655,380.801133 L280.550655,378.209133 L279.430655,378.209133 L279.430655,380.801133 L274.566655,380.801133 L280.294655,373.569133 L279.014655,373.569133 L273.078655,380.993133 L273.078655,381.825133 L279.398655,381.825133 L279.398655,384.769133 L280.550655,384.769133 Z\",\"id\":\"2013-14\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(254.574655, 379.169133) rotate(-45.000000) translate(-254.574655, -379.169133) \",\"key\":1}),React.createElement(\"path\",{\"d\":\"M267.527037,382.650882 L267.527037,381.626882 L261.367037,381.626882 L265.175037,377.882882 C265.889704,377.189549 266.375037,376.576216 266.631037,376.042882 C266.887037,375.509549 267.015037,374.954882 267.015037,374.378882 C267.015037,373.440216 266.681704,372.701549 266.015037,372.162882 C265.348371,371.624216 264.444371,371.354882 263.303037,371.354882 C262.449704,371.354882 261.684371,371.493549 261.007037,371.770882 C260.329704,372.048216 259.772371,372.442882 259.335037,372.954882 L259.335037,372.954882 L260.151037,373.658882 C260.876371,372.826882 261.895037,372.410882 263.207037,372.410882 C264.049704,372.410882 264.697704,372.594882 265.151037,372.962882 C265.604371,373.330882 265.831037,373.845549 265.831037,374.506882 C265.831037,374.933549 265.727037,375.357549 265.519037,375.778882 C265.311037,376.200216 264.913704,376.698882 264.327037,377.274882 L264.327037,377.274882 L259.671037,381.834882 L259.671037,382.650882 L267.527037,382.650882 Z M273.431037,382.746882 C274.295037,382.746882 275.065704,382.517549 275.743037,382.058882 C276.420371,381.600216 276.951037,380.941549 277.335037,380.082882 C277.719037,379.224216 277.911037,378.213549 277.911037,377.050882 C277.911037,375.888216 277.719037,374.877549 277.335037,374.018882 C276.951037,373.160216 276.420371,372.501549 275.743037,372.042882 C275.065704,371.584216 274.295037,371.354882 273.431037,371.354882 C272.567037,371.354882 271.796371,371.584216 271.119037,372.042882 C270.441704,372.501549 269.913704,373.160216 269.535037,374.018882 C269.156371,374.877549 268.967037,375.888216 268.967037,377.050882 C268.967037,378.213549 269.156371,379.224216 269.535037,380.082882 C269.913704,380.941549 270.441704,381.600216 271.119037,382.058882 C271.796371,382.517549 272.567037,382.746882 273.431037,382.746882 Z M273.431037,381.690882 C272.780371,381.690882 272.207037,381.509549 271.711037,381.146882 C271.215037,380.784216 270.828371,380.256216 270.551037,379.562882 C270.273704,378.869549 270.135037,378.032216 270.135037,377.050882 C270.135037,376.069549 270.273704,375.232216 270.551037,374.538882 C270.828371,373.845549 271.215037,373.317549 271.711037,372.954882 C272.207037,372.592216 272.780371,372.410882 273.431037,372.410882 C274.081704,372.410882 274.655037,372.592216 275.151037,372.954882 C275.647037,373.317549 276.033704,373.845549 276.311037,374.538882 C276.588371,375.232216 276.727037,376.069549 276.727037,377.050882 C276.727037,378.032216 276.588371,378.869549 276.311037,379.562882 C276.033704,380.256216 275.647037,380.784216 275.151037,381.146882 C274.655037,381.509549 274.081704,381.690882 273.431037,381.690882 Z M282.663037,382.650882 L282.663037,371.450882 L278.871037,371.450882 L278.871037,372.474882 L281.511037,372.474882 L281.511037,382.650882 L282.663037,382.650882 Z M288.551037,382.650882 L293.239037,372.266882 L293.239037,371.450882 L285.015037,371.450882 L285.015037,374.570882 L286.151037,374.570882 L286.151037,372.474882 L291.911037,372.474882 L287.303037,382.650882 L288.551037,382.650882 Z M299.079037,378.810882 L299.079037,377.818882 L294.887037,377.818882 L294.887037,378.810882 L299.079037,378.810882 Z M303.975037,382.650882 L303.975037,371.450882 L300.183037,371.450882 L300.183037,372.474882 L302.823037,372.474882 L302.823037,382.650882 L303.975037,382.650882 Z M310.903037,382.746882 C311.788371,382.746882 312.559037,382.616216 313.215037,382.354882 C313.871037,382.093549 314.375037,381.720216 314.727037,381.234882 C315.079037,380.749549 315.255037,380.181549 315.255037,379.530882 C315.255037,378.869549 315.065704,378.304216 314.687037,377.834882 C314.308371,377.365549 313.767037,377.013549 313.063037,376.778882 C313.639037,376.554882 314.081704,376.232216 314.391037,375.810882 C314.700371,375.389549 314.855037,374.890882 314.855037,374.314882 C314.855037,373.717549 314.689704,373.194882 314.359037,372.746882 C314.028371,372.298882 313.567037,371.954882 312.975037,371.714882 C312.383037,371.474882 311.692371,371.354882 310.903037,371.354882 C309.708371,371.354882 308.756371,371.621549 308.047037,372.154882 C307.337704,372.688216 306.983037,373.408216 306.983037,374.314882 C306.983037,374.890882 307.132371,375.389549 307.431037,375.810882 C307.729704,376.232216 308.167037,376.554882 308.743037,376.778882 C308.039037,377.013549 307.503037,377.362882 307.135037,377.826882 C306.767037,378.290882 306.583037,378.858882 306.583037,379.530882 C306.583037,380.522882 306.967037,381.306882 307.735037,381.882882 C308.503037,382.458882 309.559037,382.746882 310.903037,382.746882 Z M310.903037,376.362882 C310.039037,376.362882 309.361704,376.181549 308.871037,375.818882 C308.380371,375.456216 308.135037,374.965549 308.135037,374.346882 C308.135037,373.728216 308.383037,373.237549 308.879037,372.874882 C309.375037,372.512216 310.049704,372.330882 310.903037,372.330882 C311.745704,372.330882 312.420371,372.512216 312.927037,372.874882 C313.433704,373.237549 313.687037,373.733549 313.687037,374.362882 C313.687037,374.970882 313.439037,375.456216 312.943037,375.818882 C312.447037,376.181549 311.767037,376.362882 310.903037,376.362882 Z M310.903037,381.770882 C309.911037,381.770882 309.137704,381.570882 308.583037,381.170882 C308.028371,380.770882 307.751037,380.218882 307.751037,379.514882 C307.751037,378.821549 308.031037,378.274882 308.591037,377.874882 C309.151037,377.474882 309.921704,377.274882 310.903037,377.274882 C311.895037,377.274882 312.671037,377.474882 313.231037,377.874882 C313.791037,378.274882 314.071037,378.821549 314.071037,379.514882 C314.071037,380.208216 313.791037,380.757549 313.231037,381.162882 C312.671037,381.568216 311.895037,381.770882 310.903037,381.770882 Z\",\"id\":\"2017-18\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(287.295037, 377.050882) rotate(-45.000000) translate(-287.295037, -377.050882) \",\"key\":2}),React.createElement(\"path\",{\"d\":\"M297.396828,382.650882 L297.396828,381.626882 L291.236828,381.626882 L295.044828,377.882882 C295.759494,377.189549 296.244828,376.576216 296.500828,376.042882 C296.756828,375.509549 296.884828,374.954882 296.884828,374.378882 C296.884828,373.440216 296.551494,372.701549 295.884828,372.162882 C295.218161,371.624216 294.314161,371.354882 293.172828,371.354882 C292.319494,371.354882 291.554161,371.493549 290.876828,371.770882 C290.199494,372.048216 289.642161,372.442882 289.204828,372.954882 L289.204828,372.954882 L290.020828,373.658882 C290.746161,372.826882 291.764828,372.410882 293.076828,372.410882 C293.919494,372.410882 294.567494,372.594882 295.020828,372.962882 C295.474161,373.330882 295.700828,373.845549 295.700828,374.506882 C295.700828,374.933549 295.596828,375.357549 295.388828,375.778882 C295.180828,376.200216 294.783494,376.698882 294.196828,377.274882 L294.196828,377.274882 L289.540828,381.834882 L289.540828,382.650882 L297.396828,382.650882 Z M303.300828,382.746882 C304.164828,382.746882 304.935494,382.517549 305.612828,382.058882 C306.290161,381.600216 306.820828,380.941549 307.204828,380.082882 C307.588828,379.224216 307.780828,378.213549 307.780828,377.050882 C307.780828,375.888216 307.588828,374.877549 307.204828,374.018882 C306.820828,373.160216 306.290161,372.501549 305.612828,372.042882 C304.935494,371.584216 304.164828,371.354882 303.300828,371.354882 C302.436828,371.354882 301.666161,371.584216 300.988828,372.042882 C300.311494,372.501549 299.783494,373.160216 299.404828,374.018882 C299.026161,374.877549 298.836828,375.888216 298.836828,377.050882 C298.836828,378.213549 299.026161,379.224216 299.404828,380.082882 C299.783494,380.941549 300.311494,381.600216 300.988828,382.058882 C301.666161,382.517549 302.436828,382.746882 303.300828,382.746882 Z M303.300828,381.690882 C302.650161,381.690882 302.076828,381.509549 301.580828,381.146882 C301.084828,380.784216 300.698161,380.256216 300.420828,379.562882 C300.143494,378.869549 300.004828,378.032216 300.004828,377.050882 C300.004828,376.069549 300.143494,375.232216 300.420828,374.538882 C300.698161,373.845549 301.084828,373.317549 301.580828,372.954882 C302.076828,372.592216 302.650161,372.410882 303.300828,372.410882 C303.951494,372.410882 304.524828,372.592216 305.020828,372.954882 C305.516828,373.317549 305.903494,373.845549 306.180828,374.538882 C306.458161,375.232216 306.596828,376.069549 306.596828,377.050882 C306.596828,378.032216 306.458161,378.869549 306.180828,379.562882 C305.903494,380.256216 305.516828,380.784216 305.020828,381.146882 C304.524828,381.509549 303.951494,381.690882 303.300828,381.690882 Z M312.532828,382.650882 L312.532828,371.450882 L308.740828,371.450882 L308.740828,372.474882 L311.380828,372.474882 L311.380828,382.650882 L312.532828,382.650882 Z M318.164828,382.746882 C319.188828,382.746882 320.084828,382.525549 320.852828,382.082882 C321.620828,381.640216 322.218161,380.986882 322.644828,380.122882 C323.071494,379.258882 323.284828,378.202882 323.284828,376.954882 C323.284828,375.173549 322.890161,373.794882 322.100828,372.818882 C321.311494,371.842882 320.175494,371.354882 318.692828,371.354882 C317.967494,371.354882 317.314161,371.496216 316.732828,371.778882 C316.151494,372.061549 315.695494,372.464216 315.364828,372.986882 C315.034161,373.509549 314.868828,374.112216 314.868828,374.794882 C314.868828,375.466882 315.028828,376.056216 315.348828,376.562882 C315.668828,377.069549 316.114161,377.461549 316.684828,377.738882 C317.255494,378.016216 317.908828,378.154882 318.644828,378.154882 C319.434161,378.154882 320.132828,377.986882 320.740828,377.650882 C321.348828,377.314882 321.791494,376.842882 322.068828,376.234882 C322.100828,376.565549 322.116828,376.869549 322.116828,377.146882 C322.116828,378.640216 321.764828,379.778882 321.060828,380.562882 C320.356828,381.346882 319.386161,381.738882 318.148828,381.738882 C317.231494,381.738882 316.506161,381.562882 315.972828,381.210882 L315.972828,381.210882 L315.508828,382.138882 C316.170161,382.544216 317.055494,382.746882 318.164828,382.746882 Z M318.820828,377.178882 C317.956828,377.178882 317.271494,376.960216 316.764828,376.522882 C316.258161,376.085549 316.004828,375.498882 316.004828,374.762882 C316.004828,374.026882 316.258161,373.437549 316.764828,372.994882 C317.271494,372.552216 317.930161,372.330882 318.740828,372.330882 C319.359494,372.330882 319.892828,372.442882 320.340828,372.666882 C320.788828,372.890882 321.127494,373.184216 321.356828,373.546882 C321.586161,373.909549 321.700828,374.304216 321.700828,374.730882 C321.700828,375.189549 321.578161,375.605549 321.332828,375.978882 C321.087494,376.352216 320.748828,376.645549 320.316828,376.858882 C319.884828,377.072216 319.386161,377.178882 318.820828,377.178882 Z M329.268828,378.810882 L329.268828,377.818882 L325.076828,377.818882 L325.076828,378.810882 L329.268828,378.810882 Z M338.708828,382.650882 L338.708828,381.626882 L332.548828,381.626882 L336.356828,377.882882 C337.071494,377.189549 337.556828,376.576216 337.812828,376.042882 C338.068828,375.509549 338.196828,374.954882 338.196828,374.378882 C338.196828,373.440216 337.863494,372.701549 337.196828,372.162882 C336.530161,371.624216 335.626161,371.354882 334.484828,371.354882 C333.631494,371.354882 332.866161,371.493549 332.188828,371.770882 C331.511494,372.048216 330.954161,372.442882 330.516828,372.954882 L330.516828,372.954882 L331.332828,373.658882 C332.058161,372.826882 333.076828,372.410882 334.388828,372.410882 C335.231494,372.410882 335.879494,372.594882 336.332828,372.962882 C336.786161,373.330882 337.012828,373.845549 337.012828,374.506882 C337.012828,374.933549 336.908828,375.357549 336.700828,375.778882 C336.492828,376.200216 336.095494,376.698882 335.508828,377.274882 L335.508828,377.274882 L330.852828,381.834882 L330.852828,382.650882 L338.708828,382.650882 Z M344.612828,382.746882 C345.476828,382.746882 346.247494,382.517549 346.924828,382.058882 C347.602161,381.600216 348.132828,380.941549 348.516828,380.082882 C348.900828,379.224216 349.092828,378.213549 349.092828,377.050882 C349.092828,375.888216 348.900828,374.877549 348.516828,374.018882 C348.132828,373.160216 347.602161,372.501549 346.924828,372.042882 C346.247494,371.584216 345.476828,371.354882 344.612828,371.354882 C343.748828,371.354882 342.978161,371.584216 342.300828,372.042882 C341.623494,372.501549 341.095494,373.160216 340.716828,374.018882 C340.338161,374.877549 340.148828,375.888216 340.148828,377.050882 C340.148828,378.213549 340.338161,379.224216 340.716828,380.082882 C341.095494,380.941549 341.623494,381.600216 342.300828,382.058882 C342.978161,382.517549 343.748828,382.746882 344.612828,382.746882 Z M344.612828,381.690882 C343.962161,381.690882 343.388828,381.509549 342.892828,381.146882 C342.396828,380.784216 342.010161,380.256216 341.732828,379.562882 C341.455494,378.869549 341.316828,378.032216 341.316828,377.050882 C341.316828,376.069549 341.455494,375.232216 341.732828,374.538882 C342.010161,373.845549 342.396828,373.317549 342.892828,372.954882 C343.388828,372.592216 343.962161,372.410882 344.612828,372.410882 C345.263494,372.410882 345.836828,372.592216 346.332828,372.954882 C346.828828,373.317549 347.215494,373.845549 347.492828,374.538882 C347.770161,375.232216 347.908828,376.069549 347.908828,377.050882 C347.908828,378.032216 347.770161,378.869549 347.492828,379.562882 C347.215494,380.256216 346.828828,380.784216 346.332828,381.146882 C345.836828,381.509549 345.263494,381.690882 344.612828,381.690882 Z\",\"id\":\"2019-20\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(319.148828, 377.050882) rotate(-45.000000) translate(-319.148828, -377.050882) \",\"key\":3})])))]);\n}\n\nFurtherEducationsInequalitiesInFundingMobile.defaultProps = {\"width\":\"353px\",\"height\":\"406px\",\"viewBox\":\"0 0 353 406\",\"version\":\"1.1\"};\n\nmodule.exports = FurtherEducationsInequalitiesInFundingMobile;\n\nFurtherEducationsInequalitiesInFundingMobile.default = FurtherEducationsInequalitiesInFundingMobile;\n","module.exports = true;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n                                                               \n\n// An array of all currently registered event handlers for a type\n                                            \n                                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                 \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).slice().map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).slice().map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nexport default mitt;\n//# sourceMappingURL=mitt.es.js.map\n","import mitt from \"mitt\"\n\nconst emitter = mitt()\nexport default emitter\n","module.exports = Object.assign\n","\"use strict\";\n\nexports.__esModule = true;\nexports.useScrollRestoration = exports.ScrollContainer = exports.ScrollContext = void 0;\n\nvar _scrollHandler = require(\"./scroll-handler\");\n\nexports.ScrollContext = _scrollHandler.ScrollHandler;\n\nvar _scrollContainer = require(\"./scroll-container\");\n\nexports.ScrollContainer = _scrollContainer.ScrollContainer;\n\nvar _useScrollRestoration = require(\"./use-scroll-restoration\");\n\nexports.useScrollRestoration = _useScrollRestoration.useScrollRestoration;","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\n\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\n\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext); // Custom merge via a function prop\n\n  if (isFunction(components)) {\n    return components(contextComponents);\n  }\n\n  return _objectSpread2(_objectSpread2({}, contextComponents), components);\n};\n\nvar MDXProvider = function MDXProvider(_ref) {\n  var components = _ref.components,\n      children = _ref.children,\n      disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n\n  if (disableParentContext) {\n    allComponents = components;\n  }\n\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\n\nfunction createElement(type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","exports.polyfill = Component => Component\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar getLocation = function getLocation(source) {\n  var _source$location = source.location,\n      search = _source$location.search,\n      hash = _source$location.hash,\n      href = _source$location.href,\n      origin = _source$location.origin,\n      protocol = _source$location.protocol,\n      host = _source$location.host,\n      hostname = _source$location.hostname,\n      port = _source$location.port;\n  var pathname = source.location.pathname;\n\n\n  if (!pathname && href && canUseDOM) {\n    var url = new URL(href);\n    pathname = url.pathname;\n  }\n\n  return {\n    pathname: encodeURI(decodeURI(pathname)),\n    search: search,\n    hash: hash,\n    href: href,\n    origin: origin,\n    protocol: protocol,\n    host: host,\n    hostname: hostname,\n    port: port,\n    state: source.history.state,\n    key: source.history.state && source.history.state.key || \"initial\"\n  };\n};\n\nvar createHistory = function createHistory(source, options) {\n  var listeners = [];\n  var location = getLocation(source);\n  var transitioning = false;\n  var resolveTransition = function resolveTransition() {};\n\n  return {\n    get location() {\n      return location;\n    },\n\n    get transitioning() {\n      return transitioning;\n    },\n\n    _onTransitionComplete: function _onTransitionComplete() {\n      transitioning = false;\n      resolveTransition();\n    },\n    listen: function listen(listener) {\n      listeners.push(listener);\n\n      var popstateListener = function popstateListener() {\n        location = getLocation(source);\n        listener({ location: location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return function () {\n        source.removeEventListener(\"popstate\", popstateListener);\n        listeners = listeners.filter(function (fn) {\n          return fn !== listener;\n        });\n      };\n    },\n    navigate: function navigate(to) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          state = _ref.state,\n          _ref$replace = _ref.replace,\n          replace = _ref$replace === undefined ? false : _ref$replace;\n\n      if (typeof to === \"number\") {\n        source.history.go(to);\n      } else {\n        state = _extends({}, state, { key: Date.now() + \"\" });\n        // try...catch iOS Safari limits to 100 pushState calls\n        try {\n          if (transitioning || replace) {\n            source.history.replaceState(state, null, to);\n          } else {\n            source.history.pushState(state, null, to);\n          }\n        } catch (e) {\n          source.location[replace ? \"replace\" : \"assign\"](to);\n        }\n      }\n\n      location = getLocation(source);\n      transitioning = true;\n      var transition = new Promise(function (res) {\n        return resolveTransition = res;\n      });\n      listeners.forEach(function (listener) {\n        return listener({ location: location, action: \"PUSH\" });\n      });\n      return transition;\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Stores history entries in memory for testing or other platforms like Native\nvar createMemorySource = function createMemorySource() {\n  var initialPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n\n  var searchIndex = initialPath.indexOf(\"?\");\n  var initialLocation = {\n    pathname: searchIndex > -1 ? initialPath.substr(0, searchIndex) : initialPath,\n    search: searchIndex > -1 ? initialPath.substr(searchIndex) : \"\"\n  };\n  var index = 0;\n  var stack = [initialLocation];\n  var states = [null];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener: function addEventListener(name, fn) {},\n    removeEventListener: function removeEventListener(name, fn) {},\n\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState: function pushState(state, _, uri) {\n        var _uri$split = uri.split(\"?\"),\n            pathname = _uri$split[0],\n            _uri$split$ = _uri$split[1],\n            search = _uri$split$ === undefined ? \"\" : _uri$split$;\n\n        index++;\n        stack.push({ pathname: pathname, search: search.length ? \"?\" + search : search });\n        states.push(state);\n      },\n      replaceState: function replaceState(state, _, uri) {\n        var _uri$split2 = uri.split(\"?\"),\n            pathname = _uri$split2[0],\n            _uri$split2$ = _uri$split2[1],\n            search = _uri$split2$ === undefined ? \"\" : _uri$split2$;\n\n        stack[index] = { pathname: pathname, search: search };\n        states[index] = state;\n      },\n      go: function go(to) {\n        var newIndex = index + to;\n\n        if (newIndex < 0 || newIndex > states.length - 1) {\n          return;\n        }\n\n        index = newIndex;\n      }\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// global history - uses window.history as the source if available, otherwise a\n// memory history\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar getSource = function getSource() {\n  return canUseDOM ? window : createMemorySource();\n};\n\nvar globalHistory = createHistory(getSource());\nvar navigate = globalHistory.navigate;\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport { globalHistory, navigate, createHistory, createMemorySource };","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar logDeprecationNotice = function logDeprecationNotice(prop, replacement) {\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  console.log(\"\\n    The \\\"\" + prop + \"\\\" prop is now deprecated and will be removed in the next major version\\n    of \\\"gatsby-image\\\".\\n    \");\n\n  if (replacement) {\n    console.log(\"Please use \" + replacement + \" instead of \\\"\" + prop + \"\\\".\");\n  }\n}; // Handle legacy props during their deprecation phase\n\n\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n  var resolutions = convertedProps.resolutions,\n      sizes = convertedProps.sizes,\n      critical = convertedProps.critical;\n\n  if (resolutions) {\n    convertedProps.fixed = resolutions;\n    logDeprecationNotice(\"resolutions\", \"the gatsby-image v2 prop \\\"fixed\\\"\");\n    delete convertedProps.resolutions;\n  }\n\n  if (sizes) {\n    convertedProps.fluid = sizes;\n    logDeprecationNotice(\"sizes\", \"the gatsby-image v2 prop \\\"fluid\\\"\");\n    delete convertedProps.sizes;\n  }\n\n  if (critical) {\n    logDeprecationNotice(\"critical\", \"the native \\\"loading\\\" attribute\");\n    convertedProps.loading = \"eager\";\n  } // convert fluid & fixed to arrays so we only have to work with arrays\n\n\n  if (convertedProps.fluid) {\n    convertedProps.fluid = groupByMedia([].concat(convertedProps.fluid));\n  }\n\n  if (convertedProps.fixed) {\n    convertedProps.fixed = groupByMedia([].concat(convertedProps.fixed));\n  }\n\n  return convertedProps;\n};\n/**\n * Checks if fluid or fixed are art-direction arrays.\n *\n * @param currentData  {{media?: string}[]}   The props to check for images.\n * @return {boolean}\n */\n\n\nvar hasArtDirectionSupport = function hasArtDirectionSupport(currentData) {\n  return !!currentData && Array.isArray(currentData) && currentData.some(function (image) {\n    return typeof image.media !== \"undefined\";\n  });\n};\n/**\n * Tries to detect if a media query matches the current viewport.\n * @property media   {{media?: string}}  A media query string.\n * @return {boolean}\n */\n\n\nvar matchesMedia = function matchesMedia(_ref) {\n  var media = _ref.media;\n  return media ? isBrowser && !!window.matchMedia(media).matches : false;\n};\n/**\n * Find the source of an image to use as a key in the image cache.\n * Use `the first image in either `fixed` or `fluid`\n * @param {{fluid: {src: string, media?: string}[], fixed: {src: string, media?: string}[]}} args\n * @return {string?} Returns image src or undefined it not given.\n */\n\n\nvar getImageCacheKey = function getImageCacheKey(_ref2) {\n  var fluid = _ref2.fluid,\n      fixed = _ref2.fixed;\n  var srcData = getCurrentSrcData(fluid || fixed || []);\n  return srcData && srcData.src;\n};\n/**\n * Returns the current src - Preferably with art-direction support.\n * @param currentData  {{media?: string}[], maxWidth?: Number, maxHeight?: Number}   The fluid or fixed image array.\n * @return {{src: string, media?: string, maxWidth?: Number, maxHeight?: Number}}\n */\n\n\nvar getCurrentSrcData = function getCurrentSrcData(currentData) {\n  if (isBrowser && hasArtDirectionSupport(currentData)) {\n    // Do we have an image for the current Viewport?\n    var foundMedia = currentData.findIndex(matchesMedia);\n\n    if (foundMedia !== -1) {\n      return currentData[foundMedia];\n    } // No media matches, select first element without a media condition\n\n\n    var noMedia = currentData.findIndex(function (image) {\n      return typeof image.media === \"undefined\";\n    });\n\n    if (noMedia !== -1) {\n      return currentData[noMedia];\n    }\n  } // Else return the first image.\n\n\n  return currentData[0];\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props);\n  var cacheKey = getImageCacheKey(convertedProps);\n  return imageCache[cacheKey] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props);\n  var cacheKey = getImageCacheKey(convertedProps);\n\n  if (cacheKey) {\n    imageCache[cacheKey] = true;\n  }\n}; // Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\n\n\nvar hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nvar isBrowser = typeof window !== \"undefined\";\nvar hasIOSupport = isBrowser && window.IntersectionObserver;\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nfunction generateImageSources(imageVariants) {\n  return imageVariants.map(function (_ref3) {\n    var src = _ref3.src,\n        srcSet = _ref3.srcSet,\n        srcSetWebp = _ref3.srcSetWebp,\n        media = _ref3.media,\n        sizes = _ref3.sizes;\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {\n      key: src\n    }, srcSetWebp && /*#__PURE__*/_react.default.createElement(\"source\", {\n      type: \"image/webp\",\n      media: media,\n      srcSet: srcSetWebp,\n      sizes: sizes\n    }), /*#__PURE__*/_react.default.createElement(\"source\", {\n      media: media,\n      srcSet: srcSet,\n      sizes: sizes\n    }));\n  });\n} // Return an array ordered by elements having a media prop, does not use\n// native sort, as a stable sort is not guaranteed by all browsers/versions\n\n\nfunction groupByMedia(imageVariants) {\n  var withMedia = [];\n  var without = [];\n  imageVariants.forEach(function (variant) {\n    return (variant.media ? withMedia : without).push(variant);\n  });\n\n  if (without.length > 1 && process.env.NODE_ENV !== \"production\") {\n    console.warn(\"We've found \" + without.length + \" sources without a media property. They might be ignored by the browser, see: https://www.gatsbyjs.org/packages/gatsby-image/#art-directing-multiple-images\");\n  }\n\n  return [].concat(withMedia, without);\n}\n\nfunction generateTracedSVGSources(imageVariants) {\n  return imageVariants.map(function (_ref4) {\n    var src = _ref4.src,\n        media = _ref4.media,\n        tracedSVG = _ref4.tracedSVG;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: tracedSVG\n    });\n  });\n}\n\nfunction generateBase64Sources(imageVariants) {\n  return imageVariants.map(function (_ref5) {\n    var src = _ref5.src,\n        media = _ref5.media,\n        base64 = _ref5.base64;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: base64\n    });\n  });\n}\n\nfunction generateNoscriptSource(_ref6, isWebp) {\n  var srcSet = _ref6.srcSet,\n      srcSetWebp = _ref6.srcSetWebp,\n      media = _ref6.media,\n      sizes = _ref6.sizes;\n  var src = isWebp ? srcSetWebp : srcSet;\n  var mediaAttr = media ? \"media=\\\"\" + media + \"\\\" \" : \"\";\n  var typeAttr = isWebp ? \"type='image/webp' \" : \"\";\n  var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\" \" : \"\";\n  return \"<source \" + typeAttr + mediaAttr + \"srcset=\\\"\" + src + \"\\\" \" + sizesAttr + \"/>\";\n}\n\nfunction generateNoscriptSources(imageVariants) {\n  return imageVariants.map(function (variant) {\n    return (variant.srcSetWebp ? generateNoscriptSource(variant, true) : \"\") + generateNoscriptSource(variant);\n  }).join(\"\");\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\";\n  var loading = props.loading ? \"loading=\\\"\" + props.loading + \"\\\" \" : \"\";\n  var draggable = props.draggable ? \"draggable=\\\"\" + props.draggable + \"\\\" \" : \"\";\n  var sources = generateNoscriptSources(props.imageVariants);\n  return \"<picture>\" + sources + \"<img \" + loading + width + height + sizes + srcSet + src + alt + title + crossOrigin + draggable + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n}; // Earlier versions of gatsby-image during the 2.x cycle did not wrap\n// the `Img` component in a `picture` element. This maintains compatibility\n// until a breaking change can be introduced in the next major release\n\n\nvar Placeholder = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var src = props.src,\n      imageVariants = props.imageVariants,\n      generateSources = props.generateSources,\n      spreadProps = props.spreadProps,\n      ariaHidden = props.ariaHidden;\n\n  var baseImage = /*#__PURE__*/_react.default.createElement(Img, (0, _extends2.default)({\n    ref: ref,\n    src: src\n  }, spreadProps, {\n    ariaHidden: ariaHidden\n  }));\n\n  return imageVariants.length > 1 ? /*#__PURE__*/_react.default.createElement(\"picture\", null, generateSources(imageVariants), baseImage) : baseImage;\n});\n\nvar Img = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      loading = props.loading,\n      draggable = props.draggable,\n      ariaHidden = props.ariaHidden,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\", \"loading\", \"draggable\", \"ariaHidden\"]);\n  return /*#__PURE__*/_react.default.createElement(\"img\", (0, _extends2.default)({\n    \"aria-hidden\": ariaHidden,\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    loading: loading,\n    draggable: draggable,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    _this.seenBefore = isBrowser && inImageCache(props);\n    _this.isCritical = props.loading === \"eager\" || props.critical;\n    _this.addNoScript = !(_this.isCritical && !props.fadeIn);\n    _this.useIOSupport = !hasNativeLazyLoadSupport && hasIOSupport && !_this.isCritical && !_this.seenBefore;\n    var isVisible = _this.isCritical || isBrowser && (hasNativeLazyLoadSupport || !_this.useIOSupport);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: false,\n      imgCached: false,\n      fadeIn: !_this.seenBefore && props.fadeIn\n    };\n    _this.imageRef = /*#__PURE__*/_react.default.createRef();\n    _this.placeholderRef = props.placeholderRef || /*#__PURE__*/_react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.isCritical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  } // Specific to IntersectionObserver based lazy-load support\n  ;\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.useIOSupport && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          _this2.setState({\n            imgLoaded: imageInCache,\n            // `currentSrc` should be a string, but can be `undefined` in IE,\n            // !! operator validates the value is not undefined/null/\"\"\n            // for lazyloaded components this might be null\n            // TODO fix imgCached behaviour as it's now false when it's lazyloaded\n            imgCached: !!(_this2.imageRef.current && _this2.imageRef.current.currentSrc)\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        durationFadeIn = _convertProps.durationFadeIn,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp,\n        loading = _convertProps.loading,\n        draggable = _convertProps.draggable;\n\n    var shouldReveal = this.state.fadeIn === false || this.state.imgLoaded;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn + \"ms\" : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn + \"ms\"\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName,\n      itemProp: itemProp\n    };\n\n    if (fluid) {\n      var imageVariants = fluid;\n      var image = getCurrentSrcData(fluid);\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\",\n          maxWidth: image.maxWidth ? image.maxWidth + \"px\" : null,\n          maxHeight: image.maxHeight ? image.maxHeight + \"px\" : null\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateBase64Sources\n      }), image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image, {\n            imageVariants: imageVariants\n          }))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var _imageVariants = fixed;\n\n      var _image = getCurrentSrcData(fixed);\n\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(_image.srcSet)\n      }, bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: _image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: _image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), _image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: _image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: _imageVariants,\n        generateSources: generateBase64Sources\n      }), _image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: _image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: _imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(_imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: _image.width,\n        height: _image.height,\n        sizes: _image.sizes,\n        src: _image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: _image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, _image, {\n            imageVariants: _imageVariants\n          }))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  durationFadeIn: 500,\n  alt: \"\",\n  Tag: \"div\",\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: \"lazy\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string,\n  maxWidth: _propTypes.default.number,\n  maxHeight: _propTypes.default.number\n});\n\nfunction requireFixedOrFluid(originalPropTypes) {\n  return function (props, propName, componentName) {\n    var _PropTypes$checkPropT;\n\n    if (!props.fixed && !props.fluid) {\n      throw new Error(\"The prop `fluid` or `fixed` is marked as required in `\" + componentName + \"`, but their values are both `undefined`.\");\n    }\n\n    _propTypes.default.checkPropTypes((_PropTypes$checkPropT = {}, _PropTypes$checkPropT[propName] = originalPropTypes, _PropTypes$checkPropT), props, \"prop\", componentName);\n  };\n} // If you modify these propTypes, please don't forget to update following files as well:\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/index.d.ts\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/README.md#gatsby-image-props\n// https://github.com/gatsbyjs/gatsby/blob/master/docs/docs/gatsby-image.md#gatsby-image-props\n\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: requireFixedOrFluid(_propTypes.default.oneOfType([fixedObject, _propTypes.default.arrayOf(fixedObject)])),\n  fluid: requireFixedOrFluid(_propTypes.default.oneOfType([fluidObject, _propTypes.default.arrayOf(fluidObject)])),\n  fadeIn: _propTypes.default.bool,\n  durationFadeIn: _propTypes.default.number,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string,\n  loading: _propTypes.default.oneOf([\"auto\", \"lazy\", \"eager\"]),\n  draggable: _propTypes.default.bool\n};\nvar _default = Image;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Get a manifest filename depending on localized pathname\n *\n * @param {string} pathname\n * @param {Array<{start_url: string, lang: string}>} localizedManifests\n * @return string\n */\nvar _default = function _default(pathname, localizedManifests) {\n  var defaultFilename = \"manifest.webmanifest\";\n\n  if (!Array.isArray(localizedManifests)) {\n    return defaultFilename;\n  }\n\n  var localizedManifest = localizedManifests.find(function (app) {\n    return pathname.startsWith(app.start_url);\n  });\n\n  if (!localizedManifest) {\n    return defaultFilename;\n  }\n\n  return \"manifest_\" + localizedManifest.lang + \".webmanifest\";\n};\n\nexports.default = _default;","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","import React, { createContext, useContext } from \"react\"\n\nconst GatsbyMDXScopeContext = createContext({})\n\nexport const useMDXScope = scope => {\n  const contextScope = useContext(GatsbyMDXScopeContext)\n  return scope || contextScope\n}\n\nexport const MDXScopeProvider = ({ __mdxScope, children }) =>\n  React.createElement(\n    GatsbyMDXScopeContext.Provider,\n    { value: __mdxScope },\n    children\n  )\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph3Desktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 12\"),React.createElement(\"defs\",{\"key\":1},[React.createElement(\"path\",{\"d\":\"M0.208232803,0.063520977 C48.9927334,34.7161591 88.2917759,59.0929028 118.10536,73.193752 C147.918945,87.2946012 186.908546,99.9458227 235.074164,111.147416 L235.074164,93.5591328 C198.037526,79.627833 165.236751,66.9766116 136.671837,55.6054686 C108.106923,44.2343257 62.6190553,25.7203431 0.208232803,0.063520977 Z\",\"id\":\"path-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0,251.842967 C47.4100659,207.646786 87.0748294,177.599101 118.994291,161.699913 C141.202829,150.637767 172.680004,136.45083 212.888223,126.386139 C224.609207,123.452209 243.821827,120.35451 270.526082,117.09304 C329.140068,119.93692 384.918641,130.159329 437.861803,147.760265 C490.804965,165.361201 570.134492,200.055435 675.850384,251.842967 C587.181723,170.150009 520.557315,114.701188 475.977162,85.4965055 C449.266551,67.9982501 411.320014,35.3552557 372.786801,18.5861969 C355.600849,11.1071364 328.951086,5.22150739 292.837512,0.929309843 C269.517477,3.65020367 253.093785,6.74790315 243.566438,10.2224083 C221.071561,18.4260107 204.130153,32.7864541 189.64715,42.7482528 C165.96308,59.0387932 132.805817,91.5646376 90.1753608,140.325786 L0,251.842967 Z\",\"id\":\"path-3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":2},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Gaps-in-attainment\",\"transform\":\"translate(-170.000000, -5333.000000)\"},React.createElement(\"g\",{\"id\":\"Group-12\",\"transform\":\"translate(170.000000, 5333.000000)\"},[React.createElement(\"polygon\",{\"id\":\"Line\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 524.021152 1102.57273 525.021152 110.223044 525.021152 110.223044 524.021152\",\"key\":0}),React.createElement(\"polygon\",{\"id\":\"Line-Copy\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 422.112961 1102.57273 423.112961 110.223044 423.112961 110.223044 422.112961\",\"key\":1}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-2\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 318.206571 1102.57273 319.206571 110.223044 319.206571 110.223044 318.206571\",\"key\":2}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-3\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 218.29658 1102.57273 219.29658 110.223044 219.29658 110.223044 218.29658\",\"key\":3}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-4\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 115.389289 1102.57273 116.389289 110.223044 116.389289 110.223044 115.389289\",\"key\":4}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-5\",\"fill\":\"#F3F3F3\",\"fillRule\":\"nonzero\",\"points\":\"1102.57273 13.4810981 1102.57273 14.4810981 110.223044 14.4810981 110.223044 13.4810981\",\"key\":5}),React.createElement(\"g\",{\"id\":\"Group-35\",\"transform\":\"translate(868.425551, 394.638164)\",\"key\":6},[React.createElement(\"mask\",{\"id\":\"mask-2\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-1\"})),React.createElement(\"use\",{\"id\":\"Path-6-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#FFBA08\",\"xlinkHref\":\"#path-1\",\"key\":1}),React.createElement(\"g\",{\"id\":\"Group-11-Copy-2\",\"mask\":\"url(#mask-2)\",\"strokeLinecap\":\"square\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(105.100579, 76.372538) rotate(-345.000000) translate(-105.100579, -76.372538) translate(-37.271158, -54.627462)\"},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.000000, -0.000000)\",\"key\":0},[React.createElement(\"line\",{\"x1\":\"2.57649727\",\"y1\":\"-7.53864595e-12\",\"x2\":\"2.57649727\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.5874273\",\"y1\":\"0\",\"x2\":\"11.5874273\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.5983574\",\"y1\":\"0\",\"x2\":\"20.5983574\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.6092874\",\"y1\":\"-3.76932298e-12\",\"x2\":\"29.6092874\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.6202175\",\"y1\":\"-1.88466149e-12\",\"x2\":\"38.6202175\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-2\",\"transform\":\"translate(216.190001, -0.000000)\",\"key\":1},[React.createElement(\"line\",{\"x1\":\"2.64881735\",\"y1\":\"0\",\"x2\":\"2.64881735\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.6597474\",\"y1\":\"0\",\"x2\":\"11.6597474\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.6706775\",\"y1\":\"0\",\"x2\":\"20.6706775\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.6816075\",\"y1\":\"0\",\"x2\":\"29.6816075\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.6925376\",\"y1\":\"0\",\"x2\":\"38.6925376\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.7034676\",\"y1\":\"0\",\"x2\":\"47.7034676\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.7143977\",\"y1\":\"0\",\"x2\":\"56.7143977\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.7253277\",\"y1\":\"0\",\"x2\":\"65.7253277\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":7})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy\",\"transform\":\"translate(45.378415, 0.000000)\",\"key\":2},[React.createElement(\"line\",{\"x1\":\"2.25273251\",\"y1\":\"0\",\"x2\":\"2.25273251\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.2636626\",\"y1\":\"0\",\"x2\":\"11.2636626\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.2745926\",\"y1\":\"0\",\"x2\":\"20.2745926\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.2855227\",\"y1\":\"0\",\"x2\":\"29.2855227\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.2964527\",\"y1\":\"0\",\"x2\":\"38.2964527\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.3073828\",\"y1\":\"0\",\"x2\":\"47.3073828\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.3183128\",\"y1\":\"0\",\"x2\":\"56.3183128\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.3292429\",\"y1\":\"0\",\"x2\":\"65.3292429\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.3401729\",\"y1\":\"0\",\"x2\":\"74.3401729\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.351103\",\"y1\":\"0\",\"x2\":\"83.351103\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.362033\",\"y1\":\"0\",\"x2\":\"92.362033\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.372963\",\"y1\":\"0\",\"x2\":\"101.372963\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.383893\",\"y1\":\"0\",\"x2\":\"110.383893\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.394823\",\"y1\":\"0\",\"x2\":\"119.394823\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.405753\",\"y1\":\"0\",\"x2\":\"128.405753\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"137.416683\",\"y1\":\"0\",\"x2\":\"137.416683\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"146.427613\",\"y1\":\"0\",\"x2\":\"146.427613\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"155.438543\",\"y1\":\"0\",\"x2\":\"155.438543\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"164.449473\",\"y1\":\"0\",\"x2\":\"164.449473\",\"y2\":\"261.047154\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":18})])]))]),React.createElement(\"g\",{\"id\":\"Group-34\",\"transform\":\"translate(159.703104, 121.883888)\",\"key\":7},[React.createElement(\"mask\",{\"id\":\"mask-4\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-3\"})),React.createElement(\"use\",{\"id\":\"Path-5-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#3772FF\",\"xlinkHref\":\"#path-3\",\"key\":1}),React.createElement(\"g\",{\"id\":\"Group-11\",\"mask\":\"url(#mask-4)\",\"strokeLinecap\":\"square\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(362.873783, 154.811644) rotate(-345.000000) translate(-362.873783, -154.811644) translate(22.180713, -47.188356)\"},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.639202, 1.069058)\",\"key\":0},[React.createElement(\"line\",{\"x1\":\"1.85928579\",\"y1\":\"0\",\"x2\":\"1.85928579\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"10.8830195\",\"y1\":\"0\",\"x2\":\"10.8830195\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"19.9067532\",\"y1\":\"0\",\"x2\":\"19.9067532\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"28.9304869\",\"y1\":\"0\",\"x2\":\"28.9304869\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"37.9542206\",\"y1\":\"0\",\"x2\":\"37.9542206\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"46.9779543\",\"y1\":\"0\",\"x2\":\"46.9779543\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.001688\",\"y1\":\"0\",\"x2\":\"56.001688\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.0254217\",\"y1\":\"0\",\"x2\":\"65.0254217\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.0491554\",\"y1\":\"0\",\"x2\":\"74.0491554\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.0728891\",\"y1\":\"0\",\"x2\":\"83.0728891\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.0966228\",\"y1\":\"0\",\"x2\":\"92.0966228\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.120356\",\"y1\":\"0\",\"x2\":\"101.120356\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.14409\",\"y1\":\"0\",\"x2\":\"110.14409\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.167824\",\"y1\":\"0\",\"x2\":\"119.167824\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.191558\",\"y1\":\"0\",\"x2\":\"128.191558\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"137.215291\",\"y1\":\"0\",\"x2\":\"137.215291\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"146.239025\",\"y1\":\"0\",\"x2\":\"146.239025\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"155.262759\",\"y1\":\"0\",\"x2\":\"155.262759\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"164.286492\",\"y1\":\"0\",\"x2\":\"164.286492\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-2\",\"transform\":\"translate(341.136468, 0.302457)\",\"key\":1},[React.createElement(\"line\",{\"x1\":\"2.65258106\",\"y1\":\"0\",\"x2\":\"2.65258106\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.6763148\",\"y1\":\"0\",\"x2\":\"11.6763148\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.7000485\",\"y1\":\"0\",\"x2\":\"20.7000485\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.7237821\",\"y1\":\"0\",\"x2\":\"29.7237821\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.7475158\",\"y1\":\"0\",\"x2\":\"38.7475158\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.7712495\",\"y1\":\"0\",\"x2\":\"47.7712495\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.7949832\",\"y1\":\"0\",\"x2\":\"56.7949832\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.8187169\",\"y1\":\"0\",\"x2\":\"65.8187169\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.8424506\",\"y1\":\"0\",\"x2\":\"74.8424506\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.8661843\",\"y1\":\"0\",\"x2\":\"83.8661843\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.889918\",\"y1\":\"0\",\"x2\":\"92.889918\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.913652\",\"y1\":\"0\",\"x2\":\"101.913652\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.937385\",\"y1\":\"0\",\"x2\":\"110.937385\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.961119\",\"y1\":\"0\",\"x2\":\"119.961119\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.984853\",\"y1\":\"0\",\"x2\":\"128.984853\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"138.008587\",\"y1\":\"0\",\"x2\":\"138.008587\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"147.03232\",\"y1\":\"0\",\"x2\":\"147.03232\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"156.056054\",\"y1\":\"0\",\"x2\":\"156.056054\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"165.079788\",\"y1\":\"0\",\"x2\":\"165.079788\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy\",\"transform\":\"translate(172.026410, 1.342879)\",\"key\":2},[React.createElement(\"line\",{\"x1\":\"2.25593342\",\"y1\":\"0\",\"x2\":\"2.25593342\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.2796671\",\"y1\":\"0\",\"x2\":\"11.2796671\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.3034008\",\"y1\":\"0\",\"x2\":\"20.3034008\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.3271345\",\"y1\":\"0\",\"x2\":\"29.3271345\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.3508682\",\"y1\":\"0\",\"x2\":\"38.3508682\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.3746019\",\"y1\":\"0\",\"x2\":\"47.3746019\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.3983356\",\"y1\":\"0\",\"x2\":\"56.3983356\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.4220693\",\"y1\":\"0\",\"x2\":\"65.4220693\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.445803\",\"y1\":\"0\",\"x2\":\"74.445803\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.4695367\",\"y1\":\"0\",\"x2\":\"83.4695367\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.4932704\",\"y1\":\"0\",\"x2\":\"92.4932704\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.517004\",\"y1\":\"0\",\"x2\":\"101.517004\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.540738\",\"y1\":\"0\",\"x2\":\"110.540738\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.564471\",\"y1\":\"0\",\"x2\":\"119.564471\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.588205\",\"y1\":\"0\",\"x2\":\"128.588205\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"137.611939\",\"y1\":\"0\",\"x2\":\"137.611939\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"146.635673\",\"y1\":\"0\",\"x2\":\"146.635673\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"155.659406\",\"y1\":\"0\",\"x2\":\"155.659406\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"164.68314\",\"y1\":\"0\",\"x2\":\"164.68314\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-3\",\"transform\":\"translate(513.560092, 0.576278)\",\"key\":3},[React.createElement(\"line\",{\"x1\":\"2.01281211\",\"y1\":\"0\",\"x2\":\"2.01281211\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"11.0365458\",\"y1\":\"0\",\"x2\":\"11.0365458\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"20.0602795\",\"y1\":\"0\",\"x2\":\"20.0602795\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"29.0840132\",\"y1\":\"0\",\"x2\":\"29.0840132\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"38.1077469\",\"y1\":\"0\",\"x2\":\"38.1077469\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"47.1314806\",\"y1\":\"0\",\"x2\":\"47.1314806\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"56.1552143\",\"y1\":\"0\",\"x2\":\"56.1552143\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"65.178948\",\"y1\":\"0\",\"x2\":\"65.178948\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"74.2026817\",\"y1\":\"0\",\"x2\":\"74.2026817\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"83.2264154\",\"y1\":\"0\",\"x2\":\"83.2264154\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"92.2501491\",\"y1\":\"1.88438563e-12\",\"x2\":\"92.2501491\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"101.273883\",\"y1\":\"0\",\"x2\":\"101.273883\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"110.297616\",\"y1\":\"0\",\"x2\":\"110.297616\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"119.32135\",\"y1\":\"0\",\"x2\":\"119.32135\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"128.345084\",\"y1\":\"0\",\"x2\":\"128.345084\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"137.368818\",\"y1\":\"0\",\"x2\":\"137.368818\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"146.392551\",\"y1\":\"0\",\"x2\":\"146.392551\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"155.416285\",\"y1\":\"0\",\"x2\":\"155.416285\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"164.440019\",\"y1\":\"-1.88438563e-12\",\"x2\":\"164.440019\",\"y2\":\"401.461852\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})])]))]),React.createElement(\"path\",{\"d\":\"M120.773279,415.01233 C233.72194,290.508883 347.601496,231.973681 462.411948,239.406722 C543.186924,244.636244 648.464739,278.291073 848.733603,379.705382 C933.1348,422.445372 1017.2257,458.062029 1101.0063,486.555356\",\"id\":\"Path-3-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M120.773279,417.166874 C170.706077,358.401551 205.76981,317.129766 225.964477,293.351521 C327.802672,173.441963 387.940304,115.541503 470.790008,124.850928 C553.639712,134.160353 611.355237,179.776536 848.733603,381.791059 C872.152154,401.720791 911.908071,431.227596 970.680921,459.990229 C999.848981,474.26468 1043.29077,489.780389 1101.0063,506.537354\",\"id\":\"Path-4-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M124.206088,550.513051 L124.206088,540.713051 L120.888088,540.713051 L120.888088,541.609051 L123.198088,541.609051 L123.198088,550.513051 L124.206088,550.513051 Z M130.268088,550.597051 C131.042755,550.597051 131.717088,550.482718 132.291088,550.254051 C132.865088,550.025385 133.306088,549.698718 133.614088,549.274051 C133.922088,548.849385 134.076088,548.352385 134.076088,547.783051 C134.076088,547.204385 133.910422,546.709718 133.579088,546.299051 C133.247755,545.888385 132.774088,545.580385 132.158088,545.375051 C132.662088,545.179051 133.049422,544.896718 133.320088,544.528051 C133.590755,544.159385 133.726088,543.723051 133.726088,543.219051 C133.726088,542.696385 133.581422,542.239051 133.292088,541.847051 C133.002755,541.455051 132.599088,541.154051 132.081088,540.944051 C131.563088,540.734051 130.958755,540.629051 130.268088,540.629051 C129.222755,540.629051 128.389755,540.862385 127.769088,541.329051 C127.148422,541.795718 126.838088,542.425718 126.838088,543.219051 C126.838088,543.723051 126.968755,544.159385 127.230088,544.528051 C127.491422,544.896718 127.874088,545.179051 128.378088,545.375051 C127.762088,545.580385 127.293088,545.886051 126.971088,546.292051 C126.649088,546.698051 126.488088,547.195051 126.488088,547.783051 C126.488088,548.651051 126.824088,549.337051 127.496088,549.841051 C128.168088,550.345051 129.092088,550.597051 130.268088,550.597051 Z M130.268088,545.011051 C129.512088,545.011051 128.919422,544.852385 128.490088,544.535051 C128.060755,544.217718 127.846088,543.788385 127.846088,543.247051 C127.846088,542.705718 128.063088,542.276385 128.497088,541.959051 C128.931088,541.641718 129.521422,541.483051 130.268088,541.483051 C131.005422,541.483051 131.595755,541.641718 132.039088,541.959051 C132.482422,542.276385 132.704088,542.710385 132.704088,543.261051 C132.704088,543.793051 132.487088,544.217718 132.053088,544.535051 C131.619088,544.852385 131.024088,545.011051 130.268088,545.011051 Z M130.268088,549.743051 C129.400088,549.743051 128.723422,549.568051 128.238088,549.218051 C127.752755,548.868051 127.510088,548.385051 127.510088,547.769051 C127.510088,547.162385 127.755088,546.684051 128.245088,546.334051 C128.735088,545.984051 129.409422,545.809051 130.268088,545.809051 C131.136088,545.809051 131.815088,545.984051 132.305088,546.334051 C132.795088,546.684051 133.040088,547.162385 133.040088,547.769051 C133.040088,548.375718 132.795088,548.856385 132.305088,549.211051 C131.815088,549.565718 131.136088,549.743051 130.268088,549.743051 Z\",\"id\":\"18\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M93.1316681,519.540954 L93.1316681,518.644954 L87.6436681,518.644954 L87.6436681,514.990954 L91.5216681,514.990954 L91.5216681,514.290954 L87.6436681,514.290954 L87.6436681,513.114954 C87.6436681,512.293621 87.8770014,511.665954 88.3436681,511.231954 C88.8103347,510.797954 89.5056681,510.580954 90.4296681,510.580954 C91.4843347,510.580954 92.3196681,510.804954 92.9356681,511.252954 L92.9356681,511.252954 L93.3136681,510.398954 C92.5950014,509.904287 91.6616681,509.656954 90.5136681,509.656954 C89.2630014,509.656954 88.3016681,509.967287 87.6296681,510.587954 C86.9576681,511.208621 86.6216681,512.050954 86.6216681,513.114954 L86.6216681,513.114954 L86.6216681,514.290954 L85.0396681,514.290954 L85.0396681,514.990954 L86.6216681,514.990954 L86.6216681,518.644954 L85.0396681,518.644954 L85.0396681,519.540954 L93.1316681,519.540954 Z M98.1716681,519.624954 C98.9276681,519.624954 99.6020014,519.424287 100.194668,519.022954 C100.787335,518.621621 101.251668,518.045287 101.587668,517.293954 C101.923668,516.542621 102.091668,515.658287 102.091668,514.640954 C102.091668,513.623621 101.923668,512.739287 101.587668,511.987954 C101.251668,511.236621 100.787335,510.660287 100.194668,510.258954 C99.6020014,509.857621 98.9276681,509.656954 98.1716681,509.656954 C97.4156681,509.656954 96.7413347,509.857621 96.1486681,510.258954 C95.5560014,510.660287 95.0940014,511.236621 94.7626681,511.987954 C94.4313347,512.739287 94.2656681,513.623621 94.2656681,514.640954 C94.2656681,515.658287 94.4313347,516.542621 94.7626681,517.293954 C95.0940014,518.045287 95.5560014,518.621621 96.1486681,519.022954 C96.7413347,519.424287 97.4156681,519.624954 98.1716681,519.624954 Z M98.1716681,518.700954 C97.6023347,518.700954 97.1006681,518.542287 96.6666681,518.224954 C96.2326681,517.907621 95.8943347,517.445621 95.6516681,516.838954 C95.4090014,516.232287 95.2876681,515.499621 95.2876681,514.640954 C95.2876681,513.782287 95.4090014,513.049621 95.6516681,512.442954 C95.8943347,511.836287 96.2326681,511.374287 96.6666681,511.056954 C97.1006681,510.739621 97.6023347,510.580954 98.1716681,510.580954 C98.7410014,510.580954 99.2426681,510.739621 99.6766681,511.056954 C100.110668,511.374287 100.449001,511.836287 100.691668,512.442954 C100.934335,513.049621 101.055668,513.782287 101.055668,514.640954 C101.055668,515.499621 100.934335,516.232287 100.691668,516.838954 C100.449001,517.445621 100.110668,517.907621 99.6766681,518.224954 C99.2426681,518.542287 98.7410014,518.700954 98.1716681,518.700954 Z\",\"id\":\"£0\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M63.7036681,418.631863 L63.7036681,417.735863 L58.2156681,417.735863 L58.2156681,414.081863 L62.0936681,414.081863 L62.0936681,413.381863 L58.2156681,413.381863 L58.2156681,412.205863 C58.2156681,411.38453 58.4490014,410.756863 58.9156681,410.322863 C59.3823347,409.888863 60.0776681,409.671863 61.0016681,409.671863 C62.0563347,409.671863 62.8916681,409.895863 63.5076681,410.343863 L63.5076681,410.343863 L63.8856681,409.489863 C63.1670014,408.995197 62.2336681,408.747863 61.0856681,408.747863 C59.8350014,408.747863 58.8736681,409.058197 58.2016681,409.678863 C57.5296681,410.29953 57.1936681,411.141863 57.1936681,412.205863 L57.1936681,412.205863 L57.1936681,413.381863 L55.6116681,413.381863 L55.6116681,414.081863 L57.1936681,414.081863 L57.1936681,417.735863 L55.6116681,417.735863 L55.6116681,418.631863 L63.7036681,418.631863 Z M67.9316681,418.715863 C68.7063347,418.715863 69.3596681,418.58753 69.8916681,418.330863 C70.4236681,418.074197 70.8226681,417.721863 71.0886681,417.273863 C71.3546681,416.825863 71.4876681,416.317197 71.4876681,415.747863 C71.4876681,414.833197 71.1633347,414.12153 70.5146681,413.612863 C69.8660014,413.104197 68.8323347,412.849863 67.4136681,412.849863 L67.4136681,412.849863 L66.1536681,412.849863 L66.4896681,409.727863 L70.9696681,409.727863 L70.9696681,408.831863 L65.6076681,408.831863 L65.1036681,413.745863 L67.1896681,413.745863 C68.3750014,413.745863 69.2173347,413.91853 69.7166681,414.263863 C70.2160014,414.609197 70.4656681,415.117863 70.4656681,415.789863 C70.4656681,416.39653 70.2440014,416.881863 69.8006681,417.245863 C69.3573347,417.609863 68.7296681,417.791863 67.9176681,417.791863 C67.3016681,417.791863 66.7276681,417.686863 66.1956681,417.476863 C65.6636681,417.266863 65.2343347,416.993863 64.9076681,416.657863 L64.9076681,416.657863 L64.4176681,417.455863 C64.8003347,417.83853 65.3066681,418.144197 65.9366681,418.372863 C66.5666681,418.60153 67.2316681,418.715863 67.9316681,418.715863 Z M73.4896681,420.675863 L74.0776681,418.743863 C74.1430014,418.575863 74.1920014,418.42653 74.2246681,418.295863 C74.2573347,418.165197 74.2736681,418.043863 74.2736681,417.931863 C74.2736681,417.717197 74.2036681,417.53753 74.0636681,417.392863 C73.9236681,417.248197 73.7463347,417.175863 73.5316681,417.175863 C73.3170014,417.175863 73.1396681,417.248197 72.9996681,417.392863 C72.8596681,417.53753 72.7896681,417.717197 72.7896681,417.931863 C72.7896681,418.109197 72.8363347,418.260863 72.9296681,418.386863 C73.0230014,418.512863 73.1443347,418.599197 73.2936681,418.645863 L73.2936681,418.645863 L72.8176681,420.675863 L73.4896681,420.675863 Z M79.6356681,418.715863 C80.3916681,418.715863 81.0660014,418.515197 81.6586681,418.113863 C82.2513347,417.71253 82.7156681,417.136197 83.0516681,416.384863 C83.3876681,415.63353 83.5556681,414.749197 83.5556681,413.731863 C83.5556681,412.71453 83.3876681,411.830197 83.0516681,411.078863 C82.7156681,410.32753 82.2513347,409.751197 81.6586681,409.349863 C81.0660014,408.94853 80.3916681,408.747863 79.6356681,408.747863 C78.8796681,408.747863 78.2053347,408.94853 77.6126681,409.349863 C77.0200014,409.751197 76.5580014,410.32753 76.2266681,411.078863 C75.8953347,411.830197 75.7296681,412.71453 75.7296681,413.731863 C75.7296681,414.749197 75.8953347,415.63353 76.2266681,416.384863 C76.5580014,417.136197 77.0200014,417.71253 77.6126681,418.113863 C78.2053347,418.515197 78.8796681,418.715863 79.6356681,418.715863 Z M79.6356681,417.791863 C79.0663347,417.791863 78.5646681,417.633197 78.1306681,417.315863 C77.6966681,416.99853 77.3583347,416.53653 77.1156681,415.929863 C76.8730014,415.323197 76.7516681,414.59053 76.7516681,413.731863 C76.7516681,412.873197 76.8730014,412.14053 77.1156681,411.533863 C77.3583347,410.927197 77.6966681,410.465197 78.1306681,410.147863 C78.5646681,409.83053 79.0663347,409.671863 79.6356681,409.671863 C80.2050014,409.671863 80.7066681,409.83053 81.1406681,410.147863 C81.5746681,410.465197 81.9130014,410.927197 82.1556681,411.533863 C82.3983347,412.14053 82.5196681,412.873197 82.5196681,413.731863 C82.5196681,414.59053 82.3983347,415.323197 82.1556681,415.929863 C81.9130014,416.53653 81.5746681,416.99853 81.1406681,417.315863 C80.7066681,417.633197 80.2050014,417.791863 79.6356681,417.791863 Z M88.9036681,418.715863 C89.6596681,418.715863 90.3340014,418.515197 90.9266681,418.113863 C91.5193347,417.71253 91.9836681,417.136197 92.3196681,416.384863 C92.6556681,415.63353 92.8236681,414.749197 92.8236681,413.731863 C92.8236681,412.71453 92.6556681,411.830197 92.3196681,411.078863 C91.9836681,410.32753 91.5193347,409.751197 90.9266681,409.349863 C90.3340014,408.94853 89.6596681,408.747863 88.9036681,408.747863 C88.1476681,408.747863 87.4733347,408.94853 86.8806681,409.349863 C86.2880014,409.751197 85.8260014,410.32753 85.4946681,411.078863 C85.1633347,411.830197 84.9976681,412.71453 84.9976681,413.731863 C84.9976681,414.749197 85.1633347,415.63353 85.4946681,416.384863 C85.8260014,417.136197 86.2880014,417.71253 86.8806681,418.113863 C87.4733347,418.515197 88.1476681,418.715863 88.9036681,418.715863 Z M88.9036681,417.791863 C88.3343347,417.791863 87.8326681,417.633197 87.3986681,417.315863 C86.9646681,416.99853 86.6263347,416.53653 86.3836681,415.929863 C86.1410014,415.323197 86.0196681,414.59053 86.0196681,413.731863 C86.0196681,412.873197 86.1410014,412.14053 86.3836681,411.533863 C86.6263347,410.927197 86.9646681,410.465197 87.3986681,410.147863 C87.8326681,409.83053 88.3343347,409.671863 88.9036681,409.671863 C89.4730014,409.671863 89.9746681,409.83053 90.4086681,410.147863 C90.8426681,410.465197 91.1810014,410.927197 91.4236681,411.533863 C91.6663347,412.14053 91.7876681,412.873197 91.7876681,413.731863 C91.7876681,414.59053 91.6663347,415.323197 91.4236681,415.929863 C91.1810014,416.53653 90.8426681,416.99853 90.4086681,417.315863 C89.9746681,417.633197 89.4730014,417.791863 88.9036681,417.791863 Z M98.1716681,418.715863 C98.9276681,418.715863 99.6020014,418.515197 100.194668,418.113863 C100.787335,417.71253 101.251668,417.136197 101.587668,416.384863 C101.923668,415.63353 102.091668,414.749197 102.091668,413.731863 C102.091668,412.71453 101.923668,411.830197 101.587668,411.078863 C101.251668,410.32753 100.787335,409.751197 100.194668,409.349863 C99.6020014,408.94853 98.9276681,408.747863 98.1716681,408.747863 C97.4156681,408.747863 96.7413347,408.94853 96.1486681,409.349863 C95.5560014,409.751197 95.0940014,410.32753 94.7626681,411.078863 C94.4313347,411.830197 94.2656681,412.71453 94.2656681,413.731863 C94.2656681,414.749197 94.4313347,415.63353 94.7626681,416.384863 C95.0940014,417.136197 95.5560014,417.71253 96.1486681,418.113863 C96.7413347,418.515197 97.4156681,418.715863 98.1716681,418.715863 Z M98.1716681,417.791863 C97.6023347,417.791863 97.1006681,417.633197 96.6666681,417.315863 C96.2326681,416.99853 95.8943347,416.53653 95.6516681,415.929863 C95.4090014,415.323197 95.2876681,414.59053 95.2876681,413.731863 C95.2876681,412.873197 95.4090014,412.14053 95.6516681,411.533863 C95.8943347,410.927197 96.2326681,410.465197 96.6666681,410.147863 C97.1006681,409.83053 97.6023347,409.671863 98.1716681,409.671863 C98.7410014,409.671863 99.2426681,409.83053 99.6766681,410.147863 C100.110668,410.465197 100.449001,410.927197 100.691668,411.533863 C100.934335,412.14053 101.055668,412.873197 101.055668,413.731863 C101.055668,414.59053 100.934335,415.323197 100.691668,415.929863 C100.449001,416.53653 100.110668,416.99853 99.6766681,417.315863 C99.2426681,417.633197 98.7410014,417.791863 98.1716681,417.791863 Z\",\"id\":\"£5,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M57.3056681,315.724572 L57.3056681,314.828572 L51.8176681,314.828572 L51.8176681,311.174572 L55.6956681,311.174572 L55.6956681,310.474572 L51.8176681,310.474572 L51.8176681,309.298572 C51.8176681,308.477239 52.0510014,307.849572 52.5176681,307.415572 C52.9843347,306.981572 53.6796681,306.764572 54.6036681,306.764572 C55.6583347,306.764572 56.4936681,306.988572 57.1096681,307.436572 L57.1096681,307.436572 L57.4876681,306.582572 C56.7690014,306.087906 55.8356681,305.840572 54.6876681,305.840572 C53.4370014,305.840572 52.4756681,306.150906 51.8036681,306.771572 C51.1316681,307.392239 50.7956681,308.234572 50.7956681,309.298572 L50.7956681,309.298572 L50.7956681,310.474572 L49.2136681,310.474572 L49.2136681,311.174572 L50.7956681,311.174572 L50.7956681,314.828572 L49.2136681,314.828572 L49.2136681,315.724572 L57.3056681,315.724572 Z M61.1556681,315.724572 L61.1556681,305.924572 L57.8376681,305.924572 L57.8376681,306.820572 L60.1476681,306.820572 L60.1476681,315.724572 L61.1556681,315.724572 Z M67.3996681,315.808572 C68.1556681,315.808572 68.8300014,315.607906 69.4226681,315.206572 C70.0153347,314.805239 70.4796681,314.228906 70.8156681,313.477572 C71.1516681,312.726239 71.3196681,311.841906 71.3196681,310.824572 C71.3196681,309.807239 71.1516681,308.922906 70.8156681,308.171572 C70.4796681,307.420239 70.0153347,306.843906 69.4226681,306.442572 C68.8300014,306.041239 68.1556681,305.840572 67.3996681,305.840572 C66.6436681,305.840572 65.9693347,306.041239 65.3766681,306.442572 C64.7840014,306.843906 64.3220014,307.420239 63.9906681,308.171572 C63.6593347,308.922906 63.4936681,309.807239 63.4936681,310.824572 C63.4936681,311.841906 63.6593347,312.726239 63.9906681,313.477572 C64.3220014,314.228906 64.7840014,314.805239 65.3766681,315.206572 C65.9693347,315.607906 66.6436681,315.808572 67.3996681,315.808572 Z M67.3996681,314.884572 C66.8303347,314.884572 66.3286681,314.725906 65.8946681,314.408572 C65.4606681,314.091239 65.1223347,313.629239 64.8796681,313.022572 C64.6370014,312.415906 64.5156681,311.683239 64.5156681,310.824572 C64.5156681,309.965906 64.6370014,309.233239 64.8796681,308.626572 C65.1223347,308.019906 65.4606681,307.557906 65.8946681,307.240572 C66.3286681,306.923239 66.8303347,306.764572 67.3996681,306.764572 C67.9690014,306.764572 68.4706681,306.923239 68.9046681,307.240572 C69.3386681,307.557906 69.6770014,308.019906 69.9196681,308.626572 C70.1623347,309.233239 70.2836681,309.965906 70.2836681,310.824572 C70.2836681,311.683239 70.1623347,312.415906 69.9196681,313.022572 C69.6770014,313.629239 69.3386681,314.091239 68.9046681,314.408572 C68.4706681,314.725906 67.9690014,314.884572 67.3996681,314.884572 Z M73.4896681,317.768572 L74.0776681,315.836572 C74.1430014,315.668572 74.1920014,315.519239 74.2246681,315.388572 C74.2573347,315.257906 74.2736681,315.136572 74.2736681,315.024572 C74.2736681,314.809906 74.2036681,314.630239 74.0636681,314.485572 C73.9236681,314.340906 73.7463347,314.268572 73.5316681,314.268572 C73.3170014,314.268572 73.1396681,314.340906 72.9996681,314.485572 C72.8596681,314.630239 72.7896681,314.809906 72.7896681,315.024572 C72.7896681,315.201906 72.8363347,315.353572 72.9296681,315.479572 C73.0230014,315.605572 73.1443347,315.691906 73.2936681,315.738572 L73.2936681,315.738572 L72.8176681,317.768572 L73.4896681,317.768572 Z M79.6356681,315.808572 C80.3916681,315.808572 81.0660014,315.607906 81.6586681,315.206572 C82.2513347,314.805239 82.7156681,314.228906 83.0516681,313.477572 C83.3876681,312.726239 83.5556681,311.841906 83.5556681,310.824572 C83.5556681,309.807239 83.3876681,308.922906 83.0516681,308.171572 C82.7156681,307.420239 82.2513347,306.843906 81.6586681,306.442572 C81.0660014,306.041239 80.3916681,305.840572 79.6356681,305.840572 C78.8796681,305.840572 78.2053347,306.041239 77.6126681,306.442572 C77.0200014,306.843906 76.5580014,307.420239 76.2266681,308.171572 C75.8953347,308.922906 75.7296681,309.807239 75.7296681,310.824572 C75.7296681,311.841906 75.8953347,312.726239 76.2266681,313.477572 C76.5580014,314.228906 77.0200014,314.805239 77.6126681,315.206572 C78.2053347,315.607906 78.8796681,315.808572 79.6356681,315.808572 Z M79.6356681,314.884572 C79.0663347,314.884572 78.5646681,314.725906 78.1306681,314.408572 C77.6966681,314.091239 77.3583347,313.629239 77.1156681,313.022572 C76.8730014,312.415906 76.7516681,311.683239 76.7516681,310.824572 C76.7516681,309.965906 76.8730014,309.233239 77.1156681,308.626572 C77.3583347,308.019906 77.6966681,307.557906 78.1306681,307.240572 C78.5646681,306.923239 79.0663347,306.764572 79.6356681,306.764572 C80.2050014,306.764572 80.7066681,306.923239 81.1406681,307.240572 C81.5746681,307.557906 81.9130014,308.019906 82.1556681,308.626572 C82.3983347,309.233239 82.5196681,309.965906 82.5196681,310.824572 C82.5196681,311.683239 82.3983347,312.415906 82.1556681,313.022572 C81.9130014,313.629239 81.5746681,314.091239 81.1406681,314.408572 C80.7066681,314.725906 80.2050014,314.884572 79.6356681,314.884572 Z M88.9036681,315.808572 C89.6596681,315.808572 90.3340014,315.607906 90.9266681,315.206572 C91.5193347,314.805239 91.9836681,314.228906 92.3196681,313.477572 C92.6556681,312.726239 92.8236681,311.841906 92.8236681,310.824572 C92.8236681,309.807239 92.6556681,308.922906 92.3196681,308.171572 C91.9836681,307.420239 91.5193347,306.843906 90.9266681,306.442572 C90.3340014,306.041239 89.6596681,305.840572 88.9036681,305.840572 C88.1476681,305.840572 87.4733347,306.041239 86.8806681,306.442572 C86.2880014,306.843906 85.8260014,307.420239 85.4946681,308.171572 C85.1633347,308.922906 84.9976681,309.807239 84.9976681,310.824572 C84.9976681,311.841906 85.1633347,312.726239 85.4946681,313.477572 C85.8260014,314.228906 86.2880014,314.805239 86.8806681,315.206572 C87.4733347,315.607906 88.1476681,315.808572 88.9036681,315.808572 Z M88.9036681,314.884572 C88.3343347,314.884572 87.8326681,314.725906 87.3986681,314.408572 C86.9646681,314.091239 86.6263347,313.629239 86.3836681,313.022572 C86.1410014,312.415906 86.0196681,311.683239 86.0196681,310.824572 C86.0196681,309.965906 86.1410014,309.233239 86.3836681,308.626572 C86.6263347,308.019906 86.9646681,307.557906 87.3986681,307.240572 C87.8326681,306.923239 88.3343347,306.764572 88.9036681,306.764572 C89.4730014,306.764572 89.9746681,306.923239 90.4086681,307.240572 C90.8426681,307.557906 91.1810014,308.019906 91.4236681,308.626572 C91.6663347,309.233239 91.7876681,309.965906 91.7876681,310.824572 C91.7876681,311.683239 91.6663347,312.415906 91.4236681,313.022572 C91.1810014,313.629239 90.8426681,314.091239 90.4086681,314.408572 C89.9746681,314.725906 89.4730014,314.884572 88.9036681,314.884572 Z M98.1716681,315.808572 C98.9276681,315.808572 99.6020014,315.607906 100.194668,315.206572 C100.787335,314.805239 101.251668,314.228906 101.587668,313.477572 C101.923668,312.726239 102.091668,311.841906 102.091668,310.824572 C102.091668,309.807239 101.923668,308.922906 101.587668,308.171572 C101.251668,307.420239 100.787335,306.843906 100.194668,306.442572 C99.6020014,306.041239 98.9276681,305.840572 98.1716681,305.840572 C97.4156681,305.840572 96.7413347,306.041239 96.1486681,306.442572 C95.5560014,306.843906 95.0940014,307.420239 94.7626681,308.171572 C94.4313347,308.922906 94.2656681,309.807239 94.2656681,310.824572 C94.2656681,311.841906 94.4313347,312.726239 94.7626681,313.477572 C95.0940014,314.228906 95.5560014,314.805239 96.1486681,315.206572 C96.7413347,315.607906 97.4156681,315.808572 98.1716681,315.808572 Z M98.1716681,314.884572 C97.6023347,314.884572 97.1006681,314.725906 96.6666681,314.408572 C96.2326681,314.091239 95.8943347,313.629239 95.6516681,313.022572 C95.4090014,312.415906 95.2876681,311.683239 95.2876681,310.824572 C95.2876681,309.965906 95.4090014,309.233239 95.6516681,308.626572 C95.8943347,308.019906 96.2326681,307.557906 96.6666681,307.240572 C97.1006681,306.923239 97.6023347,306.764572 98.1716681,306.764572 C98.7410014,306.764572 99.2426681,306.923239 99.6766681,307.240572 C100.110668,307.557906 100.449001,308.019906 100.691668,308.626572 C100.934335,309.233239 101.055668,309.965906 101.055668,310.824572 C101.055668,311.683239 100.934335,312.415906 100.691668,313.022572 C100.449001,313.629239 100.110668,314.091239 99.6766681,314.408572 C99.2426681,314.725906 98.7410014,314.884572 98.1716681,314.884572 Z\",\"id\":\"£10,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M58.6496681,212.817282 L58.6496681,211.921282 L53.1616681,211.921282 L53.1616681,208.267282 L57.0396681,208.267282 L57.0396681,207.567282 L53.1616681,207.567282 L53.1616681,206.391282 C53.1616681,205.569948 53.3950014,204.942282 53.8616681,204.508282 C54.3283347,204.074282 55.0236681,203.857282 55.9476681,203.857282 C57.0023347,203.857282 57.8376681,204.081282 58.4536681,204.529282 L58.4536681,204.529282 L58.8316681,203.675282 C58.1130014,203.180615 57.1796681,202.933282 56.0316681,202.933282 C54.7810014,202.933282 53.8196681,203.243615 53.1476681,203.864282 C52.4756681,204.484948 52.1396681,205.327282 52.1396681,206.391282 L52.1396681,206.391282 L52.1396681,207.567282 L50.5576681,207.567282 L50.5576681,208.267282 L52.1396681,208.267282 L52.1396681,211.921282 L50.5576681,211.921282 L50.5576681,212.817282 L58.6496681,212.817282 Z M62.4996681,212.817282 L62.4996681,203.017282 L59.1816681,203.017282 L59.1816681,203.913282 L61.4916681,203.913282 L61.4916681,212.817282 L62.4996681,212.817282 Z M67.9316681,212.901282 C68.7063347,212.901282 69.3596681,212.772948 69.8916681,212.516282 C70.4236681,212.259615 70.8226681,211.907282 71.0886681,211.459282 C71.3546681,211.011282 71.4876681,210.502615 71.4876681,209.933282 C71.4876681,209.018615 71.1633347,208.306948 70.5146681,207.798282 C69.8660014,207.289615 68.8323347,207.035282 67.4136681,207.035282 L67.4136681,207.035282 L66.1536681,207.035282 L66.4896681,203.913282 L70.9696681,203.913282 L70.9696681,203.017282 L65.6076681,203.017282 L65.1036681,207.931282 L67.1896681,207.931282 C68.3750014,207.931282 69.2173347,208.103948 69.7166681,208.449282 C70.2160014,208.794615 70.4656681,209.303282 70.4656681,209.975282 C70.4656681,210.581948 70.2440014,211.067282 69.8006681,211.431282 C69.3573347,211.795282 68.7296681,211.977282 67.9176681,211.977282 C67.3016681,211.977282 66.7276681,211.872282 66.1956681,211.662282 C65.6636681,211.452282 65.2343347,211.179282 64.9076681,210.843282 L64.9076681,210.843282 L64.4176681,211.641282 C64.8003347,212.023948 65.3066681,212.329615 65.9366681,212.558282 C66.5666681,212.786948 67.2316681,212.901282 67.9316681,212.901282 Z M73.4896681,214.861282 L74.0776681,212.929282 C74.1430014,212.761282 74.1920014,212.611948 74.2246681,212.481282 C74.2573347,212.350615 74.2736681,212.229282 74.2736681,212.117282 C74.2736681,211.902615 74.2036681,211.722948 74.0636681,211.578282 C73.9236681,211.433615 73.7463347,211.361282 73.5316681,211.361282 C73.3170014,211.361282 73.1396681,211.433615 72.9996681,211.578282 C72.8596681,211.722948 72.7896681,211.902615 72.7896681,212.117282 C72.7896681,212.294615 72.8363347,212.446282 72.9296681,212.572282 C73.0230014,212.698282 73.1443347,212.784615 73.2936681,212.831282 L73.2936681,212.831282 L72.8176681,214.861282 L73.4896681,214.861282 Z M79.6356681,212.901282 C80.3916681,212.901282 81.0660014,212.700615 81.6586681,212.299282 C82.2513347,211.897948 82.7156681,211.321615 83.0516681,210.570282 C83.3876681,209.818948 83.5556681,208.934615 83.5556681,207.917282 C83.5556681,206.899948 83.3876681,206.015615 83.0516681,205.264282 C82.7156681,204.512948 82.2513347,203.936615 81.6586681,203.535282 C81.0660014,203.133948 80.3916681,202.933282 79.6356681,202.933282 C78.8796681,202.933282 78.2053347,203.133948 77.6126681,203.535282 C77.0200014,203.936615 76.5580014,204.512948 76.2266681,205.264282 C75.8953347,206.015615 75.7296681,206.899948 75.7296681,207.917282 C75.7296681,208.934615 75.8953347,209.818948 76.2266681,210.570282 C76.5580014,211.321615 77.0200014,211.897948 77.6126681,212.299282 C78.2053347,212.700615 78.8796681,212.901282 79.6356681,212.901282 Z M79.6356681,211.977282 C79.0663347,211.977282 78.5646681,211.818615 78.1306681,211.501282 C77.6966681,211.183948 77.3583347,210.721948 77.1156681,210.115282 C76.8730014,209.508615 76.7516681,208.775948 76.7516681,207.917282 C76.7516681,207.058615 76.8730014,206.325948 77.1156681,205.719282 C77.3583347,205.112615 77.6966681,204.650615 78.1306681,204.333282 C78.5646681,204.015948 79.0663347,203.857282 79.6356681,203.857282 C80.2050014,203.857282 80.7066681,204.015948 81.1406681,204.333282 C81.5746681,204.650615 81.9130014,205.112615 82.1556681,205.719282 C82.3983347,206.325948 82.5196681,207.058615 82.5196681,207.917282 C82.5196681,208.775948 82.3983347,209.508615 82.1556681,210.115282 C81.9130014,210.721948 81.5746681,211.183948 81.1406681,211.501282 C80.7066681,211.818615 80.2050014,211.977282 79.6356681,211.977282 Z M88.9036681,212.901282 C89.6596681,212.901282 90.3340014,212.700615 90.9266681,212.299282 C91.5193347,211.897948 91.9836681,211.321615 92.3196681,210.570282 C92.6556681,209.818948 92.8236681,208.934615 92.8236681,207.917282 C92.8236681,206.899948 92.6556681,206.015615 92.3196681,205.264282 C91.9836681,204.512948 91.5193347,203.936615 90.9266681,203.535282 C90.3340014,203.133948 89.6596681,202.933282 88.9036681,202.933282 C88.1476681,202.933282 87.4733347,203.133948 86.8806681,203.535282 C86.2880014,203.936615 85.8260014,204.512948 85.4946681,205.264282 C85.1633347,206.015615 84.9976681,206.899948 84.9976681,207.917282 C84.9976681,208.934615 85.1633347,209.818948 85.4946681,210.570282 C85.8260014,211.321615 86.2880014,211.897948 86.8806681,212.299282 C87.4733347,212.700615 88.1476681,212.901282 88.9036681,212.901282 Z M88.9036681,211.977282 C88.3343347,211.977282 87.8326681,211.818615 87.3986681,211.501282 C86.9646681,211.183948 86.6263347,210.721948 86.3836681,210.115282 C86.1410014,209.508615 86.0196681,208.775948 86.0196681,207.917282 C86.0196681,207.058615 86.1410014,206.325948 86.3836681,205.719282 C86.6263347,205.112615 86.9646681,204.650615 87.3986681,204.333282 C87.8326681,204.015948 88.3343347,203.857282 88.9036681,203.857282 C89.4730014,203.857282 89.9746681,204.015948 90.4086681,204.333282 C90.8426681,204.650615 91.1810014,205.112615 91.4236681,205.719282 C91.6663347,206.325948 91.7876681,207.058615 91.7876681,207.917282 C91.7876681,208.775948 91.6663347,209.508615 91.4236681,210.115282 C91.1810014,210.721948 90.8426681,211.183948 90.4086681,211.501282 C89.9746681,211.818615 89.4730014,211.977282 88.9036681,211.977282 Z M98.1716681,212.901282 C98.9276681,212.901282 99.6020014,212.700615 100.194668,212.299282 C100.787335,211.897948 101.251668,211.321615 101.587668,210.570282 C101.923668,209.818948 102.091668,208.934615 102.091668,207.917282 C102.091668,206.899948 101.923668,206.015615 101.587668,205.264282 C101.251668,204.512948 100.787335,203.936615 100.194668,203.535282 C99.6020014,203.133948 98.9276681,202.933282 98.1716681,202.933282 C97.4156681,202.933282 96.7413347,203.133948 96.1486681,203.535282 C95.5560014,203.936615 95.0940014,204.512948 94.7626681,205.264282 C94.4313347,206.015615 94.2656681,206.899948 94.2656681,207.917282 C94.2656681,208.934615 94.4313347,209.818948 94.7626681,210.570282 C95.0940014,211.321615 95.5560014,211.897948 96.1486681,212.299282 C96.7413347,212.700615 97.4156681,212.901282 98.1716681,212.901282 Z M98.1716681,211.977282 C97.6023347,211.977282 97.1006681,211.818615 96.6666681,211.501282 C96.2326681,211.183948 95.8943347,210.721948 95.6516681,210.115282 C95.4090014,209.508615 95.2876681,208.775948 95.2876681,207.917282 C95.2876681,207.058615 95.4090014,206.325948 95.6516681,205.719282 C95.8943347,205.112615 96.2326681,204.650615 96.6666681,204.333282 C97.1006681,204.015948 97.6023347,203.857282 98.1716681,203.857282 C98.7410014,203.857282 99.2426681,204.015948 99.6766681,204.333282 C100.110668,204.650615 100.449001,205.112615 100.691668,205.719282 C100.934335,206.325948 101.055668,207.058615 101.055668,207.917282 C101.055668,208.775948 100.934335,209.508615 100.691668,210.115282 C100.449001,210.721948 100.110668,211.183948 99.6766681,211.501282 C99.2426681,211.818615 98.7410014,211.977282 98.1716681,211.977282 Z\",\"id\":\"£15,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":14}),React.createElement(\"path\",{\"d\":\"M54.4076681,112.907291 L54.4076681,112.011291 L48.9196681,112.011291 L48.9196681,108.357291 L52.7976681,108.357291 L52.7976681,107.657291 L48.9196681,107.657291 L48.9196681,106.481291 C48.9196681,105.659957 49.1530014,105.032291 49.6196681,104.598291 C50.0863347,104.164291 50.7816681,103.947291 51.7056681,103.947291 C52.7603347,103.947291 53.5956681,104.171291 54.2116681,104.619291 L54.2116681,104.619291 L54.5896681,103.765291 C53.8710014,103.270624 52.9376681,103.023291 51.7896681,103.023291 C50.5390014,103.023291 49.5776681,103.333624 48.9056681,103.954291 C48.2336681,104.574957 47.8976681,105.417291 47.8976681,106.481291 L47.8976681,106.481291 L47.8976681,107.657291 L46.3156681,107.657291 L46.3156681,108.357291 L47.8976681,108.357291 L47.8976681,112.011291 L46.3156681,112.011291 L46.3156681,112.907291 L54.4076681,112.907291 Z M62.2336681,112.907291 L62.2336681,112.011291 L56.8436681,112.011291 L60.1756681,108.735291 C60.8010014,108.128624 61.2256681,107.591957 61.4496681,107.125291 C61.6736681,106.658624 61.7856681,106.173291 61.7856681,105.669291 C61.7856681,104.847957 61.4940014,104.201624 60.9106681,103.730291 C60.3273347,103.258957 59.5363347,103.023291 58.5376681,103.023291 C57.7910014,103.023291 57.1213347,103.144624 56.5286681,103.387291 C55.9360014,103.629957 55.4483347,103.975291 55.0656681,104.423291 L55.0656681,104.423291 L55.7796681,105.039291 C56.4143347,104.311291 57.3056681,103.947291 58.4536681,103.947291 C59.1910014,103.947291 59.7580014,104.108291 60.1546681,104.430291 C60.5513347,104.752291 60.7496681,105.202624 60.7496681,105.781291 C60.7496681,106.154624 60.6586681,106.525624 60.4766681,106.894291 C60.2946681,107.262957 59.9470014,107.699291 59.4336681,108.203291 L59.4336681,108.203291 L55.3596681,112.193291 L55.3596681,112.907291 L62.2336681,112.907291 Z M67.3996681,112.991291 C68.1556681,112.991291 68.8300014,112.790624 69.4226681,112.389291 C70.0153347,111.987957 70.4796681,111.411624 70.8156681,110.660291 C71.1516681,109.908957 71.3196681,109.024624 71.3196681,108.007291 C71.3196681,106.989957 71.1516681,106.105624 70.8156681,105.354291 C70.4796681,104.602957 70.0153347,104.026624 69.4226681,103.625291 C68.8300014,103.223957 68.1556681,103.023291 67.3996681,103.023291 C66.6436681,103.023291 65.9693347,103.223957 65.3766681,103.625291 C64.7840014,104.026624 64.3220014,104.602957 63.9906681,105.354291 C63.6593347,106.105624 63.4936681,106.989957 63.4936681,108.007291 C63.4936681,109.024624 63.6593347,109.908957 63.9906681,110.660291 C64.3220014,111.411624 64.7840014,111.987957 65.3766681,112.389291 C65.9693347,112.790624 66.6436681,112.991291 67.3996681,112.991291 Z M67.3996681,112.067291 C66.8303347,112.067291 66.3286681,111.908624 65.8946681,111.591291 C65.4606681,111.273957 65.1223347,110.811957 64.8796681,110.205291 C64.6370014,109.598624 64.5156681,108.865957 64.5156681,108.007291 C64.5156681,107.148624 64.6370014,106.415957 64.8796681,105.809291 C65.1223347,105.202624 65.4606681,104.740624 65.8946681,104.423291 C66.3286681,104.105957 66.8303347,103.947291 67.3996681,103.947291 C67.9690014,103.947291 68.4706681,104.105957 68.9046681,104.423291 C69.3386681,104.740624 69.6770014,105.202624 69.9196681,105.809291 C70.1623347,106.415957 70.2836681,107.148624 70.2836681,108.007291 C70.2836681,108.865957 70.1623347,109.598624 69.9196681,110.205291 C69.6770014,110.811957 69.3386681,111.273957 68.9046681,111.591291 C68.4706681,111.908624 67.9690014,112.067291 67.3996681,112.067291 Z M73.4896681,114.951291 L74.0776681,113.019291 C74.1430014,112.851291 74.1920014,112.701957 74.2246681,112.571291 C74.2573347,112.440624 74.2736681,112.319291 74.2736681,112.207291 C74.2736681,111.992624 74.2036681,111.812957 74.0636681,111.668291 C73.9236681,111.523624 73.7463347,111.451291 73.5316681,111.451291 C73.3170014,111.451291 73.1396681,111.523624 72.9996681,111.668291 C72.8596681,111.812957 72.7896681,111.992624 72.7896681,112.207291 C72.7896681,112.384624 72.8363347,112.536291 72.9296681,112.662291 C73.0230014,112.788291 73.1443347,112.874624 73.2936681,112.921291 L73.2936681,112.921291 L72.8176681,114.951291 L73.4896681,114.951291 Z M79.6356681,112.991291 C80.3916681,112.991291 81.0660014,112.790624 81.6586681,112.389291 C82.2513347,111.987957 82.7156681,111.411624 83.0516681,110.660291 C83.3876681,109.908957 83.5556681,109.024624 83.5556681,108.007291 C83.5556681,106.989957 83.3876681,106.105624 83.0516681,105.354291 C82.7156681,104.602957 82.2513347,104.026624 81.6586681,103.625291 C81.0660014,103.223957 80.3916681,103.023291 79.6356681,103.023291 C78.8796681,103.023291 78.2053347,103.223957 77.6126681,103.625291 C77.0200014,104.026624 76.5580014,104.602957 76.2266681,105.354291 C75.8953347,106.105624 75.7296681,106.989957 75.7296681,108.007291 C75.7296681,109.024624 75.8953347,109.908957 76.2266681,110.660291 C76.5580014,111.411624 77.0200014,111.987957 77.6126681,112.389291 C78.2053347,112.790624 78.8796681,112.991291 79.6356681,112.991291 Z M79.6356681,112.067291 C79.0663347,112.067291 78.5646681,111.908624 78.1306681,111.591291 C77.6966681,111.273957 77.3583347,110.811957 77.1156681,110.205291 C76.8730014,109.598624 76.7516681,108.865957 76.7516681,108.007291 C76.7516681,107.148624 76.8730014,106.415957 77.1156681,105.809291 C77.3583347,105.202624 77.6966681,104.740624 78.1306681,104.423291 C78.5646681,104.105957 79.0663347,103.947291 79.6356681,103.947291 C80.2050014,103.947291 80.7066681,104.105957 81.1406681,104.423291 C81.5746681,104.740624 81.9130014,105.202624 82.1556681,105.809291 C82.3983347,106.415957 82.5196681,107.148624 82.5196681,108.007291 C82.5196681,108.865957 82.3983347,109.598624 82.1556681,110.205291 C81.9130014,110.811957 81.5746681,111.273957 81.1406681,111.591291 C80.7066681,111.908624 80.2050014,112.067291 79.6356681,112.067291 Z M88.9036681,112.991291 C89.6596681,112.991291 90.3340014,112.790624 90.9266681,112.389291 C91.5193347,111.987957 91.9836681,111.411624 92.3196681,110.660291 C92.6556681,109.908957 92.8236681,109.024624 92.8236681,108.007291 C92.8236681,106.989957 92.6556681,106.105624 92.3196681,105.354291 C91.9836681,104.602957 91.5193347,104.026624 90.9266681,103.625291 C90.3340014,103.223957 89.6596681,103.023291 88.9036681,103.023291 C88.1476681,103.023291 87.4733347,103.223957 86.8806681,103.625291 C86.2880014,104.026624 85.8260014,104.602957 85.4946681,105.354291 C85.1633347,106.105624 84.9976681,106.989957 84.9976681,108.007291 C84.9976681,109.024624 85.1633347,109.908957 85.4946681,110.660291 C85.8260014,111.411624 86.2880014,111.987957 86.8806681,112.389291 C87.4733347,112.790624 88.1476681,112.991291 88.9036681,112.991291 Z M88.9036681,112.067291 C88.3343347,112.067291 87.8326681,111.908624 87.3986681,111.591291 C86.9646681,111.273957 86.6263347,110.811957 86.3836681,110.205291 C86.1410014,109.598624 86.0196681,108.865957 86.0196681,108.007291 C86.0196681,107.148624 86.1410014,106.415957 86.3836681,105.809291 C86.6263347,105.202624 86.9646681,104.740624 87.3986681,104.423291 C87.8326681,104.105957 88.3343347,103.947291 88.9036681,103.947291 C89.4730014,103.947291 89.9746681,104.105957 90.4086681,104.423291 C90.8426681,104.740624 91.1810014,105.202624 91.4236681,105.809291 C91.6663347,106.415957 91.7876681,107.148624 91.7876681,108.007291 C91.7876681,108.865957 91.6663347,109.598624 91.4236681,110.205291 C91.1810014,110.811957 90.8426681,111.273957 90.4086681,111.591291 C89.9746681,111.908624 89.4730014,112.067291 88.9036681,112.067291 Z M98.1716681,112.991291 C98.9276681,112.991291 99.6020014,112.790624 100.194668,112.389291 C100.787335,111.987957 101.251668,111.411624 101.587668,110.660291 C101.923668,109.908957 102.091668,109.024624 102.091668,108.007291 C102.091668,106.989957 101.923668,106.105624 101.587668,105.354291 C101.251668,104.602957 100.787335,104.026624 100.194668,103.625291 C99.6020014,103.223957 98.9276681,103.023291 98.1716681,103.023291 C97.4156681,103.023291 96.7413347,103.223957 96.1486681,103.625291 C95.5560014,104.026624 95.0940014,104.602957 94.7626681,105.354291 C94.4313347,106.105624 94.2656681,106.989957 94.2656681,108.007291 C94.2656681,109.024624 94.4313347,109.908957 94.7626681,110.660291 C95.0940014,111.411624 95.5560014,111.987957 96.1486681,112.389291 C96.7413347,112.790624 97.4156681,112.991291 98.1716681,112.991291 Z M98.1716681,112.067291 C97.6023347,112.067291 97.1006681,111.908624 96.6666681,111.591291 C96.2326681,111.273957 95.8943347,110.811957 95.6516681,110.205291 C95.4090014,109.598624 95.2876681,108.865957 95.2876681,108.007291 C95.2876681,107.148624 95.4090014,106.415957 95.6516681,105.809291 C95.8943347,105.202624 96.2326681,104.740624 96.6666681,104.423291 C97.1006681,104.105957 97.6023347,103.947291 98.1716681,103.947291 C98.7410014,103.947291 99.2426681,104.105957 99.6766681,104.423291 C100.110668,104.740624 100.449001,105.202624 100.691668,105.809291 C100.934335,106.415957 101.055668,107.148624 101.055668,108.007291 C101.055668,108.865957 100.934335,109.598624 100.691668,110.205291 C100.449001,110.811957 100.110668,111.273957 99.6766681,111.591291 C99.2426681,111.908624 98.7410014,112.067291 98.1716681,112.067291 Z\",\"id\":\"£20,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M55.7516681,10 L55.7516681,9.104 L50.2636681,9.104 L50.2636681,5.45 L54.1416681,5.45 L54.1416681,4.75 L50.2636681,4.75 L50.2636681,3.574 C50.2636681,2.75266667 50.4970014,2.125 50.9636681,1.691 C51.4303347,1.257 52.1256681,1.04 53.0496681,1.04 C54.1043347,1.04 54.9396681,1.264 55.5556681,1.712 L55.5556681,1.712 L55.9336681,0.858 C55.2150014,0.363333333 54.2816681,0.116 53.1336681,0.116 C51.8830014,0.116 50.9216681,0.426333333 50.2496681,1.047 C49.5776681,1.66766667 49.2416681,2.51 49.2416681,3.574 L49.2416681,3.574 L49.2416681,4.75 L47.6596681,4.75 L47.6596681,5.45 L49.2416681,5.45 L49.2416681,9.104 L47.6596681,9.104 L47.6596681,10 L55.7516681,10 Z M63.5776681,10 L63.5776681,9.104 L58.1876681,9.104 L61.5196681,5.828 C62.1450014,5.22133333 62.5696681,4.68466667 62.7936681,4.218 C63.0176681,3.75133333 63.1296681,3.266 63.1296681,2.762 C63.1296681,1.94066667 62.8380014,1.29433333 62.2546681,0.823 C61.6713347,0.351666667 60.8803347,0.116 59.8816681,0.116 C59.1350014,0.116 58.4653347,0.237333333 57.8726681,0.48 C57.2800014,0.722666667 56.7923347,1.068 56.4096681,1.516 L56.4096681,1.516 L57.1236681,2.132 C57.7583347,1.404 58.6496681,1.04 59.7976681,1.04 C60.5350014,1.04 61.1020014,1.201 61.4986681,1.523 C61.8953347,1.845 62.0936681,2.29533333 62.0936681,2.874 C62.0936681,3.24733333 62.0026681,3.61833333 61.8206681,3.987 C61.6386681,4.35566667 61.2910014,4.792 60.7776681,5.296 L60.7776681,5.296 L56.7036681,9.286 L56.7036681,10 L63.5776681,10 Z M67.9316681,10.084 C68.7063347,10.084 69.3596681,9.95566667 69.8916681,9.699 C70.4236681,9.44233333 70.8226681,9.09 71.0886681,8.642 C71.3546681,8.194 71.4876681,7.68533333 71.4876681,7.116 C71.4876681,6.20133333 71.1633347,5.48966667 70.5146681,4.981 C69.8660014,4.47233333 68.8323347,4.218 67.4136681,4.218 L67.4136681,4.218 L66.1536681,4.218 L66.4896681,1.096 L70.9696681,1.096 L70.9696681,0.2 L65.6076681,0.2 L65.1036681,5.114 L67.1896681,5.114 C68.3750014,5.114 69.2173347,5.28666667 69.7166681,5.632 C70.2160014,5.97733333 70.4656681,6.486 70.4656681,7.158 C70.4656681,7.76466667 70.2440014,8.25 69.8006681,8.614 C69.3573347,8.978 68.7296681,9.16 67.9176681,9.16 C67.3016681,9.16 66.7276681,9.055 66.1956681,8.845 C65.6636681,8.635 65.2343347,8.362 64.9076681,8.026 L64.9076681,8.026 L64.4176681,8.824 C64.8003347,9.20666667 65.3066681,9.51233333 65.9366681,9.741 C66.5666681,9.96966667 67.2316681,10.084 67.9316681,10.084 Z M73.4896681,12.044 L74.0776681,10.112 C74.1430014,9.944 74.1920014,9.79466667 74.2246681,9.664 C74.2573347,9.53333333 74.2736681,9.412 74.2736681,9.3 C74.2736681,9.08533333 74.2036681,8.90566667 74.0636681,8.761 C73.9236681,8.61633333 73.7463347,8.544 73.5316681,8.544 C73.3170014,8.544 73.1396681,8.61633333 72.9996681,8.761 C72.8596681,8.90566667 72.7896681,9.08533333 72.7896681,9.3 C72.7896681,9.47733333 72.8363347,9.629 72.9296681,9.755 C73.0230014,9.881 73.1443347,9.96733333 73.2936681,10.014 L73.2936681,10.014 L72.8176681,12.044 L73.4896681,12.044 Z M79.6356681,10.084 C80.3916681,10.084 81.0660014,9.88333333 81.6586681,9.482 C82.2513347,9.08066667 82.7156681,8.50433333 83.0516681,7.753 C83.3876681,7.00166667 83.5556681,6.11733333 83.5556681,5.1 C83.5556681,4.08266667 83.3876681,3.19833333 83.0516681,2.447 C82.7156681,1.69566667 82.2513347,1.11933333 81.6586681,0.718 C81.0660014,0.316666667 80.3916681,0.116 79.6356681,0.116 C78.8796681,0.116 78.2053347,0.316666667 77.6126681,0.718 C77.0200014,1.11933333 76.5580014,1.69566667 76.2266681,2.447 C75.8953347,3.19833333 75.7296681,4.08266667 75.7296681,5.1 C75.7296681,6.11733333 75.8953347,7.00166667 76.2266681,7.753 C76.5580014,8.50433333 77.0200014,9.08066667 77.6126681,9.482 C78.2053347,9.88333333 78.8796681,10.084 79.6356681,10.084 Z M79.6356681,9.16 C79.0663347,9.16 78.5646681,9.00133333 78.1306681,8.684 C77.6966681,8.36666667 77.3583347,7.90466667 77.1156681,7.298 C76.8730014,6.69133333 76.7516681,5.95866667 76.7516681,5.1 C76.7516681,4.24133333 76.8730014,3.50866667 77.1156681,2.902 C77.3583347,2.29533333 77.6966681,1.83333333 78.1306681,1.516 C78.5646681,1.19866667 79.0663347,1.04 79.6356681,1.04 C80.2050014,1.04 80.7066681,1.19866667 81.1406681,1.516 C81.5746681,1.83333333 81.9130014,2.29533333 82.1556681,2.902 C82.3983347,3.50866667 82.5196681,4.24133333 82.5196681,5.1 C82.5196681,5.95866667 82.3983347,6.69133333 82.1556681,7.298 C81.9130014,7.90466667 81.5746681,8.36666667 81.1406681,8.684 C80.7066681,9.00133333 80.2050014,9.16 79.6356681,9.16 Z M88.9036681,10.084 C89.6596681,10.084 90.3340014,9.88333333 90.9266681,9.482 C91.5193347,9.08066667 91.9836681,8.50433333 92.3196681,7.753 C92.6556681,7.00166667 92.8236681,6.11733333 92.8236681,5.1 C92.8236681,4.08266667 92.6556681,3.19833333 92.3196681,2.447 C91.9836681,1.69566667 91.5193347,1.11933333 90.9266681,0.718 C90.3340014,0.316666667 89.6596681,0.116 88.9036681,0.116 C88.1476681,0.116 87.4733347,0.316666667 86.8806681,0.718 C86.2880014,1.11933333 85.8260014,1.69566667 85.4946681,2.447 C85.1633347,3.19833333 84.9976681,4.08266667 84.9976681,5.1 C84.9976681,6.11733333 85.1633347,7.00166667 85.4946681,7.753 C85.8260014,8.50433333 86.2880014,9.08066667 86.8806681,9.482 C87.4733347,9.88333333 88.1476681,10.084 88.9036681,10.084 Z M88.9036681,9.16 C88.3343347,9.16 87.8326681,9.00133333 87.3986681,8.684 C86.9646681,8.36666667 86.6263347,7.90466667 86.3836681,7.298 C86.1410014,6.69133333 86.0196681,5.95866667 86.0196681,5.1 C86.0196681,4.24133333 86.1410014,3.50866667 86.3836681,2.902 C86.6263347,2.29533333 86.9646681,1.83333333 87.3986681,1.516 C87.8326681,1.19866667 88.3343347,1.04 88.9036681,1.04 C89.4730014,1.04 89.9746681,1.19866667 90.4086681,1.516 C90.8426681,1.83333333 91.1810014,2.29533333 91.4236681,2.902 C91.6663347,3.50866667 91.7876681,4.24133333 91.7876681,5.1 C91.7876681,5.95866667 91.6663347,6.69133333 91.4236681,7.298 C91.1810014,7.90466667 90.8426681,8.36666667 90.4086681,8.684 C89.9746681,9.00133333 89.4730014,9.16 88.9036681,9.16 Z M98.1716681,10.084 C98.9276681,10.084 99.6020014,9.88333333 100.194668,9.482 C100.787335,9.08066667 101.251668,8.50433333 101.587668,7.753 C101.923668,7.00166667 102.091668,6.11733333 102.091668,5.1 C102.091668,4.08266667 101.923668,3.19833333 101.587668,2.447 C101.251668,1.69566667 100.787335,1.11933333 100.194668,0.718 C99.6020014,0.316666667 98.9276681,0.116 98.1716681,0.116 C97.4156681,0.116 96.7413347,0.316666667 96.1486681,0.718 C95.5560014,1.11933333 95.0940014,1.69566667 94.7626681,2.447 C94.4313347,3.19833333 94.2656681,4.08266667 94.2656681,5.1 C94.2656681,6.11733333 94.4313347,7.00166667 94.7626681,7.753 C95.0940014,8.50433333 95.5560014,9.08066667 96.1486681,9.482 C96.7413347,9.88333333 97.4156681,10.084 98.1716681,10.084 Z M98.1716681,9.16 C97.6023347,9.16 97.1006681,9.00133333 96.6666681,8.684 C96.2326681,8.36666667 95.8943347,7.90466667 95.6516681,7.298 C95.4090014,6.69133333 95.2876681,5.95866667 95.2876681,5.1 C95.2876681,4.24133333 95.4090014,3.50866667 95.6516681,2.902 C95.8943347,2.29533333 96.2326681,1.83333333 96.6666681,1.516 C97.1006681,1.19866667 97.6023347,1.04 98.1716681,1.04 C98.7410014,1.04 99.2426681,1.19866667 99.6766681,1.516 C100.110668,1.83333333 100.449001,2.29533333 100.691668,2.902 C100.934335,3.50866667 101.055668,4.24133333 101.055668,5.1 C101.055668,5.95866667 100.934335,6.69133333 100.691668,7.298 C100.449001,7.90466667 100.110668,8.36666667 99.6766681,8.684 C99.2426681,9.00133333 98.7410014,9.16 98.1716681,9.16 Z\",\"id\":\"£25,000\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M209.114741,550.513051 L209.114741,549.617051 L203.724741,549.617051 L207.056741,546.341051 C207.682074,545.734385 208.106741,545.197718 208.330741,544.731051 C208.554741,544.264385 208.666741,543.779051 208.666741,543.275051 C208.666741,542.453718 208.375074,541.807385 207.791741,541.336051 C207.208407,540.864718 206.417407,540.629051 205.418741,540.629051 C204.672074,540.629051 204.002407,540.750385 203.409741,540.993051 C202.817074,541.235718 202.329407,541.581051 201.946741,542.029051 L201.946741,542.029051 L202.660741,542.645051 C203.295407,541.917051 204.186741,541.553051 205.334741,541.553051 C206.072074,541.553051 206.639074,541.714051 207.035741,542.036051 C207.432407,542.358051 207.630741,542.808385 207.630741,543.387051 C207.630741,543.760385 207.539741,544.131385 207.357741,544.500051 C207.175741,544.868718 206.828074,545.305051 206.314741,545.809051 L206.314741,545.809051 L202.240741,549.799051 L202.240741,550.513051 L209.114741,550.513051 Z M217.066741,550.513051 L217.066741,549.617051 L211.676741,549.617051 L215.008741,546.341051 C215.634074,545.734385 216.058741,545.197718 216.282741,544.731051 C216.506741,544.264385 216.618741,543.779051 216.618741,543.275051 C216.618741,542.453718 216.327074,541.807385 215.743741,541.336051 C215.160407,540.864718 214.369407,540.629051 213.370741,540.629051 C212.624074,540.629051 211.954407,540.750385 211.361741,540.993051 C210.769074,541.235718 210.281407,541.581051 209.898741,542.029051 L209.898741,542.029051 L210.612741,542.645051 C211.247407,541.917051 212.138741,541.553051 213.286741,541.553051 C214.024074,541.553051 214.591074,541.714051 214.987741,542.036051 C215.384407,542.358051 215.582741,542.808385 215.582741,543.387051 C215.582741,543.760385 215.491741,544.131385 215.309741,544.500051 C215.127741,544.868718 214.780074,545.305051 214.266741,545.809051 L214.266741,545.809051 L210.192741,549.799051 L210.192741,550.513051 L217.066741,550.513051 Z\",\"id\":\"22\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":17}),React.createElement(\"path\",{\"d\":\"M289.394992,550.513051 L289.394992,549.617051 L284.004992,549.617051 L287.336992,546.341051 C287.962325,545.734385 288.386992,545.197718 288.610992,544.731051 C288.834992,544.264385 288.946992,543.779051 288.946992,543.275051 C288.946992,542.453718 288.655325,541.807385 288.071992,541.336051 C287.488658,540.864718 286.697658,540.629051 285.698992,540.629051 C284.952325,540.629051 284.282658,540.750385 283.689992,540.993051 C283.097325,541.235718 282.609658,541.581051 282.226992,542.029051 L282.226992,542.029051 L282.940992,542.645051 C283.575658,541.917051 284.466992,541.553051 285.614992,541.553051 C286.352325,541.553051 286.919325,541.714051 287.315992,542.036051 C287.712658,542.358051 287.910992,542.808385 287.910992,543.387051 C287.910992,543.760385 287.819992,544.131385 287.637992,544.500051 C287.455992,544.868718 287.108325,545.305051 286.594992,545.809051 L286.594992,545.809051 L282.520992,549.799051 L282.520992,550.513051 L289.394992,550.513051 Z M294.672992,550.597051 C295.307658,550.597051 295.879325,550.473385 296.387992,550.226051 C296.896658,549.978718 297.295658,549.626385 297.584992,549.169051 C297.874325,548.711718 298.018992,548.184385 298.018992,547.587051 C298.018992,546.999051 297.878992,546.483385 297.598992,546.040051 C297.318992,545.596718 296.929325,545.253718 296.429992,545.011051 C295.930658,544.768385 295.358992,544.647051 294.714992,544.647051 C294.024325,544.647051 293.412992,544.794051 292.880992,545.088051 C292.348992,545.382051 291.961658,545.795051 291.718992,546.327051 C291.690992,546.028385 291.676992,545.762385 291.676992,545.529051 C291.676992,544.222385 291.984992,543.226051 292.600992,542.540051 C293.216992,541.854051 294.066325,541.511051 295.148992,541.511051 C295.951658,541.511051 296.586325,541.665051 297.052992,541.973051 L297.052992,541.973051 L297.458992,541.161051 C296.880325,540.806385 296.105658,540.629051 295.134992,540.629051 C294.238992,540.629051 293.454992,540.822718 292.782992,541.210051 C292.110992,541.597385 291.588325,542.169051 291.214992,542.925051 C290.841658,543.681051 290.654992,544.605051 290.654992,545.697051 C290.654992,547.255718 291.000325,548.462051 291.690992,549.316051 C292.381658,550.170051 293.375658,550.597051 294.672992,550.597051 Z M294.630992,549.743051 C294.089658,549.743051 293.622992,549.645051 293.230992,549.449051 C292.838992,549.253051 292.542658,548.996385 292.341992,548.679051 C292.141325,548.361718 292.040992,548.016385 292.040992,547.643051 C292.040992,547.241718 292.148325,546.877718 292.362992,546.551051 C292.577658,546.224385 292.873992,545.967718 293.251992,545.781051 C293.629992,545.594385 294.066325,545.501051 294.560992,545.501051 C295.316992,545.501051 295.916658,545.692385 296.359992,546.075051 C296.803325,546.457718 297.024992,546.971051 297.024992,547.615051 C297.024992,548.259051 296.803325,548.774718 296.359992,549.162051 C295.916658,549.549385 295.340325,549.743051 294.630992,549.743051 Z\",\"id\":\"26\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":18}),React.createElement(\"path\",{\"d\":\"M370.788246,550.597051 C371.553579,550.597051 372.202246,550.471051 372.734246,550.219051 C373.266246,549.967051 373.667579,549.624051 373.938246,549.190051 C374.208912,548.756051 374.344246,548.259051 374.344246,547.699051 C374.344246,546.896385 374.075912,546.245385 373.539246,545.746051 C373.002579,545.246718 372.220912,544.969051 371.194246,544.913051 L371.194246,544.913051 L373.966246,541.427051 L373.966246,540.713051 L367.666246,540.713051 L367.666246,541.609051 L372.678246,541.609051 L369.962246,545.011051 L369.962246,545.753051 L370.662246,545.753051 C371.548912,545.753051 372.211579,545.925718 372.650246,546.271051 C373.088912,546.616385 373.308246,547.092385 373.308246,547.699051 C373.308246,548.315051 373.088912,548.798051 372.650246,549.148051 C372.211579,549.498051 371.590912,549.673051 370.788246,549.673051 C370.172246,549.673051 369.593579,549.568051 369.052246,549.358051 C368.510912,549.148051 368.076912,548.875051 367.750246,548.539051 L367.750246,548.539051 L367.260246,549.337051 C367.642912,549.719718 368.149246,550.025385 368.779246,550.254051 C369.409246,550.482718 370.078912,550.597051 370.788246,550.597051 Z M379.664246,550.597051 C380.420246,550.597051 381.094579,550.396385 381.687246,549.995051 C382.279912,549.593718 382.744246,549.017385 383.080246,548.266051 C383.416246,547.514718 383.584246,546.630385 383.584246,545.613051 C383.584246,544.595718 383.416246,543.711385 383.080246,542.960051 C382.744246,542.208718 382.279912,541.632385 381.687246,541.231051 C381.094579,540.829718 380.420246,540.629051 379.664246,540.629051 C378.908246,540.629051 378.233912,540.829718 377.641246,541.231051 C377.048579,541.632385 376.586579,542.208718 376.255246,542.960051 C375.923912,543.711385 375.758246,544.595718 375.758246,545.613051 C375.758246,546.630385 375.923912,547.514718 376.255246,548.266051 C376.586579,549.017385 377.048579,549.593718 377.641246,549.995051 C378.233912,550.396385 378.908246,550.597051 379.664246,550.597051 Z M379.664246,549.673051 C379.094912,549.673051 378.593246,549.514385 378.159246,549.197051 C377.725246,548.879718 377.386912,548.417718 377.144246,547.811051 C376.901579,547.204385 376.780246,546.471718 376.780246,545.613051 C376.780246,544.754385 376.901579,544.021718 377.144246,543.415051 C377.386912,542.808385 377.725246,542.346385 378.159246,542.029051 C378.593246,541.711718 379.094912,541.553051 379.664246,541.553051 C380.233579,541.553051 380.735246,541.711718 381.169246,542.029051 C381.603246,542.346385 381.941579,542.808385 382.184246,543.415051 C382.426912,544.021718 382.548246,544.754385 382.548246,545.613051 C382.548246,546.471718 382.426912,547.204385 382.184246,547.811051 C381.941579,548.417718 381.603246,548.879718 381.169246,549.197051 C380.735246,549.514385 380.233579,549.673051 379.664246,549.673051 Z\",\"id\":\"30\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":19}),React.createElement(\"path\",{\"d\":\"M454.651099,550.597051 C455.416432,550.597051 456.065099,550.471051 456.597099,550.219051 C457.129099,549.967051 457.530432,549.624051 457.801099,549.190051 C458.071765,548.756051 458.207099,548.259051 458.207099,547.699051 C458.207099,546.896385 457.938765,546.245385 457.402099,545.746051 C456.865432,545.246718 456.083765,544.969051 455.057099,544.913051 L455.057099,544.913051 L457.829099,541.427051 L457.829099,540.713051 L451.529099,540.713051 L451.529099,541.609051 L456.541099,541.609051 L453.825099,545.011051 L453.825099,545.753051 L454.525099,545.753051 C455.411765,545.753051 456.074432,545.925718 456.513099,546.271051 C456.951765,546.616385 457.171099,547.092385 457.171099,547.699051 C457.171099,548.315051 456.951765,548.798051 456.513099,549.148051 C456.074432,549.498051 455.453765,549.673051 454.651099,549.673051 C454.035099,549.673051 453.456432,549.568051 452.915099,549.358051 C452.373765,549.148051 451.939765,548.875051 451.613099,548.539051 L451.613099,548.539051 L451.123099,549.337051 C451.505765,549.719718 452.012099,550.025385 452.642099,550.254051 C453.272099,550.482718 453.941765,550.597051 454.651099,550.597051 Z M465.991099,550.513051 L465.991099,547.937051 L467.951099,547.937051 L467.951099,547.041051 L465.991099,547.041051 L465.991099,544.773051 L465.011099,544.773051 L465.011099,547.041051 L460.755099,547.041051 L465.767099,540.713051 L464.647099,540.713051 L459.453099,547.209051 L459.453099,547.937051 L464.983099,547.937051 L464.983099,550.513051 L465.991099,550.513051 Z\",\"id\":\"34\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":20}),React.createElement(\"path\",{\"d\":\"M543.566554,550.513051 L543.566554,547.937051 L545.526554,547.937051 L545.526554,547.041051 L543.566554,547.041051 L543.566554,544.773051 L542.586554,544.773051 L542.586554,547.041051 L538.330554,547.041051 L543.342554,540.713051 L542.222554,540.713051 L537.028554,547.209051 L537.028554,547.937051 L542.558554,547.937051 L542.558554,550.513051 L543.566554,550.513051 Z M550.356554,550.597051 C551.112554,550.597051 551.786887,550.396385 552.379554,549.995051 C552.97222,549.593718 553.436554,549.017385 553.772554,548.266051 C554.108554,547.514718 554.276554,546.630385 554.276554,545.613051 C554.276554,544.595718 554.108554,543.711385 553.772554,542.960051 C553.436554,542.208718 552.97222,541.632385 552.379554,541.231051 C551.786887,540.829718 551.112554,540.629051 550.356554,540.629051 C549.600554,540.629051 548.92622,540.829718 548.333554,541.231051 C547.740887,541.632385 547.278887,542.208718 546.947554,542.960051 C546.61622,543.711385 546.450554,544.595718 546.450554,545.613051 C546.450554,546.630385 546.61622,547.514718 546.947554,548.266051 C547.278887,549.017385 547.740887,549.593718 548.333554,549.995051 C548.92622,550.396385 549.600554,550.597051 550.356554,550.597051 Z M550.356554,549.673051 C549.78722,549.673051 549.285554,549.514385 548.851554,549.197051 C548.417554,548.879718 548.07922,548.417718 547.836554,547.811051 C547.593887,547.204385 547.472554,546.471718 547.472554,545.613051 C547.472554,544.754385 547.593887,544.021718 547.836554,543.415051 C548.07922,542.808385 548.417554,542.346385 548.851554,542.029051 C549.285554,541.711718 549.78722,541.553051 550.356554,541.553051 C550.925887,541.553051 551.427554,541.711718 551.861554,542.029051 C552.295554,542.346385 552.633887,542.808385 552.876554,543.415051 C553.11922,544.021718 553.240554,544.754385 553.240554,545.613051 C553.240554,546.471718 553.11922,547.204385 552.876554,547.811051 C552.633887,548.417718 552.295554,548.879718 551.861554,549.197051 C551.427554,549.514385 550.925887,549.673051 550.356554,549.673051 Z\",\"id\":\"40\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":21}),React.createElement(\"path\",{\"d\":\"M591.941886,602.467147 L593.045886,599.875147 L598.645886,599.875147 L599.765886,602.467147 L601.941886,602.467147 L596.885886,591.267147 L594.837886,591.267147 L589.797886,602.467147 L591.941886,602.467147 Z M597.957886,598.243147 L593.749886,598.243147 L595.845886,593.347147 L597.957886,598.243147 Z M607.045886,605.683147 C610.117886,605.683147 611.653886,604.179147 611.653886,601.171147 L611.653886,601.171147 L611.653886,593.923147 L609.749886,593.923147 L609.749886,595.059147 C609.408553,594.643147 608.984553,594.333813 608.477886,594.131147 C607.971219,593.92848 607.408553,593.827147 606.789886,593.827147 C605.979219,593.827147 605.245886,593.997813 604.589886,594.339147 C603.933886,594.68048 603.416553,595.163147 603.037886,595.787147 C602.659219,596.411147 602.469886,597.12848 602.469886,597.939147 C602.469886,598.749813 602.659219,599.469813 603.037886,600.099147 C603.416553,600.72848 603.933886,601.21648 604.589886,601.563147 C605.245886,601.909813 605.979219,602.083147 606.789886,602.083147 C607.376553,602.083147 607.915219,601.987147 608.405886,601.795147 C608.896553,601.603147 609.312553,601.32048 609.653886,600.947147 L609.653886,600.947147 L609.653886,601.395147 C609.653886,602.269813 609.435219,602.92048 608.997886,603.347147 C608.560553,603.773813 607.872553,603.987147 606.933886,603.987147 C606.347219,603.987147 605.768553,603.893813 605.197886,603.707147 C604.627219,603.52048 604.155219,603.27248 603.781886,602.963147 L603.781886,602.963147 L602.885886,604.467147 C603.365886,604.861813 603.973886,605.163147 604.709886,605.371147 C605.445886,605.579147 606.224553,605.683147 607.045886,605.683147 Z M607.093886,600.387147 C606.325886,600.387147 605.699219,600.16048 605.213886,599.707147 C604.728553,599.253813 604.485886,598.66448 604.485886,597.939147 C604.485886,597.22448 604.728553,596.643147 605.213886,596.195147 C605.699219,595.747147 606.325886,595.523147 607.093886,595.523147 C607.851219,595.523147 608.472553,595.747147 608.957886,596.195147 C609.443219,596.643147 609.685886,597.22448 609.685886,597.939147 C609.685886,598.66448 609.443219,599.253813 608.957886,599.707147 C608.472553,600.16048 607.851219,600.387147 607.093886,600.387147 Z M618.293886,602.579147 C619.029886,602.579147 619.691219,602.461813 620.277886,602.227147 C620.864553,601.99248 621.349886,601.645813 621.733886,601.187147 L621.733886,601.187147 L620.661886,599.955147 C620.053886,600.573813 619.280553,600.883147 618.341886,600.883147 C617.605886,600.883147 616.989886,600.699147 616.493886,600.331147 C615.997886,599.963147 615.691219,599.46448 615.573886,598.835147 L615.573886,598.835147 L622.277886,598.835147 C622.299219,598.579147 622.309886,598.381813 622.309886,598.243147 C622.309886,597.36848 622.125886,596.597813 621.757886,595.931147 C621.389886,595.26448 620.877886,594.747147 620.221886,594.379147 C619.565886,594.011147 618.821886,593.827147 617.989886,593.827147 C617.147219,593.827147 616.389886,594.013813 615.717886,594.387147 C615.045886,594.76048 614.520553,595.28048 614.141886,595.947147 C613.763219,596.613813 613.573886,597.363147 613.573886,598.195147 C613.573886,599.037813 613.768553,599.79248 614.157886,600.459147 C614.547219,601.125813 615.099219,601.645813 615.813886,602.019147 C616.528553,602.39248 617.355219,602.579147 618.293886,602.579147 Z M620.405886,597.507147 L615.557886,597.507147 C615.653886,596.877813 615.923219,596.373813 616.365886,595.995147 C616.808553,595.61648 617.349886,595.427147 617.989886,595.427147 C618.640553,595.427147 619.184553,595.619147 619.621886,596.003147 C620.059219,596.387147 620.320553,596.88848 620.405886,597.507147 L620.405886,597.507147 Z\",\"id\":\"Age\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M-113.671392,275.761476 C-112.476725,275.761476 -111.415392,275.529476 -110.487392,275.065476 C-109.559392,274.601476 -108.839392,273.945476 -108.327392,273.097476 C-107.815392,272.249476 -107.559392,271.270809 -107.559392,270.161476 C-107.559392,269.052143 -107.815392,268.073476 -108.327392,267.225476 C-108.839392,266.377476 -109.559392,265.721476 -110.487392,265.257476 C-111.415392,264.793476 -112.476725,264.561476 -113.671392,264.561476 L-113.671392,264.561476 L-118.567392,264.561476 L-118.567392,275.761476 L-113.671392,275.761476 Z M-113.767392,274.001476 L-116.487392,274.001476 L-116.487392,266.321476 L-113.767392,266.321476 C-112.946058,266.321476 -112.223392,266.478809 -111.599392,266.793476 C-110.975392,267.108143 -110.495392,267.556143 -110.159392,268.137476 C-109.823392,268.718809 -109.655392,269.393476 -109.655392,270.161476 C-109.655392,270.929476 -109.823392,271.604143 -110.159392,272.185476 C-110.495392,272.766809 -110.975392,273.214809 -111.599392,273.529476 C-112.223392,273.844143 -112.946058,274.001476 -113.767392,274.001476 L-113.767392,274.001476 Z M-104.535392,265.809476 C-104.162058,265.809476 -103.855392,265.689476 -103.615392,265.449476 C-103.375392,265.209476 -103.255392,264.913476 -103.255392,264.561476 C-103.255392,264.230809 -103.378058,263.956143 -103.623392,263.737476 C-103.868725,263.518809 -104.172725,263.409476 -104.535392,263.409476 C-104.898058,263.409476 -105.202058,263.524143 -105.447392,263.753476 C-105.692725,263.982809 -105.815392,264.268143 -105.815392,264.609476 C-105.815392,264.950809 -105.692725,265.236143 -105.447392,265.465476 C-105.202058,265.694809 -104.898058,265.809476 -104.535392,265.809476 Z M-103.543392,275.761476 L-103.543392,267.217476 L-105.543392,267.217476 L-105.543392,275.761476 L-103.543392,275.761476 Z M-98.2793918,275.873476 C-97.0847251,275.873476 -96.1407251,275.633476 -95.4473918,275.153476 C-94.7540585,274.673476 -94.4073918,274.033476 -94.4073918,273.233476 C-94.4073918,272.625476 -94.5647251,272.156143 -94.8793918,271.825476 C-95.1940585,271.494809 -95.5700585,271.260143 -96.0073918,271.121476 C-96.4447251,270.982809 -97.0047251,270.860143 -97.6873918,270.753476 C-98.3700585,270.636143 -98.8740585,270.510809 -99.1993918,270.377476 C-99.5247251,270.244143 -99.6873918,270.017476 -99.6873918,269.697476 C-99.6873918,269.409476 -99.5353918,269.177476 -99.2313918,269.001476 C-98.9273918,268.825476 -98.4820585,268.737476 -97.8953918,268.737476 C-96.9887251,268.737476 -96.1727251,268.950809 -95.4473918,269.377476 L-95.4473918,269.377476 L-94.6793918,267.857476 C-95.0527251,267.633476 -95.5327251,267.454809 -96.1193918,267.321476 C-96.7060585,267.188143 -97.2927251,267.121476 -97.8793918,267.121476 C-99.0313918,267.121476 -99.9460585,267.364143 -100.623392,267.849476 C-101.300725,268.334809 -101.639392,268.982809 -101.639392,269.793476 C-101.639392,270.412143 -101.476725,270.894809 -101.151392,271.241476 C-100.826058,271.588143 -100.442058,271.830809 -99.9993918,271.969476 C-99.5567251,272.108143 -98.9833918,272.230809 -98.2793918,272.337476 C-97.6073918,272.444143 -97.1193918,272.556143 -96.8153918,272.673476 C-96.5113918,272.790809 -96.3593918,272.998809 -96.3593918,273.297476 C-96.3593918,273.926809 -96.9567251,274.241476 -98.1513918,274.241476 C-98.6740585,274.241476 -99.2047251,274.164143 -99.7433918,274.009476 C-100.282058,273.854809 -100.743392,273.649476 -101.127392,273.393476 L-101.127392,273.393476 L-101.895392,274.913476 C-101.500725,275.190809 -100.972725,275.420143 -100.311392,275.601476 C-99.6500585,275.782809 -98.9727251,275.873476 -98.2793918,275.873476 Z M-88.7593918,275.873476 C-87.9273918,275.873476 -87.1940585,275.700143 -86.5593918,275.353476 C-85.9247251,275.006809 -85.4420585,274.513476 -85.1113918,273.873476 L-85.1113918,273.873476 L-86.6473918,272.977476 C-86.8927251,273.372143 -87.1993918,273.668143 -87.5673918,273.865476 C-87.9353918,274.062809 -88.3380585,274.161476 -88.7753918,274.161476 C-89.5327251,274.161476 -90.1540585,273.918809 -90.6393918,273.433476 C-91.1247251,272.948143 -91.3673918,272.300143 -91.3673918,271.489476 C-91.3673918,270.678809 -91.1220585,270.030809 -90.6313918,269.545476 C-90.1407251,269.060143 -89.5220585,268.817476 -88.7753918,268.817476 C-88.3380585,268.817476 -87.9353918,268.916143 -87.5673918,269.113476 C-87.1993918,269.310809 -86.8927251,269.606809 -86.6473918,270.001476 L-86.6473918,270.001476 L-85.1113918,269.105476 C-85.4313918,268.465476 -85.9087251,267.974809 -86.5433918,267.633476 C-87.1780585,267.292143 -87.9167251,267.121476 -88.7593918,267.121476 C-89.6553918,267.121476 -90.4527251,267.308143 -91.1513918,267.681476 C-91.8500585,268.054809 -92.3967251,268.572143 -92.7913918,269.233476 C-93.1860585,269.894809 -93.3833918,270.646809 -93.3833918,271.489476 C-93.3833918,272.332143 -93.1860585,273.086809 -92.7913918,273.753476 C-92.3967251,274.420143 -91.8473918,274.940143 -91.1433918,275.313476 C-90.4393918,275.686809 -89.6447251,275.873476 -88.7593918,275.873476 Z M-79.5433918,275.873476 C-78.6687251,275.873476 -77.8847251,275.686809 -77.1913918,275.313476 C-76.4980585,274.940143 -75.9567251,274.420143 -75.5673918,273.753476 C-75.1780585,273.086809 -74.9833918,272.332143 -74.9833918,271.489476 C-74.9833918,270.646809 -75.1780585,269.894809 -75.5673918,269.233476 C-75.9567251,268.572143 -76.4980585,268.054809 -77.1913918,267.681476 C-77.8847251,267.308143 -78.6687251,267.121476 -79.5433918,267.121476 C-80.4073918,267.121476 -81.1860585,267.308143 -81.8793918,267.681476 C-82.5727251,268.054809 -83.1140585,268.572143 -83.5033918,269.233476 C-83.8927251,269.894809 -84.0873918,270.646809 -84.0873918,271.489476 C-84.0873918,272.332143 -83.8927251,273.086809 -83.5033918,273.753476 C-83.1140585,274.420143 -82.5727251,274.940143 -81.8793918,275.313476 C-81.1860585,275.686809 -80.4073918,275.873476 -79.5433918,275.873476 Z M-79.5433918,274.161476 C-80.2793918,274.161476 -80.8847251,273.916143 -81.3593918,273.425476 C-81.8340585,272.934809 -82.0713918,272.289476 -82.0713918,271.489476 C-82.0713918,270.689476 -81.8340585,270.044143 -81.3593918,269.553476 C-80.8847251,269.062809 -80.2793918,268.817476 -79.5433918,268.817476 C-78.8073918,268.817476 -78.1993918,269.062809 -77.7193918,269.553476 C-77.2393918,270.044143 -76.9993918,270.689476 -76.9993918,271.489476 C-76.9993918,272.289476 -77.2393918,272.934809 -77.7193918,273.425476 C-78.1993918,273.916143 -78.8073918,274.161476 -79.5433918,274.161476 Z M-69.4473918,275.873476 C-68.8927251,275.873476 -68.3753918,275.769476 -67.8953918,275.561476 C-67.4153918,275.353476 -67.0153918,275.057476 -66.6953918,274.673476 L-66.6953918,274.673476 L-66.6953918,275.761476 L-64.7913918,275.761476 L-64.7913918,267.217476 L-66.7913918,267.217476 L-66.7913918,271.537476 C-66.7913918,272.369476 -67.0020585,273.006809 -67.4233918,273.449476 C-67.8447251,273.892143 -68.4127251,274.113476 -69.1273918,274.113476 C-69.7673918,274.113476 -70.2607251,273.924143 -70.6073918,273.545476 C-70.9540585,273.166809 -71.1273918,272.593476 -71.1273918,271.825476 L-71.1273918,271.825476 L-71.1273918,267.217476 L-73.1273918,267.217476 L-73.1273918,272.097476 C-73.1273918,273.345476 -72.7993918,274.286809 -72.1433918,274.921476 C-71.4873918,275.556143 -70.5887251,275.873476 -69.4473918,275.873476 Z M-60.1673918,275.761476 L-60.1673918,271.441476 C-60.1673918,270.609476 -59.9540585,269.972143 -59.5273918,269.529476 C-59.1007251,269.086809 -58.5193918,268.865476 -57.7833918,268.865476 C-57.1327251,268.865476 -56.6313918,269.054809 -56.2793918,269.433476 C-55.9273918,269.812143 -55.7513918,270.374809 -55.7513918,271.121476 L-55.7513918,271.121476 L-55.7513918,275.761476 L-53.7513918,275.761476 L-53.7513918,270.865476 C-53.7513918,269.628143 -54.0767251,268.694809 -54.7273918,268.065476 C-55.3780585,267.436143 -56.2420585,267.121476 -57.3193918,267.121476 C-57.9487251,267.121476 -58.5140585,267.222809 -59.0153918,267.425476 C-59.5167251,267.628143 -59.9327251,267.926809 -60.2633918,268.321476 L-60.2633918,268.321476 L-60.2633918,267.217476 L-62.1673918,267.217476 L-62.1673918,275.761476 L-60.1673918,275.761476 Z M-47.9913918,275.873476 C-47.6180585,275.873476 -47.2633918,275.825476 -46.9273918,275.729476 C-46.5913918,275.633476 -46.3060585,275.489476 -46.0713918,275.297476 L-46.0713918,275.297476 L-46.6313918,273.873476 C-46.9300585,274.108143 -47.3033918,274.225476 -47.7513918,274.225476 C-48.1353918,274.225476 -48.4287251,274.116143 -48.6313918,273.897476 C-48.8340585,273.678809 -48.9353918,273.361476 -48.9353918,272.945476 L-48.9353918,272.945476 L-48.9353918,268.881476 L-46.6473918,268.881476 L-46.6473918,267.281476 L-48.9353918,267.281476 L-48.9353918,265.329476 L-50.9353918,265.329476 L-50.9353918,267.281476 L-52.3433918,267.281476 L-52.3433918,268.881476 L-50.9353918,268.881476 L-50.9353918,272.993476 C-50.9353918,273.932143 -50.6793918,274.646809 -50.1673918,275.137476 C-49.6553918,275.628143 -48.9300585,275.873476 -47.9913918,275.873476 Z M-40.4073918,275.873476 C-39.6713918,275.873476 -39.0100585,275.756143 -38.4233918,275.521476 C-37.8367251,275.286809 -37.3513918,274.940143 -36.9673918,274.481476 L-36.9673918,274.481476 L-38.0393918,273.249476 C-38.6473918,273.868143 -39.4207251,274.177476 -40.3593918,274.177476 C-41.0953918,274.177476 -41.7113918,273.993476 -42.2073918,273.625476 C-42.7033918,273.257476 -43.0100585,272.758809 -43.1273918,272.129476 L-43.1273918,272.129476 L-36.4233918,272.129476 C-36.4020585,271.873476 -36.3913918,271.676143 -36.3913918,271.537476 C-36.3913918,270.662809 -36.5753918,269.892143 -36.9433918,269.225476 C-37.3113918,268.558809 -37.8233918,268.041476 -38.4793918,267.673476 C-39.1353918,267.305476 -39.8793918,267.121476 -40.7113918,267.121476 C-41.5540585,267.121476 -42.3113918,267.308143 -42.9833918,267.681476 C-43.6553918,268.054809 -44.1807251,268.574809 -44.5593918,269.241476 C-44.9380585,269.908143 -45.1273918,270.657476 -45.1273918,271.489476 C-45.1273918,272.332143 -44.9327251,273.086809 -44.5433918,273.753476 C-44.1540585,274.420143 -43.6020585,274.940143 -42.8873918,275.313476 C-42.1727251,275.686809 -41.3460585,275.873476 -40.4073918,275.873476 Z M-38.2953918,270.801476 L-43.1433918,270.801476 C-43.0473918,270.172143 -42.7780585,269.668143 -42.3353918,269.289476 C-41.8927251,268.910809 -41.3513918,268.721476 -40.7113918,268.721476 C-40.0607251,268.721476 -39.5167251,268.913476 -39.0793918,269.297476 C-38.6420585,269.681476 -38.3807251,270.182809 -38.2953918,270.801476 L-38.2953918,270.801476 Z M-30.8553918,275.873476 C-30.2687251,275.873476 -29.7327251,275.772143 -29.2473918,275.569476 C-28.7620585,275.366809 -28.3540585,275.062809 -28.0233918,274.657476 L-28.0233918,274.657476 L-28.0233918,275.761476 L-26.1033918,275.761476 L-26.1033918,263.889476 L-28.1033918,263.889476 L-28.1033918,268.273476 C-28.4340585,267.889476 -28.8340585,267.601476 -29.3033918,267.409476 C-29.7727251,267.217476 -30.2900585,267.121476 -30.8553918,267.121476 C-31.6767251,267.121476 -32.4153918,267.302809 -33.0713918,267.665476 C-33.7273918,268.028143 -34.2420585,268.540143 -34.6153918,269.201476 C-34.9887251,269.862809 -35.1753918,270.625476 -35.1753918,271.489476 C-35.1753918,272.353476 -34.9887251,273.118809 -34.6153918,273.785476 C-34.2420585,274.452143 -33.7273918,274.966809 -33.0713918,275.329476 C-32.4153918,275.692143 -31.6767251,275.873476 -30.8553918,275.873476 Z M-30.6153918,274.161476 C-31.0953918,274.161476 -31.5273918,274.052143 -31.9113918,273.833476 C-32.2953918,273.614809 -32.5993918,273.302809 -32.8233918,272.897476 C-33.0473918,272.492143 -33.1593918,272.022809 -33.1593918,271.489476 C-33.1593918,270.956143 -33.0473918,270.486809 -32.8233918,270.081476 C-32.5993918,269.676143 -32.2953918,269.364143 -31.9113918,269.145476 C-31.5273918,268.926809 -31.0953918,268.817476 -30.6153918,268.817476 C-30.1353918,268.817476 -29.7033918,268.926809 -29.3193918,269.145476 C-28.9353918,269.364143 -28.6313918,269.676143 -28.4073918,270.081476 C-28.1833918,270.486809 -28.0713918,270.956143 -28.0713918,271.489476 C-28.0713918,272.022809 -28.1833918,272.492143 -28.4073918,272.897476 C-28.6313918,273.302809 -28.9353918,273.614809 -29.3193918,273.833476 C-29.7033918,274.052143 -30.1353918,274.161476 -30.6153918,274.161476 Z M-14.0393918,275.761476 L-14.0393918,271.809476 L-9.65539181,264.561476 L-11.7033918,264.561476 L-15.0153918,270.017476 L-18.2953918,264.561476 L-20.5193918,264.561476 L-16.1193918,271.841476 L-16.1193918,275.761476 L-14.0393918,275.761476 Z M-4.47139181,275.873476 C-3.73539181,275.873476 -3.07405847,275.756143 -2.48739181,275.521476 C-1.90072514,275.286809 -1.41539181,274.940143 -1.03139181,274.481476 L-1.03139181,274.481476 L-2.10339181,273.249476 C-2.71139181,273.868143 -3.48472514,274.177476 -4.42339181,274.177476 C-5.15939181,274.177476 -5.77539181,273.993476 -6.27139181,273.625476 C-6.76739181,273.257476 -7.07405847,272.758809 -7.19139181,272.129476 L-7.19139181,272.129476 L-0.487391808,272.129476 C-0.466058475,271.873476 -0.455391808,271.676143 -0.455391808,271.537476 C-0.455391808,270.662809 -0.639391808,269.892143 -1.00739181,269.225476 C-1.37539181,268.558809 -1.88739181,268.041476 -2.54339181,267.673476 C-3.19939181,267.305476 -3.94339181,267.121476 -4.77539181,267.121476 C-5.61805847,267.121476 -6.37539181,267.308143 -7.04739181,267.681476 C-7.71939181,268.054809 -8.24472514,268.574809 -8.62339181,269.241476 C-9.00205847,269.908143 -9.19139181,270.657476 -9.19139181,271.489476 C-9.19139181,272.332143 -8.99672514,273.086809 -8.60739181,273.753476 C-8.21805847,274.420143 -7.66605847,274.940143 -6.95139181,275.313476 C-6.23672514,275.686809 -5.41005847,275.873476 -4.47139181,275.873476 Z M-2.35939181,270.801476 L-7.20739181,270.801476 C-7.11139181,270.172143 -6.84205847,269.668143 -6.39939181,269.289476 C-5.95672514,268.910809 -5.41539181,268.721476 -4.77539181,268.721476 C-4.12472514,268.721476 -3.58072514,268.913476 -3.14339181,269.297476 C-2.70605847,269.681476 -2.44472514,270.182809 -2.35939181,270.801476 L-2.35939181,270.801476 Z M4.04060819,275.873476 C4.68060819,275.873476 5.22727486,275.774809 5.68060819,275.577476 C6.13394153,275.380143 6.48327486,275.094809 6.72860819,274.721476 L6.72860819,274.721476 L6.72860819,275.761476 L8.61660819,275.761476 L8.61660819,270.753476 C8.61660819,269.537476 8.28327486,268.628143 7.61660819,268.025476 C6.94994153,267.422809 5.98727486,267.121476 4.72860819,267.121476 C4.02460819,267.121476 3.35794153,267.212143 2.72860819,267.393476 C2.09927486,267.574809 1.56060819,267.836143 1.11260819,268.177476 L1.11260819,268.177476 L1.89660819,269.633476 C2.21660819,269.366809 2.60860819,269.158809 3.07260819,269.009476 C3.53660819,268.860143 4.00860819,268.785476 4.48860819,268.785476 C5.19260819,268.785476 5.72327486,268.945476 6.08060819,269.265476 C6.43794153,269.585476 6.61660819,270.044143 6.61660819,270.641476 L6.61660819,270.641476 L6.61660819,270.769476 L4.40860819,270.769476 C3.18194153,270.769476 2.28327486,271.001476 1.71260819,271.465476 C1.14194153,271.929476 0.856608192,272.545476 0.856608192,273.313476 C0.856608192,273.804143 0.987274859,274.244143 1.24860819,274.633476 C1.50994153,275.022809 1.88060819,275.326809 2.36060819,275.545476 C2.84060819,275.764143 3.40060819,275.873476 4.04060819,275.873476 Z M4.45660819,274.417476 C3.94460819,274.417476 3.54460819,274.310809 3.25660819,274.097476 C2.96860819,273.884143 2.82460819,273.596143 2.82460819,273.233476 C2.82460819,272.476143 3.40060819,272.097476 4.55260819,272.097476 L4.55260819,272.097476 L6.61660819,272.097476 L6.61660819,273.089476 C6.45660819,273.516143 6.18194153,273.844143 5.79260819,274.073476 C5.40327486,274.302809 4.95794153,274.417476 4.45660819,274.417476 Z M13.1766082,275.761476 L13.1766082,271.617476 C13.1766082,270.764143 13.3952749,270.110809 13.8326082,269.657476 C14.2699415,269.204143 14.8779415,268.977476 15.6566082,268.977476 C15.7952749,268.977476 15.9499415,268.993476 16.1206082,269.025476 L16.1206082,269.025476 L16.1206082,267.121476 C14.6699415,267.121476 13.6566082,267.569476 13.0806082,268.465476 L13.0806082,268.465476 L13.0806082,267.217476 L11.1766082,267.217476 L11.1766082,275.761476 L13.1766082,275.761476 Z M19.8966082,275.761476 L19.8966082,263.889476 L17.8966082,263.889476 L17.8966082,275.761476 L19.8966082,275.761476 Z M23.2246082,278.977476 C23.9819415,278.977476 24.6272749,278.788143 25.1606082,278.409476 C25.6939415,278.030809 26.1472749,277.377476 26.5206082,276.449476 L26.5206082,276.449476 L30.5206082,267.217476 L28.6006082,267.217476 L25.8966082,273.537476 L23.2086082,267.217476 L21.1286082,267.217476 L24.8566082,275.793476 L24.7126082,276.129476 C24.5206082,276.556143 24.3099415,276.860143 24.0806082,277.041476 C23.8512749,277.222809 23.5606082,277.313476 23.2086082,277.313476 C22.9419415,277.313476 22.6779415,277.260143 22.4166082,277.153476 C22.1552749,277.046809 21.9286082,276.902809 21.7366082,276.721476 L21.7366082,276.721476 L20.9366082,278.193476 C21.2032749,278.438809 21.5446082,278.630809 21.9606082,278.769476 C22.3766082,278.908143 22.7979415,278.977476 23.2246082,278.977476 Z M38.4566082,275.761476 L38.4566082,272.529476 L40.9846082,272.529476 C41.9552749,272.529476 42.8006082,272.369476 43.5206082,272.049476 C44.2406082,271.729476 44.7926082,271.268143 45.1766082,270.665476 C45.5606082,270.062809 45.7526082,269.356143 45.7526082,268.545476 C45.7526082,267.724143 45.5606082,267.014809 45.1766082,266.417476 C44.7926082,265.820143 44.2406082,265.361476 43.5206082,265.041476 C42.8006082,264.721476 41.9552749,264.561476 40.9846082,264.561476 L40.9846082,264.561476 L36.3766082,264.561476 L36.3766082,275.761476 L38.4566082,275.761476 Z M40.8886082,270.769476 L38.4566082,270.769476 L38.4566082,266.321476 L40.8886082,266.321476 C41.7952749,266.321476 42.4832749,266.513476 42.9526082,266.897476 C43.4219415,267.281476 43.6566082,267.830809 43.6566082,268.545476 C43.6566082,269.260143 43.4219415,269.809476 42.9526082,270.193476 C42.4832749,270.577476 41.7952749,270.769476 40.8886082,270.769476 L40.8886082,270.769476 Z M49.8006082,275.761476 L49.8006082,271.617476 C49.8006082,270.764143 50.0192749,270.110809 50.4566082,269.657476 C50.8939415,269.204143 51.5019415,268.977476 52.2806082,268.977476 C52.4192749,268.977476 52.5739415,268.993476 52.7446082,269.025476 L52.7446082,269.025476 L52.7446082,267.121476 C51.2939415,267.121476 50.2806082,267.569476 49.7046082,268.465476 L49.7046082,268.465476 L49.7046082,267.217476 L47.8006082,267.217476 L47.8006082,275.761476 L49.8006082,275.761476 Z M58.3606082,275.873476 C59.2352749,275.873476 60.0192749,275.686809 60.7126082,275.313476 C61.4059415,274.940143 61.9472749,274.420143 62.3366082,273.753476 C62.7259415,273.086809 62.9206082,272.332143 62.9206082,271.489476 C62.9206082,270.646809 62.7259415,269.894809 62.3366082,269.233476 C61.9472749,268.572143 61.4059415,268.054809 60.7126082,267.681476 C60.0192749,267.308143 59.2352749,267.121476 58.3606082,267.121476 C57.4966082,267.121476 56.7179415,267.308143 56.0246082,267.681476 C55.3312749,268.054809 54.7899415,268.572143 54.4006082,269.233476 C54.0112749,269.894809 53.8166082,270.646809 53.8166082,271.489476 C53.8166082,272.332143 54.0112749,273.086809 54.4006082,273.753476 C54.7899415,274.420143 55.3312749,274.940143 56.0246082,275.313476 C56.7179415,275.686809 57.4966082,275.873476 58.3606082,275.873476 Z M58.3606082,274.161476 C57.6246082,274.161476 57.0192749,273.916143 56.5446082,273.425476 C56.0699415,272.934809 55.8326082,272.289476 55.8326082,271.489476 C55.8326082,270.689476 56.0699415,270.044143 56.5446082,269.553476 C57.0192749,269.062809 57.6246082,268.817476 58.3606082,268.817476 C59.0966082,268.817476 59.7046082,269.062809 60.1846082,269.553476 C60.6646082,270.044143 60.9046082,270.689476 60.9046082,271.489476 C60.9046082,272.289476 60.6646082,272.934809 60.1846082,273.425476 C59.7046082,273.916143 59.0966082,274.161476 58.3606082,274.161476 Z M68.4566082,275.873476 C69.0432749,275.873476 69.5792749,275.772143 70.0646082,275.569476 C70.5499415,275.366809 70.9579415,275.062809 71.2886082,274.657476 L71.2886082,274.657476 L71.2886082,275.761476 L73.2086082,275.761476 L73.2086082,263.889476 L71.2086082,263.889476 L71.2086082,268.273476 C70.8779415,267.889476 70.4779415,267.601476 70.0086082,267.409476 C69.5392749,267.217476 69.0219415,267.121476 68.4566082,267.121476 C67.6352749,267.121476 66.8966082,267.302809 66.2406082,267.665476 C65.5846082,268.028143 65.0699415,268.540143 64.6966082,269.201476 C64.3232749,269.862809 64.1366082,270.625476 64.1366082,271.489476 C64.1366082,272.353476 64.3232749,273.118809 64.6966082,273.785476 C65.0699415,274.452143 65.5846082,274.966809 66.2406082,275.329476 C66.8966082,275.692143 67.6352749,275.873476 68.4566082,275.873476 Z M68.6966082,274.161476 C68.2166082,274.161476 67.7846082,274.052143 67.4006082,273.833476 C67.0166082,273.614809 66.7126082,273.302809 66.4886082,272.897476 C66.2646082,272.492143 66.1526082,272.022809 66.1526082,271.489476 C66.1526082,270.956143 66.2646082,270.486809 66.4886082,270.081476 C66.7126082,269.676143 67.0166082,269.364143 67.4006082,269.145476 C67.7846082,268.926809 68.2166082,268.817476 68.6966082,268.817476 C69.1766082,268.817476 69.6086082,268.926809 69.9926082,269.145476 C70.3766082,269.364143 70.6806082,269.676143 70.9046082,270.081476 C71.1286082,270.486809 71.2406082,270.956143 71.2406082,271.489476 C71.2406082,272.022809 71.1286082,272.492143 70.9046082,272.897476 C70.6806082,273.302809 70.3766082,273.614809 69.9926082,273.833476 C69.6086082,274.052143 69.1766082,274.161476 68.6966082,274.161476 Z M79.4486082,275.873476 C80.0032749,275.873476 80.5206082,275.769476 81.0006082,275.561476 C81.4806082,275.353476 81.8806082,275.057476 82.2006082,274.673476 L82.2006082,274.673476 L82.2006082,275.761476 L84.1046082,275.761476 L84.1046082,267.217476 L82.1046082,267.217476 L82.1046082,271.537476 C82.1046082,272.369476 81.8939415,273.006809 81.4726082,273.449476 C81.0512749,273.892143 80.4832749,274.113476 79.7686082,274.113476 C79.1286082,274.113476 78.6352749,273.924143 78.2886082,273.545476 C77.9419415,273.166809 77.7686082,272.593476 77.7686082,271.825476 L77.7686082,271.825476 L77.7686082,267.217476 L75.7686082,267.217476 L75.7686082,272.097476 C75.7686082,273.345476 76.0966082,274.286809 76.7526082,274.921476 C77.4086082,275.556143 78.3072749,275.873476 79.4486082,275.873476 Z M90.6486082,275.873476 C91.4806082,275.873476 92.2139415,275.700143 92.8486082,275.353476 C93.4832749,275.006809 93.9659415,274.513476 94.2966082,273.873476 L94.2966082,273.873476 L92.7606082,272.977476 C92.5152749,273.372143 92.2086082,273.668143 91.8406082,273.865476 C91.4726082,274.062809 91.0699415,274.161476 90.6326082,274.161476 C89.8752749,274.161476 89.2539415,273.918809 88.7686082,273.433476 C88.2832749,272.948143 88.0406082,272.300143 88.0406082,271.489476 C88.0406082,270.678809 88.2859415,270.030809 88.7766082,269.545476 C89.2672749,269.060143 89.8859415,268.817476 90.6326082,268.817476 C91.0699415,268.817476 91.4726082,268.916143 91.8406082,269.113476 C92.2086082,269.310809 92.5152749,269.606809 92.7606082,270.001476 L92.7606082,270.001476 L94.2966082,269.105476 C93.9766082,268.465476 93.4992749,267.974809 92.8646082,267.633476 C92.2299415,267.292143 91.4912749,267.121476 90.6486082,267.121476 C89.7526082,267.121476 88.9552749,267.308143 88.2566082,267.681476 C87.5579415,268.054809 87.0112749,268.572143 86.6166082,269.233476 C86.2219415,269.894809 86.0246082,270.646809 86.0246082,271.489476 C86.0246082,272.332143 86.2219415,273.086809 86.6166082,273.753476 C87.0112749,274.420143 87.5606082,274.940143 88.2646082,275.313476 C88.9686082,275.686809 89.7632749,275.873476 90.6486082,275.873476 Z M99.2406082,275.873476 C99.6139415,275.873476 99.9686082,275.825476 100.304608,275.729476 C100.640608,275.633476 100.925942,275.489476 101.160608,275.297476 L101.160608,275.297476 L100.600608,273.873476 C100.301942,274.108143 99.9286082,274.225476 99.4806082,274.225476 C99.0966082,274.225476 98.8032749,274.116143 98.6006082,273.897476 C98.3979415,273.678809 98.2966082,273.361476 98.2966082,272.945476 L98.2966082,272.945476 L98.2966082,268.881476 L100.584608,268.881476 L100.584608,267.281476 L98.2966082,267.281476 L98.2966082,265.329476 L96.2966082,265.329476 L96.2966082,267.281476 L94.8886082,267.281476 L94.8886082,268.881476 L96.2966082,268.881476 L96.2966082,272.993476 C96.2966082,273.932143 96.5526082,274.646809 97.0646082,275.137476 C97.5766082,275.628143 98.3019415,275.873476 99.2406082,275.873476 Z M103.816608,265.809476 C104.189942,265.809476 104.496608,265.689476 104.736608,265.449476 C104.976608,265.209476 105.096608,264.913476 105.096608,264.561476 C105.096608,264.230809 104.973942,263.956143 104.728608,263.737476 C104.483275,263.518809 104.179275,263.409476 103.816608,263.409476 C103.453942,263.409476 103.149942,263.524143 102.904608,263.753476 C102.659275,263.982809 102.536608,264.268143 102.536608,264.609476 C102.536608,264.950809 102.659275,265.236143 102.904608,265.465476 C103.149942,265.694809 103.453942,265.809476 103.816608,265.809476 Z M104.808608,275.761476 L104.808608,267.217476 L102.808608,267.217476 L102.808608,275.761476 L104.808608,275.761476 Z M111.768608,275.761476 L115.432608,267.217476 L113.512608,267.217476 L110.776608,273.553476 L108.120608,267.217476 L106.040608,267.217476 L109.704608,275.761476 L111.768608,275.761476 Z M117.688608,265.809476 C118.061942,265.809476 118.368608,265.689476 118.608608,265.449476 C118.848608,265.209476 118.968608,264.913476 118.968608,264.561476 C118.968608,264.230809 118.845942,263.956143 118.600608,263.737476 C118.355275,263.518809 118.051275,263.409476 117.688608,263.409476 C117.325942,263.409476 117.021942,263.524143 116.776608,263.753476 C116.531275,263.982809 116.408608,264.268143 116.408608,264.609476 C116.408608,264.950809 116.531275,265.236143 116.776608,265.465476 C117.021942,265.694809 117.325942,265.809476 117.688608,265.809476 Z M118.680608,275.761476 L118.680608,267.217476 L116.680608,267.217476 L116.680608,275.761476 L118.680608,275.761476 Z M124.520608,275.873476 C124.893942,275.873476 125.248608,275.825476 125.584608,275.729476 C125.920608,275.633476 126.205942,275.489476 126.440608,275.297476 L126.440608,275.297476 L125.880608,273.873476 C125.581942,274.108143 125.208608,274.225476 124.760608,274.225476 C124.376608,274.225476 124.083275,274.116143 123.880608,273.897476 C123.677942,273.678809 123.576608,273.361476 123.576608,272.945476 L123.576608,272.945476 L123.576608,268.881476 L125.864608,268.881476 L125.864608,267.281476 L123.576608,267.281476 L123.576608,265.329476 L121.576608,265.329476 L121.576608,267.281476 L120.168608,267.281476 L120.168608,268.881476 L121.576608,268.881476 L121.576608,272.993476 C121.576608,273.932143 121.832608,274.646809 122.344608,275.137476 C122.856608,275.628143 123.581942,275.873476 124.520608,275.873476 Z M128.792608,278.977476 C129.549942,278.977476 130.195275,278.788143 130.728608,278.409476 C131.261942,278.030809 131.715275,277.377476 132.088608,276.449476 L132.088608,276.449476 L136.088608,267.217476 L134.168608,267.217476 L131.464608,273.537476 L128.776608,267.217476 L126.696608,267.217476 L130.424608,275.793476 L130.280608,276.129476 C130.088608,276.556143 129.877942,276.860143 129.648608,277.041476 C129.419275,277.222809 129.128608,277.313476 128.776608,277.313476 C128.509942,277.313476 128.245942,277.260143 127.984608,277.153476 C127.723275,277.046809 127.496608,276.902809 127.304608,276.721476 L127.304608,276.721476 L126.504608,278.193476 C126.771275,278.438809 127.112608,278.630809 127.528608,278.769476 C127.944608,278.908143 128.365942,278.977476 128.792608,278.977476 Z\",\"id\":\"DiscountedYearlyProductivity\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"transform\":\"translate(8.760608, 271.193476) rotate(-90.000000) translate(-8.760608, -271.193476) \",\"key\":23}),React.createElement(\"path\",{\"d\":\"M631.422209,551.512151 L631.422209,548.936151 L633.382209,548.936151 L633.382209,548.040151 L631.422209,548.040151 L631.422209,545.772151 L630.442209,545.772151 L630.442209,548.040151 L626.186209,548.040151 L631.198209,541.712151 L630.078209,541.712151 L624.884209,548.208151 L624.884209,548.936151 L630.414209,548.936151 L630.414209,551.512151 L631.422209,551.512151 Z M640.676209,551.512151 L640.676209,548.936151 L642.636209,548.936151 L642.636209,548.040151 L640.676209,548.040151 L640.676209,545.772151 L639.696209,545.772151 L639.696209,548.040151 L635.440209,548.040151 L640.452209,541.712151 L639.332209,541.712151 L634.138209,548.208151 L634.138209,548.936151 L639.668209,548.936151 L639.668209,551.512151 L640.676209,551.512151 Z\",\"id\":\"44\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M717.589463,550.513051 L717.589463,547.937051 L719.549463,547.937051 L719.549463,547.041051 L717.589463,547.041051 L717.589463,544.773051 L716.609463,544.773051 L716.609463,547.041051 L712.353463,547.041051 L717.365463,540.713051 L716.245463,540.713051 L711.051463,547.209051 L711.051463,547.937051 L716.581463,547.937051 L716.581463,550.513051 L717.589463,550.513051 Z M724.197463,550.597051 C724.97213,550.597051 725.646463,550.482718 726.220463,550.254051 C726.794463,550.025385 727.235463,549.698718 727.543463,549.274051 C727.851463,548.849385 728.005463,548.352385 728.005463,547.783051 C728.005463,547.204385 727.839796,546.709718 727.508463,546.299051 C727.17713,545.888385 726.703463,545.580385 726.087463,545.375051 C726.591463,545.179051 726.978796,544.896718 727.249463,544.528051 C727.52013,544.159385 727.655463,543.723051 727.655463,543.219051 C727.655463,542.696385 727.510796,542.239051 727.221463,541.847051 C726.93213,541.455051 726.528463,541.154051 726.010463,540.944051 C725.492463,540.734051 724.88813,540.629051 724.197463,540.629051 C723.15213,540.629051 722.31913,540.862385 721.698463,541.329051 C721.077796,541.795718 720.767463,542.425718 720.767463,543.219051 C720.767463,543.723051 720.89813,544.159385 721.159463,544.528051 C721.420796,544.896718 721.803463,545.179051 722.307463,545.375051 C721.691463,545.580385 721.222463,545.886051 720.900463,546.292051 C720.578463,546.698051 720.417463,547.195051 720.417463,547.783051 C720.417463,548.651051 720.753463,549.337051 721.425463,549.841051 C722.097463,550.345051 723.021463,550.597051 724.197463,550.597051 Z M724.197463,545.011051 C723.441463,545.011051 722.848796,544.852385 722.419463,544.535051 C721.99013,544.217718 721.775463,543.788385 721.775463,543.247051 C721.775463,542.705718 721.992463,542.276385 722.426463,541.959051 C722.860463,541.641718 723.450796,541.483051 724.197463,541.483051 C724.934796,541.483051 725.52513,541.641718 725.968463,541.959051 C726.411796,542.276385 726.633463,542.710385 726.633463,543.261051 C726.633463,543.793051 726.416463,544.217718 725.982463,544.535051 C725.548463,544.852385 724.953463,545.011051 724.197463,545.011051 Z M724.197463,549.743051 C723.329463,549.743051 722.652796,549.568051 722.167463,549.218051 C721.68213,548.868051 721.439463,548.385051 721.439463,547.769051 C721.439463,547.162385 721.684463,546.684051 722.174463,546.334051 C722.664463,545.984051 723.338796,545.809051 724.197463,545.809051 C725.065463,545.809051 725.744463,545.984051 726.234463,546.334051 C726.724463,546.684051 726.969463,547.162385 726.969463,547.769051 C726.969463,548.375718 726.724463,548.856385 726.234463,549.211051 C725.744463,549.565718 725.065463,549.743051 724.197463,549.743051 Z\",\"id\":\"48\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M796.479514,550.597051 C797.25418,550.597051 797.907514,550.468718 798.439514,550.212051 C798.971514,549.955385 799.370514,549.603051 799.636514,549.155051 C799.902514,548.707051 800.035514,548.198385 800.035514,547.629051 C800.035514,546.714385 799.71118,546.002718 799.062514,545.494051 C798.413847,544.985385 797.38018,544.731051 795.961514,544.731051 L795.961514,544.731051 L794.701514,544.731051 L795.037514,541.609051 L799.517514,541.609051 L799.517514,540.713051 L794.155514,540.713051 L793.651514,545.627051 L795.737514,545.627051 C796.922847,545.627051 797.76518,545.799718 798.264514,546.145051 C798.763847,546.490385 799.013514,546.999051 799.013514,547.671051 C799.013514,548.277718 798.791847,548.763051 798.348514,549.127051 C797.90518,549.491051 797.277514,549.673051 796.465514,549.673051 C795.849514,549.673051 795.275514,549.568051 794.743514,549.358051 C794.211514,549.148051 793.78218,548.875051 793.455514,548.539051 L793.455514,548.539051 L792.965514,549.337051 C793.34818,549.719718 793.854514,550.025385 794.484514,550.254051 C795.114514,550.482718 795.779514,550.597051 796.479514,550.597051 Z M808.001514,550.513051 L808.001514,549.617051 L802.611514,549.617051 L805.943514,546.341051 C806.568847,545.734385 806.993514,545.197718 807.217514,544.731051 C807.441514,544.264385 807.553514,543.779051 807.553514,543.275051 C807.553514,542.453718 807.261847,541.807385 806.678514,541.336051 C806.09518,540.864718 805.30418,540.629051 804.305514,540.629051 C803.558847,540.629051 802.88918,540.750385 802.296514,540.993051 C801.703847,541.235718 801.21618,541.581051 800.833514,542.029051 L800.833514,542.029051 L801.547514,542.645051 C802.18218,541.917051 803.073514,541.553051 804.221514,541.553051 C804.958847,541.553051 805.525847,541.714051 805.922514,542.036051 C806.31918,542.358051 806.517514,542.808385 806.517514,543.387051 C806.517514,543.760385 806.426514,544.131385 806.244514,544.500051 C806.062514,544.868718 805.714847,545.305051 805.201514,545.809051 L805.201514,545.809051 L801.127514,549.799051 L801.127514,550.513051 L808.001514,550.513051 Z\",\"id\":\"52\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M879.754366,550.597051 C880.529033,550.597051 881.182366,550.468718 881.714366,550.212051 C882.246366,549.955385 882.645366,549.603051 882.911366,549.155051 C883.177366,548.707051 883.310366,548.198385 883.310366,547.629051 C883.310366,546.714385 882.986033,546.002718 882.337366,545.494051 C881.6887,544.985385 880.655033,544.731051 879.236366,544.731051 L879.236366,544.731051 L877.976366,544.731051 L878.312366,541.609051 L882.792366,541.609051 L882.792366,540.713051 L877.430366,540.713051 L876.926366,545.627051 L879.012366,545.627051 C880.1977,545.627051 881.040033,545.799718 881.539366,546.145051 C882.0387,546.490385 882.288366,546.999051 882.288366,547.671051 C882.288366,548.277718 882.0667,548.763051 881.623366,549.127051 C881.180033,549.491051 880.552366,549.673051 879.740366,549.673051 C879.124366,549.673051 878.550366,549.568051 878.018366,549.358051 C877.486366,549.148051 877.057033,548.875051 876.730366,548.539051 L876.730366,548.539051 L876.240366,549.337051 C876.623033,549.719718 877.129366,550.025385 877.759366,550.254051 C878.389366,550.482718 879.054366,550.597051 879.754366,550.597051 Z M888.602366,550.597051 C889.237033,550.597051 889.8087,550.473385 890.317366,550.226051 C890.826033,549.978718 891.225033,549.626385 891.514366,549.169051 C891.8037,548.711718 891.948366,548.184385 891.948366,547.587051 C891.948366,546.999051 891.808366,546.483385 891.528366,546.040051 C891.248366,545.596718 890.8587,545.253718 890.359366,545.011051 C889.860033,544.768385 889.288366,544.647051 888.644366,544.647051 C887.9537,544.647051 887.342366,544.794051 886.810366,545.088051 C886.278366,545.382051 885.891033,545.795051 885.648366,546.327051 C885.620366,546.028385 885.606366,545.762385 885.606366,545.529051 C885.606366,544.222385 885.914366,543.226051 886.530366,542.540051 C887.146366,541.854051 887.9957,541.511051 889.078366,541.511051 C889.881033,541.511051 890.5157,541.665051 890.982366,541.973051 L890.982366,541.973051 L891.388366,541.161051 C890.8097,540.806385 890.035033,540.629051 889.064366,540.629051 C888.168366,540.629051 887.384366,540.822718 886.712366,541.210051 C886.040366,541.597385 885.5177,542.169051 885.144366,542.925051 C884.771033,543.681051 884.584366,544.605051 884.584366,545.697051 C884.584366,547.255718 884.9297,548.462051 885.620366,549.316051 C886.311033,550.170051 887.305033,550.597051 888.602366,550.597051 Z M888.560366,549.743051 C888.019033,549.743051 887.552366,549.645051 887.160366,549.449051 C886.768366,549.253051 886.472033,548.996385 886.271366,548.679051 C886.0707,548.361718 885.970366,548.016385 885.970366,547.643051 C885.970366,547.241718 886.0777,546.877718 886.292366,546.551051 C886.507033,546.224385 886.803366,545.967718 887.181366,545.781051 C887.559366,545.594385 887.9957,545.501051 888.490366,545.501051 C889.246366,545.501051 889.846033,545.692385 890.289366,546.075051 C890.7327,546.457718 890.954366,546.971051 890.954366,547.615051 C890.954366,548.259051 890.7327,548.774718 890.289366,549.162051 C889.846033,549.549385 889.2697,549.743051 888.560366,549.743051 Z\",\"id\":\"56\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":27}),React.createElement(\"path\",{\"d\":\"M963.183219,550.597051 C963.817886,550.597051 964.389553,550.473385 964.898219,550.226051 C965.406886,549.978718 965.805886,549.626385 966.095219,549.169051 C966.384553,548.711718 966.529219,548.184385 966.529219,547.587051 C966.529219,546.999051 966.389219,546.483385 966.109219,546.040051 C965.829219,545.596718 965.439553,545.253718 964.940219,545.011051 C964.440886,544.768385 963.869219,544.647051 963.225219,544.647051 C962.534553,544.647051 961.923219,544.794051 961.391219,545.088051 C960.859219,545.382051 960.471886,545.795051 960.229219,546.327051 C960.201219,546.028385 960.187219,545.762385 960.187219,545.529051 C960.187219,544.222385 960.495219,543.226051 961.111219,542.540051 C961.727219,541.854051 962.576553,541.511051 963.659219,541.511051 C964.461886,541.511051 965.096553,541.665051 965.563219,541.973051 L965.563219,541.973051 L965.969219,541.161051 C965.390553,540.806385 964.615886,540.629051 963.645219,540.629051 C962.749219,540.629051 961.965219,540.822718 961.293219,541.210051 C960.621219,541.597385 960.098553,542.169051 959.725219,542.925051 C959.351886,543.681051 959.165219,544.605051 959.165219,545.697051 C959.165219,547.255718 959.510553,548.462051 960.201219,549.316051 C960.891886,550.170051 961.885886,550.597051 963.183219,550.597051 Z M963.141219,549.743051 C962.599886,549.743051 962.133219,549.645051 961.741219,549.449051 C961.349219,549.253051 961.052886,548.996385 960.852219,548.679051 C960.651553,548.361718 960.551219,548.016385 960.551219,547.643051 C960.551219,547.241718 960.658553,546.877718 960.873219,546.551051 C961.087886,546.224385 961.384219,545.967718 961.762219,545.781051 C962.140219,545.594385 962.576553,545.501051 963.071219,545.501051 C963.827219,545.501051 964.426886,545.692385 964.870219,546.075051 C965.313553,546.457718 965.535219,546.971051 965.535219,547.615051 C965.535219,548.259051 965.313553,548.774718 964.870219,549.162051 C964.426886,549.549385 963.850553,549.743051 963.141219,549.743051 Z M971.597219,550.597051 C972.353219,550.597051 973.027553,550.396385 973.620219,549.995051 C974.212886,549.593718 974.677219,549.017385 975.013219,548.266051 C975.349219,547.514718 975.517219,546.630385 975.517219,545.613051 C975.517219,544.595718 975.349219,543.711385 975.013219,542.960051 C974.677219,542.208718 974.212886,541.632385 973.620219,541.231051 C973.027553,540.829718 972.353219,540.629051 971.597219,540.629051 C970.841219,540.629051 970.166886,540.829718 969.574219,541.231051 C968.981553,541.632385 968.519553,542.208718 968.188219,542.960051 C967.856886,543.711385 967.691219,544.595718 967.691219,545.613051 C967.691219,546.630385 967.856886,547.514718 968.188219,548.266051 C968.519553,549.017385 968.981553,549.593718 969.574219,549.995051 C970.166886,550.396385 970.841219,550.597051 971.597219,550.597051 Z M971.597219,549.673051 C971.027886,549.673051 970.526219,549.514385 970.092219,549.197051 C969.658219,548.879718 969.319886,548.417718 969.077219,547.811051 C968.834553,547.204385 968.713219,546.471718 968.713219,545.613051 C968.713219,544.754385 968.834553,544.021718 969.077219,543.415051 C969.319886,542.808385 969.658219,542.346385 970.092219,542.029051 C970.526219,541.711718 971.027886,541.553051 971.597219,541.553051 C972.166553,541.553051 972.668219,541.711718 973.102219,542.029051 C973.536219,542.346385 973.874553,542.808385 974.117219,543.415051 C974.359886,544.021718 974.481219,544.754385 974.481219,545.613051 C974.481219,546.471718 974.359886,547.204385 974.117219,547.811051 C973.874553,548.417718 973.536219,548.879718 973.102219,549.197051 C972.668219,549.514385 972.166553,549.673051 971.597219,549.673051 Z\",\"id\":\"60\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":28}),React.createElement(\"path\",{\"d\":\"M1049.04247,550.597051 C1049.67714,550.597051 1050.24881,550.473385 1050.75747,550.226051 C1051.26614,549.978718 1051.66514,549.626385 1051.95447,549.169051 C1052.24381,548.711718 1052.38847,548.184385 1052.38847,547.587051 C1052.38847,546.999051 1052.24847,546.483385 1051.96847,546.040051 C1051.68847,545.596718 1051.29881,545.253718 1050.79947,545.011051 C1050.30014,544.768385 1049.72847,544.647051 1049.08447,544.647051 C1048.39381,544.647051 1047.78247,544.794051 1047.25047,545.088051 C1046.71847,545.382051 1046.33114,545.795051 1046.08847,546.327051 C1046.06047,546.028385 1046.04647,545.762385 1046.04647,545.529051 C1046.04647,544.222385 1046.35447,543.226051 1046.97047,542.540051 C1047.58647,541.854051 1048.43581,541.511051 1049.51847,541.511051 C1050.32114,541.511051 1050.95581,541.665051 1051.42247,541.973051 L1051.42247,541.973051 L1051.82847,541.161051 C1051.24981,540.806385 1050.47514,540.629051 1049.50447,540.629051 C1048.60847,540.629051 1047.82447,540.822718 1047.15247,541.210051 C1046.48047,541.597385 1045.95781,542.169051 1045.58447,542.925051 C1045.21114,543.681051 1045.02447,544.605051 1045.02447,545.697051 C1045.02447,547.255718 1045.36981,548.462051 1046.06047,549.316051 C1046.75114,550.170051 1047.74514,550.597051 1049.04247,550.597051 Z M1049.00047,549.743051 C1048.45914,549.743051 1047.99247,549.645051 1047.60047,549.449051 C1047.20847,549.253051 1046.91214,548.996385 1046.71147,548.679051 C1046.51081,548.361718 1046.41047,548.016385 1046.41047,547.643051 C1046.41047,547.241718 1046.51781,546.877718 1046.73247,546.551051 C1046.94714,546.224385 1047.24347,545.967718 1047.62147,545.781051 C1047.99947,545.594385 1048.43581,545.501051 1048.93047,545.501051 C1049.68647,545.501051 1050.28614,545.692385 1050.72947,546.075051 C1051.17281,546.457718 1051.39447,546.971051 1051.39447,547.615051 C1051.39447,548.259051 1051.17281,548.774718 1050.72947,549.162051 C1050.28614,549.549385 1049.70981,549.743051 1049.00047,549.743051 Z M1059.92047,550.513051 L1059.92047,547.937051 L1061.88047,547.937051 L1061.88047,547.041051 L1059.92047,547.041051 L1059.92047,544.773051 L1058.94047,544.773051 L1058.94047,547.041051 L1054.68447,547.041051 L1059.69647,540.713051 L1058.57647,540.713051 L1053.38247,547.209051 L1053.38247,547.937051 L1058.91247,547.937051 L1058.91247,550.513051 L1059.92047,550.513051 Z\",\"id\":\"64\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":29}),React.createElement(\"path\",{\"d\":\"M1088.7003,550.597051 C1089.33496,550.597051 1089.90663,550.473385 1090.4153,550.226051 C1090.92396,549.978718 1091.32296,549.626385 1091.6123,549.169051 C1091.90163,548.711718 1092.0463,548.184385 1092.0463,547.587051 C1092.0463,546.999051 1091.9063,546.483385 1091.6263,546.040051 C1091.3463,545.596718 1090.95663,545.253718 1090.4573,545.011051 C1089.95796,544.768385 1089.3863,544.647051 1088.7423,544.647051 C1088.05163,544.647051 1087.4403,544.794051 1086.9083,545.088051 C1086.3763,545.382051 1085.98896,545.795051 1085.7463,546.327051 C1085.7183,546.028385 1085.7043,545.762385 1085.7043,545.529051 C1085.7043,544.222385 1086.0123,543.226051 1086.6283,542.540051 C1087.2443,541.854051 1088.09363,541.511051 1089.1763,541.511051 C1089.97896,541.511051 1090.61363,541.665051 1091.0803,541.973051 L1091.0803,541.973051 L1091.4863,541.161051 C1090.90763,540.806385 1090.13296,540.629051 1089.1623,540.629051 C1088.2663,540.629051 1087.4823,540.822718 1086.8103,541.210051 C1086.1383,541.597385 1085.61563,542.169051 1085.2423,542.925051 C1084.86896,543.681051 1084.6823,544.605051 1084.6823,545.697051 C1084.6823,547.255718 1085.02763,548.462051 1085.7183,549.316051 C1086.40896,550.170051 1087.40296,550.597051 1088.7003,550.597051 Z M1088.6583,549.743051 C1088.11696,549.743051 1087.6503,549.645051 1087.2583,549.449051 C1086.8663,549.253051 1086.56996,548.996385 1086.3693,548.679051 C1086.16863,548.361718 1086.0683,548.016385 1086.0683,547.643051 C1086.0683,547.241718 1086.17563,546.877718 1086.3903,546.551051 C1086.60496,546.224385 1086.9013,545.967718 1087.2793,545.781051 C1087.6573,545.594385 1088.09363,545.501051 1088.5883,545.501051 C1089.3443,545.501051 1089.94396,545.692385 1090.3873,546.075051 C1090.83063,546.457718 1091.0523,546.971051 1091.0523,547.615051 C1091.0523,548.259051 1090.83063,548.774718 1090.3873,549.162051 C1089.94396,549.549385 1089.36763,549.743051 1088.6583,549.743051 Z M1097.2263,550.597051 C1097.86096,550.597051 1098.43263,550.473385 1098.9413,550.226051 C1099.44996,549.978718 1099.84896,549.626385 1100.1383,549.169051 C1100.42763,548.711718 1100.5723,548.184385 1100.5723,547.587051 C1100.5723,546.999051 1100.4323,546.483385 1100.1523,546.040051 C1099.8723,545.596718 1099.48263,545.253718 1098.9833,545.011051 C1098.48396,544.768385 1097.9123,544.647051 1097.2683,544.647051 C1096.57763,544.647051 1095.9663,544.794051 1095.4343,545.088051 C1094.9023,545.382051 1094.51496,545.795051 1094.2723,546.327051 C1094.2443,546.028385 1094.2303,545.762385 1094.2303,545.529051 C1094.2303,544.222385 1094.5383,543.226051 1095.1543,542.540051 C1095.7703,541.854051 1096.61963,541.511051 1097.7023,541.511051 C1098.50496,541.511051 1099.13963,541.665051 1099.6063,541.973051 L1099.6063,541.973051 L1100.0123,541.161051 C1099.43363,540.806385 1098.65896,540.629051 1097.6883,540.629051 C1096.7923,540.629051 1096.0083,540.822718 1095.3363,541.210051 C1094.6643,541.597385 1094.14163,542.169051 1093.7683,542.925051 C1093.39496,543.681051 1093.2083,544.605051 1093.2083,545.697051 C1093.2083,547.255718 1093.55363,548.462051 1094.2443,549.316051 C1094.93496,550.170051 1095.92896,550.597051 1097.2263,550.597051 Z M1097.1843,549.743051 C1096.64296,549.743051 1096.1763,549.645051 1095.7843,549.449051 C1095.3923,549.253051 1095.09596,548.996385 1094.8953,548.679051 C1094.69463,548.361718 1094.5943,548.016385 1094.5943,547.643051 C1094.5943,547.241718 1094.70163,546.877718 1094.9163,546.551051 C1095.13096,546.224385 1095.4273,545.967718 1095.8053,545.781051 C1096.1833,545.594385 1096.61963,545.501051 1097.1143,545.501051 C1097.8703,545.501051 1098.46996,545.692385 1098.9133,546.075051 C1099.35663,546.457718 1099.5783,546.971051 1099.5783,547.615051 C1099.5783,548.259051 1099.35663,548.774718 1098.9133,549.162051 C1098.46996,549.549385 1097.89363,549.743051 1097.1843,549.743051 Z\",\"id\":\"66\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":30})])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph3Desktop.defaultProps = {\"width\":\"1105px\",\"height\":\"606px\",\"viewBox\":\"0 0 1105 606\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph3Desktop;\n\nSchoolYearsGapsInAttainmentGraph3Desktop.default = SchoolYearsGapsInAttainmentGraph3Desktop;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","var React = require('react');\n\nfunction ApprenticeshipsDesktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 10\"),React.createElement(\"g\",{\"id\":\"Home->-Issues-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/Further-education/Apprenticeships\",\"transform\":\"translate(-166.000000, -1343.000000)\"},React.createElement(\"g\",{\"id\":\"Group-27\",\"transform\":\"translate(166.000000, 1278.000000)\"},React.createElement(\"g\",{\"id\":\"Group-11\",\"transform\":\"translate(0.000000, 58.000000)\"},React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.000000, 7.000000)\"},[React.createElement(\"path\",{\"d\":\"M46.48,14 L46.48,12.976 L40.32,12.976 L44.128,9.232 C44.8426667,8.53866667 45.328,7.92533333 45.584,7.392 C45.84,6.85866667 45.968,6.304 45.968,5.728 C45.968,4.78933333 45.6346667,4.05066667 44.968,3.512 C44.3013333,2.97333333 43.3973333,2.704 42.256,2.704 C41.4026667,2.704 40.6373333,2.84266667 39.96,3.12 C39.2826667,3.39733333 38.7253333,3.792 38.288,4.304 L38.288,4.304 L39.104,5.008 C39.8293333,4.176 40.848,3.76 42.16,3.76 C43.0026667,3.76 43.6506667,3.944 44.104,4.312 C44.5573333,4.68 44.784,5.19466667 44.784,5.856 C44.784,6.28266667 44.68,6.70666667 44.472,7.128 C44.264,7.54933333 43.8666667,8.048 43.28,8.624 L43.28,8.624 L38.624,13.184 L38.624,14 L46.48,14 Z M52.384,14.096 C53.248,14.096 54.0186667,13.8666667 54.696,13.408 C55.3733333,12.9493333 55.904,12.2906667 56.288,11.432 C56.672,10.5733333 56.864,9.56266667 56.864,8.4 C56.864,7.23733333 56.672,6.22666667 56.288,5.368 C55.904,4.50933333 55.3733333,3.85066667 54.696,3.392 C54.0186667,2.93333333 53.248,2.704 52.384,2.704 C51.52,2.704 50.7493333,2.93333333 50.072,3.392 C49.3946667,3.85066667 48.8666667,4.50933333 48.488,5.368 C48.1093333,6.22666667 47.92,7.23733333 47.92,8.4 C47.92,9.56266667 48.1093333,10.5733333 48.488,11.432 C48.8666667,12.2906667 49.3946667,12.9493333 50.072,13.408 C50.7493333,13.8666667 51.52,14.096 52.384,14.096 Z M52.384,13.04 C51.7333333,13.04 51.16,12.8586667 50.664,12.496 C50.168,12.1333333 49.7813333,11.6053333 49.504,10.912 C49.2266667,10.2186667 49.088,9.38133333 49.088,8.4 C49.088,7.41866667 49.2266667,6.58133333 49.504,5.888 C49.7813333,5.19466667 50.168,4.66666667 50.664,4.304 C51.16,3.94133333 51.7333333,3.76 52.384,3.76 C53.0346667,3.76 53.608,3.94133333 54.104,4.304 C54.6,4.66666667 54.9866667,5.19466667 55.264,5.888 C55.5413333,6.58133333 55.68,7.41866667 55.68,8.4 C55.68,9.38133333 55.5413333,10.2186667 55.264,10.912 C54.9866667,11.6053333 54.6,12.1333333 54.104,12.496 C53.608,12.8586667 53.0346667,13.04 52.384,13.04 Z M61.616,14 L61.616,2.8 L57.824,2.8 L57.824,3.824 L60.464,3.824 L60.464,14 L61.616,14 Z M67.824,14.096 C68.7093333,14.096 69.456,13.9493333 70.064,13.656 C70.672,13.3626667 71.128,12.96 71.432,12.448 C71.736,11.936 71.888,11.3546667 71.888,10.704 C71.888,9.65866667 71.5173333,8.84533333 70.776,8.264 C70.0346667,7.68266667 68.8533333,7.392 67.232,7.392 L67.232,7.392 L65.792,7.392 L66.176,3.824 L71.296,3.824 L71.296,2.8 L65.168,2.8 L64.592,8.416 L66.976,8.416 C68.3306667,8.416 69.2933333,8.61333333 69.864,9.008 C70.4346667,9.40266667 70.72,9.984 70.72,10.752 C70.72,11.4453333 70.4666667,12 69.96,12.416 C69.4533333,12.832 68.736,13.04 67.808,13.04 C67.104,13.04 66.448,12.92 65.84,12.68 C65.232,12.44 64.7413333,12.128 64.368,11.744 L64.368,11.744 L63.808,12.656 C64.2453333,13.0933333 64.824,13.4426667 65.544,13.704 C66.264,13.9653333 67.024,14.096 67.824,14.096 Z M73.152,15.6 L78.432,0.528 L77.392,0.528 L72.112,15.6 L73.152,15.6 Z M81.808,14 L81.808,2.8 L78.016,2.8 L78.016,3.824 L80.656,3.824 L80.656,14 L81.808,14 Z M89.072,14.096 C89.7973333,14.096 90.4506667,13.9546667 91.032,13.672 C91.6133333,13.3893333 92.0693333,12.9866667 92.4,12.464 C92.7306667,11.9413333 92.896,11.3386667 92.896,10.656 C92.896,9.984 92.736,9.39466667 92.416,8.888 C92.096,8.38133333 91.6506667,7.98933333 91.08,7.712 C90.5093333,7.43466667 89.856,7.296 89.12,7.296 C88.3306667,7.296 87.632,7.464 87.024,7.8 C86.416,8.136 85.9733333,8.608 85.696,9.216 C85.664,8.87466667 85.648,8.57066667 85.648,8.304 C85.648,6.81066667 86,5.672 86.704,4.888 C87.408,4.104 88.3786667,3.712 89.616,3.712 C90.5333333,3.712 91.2586667,3.888 91.792,4.24 L91.792,4.24 L92.256,3.312 C91.5946667,2.90666667 90.7093333,2.704 89.6,2.704 C88.576,2.704 87.68,2.92533333 86.912,3.368 C86.144,3.81066667 85.5466667,4.464 85.12,5.328 C84.6933333,6.192 84.48,7.248 84.48,8.496 C84.48,10.2773333 84.8746667,11.656 85.664,12.632 C86.4533333,13.608 87.5893333,14.096 89.072,14.096 Z M89.024,13.12 C88.4053333,13.12 87.872,13.008 87.424,12.784 C86.976,12.56 86.6373333,12.2666667 86.408,11.904 C86.1786667,11.5413333 86.064,11.1466667 86.064,10.72 C86.064,10.2613333 86.1866667,9.84533333 86.432,9.472 C86.6773333,9.09866667 87.016,8.80533333 87.448,8.592 C87.88,8.37866667 88.3786667,8.272 88.944,8.272 C89.808,8.272 90.4933333,8.49066667 91,8.928 C91.5066667,9.36533333 91.76,9.952 91.76,10.688 C91.76,11.424 91.5066667,12.0133333 91,12.456 C90.4933333,12.8986667 89.8346667,13.12 89.024,13.12 Z\",\"id\":\"2015/16\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"6\",\"y1\":\"8\",\"x2\":\"26\",\"y2\":\"8\",\"id\":\"Line-5\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M158.48,14 L158.48,12.976 L152.32,12.976 L156.128,9.232 C156.842667,8.53866667 157.328,7.92533333 157.584,7.392 C157.84,6.85866667 157.968,6.304 157.968,5.728 C157.968,4.78933333 157.634667,4.05066667 156.968,3.512 C156.301333,2.97333333 155.397333,2.704 154.256,2.704 C153.402667,2.704 152.637333,2.84266667 151.96,3.12 C151.282667,3.39733333 150.725333,3.792 150.288,4.304 L150.288,4.304 L151.104,5.008 C151.829333,4.176 152.848,3.76 154.16,3.76 C155.002667,3.76 155.650667,3.944 156.104,4.312 C156.557333,4.68 156.784,5.19466667 156.784,5.856 C156.784,6.28266667 156.68,6.70666667 156.472,7.128 C156.264,7.54933333 155.866667,8.048 155.28,8.624 L155.28,8.624 L150.624,13.184 L150.624,14 L158.48,14 Z M164.384,14.096 C165.248,14.096 166.018667,13.8666667 166.696,13.408 C167.373333,12.9493333 167.904,12.2906667 168.288,11.432 C168.672,10.5733333 168.864,9.56266667 168.864,8.4 C168.864,7.23733333 168.672,6.22666667 168.288,5.368 C167.904,4.50933333 167.373333,3.85066667 166.696,3.392 C166.018667,2.93333333 165.248,2.704 164.384,2.704 C163.52,2.704 162.749333,2.93333333 162.072,3.392 C161.394667,3.85066667 160.866667,4.50933333 160.488,5.368 C160.109333,6.22666667 159.92,7.23733333 159.92,8.4 C159.92,9.56266667 160.109333,10.5733333 160.488,11.432 C160.866667,12.2906667 161.394667,12.9493333 162.072,13.408 C162.749333,13.8666667 163.52,14.096 164.384,14.096 Z M164.384,13.04 C163.733333,13.04 163.16,12.8586667 162.664,12.496 C162.168,12.1333333 161.781333,11.6053333 161.504,10.912 C161.226667,10.2186667 161.088,9.38133333 161.088,8.4 C161.088,7.41866667 161.226667,6.58133333 161.504,5.888 C161.781333,5.19466667 162.168,4.66666667 162.664,4.304 C163.16,3.94133333 163.733333,3.76 164.384,3.76 C165.034667,3.76 165.608,3.94133333 166.104,4.304 C166.6,4.66666667 166.986667,5.19466667 167.264,5.888 C167.541333,6.58133333 167.68,7.41866667 167.68,8.4 C167.68,9.38133333 167.541333,10.2186667 167.264,10.912 C166.986667,11.6053333 166.6,12.1333333 166.104,12.496 C165.608,12.8586667 165.034667,13.04 164.384,13.04 Z M173.616,14 L173.616,2.8 L169.824,2.8 L169.824,3.824 L172.464,3.824 L172.464,14 L173.616,14 Z M180.88,14.096 C181.605333,14.096 182.258667,13.9546667 182.84,13.672 C183.421333,13.3893333 183.877333,12.9866667 184.208,12.464 C184.538667,11.9413333 184.704,11.3386667 184.704,10.656 C184.704,9.984 184.544,9.39466667 184.224,8.888 C183.904,8.38133333 183.458667,7.98933333 182.888,7.712 C182.317333,7.43466667 181.664,7.296 180.928,7.296 C180.138667,7.296 179.44,7.464 178.832,7.8 C178.224,8.136 177.781333,8.608 177.504,9.216 C177.472,8.87466667 177.456,8.57066667 177.456,8.304 C177.456,6.81066667 177.808,5.672 178.512,4.888 C179.216,4.104 180.186667,3.712 181.424,3.712 C182.341333,3.712 183.066667,3.888 183.6,4.24 L183.6,4.24 L184.064,3.312 C183.402667,2.90666667 182.517333,2.704 181.408,2.704 C180.384,2.704 179.488,2.92533333 178.72,3.368 C177.952,3.81066667 177.354667,4.464 176.928,5.328 C176.501333,6.192 176.288,7.248 176.288,8.496 C176.288,10.2773333 176.682667,11.656 177.472,12.632 C178.261333,13.608 179.397333,14.096 180.88,14.096 Z M180.832,13.12 C180.213333,13.12 179.68,13.008 179.232,12.784 C178.784,12.56 178.445333,12.2666667 178.216,11.904 C177.986667,11.5413333 177.872,11.1466667 177.872,10.72 C177.872,10.2613333 177.994667,9.84533333 178.24,9.472 C178.485333,9.09866667 178.824,8.80533333 179.256,8.592 C179.688,8.37866667 180.186667,8.272 180.752,8.272 C181.616,8.272 182.301333,8.49066667 182.808,8.928 C183.314667,9.36533333 183.568,9.952 183.568,10.688 C183.568,11.424 183.314667,12.0133333 182.808,12.456 C182.301333,12.8986667 181.642667,13.12 180.832,13.12 Z M185.84,15.6 L191.12,0.528 L190.08,0.528 L184.8,15.6 L185.84,15.6 Z M194.496,14 L194.496,2.8 L190.704,2.8 L190.704,3.824 L193.344,3.824 L193.344,14 L194.496,14 Z M200.384,14 L205.072,3.616 L205.072,2.8 L196.848,2.8 L196.848,5.92 L197.984,5.92 L197.984,3.824 L203.744,3.824 L199.136,14 L200.384,14 Z\",\"id\":\"2016/17\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"118\",\"y1\":\"8\",\"x2\":\"138\",\"y2\":\"8\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M270.48,14 L270.48,12.976 L264.32,12.976 L268.128,9.232 C268.842667,8.53866667 269.328,7.92533333 269.584,7.392 C269.84,6.85866667 269.968,6.304 269.968,5.728 C269.968,4.78933333 269.634667,4.05066667 268.968,3.512 C268.301333,2.97333333 267.397333,2.704 266.256,2.704 C265.402667,2.704 264.637333,2.84266667 263.96,3.12 C263.282667,3.39733333 262.725333,3.792 262.288,4.304 L262.288,4.304 L263.104,5.008 C263.829333,4.176 264.848,3.76 266.16,3.76 C267.002667,3.76 267.650667,3.944 268.104,4.312 C268.557333,4.68 268.784,5.19466667 268.784,5.856 C268.784,6.28266667 268.68,6.70666667 268.472,7.128 C268.264,7.54933333 267.866667,8.048 267.28,8.624 L267.28,8.624 L262.624,13.184 L262.624,14 L270.48,14 Z M276.384,14.096 C277.248,14.096 278.018667,13.8666667 278.696,13.408 C279.373333,12.9493333 279.904,12.2906667 280.288,11.432 C280.672,10.5733333 280.864,9.56266667 280.864,8.4 C280.864,7.23733333 280.672,6.22666667 280.288,5.368 C279.904,4.50933333 279.373333,3.85066667 278.696,3.392 C278.018667,2.93333333 277.248,2.704 276.384,2.704 C275.52,2.704 274.749333,2.93333333 274.072,3.392 C273.394667,3.85066667 272.866667,4.50933333 272.488,5.368 C272.109333,6.22666667 271.92,7.23733333 271.92,8.4 C271.92,9.56266667 272.109333,10.5733333 272.488,11.432 C272.866667,12.2906667 273.394667,12.9493333 274.072,13.408 C274.749333,13.8666667 275.52,14.096 276.384,14.096 Z M276.384,13.04 C275.733333,13.04 275.16,12.8586667 274.664,12.496 C274.168,12.1333333 273.781333,11.6053333 273.504,10.912 C273.226667,10.2186667 273.088,9.38133333 273.088,8.4 C273.088,7.41866667 273.226667,6.58133333 273.504,5.888 C273.781333,5.19466667 274.168,4.66666667 274.664,4.304 C275.16,3.94133333 275.733333,3.76 276.384,3.76 C277.034667,3.76 277.608,3.94133333 278.104,4.304 C278.6,4.66666667 278.986667,5.19466667 279.264,5.888 C279.541333,6.58133333 279.68,7.41866667 279.68,8.4 C279.68,9.38133333 279.541333,10.2186667 279.264,10.912 C278.986667,11.6053333 278.6,12.1333333 278.104,12.496 C277.608,12.8586667 277.034667,13.04 276.384,13.04 Z M285.616,14 L285.616,2.8 L281.824,2.8 L281.824,3.824 L284.464,3.824 L284.464,14 L285.616,14 Z M291.504,14 L296.192,3.616 L296.192,2.8 L287.968,2.8 L287.968,5.92 L289.104,5.92 L289.104,3.824 L294.864,3.824 L290.256,14 L291.504,14 Z M297.52,15.6 L302.8,0.528 L301.76,0.528 L296.48,15.6 L297.52,15.6 Z M306.176,14 L306.176,2.8 L302.384,2.8 L302.384,3.824 L305.024,3.824 L305.024,14 L306.176,14 Z M313.104,14.096 C313.989333,14.096 314.76,13.9653333 315.416,13.704 C316.072,13.4426667 316.576,13.0693333 316.928,12.584 C317.28,12.0986667 317.456,11.5306667 317.456,10.88 C317.456,10.2186667 317.266667,9.65333333 316.888,9.184 C316.509333,8.71466667 315.968,8.36266667 315.264,8.128 C315.84,7.904 316.282667,7.58133333 316.592,7.16 C316.901333,6.73866667 317.056,6.24 317.056,5.664 C317.056,5.06666667 316.890667,4.544 316.56,4.096 C316.229333,3.648 315.768,3.304 315.176,3.064 C314.584,2.824 313.893333,2.704 313.104,2.704 C311.909333,2.704 310.957333,2.97066667 310.248,3.504 C309.538667,4.03733333 309.184,4.75733333 309.184,5.664 C309.184,6.24 309.333333,6.73866667 309.632,7.16 C309.930667,7.58133333 310.368,7.904 310.944,8.128 C310.24,8.36266667 309.704,8.712 309.336,9.176 C308.968,9.64 308.784,10.208 308.784,10.88 C308.784,11.872 309.168,12.656 309.936,13.232 C310.704,13.808 311.76,14.096 313.104,14.096 Z M313.104,7.712 C312.24,7.712 311.562667,7.53066667 311.072,7.168 C310.581333,6.80533333 310.336,6.31466667 310.336,5.696 C310.336,5.07733333 310.584,4.58666667 311.08,4.224 C311.576,3.86133333 312.250667,3.68 313.104,3.68 C313.946667,3.68 314.621333,3.86133333 315.128,4.224 C315.634667,4.58666667 315.888,5.08266667 315.888,5.712 C315.888,6.32 315.64,6.80533333 315.144,7.168 C314.648,7.53066667 313.968,7.712 313.104,7.712 Z M313.104,13.12 C312.112,13.12 311.338667,12.92 310.784,12.52 C310.229333,12.12 309.952,11.568 309.952,10.864 C309.952,10.1706667 310.232,9.624 310.792,9.224 C311.352,8.824 312.122667,8.624 313.104,8.624 C314.096,8.624 314.872,8.824 315.432,9.224 C315.992,9.624 316.272,10.1706667 316.272,10.864 C316.272,11.5573333 315.992,12.1066667 315.432,12.512 C314.872,12.9173333 314.096,13.12 313.104,13.12 Z\",\"id\":\"2017/18\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"230\",\"y1\":\"8\",\"x2\":\"250\",\"y2\":\"8\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":5}),React.createElement(\"polygon\",{\"id\":\"Line-7\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"859 339 859 340 35 340 35 339\",\"key\":6}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"859 69.5 859 70.5 35 70.5 35 69.5\",\"key\":7}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy-2\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"859 159.333333 859 160.333333 35 160.333333 35 159.333333\",\"key\":8}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy-3\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"859 249.166667 859 250.166667 35 250.166667 35 249.166667\",\"key\":9}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"fill\":\"#2D3142\",\"x\":\"65\",\"y\":\"99\",\"width\":\"30\",\"height\":\"241\",\"key\":10}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-61\",\"fill\":\"#2D3142\",\"x\":\"236\",\"y\":\"77\",\"width\":\"30\",\"height\":\"263\",\"key\":11}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-64\",\"fill\":\"#2D3142\",\"x\":\"407\",\"y\":\"124\",\"width\":\"30\",\"height\":\"216\",\"key\":12}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-67\",\"fill\":\"#2D3142\",\"x\":\"578\",\"y\":\"145\",\"width\":\"30\",\"height\":\"195\",\"key\":13}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-70\",\"fill\":\"#2D3142\",\"x\":\"749\",\"y\":\"222\",\"width\":\"30\",\"height\":\"118\",\"key\":14}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-59\",\"fill\":\"#3772FF\",\"x\":\"103\",\"y\":\"99\",\"width\":\"30\",\"height\":\"241\",\"key\":15}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-62\",\"fill\":\"#3772FF\",\"x\":\"274\",\"y\":\"77\",\"width\":\"30\",\"height\":\"263\",\"key\":16}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-65\",\"fill\":\"#3772FF\",\"x\":\"445\",\"y\":\"124\",\"width\":\"30\",\"height\":\"216\",\"key\":17}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-68\",\"fill\":\"#3772FF\",\"x\":\"616\",\"y\":\"145\",\"width\":\"30\",\"height\":\"195\",\"key\":18}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-71\",\"fill\":\"#3772FF\",\"x\":\"787\",\"y\":\"222\",\"width\":\"30\",\"height\":\"118\",\"key\":19}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-60\",\"fill\":\"#FFBA08\",\"x\":\"141\",\"y\":\"132\",\"width\":\"30\",\"height\":\"208\",\"key\":20}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-63\",\"fill\":\"#FFBA08\",\"x\":\"312\",\"y\":\"99\",\"width\":\"30\",\"height\":\"241\",\"key\":21}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-66\",\"fill\":\"#FFBA08\",\"x\":\"483\",\"y\":\"150\",\"width\":\"30\",\"height\":\"190\",\"key\":22}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-69\",\"fill\":\"#FFBA08\",\"x\":\"654\",\"y\":\"184\",\"width\":\"30\",\"height\":\"156\",\"key\":23}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-72\",\"fill\":\"#FFBA08\",\"x\":\"825\",\"y\":\"222\",\"width\":\"30\",\"height\":\"118\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M41.544,373 L41.544,362.824 L45.48,362.824 L45.48,361.8 L36.424,361.8 L36.424,362.824 L40.36,362.824 L40.36,373 L41.544,373 Z M50.568,373.08 C51.3786667,373.08 52.1093333,372.896 52.76,372.528 C53.4106667,372.16 53.92,371.650667 54.288,371 C54.656,370.349333 54.84,369.613333 54.84,368.792 C54.84,367.970667 54.656,367.234667 54.288,366.584 C53.92,365.933333 53.4106667,365.426667 52.76,365.064 C52.1093333,364.701333 51.3786667,364.52 50.568,364.52 C49.7573333,364.52 49.0266667,364.701333 48.376,365.064 C47.7253333,365.426667 47.2133333,365.933333 46.84,366.584 C46.4666667,367.234667 46.28,367.970667 46.28,368.792 C46.28,369.613333 46.4666667,370.349333 46.84,371 C47.2133333,371.650667 47.7253333,372.16 48.376,372.528 C49.0266667,372.896 49.7573333,373.08 50.568,373.08 Z M50.568,372.072 C49.9706667,372.072 49.4346667,371.936 48.96,371.664 C48.4853333,371.392 48.112,371.005333 47.84,370.504 C47.568,370.002667 47.432,369.432 47.432,368.792 C47.432,368.152 47.568,367.581333 47.84,367.08 C48.112,366.578667 48.4853333,366.192 48.96,365.92 C49.4346667,365.648 49.9706667,365.512 50.568,365.512 C51.1653333,365.512 51.7013333,365.648 52.176,365.92 C52.6506667,366.192 53.0213333,366.578667 53.288,367.08 C53.5546667,367.581333 53.688,368.152 53.688,368.792 C53.688,369.432 53.5546667,370.002667 53.288,370.504 C53.0213333,371.005333 52.6506667,371.392 52.176,371.664 C51.7013333,371.936 51.1653333,372.072 50.568,372.072 Z M59.816,373.08 C60.1573333,373.08 60.4853333,373.029333 60.8,372.928 C61.1146667,372.826667 61.3786667,372.68 61.592,372.488 L61.592,372.488 L61.192,371.672 C61.032,371.810667 60.8426667,371.917333 60.624,371.992 C60.4053333,372.066667 60.1786667,372.104 59.944,372.104 C59.4746667,372.104 59.1146667,371.973333 58.864,371.712 C58.6133333,371.450667 58.488,371.069333 58.488,370.568 L58.488,370.568 L58.488,365.544 L61.048,365.544 L61.048,364.584 L58.488,364.584 L58.488,362.744 L57.352,362.744 L57.352,364.584 L55.848,364.584 L55.848,365.544 L57.352,365.544 L57.352,370.632 C57.352,371.410667 57.5653333,372.013333 57.992,372.44 C58.4186667,372.866667 59.0266667,373.08 59.816,373.08 Z M66.024,373.08 C66.7066667,373.08 67.296,372.957333 67.792,372.712 C68.288,372.466667 68.664,372.125333 68.92,371.688 L68.92,371.688 L68.92,373 L70.008,373 L70.008,367.784 C70.008,366.706667 69.7146667,365.893333 69.128,365.344 C68.5413333,364.794667 67.6986667,364.52 66.6,364.52 C65.9386667,364.52 65.3093333,364.618667 64.712,364.816 C64.1146667,365.013333 63.6026667,365.293333 63.176,365.656 L63.176,365.656 L63.688,366.504 C64.04,366.194667 64.4613333,365.952 64.952,365.776 C65.4426667,365.6 65.9546667,365.512 66.488,365.512 C67.2666667,365.512 67.8586667,365.701333 68.264,366.08 C68.6693333,366.458667 68.872,367.010667 68.872,367.736 L68.872,367.736 L68.872,368.248 L66.2,368.248 C65.0693333,368.248 64.2453333,368.466667 63.728,368.904 C63.2106667,369.341333 62.952,369.917333 62.952,370.632 C62.952,371.368 63.2293333,371.96 63.784,372.408 C64.3386667,372.856 65.0853333,373.08 66.024,373.08 Z M66.2,372.184 C65.528,372.184 65.0053333,372.042667 64.632,371.76 C64.2586667,371.477333 64.072,371.090667 64.072,370.6 C64.072,369.597333 64.792,369.096 66.232,369.096 L66.232,369.096 L68.872,369.096 L68.872,370.472 C68.648,371.026667 68.3066667,371.450667 67.848,371.744 C67.3893333,372.037333 66.84,372.184 66.2,372.184 Z M74.232,373 L74.232,361.128 L73.096,361.128 L73.096,373 L74.232,373 Z M84.936,373.08 C85.64,373.08 86.272,372.930667 86.832,372.632 C87.392,372.333333 87.8426667,371.901333 88.184,371.336 L88.184,371.336 L88.184,373 L89.272,373 L89.272,361.128 L88.136,361.128 L88.136,366.184 C87.784,365.64 87.3333333,365.226667 86.784,364.944 C86.2346667,364.661333 85.6186667,364.52 84.936,364.52 C84.1466667,364.52 83.432,364.698667 82.792,365.056 C82.152,365.413333 81.6506667,365.917333 81.288,366.568 C80.9253333,367.218667 80.744,367.96 80.744,368.792 C80.744,369.624 80.9253333,370.365333 81.288,371.016 C81.6506667,371.666667 82.152,372.173333 82.792,372.536 C83.432,372.898667 84.1466667,373.08 84.936,373.08 Z M85.032,372.072 C84.4346667,372.072 83.8986667,371.936 83.424,371.664 C82.9493333,371.392 82.576,371.005333 82.304,370.504 C82.032,370.002667 81.896,369.432 81.896,368.792 C81.896,368.152 82.032,367.581333 82.304,367.08 C82.576,366.578667 82.9493333,366.192 83.424,365.92 C83.8986667,365.648 84.4346667,365.512 85.032,365.512 C85.6186667,365.512 86.1493333,365.648 86.624,365.92 C87.0986667,366.192 87.472,366.578667 87.744,367.08 C88.016,367.581333 88.152,368.152 88.152,368.792 C88.152,369.432 88.016,370.002667 87.744,370.504 C87.472,371.005333 87.0986667,371.392 86.624,371.664 C86.1493333,371.936 85.6186667,372.072 85.032,372.072 Z M93.016,362.744 C93.2506667,362.744 93.448,362.664 93.608,362.504 C93.768,362.344 93.848,362.146667 93.848,361.912 C93.848,361.698667 93.768,361.514667 93.608,361.36 C93.448,361.205333 93.2506667,361.128 93.016,361.128 C92.7813333,361.128 92.584,361.208 92.424,361.368 C92.264,361.528 92.184,361.714667 92.184,361.928 C92.184,362.152 92.264,362.344 92.424,362.504 C92.584,362.664 92.7813333,362.744 93.016,362.744 Z M93.576,373 L93.576,364.584 L92.44,364.584 L92.44,373 L93.576,373 Z M99,373.08 C100.088,373.08 100.938667,372.864 101.552,372.432 C102.165333,372 102.472,371.416 102.472,370.68 C102.472,370.136 102.328,369.709333 102.04,369.4 C101.752,369.090667 101.405333,368.872 101,368.744 C100.594667,368.616 100.056,368.488 99.384,368.36 C98.84,368.264 98.4133333,368.170667 98.104,368.08 C97.7946667,367.989333 97.536,367.848 97.328,367.656 C97.12,367.464 97.016,367.208 97.016,366.888 C97.016,366.472 97.2,366.136 97.568,365.88 C97.936,365.624 98.4826667,365.496 99.208,365.496 C100.168,365.496 100.994667,365.736 101.688,366.216 L101.688,366.216 L102.184,365.304 C101.832,365.069333 101.384,364.88 100.84,364.736 C100.296,364.592 99.752,364.52 99.208,364.52 C98.1626667,364.52 97.3466667,364.744 96.76,365.192 C96.1733333,365.64 95.88,366.216 95.88,366.92 C95.88,367.485333 96.0266667,367.928 96.32,368.248 C96.6133333,368.568 96.968,368.794667 97.384,368.928 C97.8,369.061333 98.3493333,369.192 99.032,369.32 C99.544,369.405333 99.9546667,369.493333 100.264,369.584 C100.573333,369.674667 100.829333,369.808 101.032,369.984 C101.234667,370.16 101.336,370.402667 101.336,370.712 C101.336,371.149333 101.152,371.488 100.784,371.728 C100.416,371.968 99.848,372.088 99.08,372.088 C98.504,372.088 97.9493333,372 97.416,371.824 C96.8826667,371.648 96.44,371.421333 96.088,371.144 L96.088,371.144 L95.576,372.04 C95.928,372.338667 96.416,372.586667 97.04,372.784 C97.664,372.981333 98.3173333,373.08 99,373.08 Z M106.936,373.08 C107.618667,373.08 108.208,372.957333 108.704,372.712 C109.2,372.466667 109.576,372.125333 109.832,371.688 L109.832,371.688 L109.832,373 L110.92,373 L110.92,367.784 C110.92,366.706667 110.626667,365.893333 110.04,365.344 C109.453333,364.794667 108.610667,364.52 107.512,364.52 C106.850667,364.52 106.221333,364.618667 105.624,364.816 C105.026667,365.013333 104.514667,365.293333 104.088,365.656 L104.088,365.656 L104.6,366.504 C104.952,366.194667 105.373333,365.952 105.864,365.776 C106.354667,365.6 106.866667,365.512 107.4,365.512 C108.178667,365.512 108.770667,365.701333 109.176,366.08 C109.581333,366.458667 109.784,367.010667 109.784,367.736 L109.784,367.736 L109.784,368.248 L107.112,368.248 C105.981333,368.248 105.157333,368.466667 104.64,368.904 C104.122667,369.341333 103.864,369.917333 103.864,370.632 C103.864,371.368 104.141333,371.96 104.696,372.408 C105.250667,372.856 105.997333,373.08 106.936,373.08 Z M107.112,372.184 C106.44,372.184 105.917333,372.042667 105.544,371.76 C105.170667,371.477333 104.984,371.090667 104.984,370.6 C104.984,369.597333 105.704,369.096 107.144,369.096 L107.144,369.096 L109.784,369.096 L109.784,370.472 C109.56,371.026667 109.218667,371.450667 108.76,371.744 C108.301333,372.037333 107.752,372.184 107.112,372.184 Z M117.352,373.08 C118.056,373.08 118.688,372.930667 119.248,372.632 C119.808,372.333333 120.258667,371.901333 120.6,371.336 L120.6,371.336 L120.6,373 L121.688,373 L121.688,361.128 L120.552,361.128 L120.552,366.184 C120.2,365.64 119.749333,365.226667 119.2,364.944 C118.650667,364.661333 118.034667,364.52 117.352,364.52 C116.562667,364.52 115.848,364.698667 115.208,365.056 C114.568,365.413333 114.066667,365.917333 113.704,366.568 C113.341333,367.218667 113.16,367.96 113.16,368.792 C113.16,369.624 113.341333,370.365333 113.704,371.016 C114.066667,371.666667 114.568,372.173333 115.208,372.536 C115.848,372.898667 116.562667,373.08 117.352,373.08 Z M117.448,372.072 C116.850667,372.072 116.314667,371.936 115.84,371.664 C115.365333,371.392 114.992,371.005333 114.72,370.504 C114.448,370.002667 114.312,369.432 114.312,368.792 C114.312,368.152 114.448,367.581333 114.72,367.08 C114.992,366.578667 115.365333,366.192 115.84,365.92 C116.314667,365.648 116.850667,365.512 117.448,365.512 C118.034667,365.512 118.565333,365.648 119.04,365.92 C119.514667,366.192 119.888,366.578667 120.16,367.08 C120.432,367.581333 120.568,368.152 120.568,368.792 C120.568,369.432 120.432,370.002667 120.16,370.504 C119.888,371.005333 119.514667,371.392 119.04,371.664 C118.565333,371.936 118.034667,372.072 117.448,372.072 Z M128.184,373 L131.928,364.584 L130.808,364.584 L127.624,371.752 L124.472,364.584 L123.288,364.584 L127.016,373 L128.184,373 Z M135.896,373.08 C136.578667,373.08 137.168,372.957333 137.664,372.712 C138.16,372.466667 138.536,372.125333 138.792,371.688 L138.792,371.688 L138.792,373 L139.88,373 L139.88,367.784 C139.88,366.706667 139.586667,365.893333 139,365.344 C138.413333,364.794667 137.570667,364.52 136.472,364.52 C135.810667,364.52 135.181333,364.618667 134.584,364.816 C133.986667,365.013333 133.474667,365.293333 133.048,365.656 L133.048,365.656 L133.56,366.504 C133.912,366.194667 134.333333,365.952 134.824,365.776 C135.314667,365.6 135.826667,365.512 136.36,365.512 C137.138667,365.512 137.730667,365.701333 138.136,366.08 C138.541333,366.458667 138.744,367.010667 138.744,367.736 L138.744,367.736 L138.744,368.248 L136.072,368.248 C134.941333,368.248 134.117333,368.466667 133.6,368.904 C133.082667,369.341333 132.824,369.917333 132.824,370.632 C132.824,371.368 133.101333,371.96 133.656,372.408 C134.210667,372.856 134.957333,373.08 135.896,373.08 Z M136.072,372.184 C135.4,372.184 134.877333,372.042667 134.504,371.76 C134.130667,371.477333 133.944,371.090667 133.944,370.6 C133.944,369.597333 134.664,369.096 136.104,369.096 L136.104,369.096 L138.744,369.096 L138.744,370.472 C138.52,371.026667 138.178667,371.450667 137.72,371.744 C137.261333,372.037333 136.712,372.184 136.072,372.184 Z M144.104,373 L144.104,368.584 C144.104,367.634667 144.368,366.890667 144.896,366.352 C145.424,365.813333 146.141333,365.544 147.048,365.544 C147.858667,365.544 148.482667,365.773333 148.92,366.232 C149.357333,366.690667 149.576,367.357333 149.576,368.232 L149.576,368.232 L149.576,373 L150.712,373 L150.712,368.12 C150.712,366.946667 150.4,366.053333 149.776,365.44 C149.152,364.826667 148.312,364.52 147.256,364.52 C146.530667,364.52 145.893333,364.661333 145.344,364.944 C144.794667,365.226667 144.365333,365.624 144.056,366.136 L144.056,366.136 L144.056,364.584 L142.968,364.584 L142.968,373 L144.104,373 Z M156.456,373.08 C156.797333,373.08 157.125333,373.029333 157.44,372.928 C157.754667,372.826667 158.018667,372.68 158.232,372.488 L158.232,372.488 L157.832,371.672 C157.672,371.810667 157.482667,371.917333 157.264,371.992 C157.045333,372.066667 156.818667,372.104 156.584,372.104 C156.114667,372.104 155.754667,371.973333 155.504,371.712 C155.253333,371.450667 155.128,371.069333 155.128,370.568 L155.128,370.568 L155.128,365.544 L157.688,365.544 L157.688,364.584 L155.128,364.584 L155.128,362.744 L153.992,362.744 L153.992,364.584 L152.488,364.584 L152.488,365.544 L153.992,365.544 L153.992,370.632 C153.992,371.410667 154.205333,372.013333 154.632,372.44 C155.058667,372.866667 155.666667,373.08 156.456,373.08 Z M162.664,373.08 C163.346667,373.08 163.936,372.957333 164.432,372.712 C164.928,372.466667 165.304,372.125333 165.56,371.688 L165.56,371.688 L165.56,373 L166.648,373 L166.648,367.784 C166.648,366.706667 166.354667,365.893333 165.768,365.344 C165.181333,364.794667 164.338667,364.52 163.24,364.52 C162.578667,364.52 161.949333,364.618667 161.352,364.816 C160.754667,365.013333 160.242667,365.293333 159.816,365.656 L159.816,365.656 L160.328,366.504 C160.68,366.194667 161.101333,365.952 161.592,365.776 C162.082667,365.6 162.594667,365.512 163.128,365.512 C163.906667,365.512 164.498667,365.701333 164.904,366.08 C165.309333,366.458667 165.512,367.010667 165.512,367.736 L165.512,367.736 L165.512,368.248 L162.84,368.248 C161.709333,368.248 160.885333,368.466667 160.368,368.904 C159.850667,369.341333 159.592,369.917333 159.592,370.632 C159.592,371.368 159.869333,371.96 160.424,372.408 C160.978667,372.856 161.725333,373.08 162.664,373.08 Z M162.84,372.184 C162.168,372.184 161.645333,372.042667 161.272,371.76 C160.898667,371.477333 160.712,371.090667 160.712,370.6 C160.712,369.597333 161.432,369.096 162.872,369.096 L162.872,369.096 L165.512,369.096 L165.512,370.472 C165.288,371.026667 164.946667,371.450667 164.488,371.744 C164.029333,372.037333 163.48,372.184 162.84,372.184 Z M173.32,376.184 C174.728,376.184 175.781333,375.84 176.48,375.152 C177.178667,374.464 177.528,373.405333 177.528,371.976 L177.528,371.976 L177.528,364.584 L176.44,364.584 L176.44,366.2 C176.088,365.656 175.624,365.24 175.048,364.952 C174.472,364.664 173.826667,364.52 173.112,364.52 C172.312,364.52 171.592,364.690667 170.952,365.032 C170.312,365.373333 169.808,365.853333 169.44,366.472 C169.072,367.090667 168.888,367.794667 168.888,368.584 C168.888,369.373333 169.072,370.08 169.44,370.704 C169.808,371.328 170.314667,371.813333 170.96,372.16 C171.605333,372.506667 172.322667,372.68 173.112,372.68 C173.805333,372.68 174.437333,372.541333 175.008,372.264 C175.578667,371.986667 176.04,371.581333 176.392,371.048 L176.392,371.048 L176.392,372.12 C176.392,373.165333 176.141333,373.936 175.64,374.432 C175.138667,374.928 174.354667,375.176 173.288,375.176 C172.648,375.176 172.037333,375.074667 171.456,374.872 C170.874667,374.669333 170.381333,374.386667 169.976,374.024 L169.976,374.024 L169.4,374.888 C169.837333,375.293333 170.405333,375.610667 171.104,375.84 C171.802667,376.069333 172.541333,376.184 173.32,376.184 Z M173.224,371.672 C172.616,371.672 172.069333,371.541333 171.584,371.28 C171.098667,371.018667 170.72,370.653333 170.448,370.184 C170.176,369.714667 170.04,369.181333 170.04,368.584 C170.04,367.986667 170.176,367.453333 170.448,366.984 C170.72,366.514667 171.098667,366.152 171.584,365.896 C172.069333,365.64 172.616,365.512 173.224,365.512 C173.842667,365.512 174.394667,365.642667 174.88,365.904 C175.365333,366.165333 175.744,366.528 176.016,366.992 C176.288,367.456 176.424,367.986667 176.424,368.584 C176.424,369.181333 176.288,369.714667 176.016,370.184 C175.744,370.653333 175.362667,371.018667 174.872,371.28 C174.381333,371.541333 173.832,371.672 173.224,371.672 Z M184.28,373.08 C184.952,373.08 185.568,372.962667 186.128,372.728 C186.688,372.493333 187.154667,372.152 187.528,371.704 L187.528,371.704 L186.888,370.968 C186.568,371.330667 186.189333,371.605333 185.752,371.792 C185.314667,371.978667 184.834667,372.072 184.312,372.072 C183.384,372.072 182.616,371.802667 182.008,371.264 C181.4,370.725333 181.064,370.018667 181,369.144 L181,369.144 L188.04,369.144 L188.056,368.792 C188.056,367.96 187.88,367.221333 187.528,366.576 C187.176,365.930667 186.690667,365.426667 186.072,365.064 C185.453333,364.701333 184.754667,364.52 183.976,364.52 C183.197333,364.52 182.496,364.701333 181.872,365.064 C181.248,365.426667 180.757333,365.933333 180.4,366.584 C180.042667,367.234667 179.864,367.970667 179.864,368.792 C179.864,369.613333 180.050667,370.349333 180.424,371 C180.797333,371.650667 181.317333,372.16 181.984,372.528 C182.650667,372.896 183.416,373.08 184.28,373.08 Z M186.968,368.296 L181,368.296 C181.074667,367.464 181.386667,366.789333 181.936,366.272 C182.485333,365.754667 183.165333,365.496 183.976,365.496 C184.797333,365.496 185.482667,365.754667 186.032,366.272 C186.581333,366.789333 186.893333,367.464 186.968,368.296 L186.968,368.296 Z M193.72,373.08 C194.424,373.08 195.056,372.930667 195.616,372.632 C196.176,372.333333 196.626667,371.901333 196.968,371.336 L196.968,371.336 L196.968,373 L198.056,373 L198.056,361.128 L196.92,361.128 L196.92,366.184 C196.568,365.64 196.117333,365.226667 195.568,364.944 C195.018667,364.661333 194.402667,364.52 193.72,364.52 C192.930667,364.52 192.216,364.698667 191.576,365.056 C190.936,365.413333 190.434667,365.917333 190.072,366.568 C189.709333,367.218667 189.528,367.96 189.528,368.792 C189.528,369.624 189.709333,370.365333 190.072,371.016 C190.434667,371.666667 190.936,372.173333 191.576,372.536 C192.216,372.898667 192.930667,373.08 193.72,373.08 Z M193.816,372.072 C193.218667,372.072 192.682667,371.936 192.208,371.664 C191.733333,371.392 191.36,371.005333 191.088,370.504 C190.816,370.002667 190.68,369.432 190.68,368.792 C190.68,368.152 190.816,367.581333 191.088,367.08 C191.36,366.578667 191.733333,366.192 192.208,365.92 C192.682667,365.648 193.218667,365.512 193.816,365.512 C194.402667,365.512 194.933333,365.648 195.408,365.92 C195.882667,366.192 196.256,366.578667 196.528,367.08 C196.8,367.581333 196.936,368.152 196.936,368.792 C196.936,369.432 196.8,370.002667 196.528,370.504 C196.256,371.005333 195.882667,371.392 195.408,371.664 C194.933333,371.936 194.402667,372.072 193.816,372.072 Z M70.576,403 L71.92,400.008 L78.16,400.008 L79.504,403 L80.752,403 L75.632,391.8 L74.464,391.8 L69.344,403 L70.576,403 Z M77.728,399.048 L72.352,399.048 L75.04,393.032 L77.728,399.048 Z M83.504,406.104 L83.504,401.416 C83.856,401.96 84.3066667,402.373333 84.856,402.656 C85.4053333,402.938667 86.0213333,403.08 86.704,403.08 C87.504,403.08 88.2213333,402.901333 88.856,402.544 C89.4906667,402.186667 89.9893333,401.682667 90.352,401.032 C90.7146667,400.381333 90.896,399.634667 90.896,398.792 C90.896,397.96 90.7146667,397.218667 90.352,396.568 C89.9893333,395.917333 89.488,395.413333 88.848,395.056 C88.208,394.698667 87.4933333,394.52 86.704,394.52 C86,394.52 85.368,394.669333 84.808,394.968 C84.248,395.266667 83.7973333,395.693333 83.456,396.248 L83.456,396.248 L83.456,394.584 L82.368,394.584 L82.368,406.104 L83.504,406.104 Z M86.624,402.072 C86.0266667,402.072 85.4906667,401.936 85.016,401.664 C84.5413333,401.392 84.168,401.005333 83.896,400.504 C83.624,400.002667 83.488,399.432 83.488,398.792 C83.488,398.152 83.624,397.584 83.896,397.088 C84.168,396.592 84.5413333,396.205333 85.016,395.928 C85.4906667,395.650667 86.0266667,395.512 86.624,395.512 C87.2106667,395.512 87.744,395.650667 88.224,395.928 C88.704,396.205333 89.08,396.592 89.352,397.088 C89.624,397.584 89.76,398.152 89.76,398.792 C89.76,399.432 89.624,400.002667 89.352,400.504 C89.08,401.005333 88.704,401.392 88.224,401.664 C87.744,401.936 87.2106667,402.072 86.624,402.072 Z M94.352,406.104 L94.352,401.416 C94.704,401.96 95.1546667,402.373333 95.704,402.656 C96.2533333,402.938667 96.8693333,403.08 97.552,403.08 C98.352,403.08 99.0693333,402.901333 99.704,402.544 C100.338667,402.186667 100.837333,401.682667 101.2,401.032 C101.562667,400.381333 101.744,399.634667 101.744,398.792 C101.744,397.96 101.562667,397.218667 101.2,396.568 C100.837333,395.917333 100.336,395.413333 99.696,395.056 C99.056,394.698667 98.3413333,394.52 97.552,394.52 C96.848,394.52 96.216,394.669333 95.656,394.968 C95.096,395.266667 94.6453333,395.693333 94.304,396.248 L94.304,396.248 L94.304,394.584 L93.216,394.584 L93.216,406.104 L94.352,406.104 Z M97.472,402.072 C96.8746667,402.072 96.3386667,401.936 95.864,401.664 C95.3893333,401.392 95.016,401.005333 94.744,400.504 C94.472,400.002667 94.336,399.432 94.336,398.792 C94.336,398.152 94.472,397.584 94.744,397.088 C95.016,396.592 95.3893333,396.205333 95.864,395.928 C96.3386667,395.650667 96.8746667,395.512 97.472,395.512 C98.0586667,395.512 98.592,395.650667 99.072,395.928 C99.552,396.205333 99.928,396.592 100.2,397.088 C100.472,397.584 100.608,398.152 100.608,398.792 C100.608,399.432 100.472,400.002667 100.2,400.504 C99.928,401.005333 99.552,401.392 99.072,401.664 C98.592,401.936 98.0586667,402.072 97.472,402.072 Z M105.2,403 L105.2,398.712 C105.2,397.730667 105.450667,396.968 105.952,396.424 C106.453333,395.88 107.146667,395.608 108.032,395.608 L108.032,395.608 L108.304,395.624 L108.304,394.52 C107.525333,394.52 106.872,394.664 106.344,394.952 C105.816,395.24 105.418667,395.666667 105.152,396.232 L105.152,396.232 L105.152,394.584 L104.064,394.584 L104.064,403 L105.2,403 Z M114.048,403.08 C114.72,403.08 115.336,402.962667 115.896,402.728 C116.456,402.493333 116.922667,402.152 117.296,401.704 L117.296,401.704 L116.656,400.968 C116.336,401.330667 115.957333,401.605333 115.52,401.792 C115.082667,401.978667 114.602667,402.072 114.08,402.072 C113.152,402.072 112.384,401.802667 111.776,401.264 C111.168,400.725333 110.832,400.018667 110.768,399.144 L110.768,399.144 L117.808,399.144 L117.824,398.792 C117.824,397.96 117.648,397.221333 117.296,396.576 C116.944,395.930667 116.458667,395.426667 115.84,395.064 C115.221333,394.701333 114.522667,394.52 113.744,394.52 C112.965333,394.52 112.264,394.701333 111.64,395.064 C111.016,395.426667 110.525333,395.933333 110.168,396.584 C109.810667,397.234667 109.632,397.970667 109.632,398.792 C109.632,399.613333 109.818667,400.349333 110.192,401 C110.565333,401.650667 111.085333,402.16 111.752,402.528 C112.418667,402.896 113.184,403.08 114.048,403.08 Z M116.736,398.296 L110.768,398.296 C110.842667,397.464 111.154667,396.789333 111.704,396.272 C112.253333,395.754667 112.933333,395.496 113.744,395.496 C114.565333,395.496 115.250667,395.754667 115.8,396.272 C116.349333,396.789333 116.661333,397.464 116.736,398.296 L116.736,398.296 Z M121.28,403 L121.28,398.584 C121.28,397.634667 121.544,396.890667 122.072,396.352 C122.6,395.813333 123.317333,395.544 124.224,395.544 C125.034667,395.544 125.658667,395.773333 126.096,396.232 C126.533333,396.690667 126.752,397.357333 126.752,398.232 L126.752,398.232 L126.752,403 L127.888,403 L127.888,398.12 C127.888,396.946667 127.576,396.053333 126.952,395.44 C126.328,394.826667 125.488,394.52 124.432,394.52 C123.706667,394.52 123.069333,394.661333 122.52,394.944 C121.970667,395.226667 121.541333,395.624 121.232,396.136 L121.232,396.136 L121.232,394.584 L120.144,394.584 L120.144,403 L121.28,403 Z M133.632,403.08 C133.973333,403.08 134.301333,403.029333 134.616,402.928 C134.930667,402.826667 135.194667,402.68 135.408,402.488 L135.408,402.488 L135.008,401.672 C134.848,401.810667 134.658667,401.917333 134.44,401.992 C134.221333,402.066667 133.994667,402.104 133.76,402.104 C133.290667,402.104 132.930667,401.973333 132.68,401.712 C132.429333,401.450667 132.304,401.069333 132.304,400.568 L132.304,400.568 L132.304,395.544 L134.864,395.544 L134.864,394.584 L132.304,394.584 L132.304,392.744 L131.168,392.744 L131.168,394.584 L129.664,394.584 L129.664,395.544 L131.168,395.544 L131.168,400.632 C131.168,401.410667 131.381333,402.013333 131.808,402.44 C132.234667,402.866667 132.842667,403.08 133.632,403.08 Z M138.048,392.744 C138.282667,392.744 138.48,392.664 138.64,392.504 C138.8,392.344 138.88,392.146667 138.88,391.912 C138.88,391.698667 138.8,391.514667 138.64,391.36 C138.48,391.205333 138.282667,391.128 138.048,391.128 C137.813333,391.128 137.616,391.208 137.456,391.368 C137.296,391.528 137.216,391.714667 137.216,391.928 C137.216,392.152 137.296,392.344 137.456,392.504 C137.616,392.664 137.813333,392.744 138.048,392.744 Z M138.608,403 L138.608,394.584 L137.472,394.584 L137.472,403 L138.608,403 Z M145.264,403.08 C145.978667,403.08 146.624,402.938667 147.2,402.656 C147.776,402.373333 148.229333,401.96 148.56,401.416 L148.56,401.416 L147.712,400.84 C147.434667,401.256 147.082667,401.565333 146.656,401.768 C146.229333,401.970667 145.765333,402.072 145.264,402.072 C144.656,402.072 144.109333,401.936 143.624,401.664 C143.138667,401.392 142.76,401.008 142.488,400.512 C142.216,400.016 142.08,399.442667 142.08,398.792 C142.08,398.152 142.216,397.581333 142.488,397.08 C142.76,396.578667 143.138667,396.192 143.624,395.92 C144.109333,395.648 144.656,395.512 145.264,395.512 C145.765333,395.512 146.229333,395.616 146.656,395.824 C147.082667,396.032 147.434667,396.344 147.712,396.76 L147.712,396.76 L148.56,396.184 C148.229333,395.64 147.778667,395.226667 147.208,394.944 C146.637333,394.661333 145.989333,394.52 145.264,394.52 C144.432,394.52 143.688,394.701333 143.032,395.064 C142.376,395.426667 141.861333,395.933333 141.488,396.584 C141.114667,397.234667 140.928,397.970667 140.928,398.792 C140.928,399.613333 141.114667,400.352 141.488,401.008 C141.861333,401.664 142.376,402.173333 143.032,402.536 C143.688,402.898667 144.432,403.08 145.264,403.08 Z M154.352,403.08 C155.024,403.08 155.64,402.962667 156.2,402.728 C156.76,402.493333 157.226667,402.152 157.6,401.704 L157.6,401.704 L156.96,400.968 C156.64,401.330667 156.261333,401.605333 155.824,401.792 C155.386667,401.978667 154.906667,402.072 154.384,402.072 C153.456,402.072 152.688,401.802667 152.08,401.264 C151.472,400.725333 151.136,400.018667 151.072,399.144 L151.072,399.144 L158.112,399.144 L158.128,398.792 C158.128,397.96 157.952,397.221333 157.6,396.576 C157.248,395.930667 156.762667,395.426667 156.144,395.064 C155.525333,394.701333 154.826667,394.52 154.048,394.52 C153.269333,394.52 152.568,394.701333 151.944,395.064 C151.32,395.426667 150.829333,395.933333 150.472,396.584 C150.114667,397.234667 149.936,397.970667 149.936,398.792 C149.936,399.613333 150.122667,400.349333 150.496,401 C150.869333,401.650667 151.389333,402.16 152.056,402.528 C152.722667,402.896 153.488,403.08 154.352,403.08 Z M157.04,398.296 L151.072,398.296 C151.146667,397.464 151.458667,396.789333 152.008,396.272 C152.557333,395.754667 153.237333,395.496 154.048,395.496 C154.869333,395.496 155.554667,395.754667 156.104,396.272 C156.653333,396.789333 156.965333,397.464 157.04,398.296 L157.04,398.296 Z M162.704,403.08 C163.792,403.08 164.642667,402.864 165.256,402.432 C165.869333,402 166.176,401.416 166.176,400.68 C166.176,400.136 166.032,399.709333 165.744,399.4 C165.456,399.090667 165.109333,398.872 164.704,398.744 C164.298667,398.616 163.76,398.488 163.088,398.36 C162.544,398.264 162.117333,398.170667 161.808,398.08 C161.498667,397.989333 161.24,397.848 161.032,397.656 C160.824,397.464 160.72,397.208 160.72,396.888 C160.72,396.472 160.904,396.136 161.272,395.88 C161.64,395.624 162.186667,395.496 162.912,395.496 C163.872,395.496 164.698667,395.736 165.392,396.216 L165.392,396.216 L165.888,395.304 C165.536,395.069333 165.088,394.88 164.544,394.736 C164,394.592 163.456,394.52 162.912,394.52 C161.866667,394.52 161.050667,394.744 160.464,395.192 C159.877333,395.64 159.584,396.216 159.584,396.92 C159.584,397.485333 159.730667,397.928 160.024,398.248 C160.317333,398.568 160.672,398.794667 161.088,398.928 C161.504,399.061333 162.053333,399.192 162.736,399.32 C163.248,399.405333 163.658667,399.493333 163.968,399.584 C164.277333,399.674667 164.533333,399.808 164.736,399.984 C164.938667,400.16 165.04,400.402667 165.04,400.712 C165.04,401.149333 164.856,401.488 164.488,401.728 C164.12,401.968 163.552,402.088 162.784,402.088 C162.208,402.088 161.653333,402 161.12,401.824 C160.586667,401.648 160.144,401.421333 159.792,401.144 L159.792,401.144 L159.28,402.04 C159.632,402.338667 160.12,402.586667 160.744,402.784 C161.368,402.981333 162.021333,403.08 162.704,403.08 Z\",\"id\":\"TotaldisadvantagedApprentices\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M72.432,90 L72.432,88.976 L66.272,88.976 L70.08,85.232 C70.7946667,84.5386667 71.28,83.9253333 71.536,83.392 C71.792,82.8586667 71.92,82.304 71.92,81.728 C71.92,80.7893333 71.5866667,80.0506667 70.92,79.512 C70.2533333,78.9733333 69.3493333,78.704 68.208,78.704 C67.3546667,78.704 66.5893333,78.8426667 65.912,79.12 C65.2346667,79.3973333 64.6773333,79.792 64.24,80.304 L64.24,80.304 L65.056,81.008 C65.7813333,80.176 66.8,79.76 68.112,79.76 C68.9546667,79.76 69.6026667,79.944 70.056,80.312 C70.5093333,80.68 70.736,81.1946667 70.736,81.856 C70.736,82.2826667 70.632,82.7066667 70.424,83.128 C70.216,83.5493333 69.8186667,84.048 69.232,84.624 L69.232,84.624 L64.576,89.184 L64.576,90 L72.432,90 Z M78.464,90.096 C79.1893333,90.096 79.8426667,89.9546667 80.424,89.672 C81.0053333,89.3893333 81.4613333,88.9866667 81.792,88.464 C82.1226667,87.9413333 82.288,87.3386667 82.288,86.656 C82.288,85.984 82.128,85.3946667 81.808,84.888 C81.488,84.3813333 81.0426667,83.9893333 80.472,83.712 C79.9013333,83.4346667 79.248,83.296 78.512,83.296 C77.7226667,83.296 77.024,83.464 76.416,83.8 C75.808,84.136 75.3653333,84.608 75.088,85.216 C75.056,84.8746667 75.04,84.5706667 75.04,84.304 C75.04,82.8106667 75.392,81.672 76.096,80.888 C76.8,80.104 77.7706667,79.712 79.008,79.712 C79.9253333,79.712 80.6506667,79.888 81.184,80.24 L81.184,80.24 L81.648,79.312 C80.9866667,78.9066667 80.1013333,78.704 78.992,78.704 C77.968,78.704 77.072,78.9253333 76.304,79.368 C75.536,79.8106667 74.9386667,80.464 74.512,81.328 C74.0853333,82.192 73.872,83.248 73.872,84.496 C73.872,86.2773333 74.2666667,87.656 75.056,88.632 C75.8453333,89.608 76.9813333,90.096 78.464,90.096 Z M78.416,89.12 C77.7973333,89.12 77.264,89.008 76.816,88.784 C76.368,88.56 76.0293333,88.2666667 75.8,87.904 C75.5706667,87.5413333 75.456,87.1466667 75.456,86.72 C75.456,86.2613333 75.5786667,85.8453333 75.824,85.472 C76.0693333,85.0986667 76.408,84.8053333 76.84,84.592 C77.272,84.3786667 77.7706667,84.272 78.336,84.272 C79.2,84.272 79.8853333,84.4906667 80.392,84.928 C80.8986667,85.3653333 81.152,85.952 81.152,86.688 C81.152,87.424 80.8986667,88.0133333 80.392,88.456 C79.8853333,88.8986667 79.2266667,89.12 78.416,89.12 Z M85.984,84.8 C86.7306667,84.8 87.3386667,84.5226667 87.808,83.968 C88.2773333,83.4133333 88.512,82.6773333 88.512,81.76 C88.512,80.8426667 88.2773333,80.1066667 87.808,79.552 C87.3386667,78.9973333 86.7306667,78.72 85.984,78.72 C85.2266667,78.72 84.616,79 84.152,79.56 C83.688,80.12 83.456,80.8533333 83.456,81.76 C83.456,82.6666667 83.688,83.4 84.152,83.96 C84.616,84.52 85.2266667,84.8 85.984,84.8 Z M86.064,90 L93.712,78.8 L92.768,78.8 L85.12,90 L86.064,90 Z M85.984,84.08 C85.4506667,84.08 85.0293333,83.872 84.72,83.456 C84.4106667,83.04 84.256,82.4746667 84.256,81.76 C84.256,81.0453333 84.4106667,80.48 84.72,80.064 C85.0293333,79.648 85.4506667,79.44 85.984,79.44 C86.5066667,79.44 86.9253333,79.6453333 87.24,80.056 C87.5546667,80.4666667 87.712,81.0346667 87.712,81.76 C87.712,82.4853333 87.5546667,83.0533333 87.24,83.464 C86.9253333,83.8746667 86.5066667,84.08 85.984,84.08 Z M92.848,90.08 C93.6053333,90.08 94.216,89.8 94.68,89.24 C95.144,88.68 95.376,87.9466667 95.376,87.04 C95.376,86.1333333 95.144,85.4 94.68,84.84 C94.216,84.28 93.6053333,84 92.848,84 C92.1013333,84 91.4933333,84.28 91.024,84.84 C90.5546667,85.4 90.32,86.1333333 90.32,87.04 C90.32,87.9466667 90.5546667,88.68 91.024,89.24 C91.4933333,89.8 92.1013333,90.08 92.848,90.08 Z M92.848,89.36 C92.3253333,89.36 91.9066667,89.1546667 91.592,88.744 C91.2773333,88.3333333 91.12,87.7653333 91.12,87.04 C91.12,86.3146667 91.2773333,85.7466667 91.592,85.336 C91.9066667,84.9253333 92.3253333,84.72 92.848,84.72 C93.3813333,84.72 93.8026667,84.928 94.112,85.344 C94.4213333,85.76 94.576,86.3253333 94.576,87.04 C94.576,87.7546667 94.4213333,88.32 94.112,88.736 C93.8026667,89.152 93.3813333,89.36 92.848,89.36 Z\",\"id\":\"26%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M4.736,75.096 C5.61066667,75.096 6.352,74.952 6.96,74.664 C7.568,74.376 8.02666667,73.984 8.336,73.488 C8.64533333,72.992 8.8,72.424 8.8,71.784 C8.8,70.8666667 8.49333333,70.1226667 7.88,69.552 C7.26666667,68.9813333 6.37333333,68.664 5.2,68.6 L5.2,68.6 L8.368,64.616 L8.368,63.8 L1.168,63.8 L1.168,64.824 L6.896,64.824 L3.792,68.712 L3.792,69.56 L4.592,69.56 C5.60533333,69.56 6.36266667,69.7573333 6.864,70.152 C7.36533333,70.5466667 7.616,71.0906667 7.616,71.784 C7.616,72.488 7.36533333,73.04 6.864,73.44 C6.36266667,73.84 5.65333333,74.04 4.736,74.04 C4.032,74.04 3.37066667,73.92 2.752,73.68 C2.13333333,73.44 1.63733333,73.128 1.264,72.744 L1.264,72.744 L0.704,73.656 C1.14133333,74.0933333 1.72,74.4426667 2.44,74.704 C3.16,74.9653333 3.92533333,75.096 4.736,75.096 Z M14.88,75.096 C15.744,75.096 16.5146667,74.8666667 17.192,74.408 C17.8693333,73.9493333 18.4,73.2906667 18.784,72.432 C19.168,71.5733333 19.36,70.5626667 19.36,69.4 C19.36,68.2373333 19.168,67.2266667 18.784,66.368 C18.4,65.5093333 17.8693333,64.8506667 17.192,64.392 C16.5146667,63.9333333 15.744,63.704 14.88,63.704 C14.016,63.704 13.2453333,63.9333333 12.568,64.392 C11.8906667,64.8506667 11.3626667,65.5093333 10.984,66.368 C10.6053333,67.2266667 10.416,68.2373333 10.416,69.4 C10.416,70.5626667 10.6053333,71.5733333 10.984,72.432 C11.3626667,73.2906667 11.8906667,73.9493333 12.568,74.408 C13.2453333,74.8666667 14.016,75.096 14.88,75.096 Z M14.88,74.04 C14.2293333,74.04 13.656,73.8586667 13.16,73.496 C12.664,73.1333333 12.2773333,72.6053333 12,71.912 C11.7226667,71.2186667 11.584,70.3813333 11.584,69.4 C11.584,68.4186667 11.7226667,67.5813333 12,66.888 C12.2773333,66.1946667 12.664,65.6666667 13.16,65.304 C13.656,64.9413333 14.2293333,64.76 14.88,64.76 C15.5306667,64.76 16.104,64.9413333 16.6,65.304 C17.096,65.6666667 17.4826667,66.1946667 17.76,66.888 C18.0373333,67.5813333 18.176,68.4186667 18.176,69.4 C18.176,70.3813333 18.0373333,71.2186667 17.76,71.912 C17.4826667,72.6053333 17.096,73.1333333 16.6,73.496 C16.104,73.8586667 15.5306667,74.04 14.88,74.04 Z M23.376,69.8 C24.1226667,69.8 24.7306667,69.5226667 25.2,68.968 C25.6693333,68.4133333 25.904,67.6773333 25.904,66.76 C25.904,65.8426667 25.6693333,65.1066667 25.2,64.552 C24.7306667,63.9973333 24.1226667,63.72 23.376,63.72 C22.6186667,63.72 22.008,64 21.544,64.56 C21.08,65.12 20.848,65.8533333 20.848,66.76 C20.848,67.6666667 21.08,68.4 21.544,68.96 C22.008,69.52 22.6186667,69.8 23.376,69.8 Z M23.456,75 L31.104,63.8 L30.16,63.8 L22.512,75 L23.456,75 Z M23.376,69.08 C22.8426667,69.08 22.4213333,68.872 22.112,68.456 C21.8026667,68.04 21.648,67.4746667 21.648,66.76 C21.648,66.0453333 21.8026667,65.48 22.112,65.064 C22.4213333,64.648 22.8426667,64.44 23.376,64.44 C23.8986667,64.44 24.3173333,64.6453333 24.632,65.056 C24.9466667,65.4666667 25.104,66.0346667 25.104,66.76 C25.104,67.4853333 24.9466667,68.0533333 24.632,68.464 C24.3173333,68.8746667 23.8986667,69.08 23.376,69.08 Z M30.24,75.08 C30.9973333,75.08 31.608,74.8 32.072,74.24 C32.536,73.68 32.768,72.9466667 32.768,72.04 C32.768,71.1333333 32.536,70.4 32.072,69.84 C31.608,69.28 30.9973333,69 30.24,69 C29.4933333,69 28.8853333,69.28 28.416,69.84 C27.9466667,70.4 27.712,71.1333333 27.712,72.04 C27.712,72.9466667 27.9466667,73.68 28.416,74.24 C28.8853333,74.8 29.4933333,75.08 30.24,75.08 Z M30.24,74.36 C29.7173333,74.36 29.2986667,74.1546667 28.984,73.744 C28.6693333,73.3333333 28.512,72.7653333 28.512,72.04 C28.512,71.3146667 28.6693333,70.7466667 28.984,70.336 C29.2986667,69.9253333 29.7173333,69.72 30.24,69.72 C30.7733333,69.72 31.1946667,69.928 31.504,70.344 C31.8133333,70.76 31.968,71.3253333 31.968,72.04 C31.968,72.7546667 31.8133333,73.32 31.504,73.736 C31.1946667,74.152 30.7733333,74.36 30.24,74.36 Z\",\"id\":\"30%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":27}),React.createElement(\"path\",{\"d\":\"M9.008,165 L9.008,163.976 L2.848,163.976 L6.656,160.232 C7.37066667,159.538667 7.856,158.925333 8.112,158.392 C8.368,157.858667 8.496,157.304 8.496,156.728 C8.496,155.789333 8.16266667,155.050667 7.496,154.512 C6.82933333,153.973333 5.92533333,153.704 4.784,153.704 C3.93066667,153.704 3.16533333,153.842667 2.488,154.12 C1.81066667,154.397333 1.25333333,154.792 0.816,155.304 L0.816,155.304 L1.632,156.008 C2.35733333,155.176 3.376,154.76 4.688,154.76 C5.53066667,154.76 6.17866667,154.944 6.632,155.312 C7.08533333,155.68 7.312,156.194667 7.312,156.856 C7.312,157.282667 7.208,157.706667 7,158.128 C6.792,158.549333 6.39466667,159.048 5.808,159.624 L5.808,159.624 L1.152,164.184 L1.152,165 L9.008,165 Z M14.912,165.096 C15.776,165.096 16.5466667,164.866667 17.224,164.408 C17.9013333,163.949333 18.432,163.290667 18.816,162.432 C19.2,161.573333 19.392,160.562667 19.392,159.4 C19.392,158.237333 19.2,157.226667 18.816,156.368 C18.432,155.509333 17.9013333,154.850667 17.224,154.392 C16.5466667,153.933333 15.776,153.704 14.912,153.704 C14.048,153.704 13.2773333,153.933333 12.6,154.392 C11.9226667,154.850667 11.3946667,155.509333 11.016,156.368 C10.6373333,157.226667 10.448,158.237333 10.448,159.4 C10.448,160.562667 10.6373333,161.573333 11.016,162.432 C11.3946667,163.290667 11.9226667,163.949333 12.6,164.408 C13.2773333,164.866667 14.048,165.096 14.912,165.096 Z M14.912,164.04 C14.2613333,164.04 13.688,163.858667 13.192,163.496 C12.696,163.133333 12.3093333,162.605333 12.032,161.912 C11.7546667,161.218667 11.616,160.381333 11.616,159.4 C11.616,158.418667 11.7546667,157.581333 12.032,156.888 C12.3093333,156.194667 12.696,155.666667 13.192,155.304 C13.688,154.941333 14.2613333,154.76 14.912,154.76 C15.5626667,154.76 16.136,154.941333 16.632,155.304 C17.128,155.666667 17.5146667,156.194667 17.792,156.888 C18.0693333,157.581333 18.208,158.418667 18.208,159.4 C18.208,160.381333 18.0693333,161.218667 17.792,161.912 C17.5146667,162.605333 17.128,163.133333 16.632,163.496 C16.136,163.858667 15.5626667,164.04 14.912,164.04 Z M23.408,159.8 C24.1546667,159.8 24.7626667,159.522667 25.232,158.968 C25.7013333,158.413333 25.936,157.677333 25.936,156.76 C25.936,155.842667 25.7013333,155.106667 25.232,154.552 C24.7626667,153.997333 24.1546667,153.72 23.408,153.72 C22.6506667,153.72 22.04,154 21.576,154.56 C21.112,155.12 20.88,155.853333 20.88,156.76 C20.88,157.666667 21.112,158.4 21.576,158.96 C22.04,159.52 22.6506667,159.8 23.408,159.8 Z M23.488,165 L31.136,153.8 L30.192,153.8 L22.544,165 L23.488,165 Z M23.408,159.08 C22.8746667,159.08 22.4533333,158.872 22.144,158.456 C21.8346667,158.04 21.68,157.474667 21.68,156.76 C21.68,156.045333 21.8346667,155.48 22.144,155.064 C22.4533333,154.648 22.8746667,154.44 23.408,154.44 C23.9306667,154.44 24.3493333,154.645333 24.664,155.056 C24.9786667,155.466667 25.136,156.034667 25.136,156.76 C25.136,157.485333 24.9786667,158.053333 24.664,158.464 C24.3493333,158.874667 23.9306667,159.08 23.408,159.08 Z M30.272,165.08 C31.0293333,165.08 31.64,164.8 32.104,164.24 C32.568,163.68 32.8,162.946667 32.8,162.04 C32.8,161.133333 32.568,160.4 32.104,159.84 C31.64,159.28 31.0293333,159 30.272,159 C29.5253333,159 28.9173333,159.28 28.448,159.84 C27.9786667,160.4 27.744,161.133333 27.744,162.04 C27.744,162.946667 27.9786667,163.68 28.448,164.24 C28.9173333,164.8 29.5253333,165.08 30.272,165.08 Z M30.272,164.36 C29.7493333,164.36 29.3306667,164.154667 29.016,163.744 C28.7013333,163.333333 28.544,162.765333 28.544,162.04 C28.544,161.314667 28.7013333,160.746667 29.016,160.336 C29.3306667,159.925333 29.7493333,159.72 30.272,159.72 C30.8053333,159.72 31.2266667,159.928 31.536,160.344 C31.8453333,160.76 32,161.325333 32,162.04 C32,162.754667 31.8453333,163.32 31.536,163.736 C31.2266667,164.152 30.8053333,164.36 30.272,164.36 Z\",\"id\":\"20%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":28}),React.createElement(\"path\",{\"d\":\"M6.12,256 L6.12,244.8 L2.328,244.8 L2.328,245.824 L4.968,245.824 L4.968,256 L6.12,256 Z M13.256,256.096 C14.12,256.096 14.8906667,255.866667 15.568,255.408 C16.2453333,254.949333 16.776,254.290667 17.16,253.432 C17.544,252.573333 17.736,251.562667 17.736,250.4 C17.736,249.237333 17.544,248.226667 17.16,247.368 C16.776,246.509333 16.2453333,245.850667 15.568,245.392 C14.8906667,244.933333 14.12,244.704 13.256,244.704 C12.392,244.704 11.6213333,244.933333 10.944,245.392 C10.2666667,245.850667 9.73866667,246.509333 9.36,247.368 C8.98133333,248.226667 8.792,249.237333 8.792,250.4 C8.792,251.562667 8.98133333,252.573333 9.36,253.432 C9.73866667,254.290667 10.2666667,254.949333 10.944,255.408 C11.6213333,255.866667 12.392,256.096 13.256,256.096 Z M13.256,255.04 C12.6053333,255.04 12.032,254.858667 11.536,254.496 C11.04,254.133333 10.6533333,253.605333 10.376,252.912 C10.0986667,252.218667 9.96,251.381333 9.96,250.4 C9.96,249.418667 10.0986667,248.581333 10.376,247.888 C10.6533333,247.194667 11.04,246.666667 11.536,246.304 C12.032,245.941333 12.6053333,245.76 13.256,245.76 C13.9066667,245.76 14.48,245.941333 14.976,246.304 C15.472,246.666667 15.8586667,247.194667 16.136,247.888 C16.4133333,248.581333 16.552,249.418667 16.552,250.4 C16.552,251.381333 16.4133333,252.218667 16.136,252.912 C15.8586667,253.605333 15.472,254.133333 14.976,254.496 C14.48,254.858667 13.9066667,255.04 13.256,255.04 Z M21.752,250.8 C22.4986667,250.8 23.1066667,250.522667 23.576,249.968 C24.0453333,249.413333 24.28,248.677333 24.28,247.76 C24.28,246.842667 24.0453333,246.106667 23.576,245.552 C23.1066667,244.997333 22.4986667,244.72 21.752,244.72 C20.9946667,244.72 20.384,245 19.92,245.56 C19.456,246.12 19.224,246.853333 19.224,247.76 C19.224,248.666667 19.456,249.4 19.92,249.96 C20.384,250.52 20.9946667,250.8 21.752,250.8 Z M21.832,256 L29.48,244.8 L28.536,244.8 L20.888,256 L21.832,256 Z M21.752,250.08 C21.2186667,250.08 20.7973333,249.872 20.488,249.456 C20.1786667,249.04 20.024,248.474667 20.024,247.76 C20.024,247.045333 20.1786667,246.48 20.488,246.064 C20.7973333,245.648 21.2186667,245.44 21.752,245.44 C22.2746667,245.44 22.6933333,245.645333 23.008,246.056 C23.3226667,246.466667 23.48,247.034667 23.48,247.76 C23.48,248.485333 23.3226667,249.053333 23.008,249.464 C22.6933333,249.874667 22.2746667,250.08 21.752,250.08 Z M28.616,256.08 C29.3733333,256.08 29.984,255.8 30.448,255.24 C30.912,254.68 31.144,253.946667 31.144,253.04 C31.144,252.133333 30.912,251.4 30.448,250.84 C29.984,250.28 29.3733333,250 28.616,250 C27.8693333,250 27.2613333,250.28 26.792,250.84 C26.3226667,251.4 26.088,252.133333 26.088,253.04 C26.088,253.946667 26.3226667,254.68 26.792,255.24 C27.2613333,255.8 27.8693333,256.08 28.616,256.08 Z M28.616,255.36 C28.0933333,255.36 27.6746667,255.154667 27.36,254.744 C27.0453333,254.333333 26.888,253.765333 26.888,253.04 C26.888,252.314667 27.0453333,251.746667 27.36,251.336 C27.6746667,250.925333 28.0933333,250.72 28.616,250.72 C29.1493333,250.72 29.5706667,250.928 29.88,251.344 C30.1893333,251.76 30.344,252.325333 30.344,253.04 C30.344,253.754667 30.1893333,254.32 29.88,254.736 C29.5706667,255.152 29.1493333,255.36 28.616,255.36 Z\",\"id\":\"10%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":29}),React.createElement(\"path\",{\"d\":\"M10.368,340.096 C11.232,340.096 12.0026667,339.866667 12.68,339.408 C13.3573333,338.949333 13.888,338.290667 14.272,337.432 C14.656,336.573333 14.848,335.562667 14.848,334.4 C14.848,333.237333 14.656,332.226667 14.272,331.368 C13.888,330.509333 13.3573333,329.850667 12.68,329.392 C12.0026667,328.933333 11.232,328.704 10.368,328.704 C9.504,328.704 8.73333333,328.933333 8.056,329.392 C7.37866667,329.850667 6.85066667,330.509333 6.472,331.368 C6.09333333,332.226667 5.904,333.237333 5.904,334.4 C5.904,335.562667 6.09333333,336.573333 6.472,337.432 C6.85066667,338.290667 7.37866667,338.949333 8.056,339.408 C8.73333333,339.866667 9.504,340.096 10.368,340.096 Z M10.368,339.04 C9.71733333,339.04 9.144,338.858667 8.648,338.496 C8.152,338.133333 7.76533333,337.605333 7.488,336.912 C7.21066667,336.218667 7.072,335.381333 7.072,334.4 C7.072,333.418667 7.21066667,332.581333 7.488,331.888 C7.76533333,331.194667 8.152,330.666667 8.648,330.304 C9.144,329.941333 9.71733333,329.76 10.368,329.76 C11.0186667,329.76 11.592,329.941333 12.088,330.304 C12.584,330.666667 12.9706667,331.194667 13.248,331.888 C13.5253333,332.581333 13.664,333.418667 13.664,334.4 C13.664,335.381333 13.5253333,336.218667 13.248,336.912 C12.9706667,337.605333 12.584,338.133333 12.088,338.496 C11.592,338.858667 11.0186667,339.04 10.368,339.04 Z M18.864,334.8 C19.6106667,334.8 20.2186667,334.522667 20.688,333.968 C21.1573333,333.413333 21.392,332.677333 21.392,331.76 C21.392,330.842667 21.1573333,330.106667 20.688,329.552 C20.2186667,328.997333 19.6106667,328.72 18.864,328.72 C18.1066667,328.72 17.496,329 17.032,329.56 C16.568,330.12 16.336,330.853333 16.336,331.76 C16.336,332.666667 16.568,333.4 17.032,333.96 C17.496,334.52 18.1066667,334.8 18.864,334.8 Z M18.944,340 L26.592,328.8 L25.648,328.8 L18,340 L18.944,340 Z M18.864,334.08 C18.3306667,334.08 17.9093333,333.872 17.6,333.456 C17.2906667,333.04 17.136,332.474667 17.136,331.76 C17.136,331.045333 17.2906667,330.48 17.6,330.064 C17.9093333,329.648 18.3306667,329.44 18.864,329.44 C19.3866667,329.44 19.8053333,329.645333 20.12,330.056 C20.4346667,330.466667 20.592,331.034667 20.592,331.76 C20.592,332.485333 20.4346667,333.053333 20.12,333.464 C19.8053333,333.874667 19.3866667,334.08 18.864,334.08 Z M25.728,340.08 C26.4853333,340.08 27.096,339.8 27.56,339.24 C28.024,338.68 28.256,337.946667 28.256,337.04 C28.256,336.133333 28.024,335.4 27.56,334.84 C27.096,334.28 26.4853333,334 25.728,334 C24.9813333,334 24.3733333,334.28 23.904,334.84 C23.4346667,335.4 23.2,336.133333 23.2,337.04 C23.2,337.946667 23.4346667,338.68 23.904,339.24 C24.3733333,339.8 24.9813333,340.08 25.728,340.08 Z M25.728,339.36 C25.2053333,339.36 24.7866667,339.154667 24.472,338.744 C24.1573333,338.333333 24,337.765333 24,337.04 C24,336.314667 24.1573333,335.746667 24.472,335.336 C24.7866667,334.925333 25.2053333,334.72 25.728,334.72 C26.2613333,334.72 26.6826667,334.928 26.992,335.344 C27.3013333,335.76 27.456,336.325333 27.456,337.04 C27.456,337.754667 27.3013333,338.32 26.992,338.736 C26.6826667,339.152 26.2613333,339.36 25.728,339.36 Z\",\"id\":\"0%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":30}),React.createElement(\"path\",{\"d\":\"M110.432,90 L110.432,88.976 L104.272,88.976 L108.08,85.232 C108.794667,84.5386667 109.28,83.9253333 109.536,83.392 C109.792,82.8586667 109.92,82.304 109.92,81.728 C109.92,80.7893333 109.586667,80.0506667 108.92,79.512 C108.253333,78.9733333 107.349333,78.704 106.208,78.704 C105.354667,78.704 104.589333,78.8426667 103.912,79.12 C103.234667,79.3973333 102.677333,79.792 102.24,80.304 L102.24,80.304 L103.056,81.008 C103.781333,80.176 104.8,79.76 106.112,79.76 C106.954667,79.76 107.602667,79.944 108.056,80.312 C108.509333,80.68 108.736,81.1946667 108.736,81.856 C108.736,82.2826667 108.632,82.7066667 108.424,83.128 C108.216,83.5493333 107.818667,84.048 107.232,84.624 L107.232,84.624 L102.576,89.184 L102.576,90 L110.432,90 Z M116.464,90.096 C117.189333,90.096 117.842667,89.9546667 118.424,89.672 C119.005333,89.3893333 119.461333,88.9866667 119.792,88.464 C120.122667,87.9413333 120.288,87.3386667 120.288,86.656 C120.288,85.984 120.128,85.3946667 119.808,84.888 C119.488,84.3813333 119.042667,83.9893333 118.472,83.712 C117.901333,83.4346667 117.248,83.296 116.512,83.296 C115.722667,83.296 115.024,83.464 114.416,83.8 C113.808,84.136 113.365333,84.608 113.088,85.216 C113.056,84.8746667 113.04,84.5706667 113.04,84.304 C113.04,82.8106667 113.392,81.672 114.096,80.888 C114.8,80.104 115.770667,79.712 117.008,79.712 C117.925333,79.712 118.650667,79.888 119.184,80.24 L119.184,80.24 L119.648,79.312 C118.986667,78.9066667 118.101333,78.704 116.992,78.704 C115.968,78.704 115.072,78.9253333 114.304,79.368 C113.536,79.8106667 112.938667,80.464 112.512,81.328 C112.085333,82.192 111.872,83.248 111.872,84.496 C111.872,86.2773333 112.266667,87.656 113.056,88.632 C113.845333,89.608 114.981333,90.096 116.464,90.096 Z M116.416,89.12 C115.797333,89.12 115.264,89.008 114.816,88.784 C114.368,88.56 114.029333,88.2666667 113.8,87.904 C113.570667,87.5413333 113.456,87.1466667 113.456,86.72 C113.456,86.2613333 113.578667,85.8453333 113.824,85.472 C114.069333,85.0986667 114.408,84.8053333 114.84,84.592 C115.272,84.3786667 115.770667,84.272 116.336,84.272 C117.2,84.272 117.885333,84.4906667 118.392,84.928 C118.898667,85.3653333 119.152,85.952 119.152,86.688 C119.152,87.424 118.898667,88.0133333 118.392,88.456 C117.885333,88.8986667 117.226667,89.12 116.416,89.12 Z M123.984,84.8 C124.730667,84.8 125.338667,84.5226667 125.808,83.968 C126.277333,83.4133333 126.512,82.6773333 126.512,81.76 C126.512,80.8426667 126.277333,80.1066667 125.808,79.552 C125.338667,78.9973333 124.730667,78.72 123.984,78.72 C123.226667,78.72 122.616,79 122.152,79.56 C121.688,80.12 121.456,80.8533333 121.456,81.76 C121.456,82.6666667 121.688,83.4 122.152,83.96 C122.616,84.52 123.226667,84.8 123.984,84.8 Z M124.064,90 L131.712,78.8 L130.768,78.8 L123.12,90 L124.064,90 Z M123.984,84.08 C123.450667,84.08 123.029333,83.872 122.72,83.456 C122.410667,83.04 122.256,82.4746667 122.256,81.76 C122.256,81.0453333 122.410667,80.48 122.72,80.064 C123.029333,79.648 123.450667,79.44 123.984,79.44 C124.506667,79.44 124.925333,79.6453333 125.24,80.056 C125.554667,80.4666667 125.712,81.0346667 125.712,81.76 C125.712,82.4853333 125.554667,83.0533333 125.24,83.464 C124.925333,83.8746667 124.506667,84.08 123.984,84.08 Z M130.848,90.08 C131.605333,90.08 132.216,89.8 132.68,89.24 C133.144,88.68 133.376,87.9466667 133.376,87.04 C133.376,86.1333333 133.144,85.4 132.68,84.84 C132.216,84.28 131.605333,84 130.848,84 C130.101333,84 129.493333,84.28 129.024,84.84 C128.554667,85.4 128.32,86.1333333 128.32,87.04 C128.32,87.9466667 128.554667,88.68 129.024,89.24 C129.493333,89.8 130.101333,90.08 130.848,90.08 Z M130.848,89.36 C130.325333,89.36 129.906667,89.1546667 129.592,88.744 C129.277333,88.3333333 129.12,87.7653333 129.12,87.04 C129.12,86.3146667 129.277333,85.7466667 129.592,85.336 C129.906667,84.9253333 130.325333,84.72 130.848,84.72 C131.381333,84.72 131.802667,84.928 132.112,85.344 C132.421333,85.76 132.576,86.3253333 132.576,87.04 C132.576,87.7546667 132.421333,88.32 132.112,88.736 C131.802667,89.152 131.381333,89.36 130.848,89.36 Z\",\"id\":\"26%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":31}),React.createElement(\"path\",{\"d\":\"M148.792,123 L148.792,121.976 L142.632,121.976 L146.44,118.232 C147.154667,117.538667 147.64,116.925333 147.896,116.392 C148.152,115.858667 148.28,115.304 148.28,114.728 C148.28,113.789333 147.946667,113.050667 147.28,112.512 C146.613333,111.973333 145.709333,111.704 144.568,111.704 C143.714667,111.704 142.949333,111.842667 142.272,112.12 C141.594667,112.397333 141.037333,112.792 140.6,113.304 L140.6,113.304 L141.416,114.008 C142.141333,113.176 143.16,112.76 144.472,112.76 C145.314667,112.76 145.962667,112.944 146.416,113.312 C146.869333,113.68 147.096,114.194667 147.096,114.856 C147.096,115.282667 146.992,115.706667 146.784,116.128 C146.576,116.549333 146.178667,117.048 145.592,117.624 L145.592,117.624 L140.936,122.184 L140.936,123 L148.792,123 Z M153.576,123.096 C154.450667,123.096 155.192,122.952 155.8,122.664 C156.408,122.376 156.866667,121.984 157.176,121.488 C157.485333,120.992 157.64,120.424 157.64,119.784 C157.64,118.866667 157.333333,118.122667 156.72,117.552 C156.106667,116.981333 155.213333,116.664 154.04,116.6 L154.04,116.6 L157.208,112.616 L157.208,111.8 L150.008,111.8 L150.008,112.824 L155.736,112.824 L152.632,116.712 L152.632,117.56 L153.432,117.56 C154.445333,117.56 155.202667,117.757333 155.704,118.152 C156.205333,118.546667 156.456,119.090667 156.456,119.784 C156.456,120.488 156.205333,121.04 155.704,121.44 C155.202667,121.84 154.493333,122.04 153.576,122.04 C152.872,122.04 152.210667,121.92 151.592,121.68 C150.973333,121.44 150.477333,121.128 150.104,120.744 L150.104,120.744 L149.544,121.656 C149.981333,122.093333 150.56,122.442667 151.28,122.704 C152,122.965333 152.765333,123.096 153.576,123.096 Z M161.624,117.8 C162.370667,117.8 162.978667,117.522667 163.448,116.968 C163.917333,116.413333 164.152,115.677333 164.152,114.76 C164.152,113.842667 163.917333,113.106667 163.448,112.552 C162.978667,111.997333 162.370667,111.72 161.624,111.72 C160.866667,111.72 160.256,112 159.792,112.56 C159.328,113.12 159.096,113.853333 159.096,114.76 C159.096,115.666667 159.328,116.4 159.792,116.96 C160.256,117.52 160.866667,117.8 161.624,117.8 Z M161.704,123 L169.352,111.8 L168.408,111.8 L160.76,123 L161.704,123 Z M161.624,117.08 C161.090667,117.08 160.669333,116.872 160.36,116.456 C160.050667,116.04 159.896,115.474667 159.896,114.76 C159.896,114.045333 160.050667,113.48 160.36,113.064 C160.669333,112.648 161.090667,112.44 161.624,112.44 C162.146667,112.44 162.565333,112.645333 162.88,113.056 C163.194667,113.466667 163.352,114.034667 163.352,114.76 C163.352,115.485333 163.194667,116.053333 162.88,116.464 C162.565333,116.874667 162.146667,117.08 161.624,117.08 Z M168.488,123.08 C169.245333,123.08 169.856,122.8 170.32,122.24 C170.784,121.68 171.016,120.946667 171.016,120.04 C171.016,119.133333 170.784,118.4 170.32,117.84 C169.856,117.28 169.245333,117 168.488,117 C167.741333,117 167.133333,117.28 166.664,117.84 C166.194667,118.4 165.96,119.133333 165.96,120.04 C165.96,120.946667 166.194667,121.68 166.664,122.24 C167.133333,122.8 167.741333,123.08 168.488,123.08 Z M168.488,122.36 C167.965333,122.36 167.546667,122.154667 167.232,121.744 C166.917333,121.333333 166.76,120.765333 166.76,120.04 C166.76,119.314667 166.917333,118.746667 167.232,118.336 C167.546667,117.925333 167.965333,117.72 168.488,117.72 C169.021333,117.72 169.442667,117.928 169.752,118.344 C170.061333,118.76 170.216,119.325333 170.216,120.04 C170.216,120.754667 170.061333,121.32 169.752,121.736 C169.442667,122.152 169.021333,122.36 168.488,122.36 Z\",\"id\":\"23%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":32}),React.createElement(\"path\",{\"d\":\"M243.432,68 L243.432,66.976 L237.272,66.976 L241.08,63.232 C241.794667,62.5386667 242.28,61.9253333 242.536,61.392 C242.792,60.8586667 242.92,60.304 242.92,59.728 C242.92,58.7893333 242.586667,58.0506667 241.92,57.512 C241.253333,56.9733333 240.349333,56.704 239.208,56.704 C238.354667,56.704 237.589333,56.8426667 236.912,57.12 C236.234667,57.3973333 235.677333,57.792 235.24,58.304 L235.24,58.304 L236.056,59.008 C236.781333,58.176 237.8,57.76 239.112,57.76 C239.954667,57.76 240.602667,57.944 241.056,58.312 C241.509333,58.68 241.736,59.1946667 241.736,59.856 C241.736,60.2826667 241.632,60.7066667 241.424,61.128 C241.216,61.5493333 240.818667,62.048 240.232,62.624 L240.232,62.624 L235.576,67.184 L235.576,68 L243.432,68 Z M247.832,68.096 C248.856,68.096 249.752,67.8746667 250.52,67.432 C251.288,66.9893333 251.885333,66.336 252.312,65.472 C252.738667,64.608 252.952,63.552 252.952,62.304 C252.952,60.5226667 252.557333,59.144 251.768,58.168 C250.978667,57.192 249.842667,56.704 248.36,56.704 C247.634667,56.704 246.981333,56.8453333 246.4,57.128 C245.818667,57.4106667 245.362667,57.8133333 245.032,58.336 C244.701333,58.8586667 244.536,59.4613333 244.536,60.144 C244.536,60.816 244.696,61.4053333 245.016,61.912 C245.336,62.4186667 245.781333,62.8106667 246.352,63.088 C246.922667,63.3653333 247.576,63.504 248.312,63.504 C249.101333,63.504 249.8,63.336 250.408,63 C251.016,62.664 251.458667,62.192 251.736,61.584 C251.768,61.9146667 251.784,62.2186667 251.784,62.496 C251.784,63.9893333 251.432,65.128 250.728,65.912 C250.024,66.696 249.053333,67.088 247.816,67.088 C246.898667,67.088 246.173333,66.912 245.64,66.56 L245.64,66.56 L245.176,67.488 C245.837333,67.8933333 246.722667,68.096 247.832,68.096 Z M248.488,62.528 C247.624,62.528 246.938667,62.3093333 246.432,61.872 C245.925333,61.4346667 245.672,60.848 245.672,60.112 C245.672,59.376 245.925333,58.7866667 246.432,58.344 C246.938667,57.9013333 247.597333,57.68 248.408,57.68 C249.026667,57.68 249.56,57.792 250.008,58.016 C250.456,58.24 250.794667,58.5333333 251.024,58.896 C251.253333,59.2586667 251.368,59.6533333 251.368,60.08 C251.368,60.5386667 251.245333,60.9546667 251,61.328 C250.754667,61.7013333 250.416,61.9946667 249.984,62.208 C249.552,62.4213333 249.053333,62.528 248.488,62.528 Z M256.984,62.8 C257.730667,62.8 258.338667,62.5226667 258.808,61.968 C259.277333,61.4133333 259.512,60.6773333 259.512,59.76 C259.512,58.8426667 259.277333,58.1066667 258.808,57.552 C258.338667,56.9973333 257.730667,56.72 256.984,56.72 C256.226667,56.72 255.616,57 255.152,57.56 C254.688,58.12 254.456,58.8533333 254.456,59.76 C254.456,60.6666667 254.688,61.4 255.152,61.96 C255.616,62.52 256.226667,62.8 256.984,62.8 Z M257.064,68 L264.712,56.8 L263.768,56.8 L256.12,68 L257.064,68 Z M256.984,62.08 C256.450667,62.08 256.029333,61.872 255.72,61.456 C255.410667,61.04 255.256,60.4746667 255.256,59.76 C255.256,59.0453333 255.410667,58.48 255.72,58.064 C256.029333,57.648 256.450667,57.44 256.984,57.44 C257.506667,57.44 257.925333,57.6453333 258.24,58.056 C258.554667,58.4666667 258.712,59.0346667 258.712,59.76 C258.712,60.4853333 258.554667,61.0533333 258.24,61.464 C257.925333,61.8746667 257.506667,62.08 256.984,62.08 Z M263.848,68.08 C264.605333,68.08 265.216,67.8 265.68,67.24 C266.144,66.68 266.376,65.9466667 266.376,65.04 C266.376,64.1333333 266.144,63.4 265.68,62.84 C265.216,62.28 264.605333,62 263.848,62 C263.101333,62 262.493333,62.28 262.024,62.84 C261.554667,63.4 261.32,64.1333333 261.32,65.04 C261.32,65.9466667 261.554667,66.68 262.024,67.24 C262.493333,67.8 263.101333,68.08 263.848,68.08 Z M263.848,67.36 C263.325333,67.36 262.906667,67.1546667 262.592,66.744 C262.277333,66.3333333 262.12,65.7653333 262.12,65.04 C262.12,64.3146667 262.277333,63.7466667 262.592,63.336 C262.906667,62.9253333 263.325333,62.72 263.848,62.72 C264.381333,62.72 264.802667,62.928 265.112,63.344 C265.421333,63.76 265.576,64.3253333 265.576,65.04 C265.576,65.7546667 265.421333,66.32 265.112,66.736 C264.802667,67.152 264.381333,67.36 263.848,67.36 Z\",\"id\":\"29%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":33}),React.createElement(\"path\",{\"d\":\"M281.432,68 L281.432,66.976 L275.272,66.976 L279.08,63.232 C279.794667,62.5386667 280.28,61.9253333 280.536,61.392 C280.792,60.8586667 280.92,60.304 280.92,59.728 C280.92,58.7893333 280.586667,58.0506667 279.92,57.512 C279.253333,56.9733333 278.349333,56.704 277.208,56.704 C276.354667,56.704 275.589333,56.8426667 274.912,57.12 C274.234667,57.3973333 273.677333,57.792 273.24,58.304 L273.24,58.304 L274.056,59.008 C274.781333,58.176 275.8,57.76 277.112,57.76 C277.954667,57.76 278.602667,57.944 279.056,58.312 C279.509333,58.68 279.736,59.1946667 279.736,59.856 C279.736,60.2826667 279.632,60.7066667 279.424,61.128 C279.216,61.5493333 278.818667,62.048 278.232,62.624 L278.232,62.624 L273.576,67.184 L273.576,68 L281.432,68 Z M285.832,68.096 C286.856,68.096 287.752,67.8746667 288.52,67.432 C289.288,66.9893333 289.885333,66.336 290.312,65.472 C290.738667,64.608 290.952,63.552 290.952,62.304 C290.952,60.5226667 290.557333,59.144 289.768,58.168 C288.978667,57.192 287.842667,56.704 286.36,56.704 C285.634667,56.704 284.981333,56.8453333 284.4,57.128 C283.818667,57.4106667 283.362667,57.8133333 283.032,58.336 C282.701333,58.8586667 282.536,59.4613333 282.536,60.144 C282.536,60.816 282.696,61.4053333 283.016,61.912 C283.336,62.4186667 283.781333,62.8106667 284.352,63.088 C284.922667,63.3653333 285.576,63.504 286.312,63.504 C287.101333,63.504 287.8,63.336 288.408,63 C289.016,62.664 289.458667,62.192 289.736,61.584 C289.768,61.9146667 289.784,62.2186667 289.784,62.496 C289.784,63.9893333 289.432,65.128 288.728,65.912 C288.024,66.696 287.053333,67.088 285.816,67.088 C284.898667,67.088 284.173333,66.912 283.64,66.56 L283.64,66.56 L283.176,67.488 C283.837333,67.8933333 284.722667,68.096 285.832,68.096 Z M286.488,62.528 C285.624,62.528 284.938667,62.3093333 284.432,61.872 C283.925333,61.4346667 283.672,60.848 283.672,60.112 C283.672,59.376 283.925333,58.7866667 284.432,58.344 C284.938667,57.9013333 285.597333,57.68 286.408,57.68 C287.026667,57.68 287.56,57.792 288.008,58.016 C288.456,58.24 288.794667,58.5333333 289.024,58.896 C289.253333,59.2586667 289.368,59.6533333 289.368,60.08 C289.368,60.5386667 289.245333,60.9546667 289,61.328 C288.754667,61.7013333 288.416,61.9946667 287.984,62.208 C287.552,62.4213333 287.053333,62.528 286.488,62.528 Z M294.984,62.8 C295.730667,62.8 296.338667,62.5226667 296.808,61.968 C297.277333,61.4133333 297.512,60.6773333 297.512,59.76 C297.512,58.8426667 297.277333,58.1066667 296.808,57.552 C296.338667,56.9973333 295.730667,56.72 294.984,56.72 C294.226667,56.72 293.616,57 293.152,57.56 C292.688,58.12 292.456,58.8533333 292.456,59.76 C292.456,60.6666667 292.688,61.4 293.152,61.96 C293.616,62.52 294.226667,62.8 294.984,62.8 Z M295.064,68 L302.712,56.8 L301.768,56.8 L294.12,68 L295.064,68 Z M294.984,62.08 C294.450667,62.08 294.029333,61.872 293.72,61.456 C293.410667,61.04 293.256,60.4746667 293.256,59.76 C293.256,59.0453333 293.410667,58.48 293.72,58.064 C294.029333,57.648 294.450667,57.44 294.984,57.44 C295.506667,57.44 295.925333,57.6453333 296.24,58.056 C296.554667,58.4666667 296.712,59.0346667 296.712,59.76 C296.712,60.4853333 296.554667,61.0533333 296.24,61.464 C295.925333,61.8746667 295.506667,62.08 294.984,62.08 Z M301.848,68.08 C302.605333,68.08 303.216,67.8 303.68,67.24 C304.144,66.68 304.376,65.9466667 304.376,65.04 C304.376,64.1333333 304.144,63.4 303.68,62.84 C303.216,62.28 302.605333,62 301.848,62 C301.101333,62 300.493333,62.28 300.024,62.84 C299.554667,63.4 299.32,64.1333333 299.32,65.04 C299.32,65.9466667 299.554667,66.68 300.024,67.24 C300.493333,67.8 301.101333,68.08 301.848,68.08 Z M301.848,67.36 C301.325333,67.36 300.906667,67.1546667 300.592,66.744 C300.277333,66.3333333 300.12,65.7653333 300.12,65.04 C300.12,64.3146667 300.277333,63.7466667 300.592,63.336 C300.906667,62.9253333 301.325333,62.72 301.848,62.72 C302.381333,62.72 302.802667,62.928 303.112,63.344 C303.421333,63.76 303.576,64.3253333 303.576,65.04 C303.576,65.7546667 303.421333,66.32 303.112,66.736 C302.802667,67.152 302.381333,67.36 301.848,67.36 Z\",\"id\":\"29%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":34}),React.createElement(\"path\",{\"d\":\"M319.432,90 L319.432,88.976 L313.272,88.976 L317.08,85.232 C317.794667,84.5386667 318.28,83.9253333 318.536,83.392 C318.792,82.8586667 318.92,82.304 318.92,81.728 C318.92,80.7893333 318.586667,80.0506667 317.92,79.512 C317.253333,78.9733333 316.349333,78.704 315.208,78.704 C314.354667,78.704 313.589333,78.8426667 312.912,79.12 C312.234667,79.3973333 311.677333,79.792 311.24,80.304 L311.24,80.304 L312.056,81.008 C312.781333,80.176 313.8,79.76 315.112,79.76 C315.954667,79.76 316.602667,79.944 317.056,80.312 C317.509333,80.68 317.736,81.1946667 317.736,81.856 C317.736,82.2826667 317.632,82.7066667 317.424,83.128 C317.216,83.5493333 316.818667,84.048 316.232,84.624 L316.232,84.624 L311.576,89.184 L311.576,90 L319.432,90 Z M325.464,90.096 C326.189333,90.096 326.842667,89.9546667 327.424,89.672 C328.005333,89.3893333 328.461333,88.9866667 328.792,88.464 C329.122667,87.9413333 329.288,87.3386667 329.288,86.656 C329.288,85.984 329.128,85.3946667 328.808,84.888 C328.488,84.3813333 328.042667,83.9893333 327.472,83.712 C326.901333,83.4346667 326.248,83.296 325.512,83.296 C324.722667,83.296 324.024,83.464 323.416,83.8 C322.808,84.136 322.365333,84.608 322.088,85.216 C322.056,84.8746667 322.04,84.5706667 322.04,84.304 C322.04,82.8106667 322.392,81.672 323.096,80.888 C323.8,80.104 324.770667,79.712 326.008,79.712 C326.925333,79.712 327.650667,79.888 328.184,80.24 L328.184,80.24 L328.648,79.312 C327.986667,78.9066667 327.101333,78.704 325.992,78.704 C324.968,78.704 324.072,78.9253333 323.304,79.368 C322.536,79.8106667 321.938667,80.464 321.512,81.328 C321.085333,82.192 320.872,83.248 320.872,84.496 C320.872,86.2773333 321.266667,87.656 322.056,88.632 C322.845333,89.608 323.981333,90.096 325.464,90.096 Z M325.416,89.12 C324.797333,89.12 324.264,89.008 323.816,88.784 C323.368,88.56 323.029333,88.2666667 322.8,87.904 C322.570667,87.5413333 322.456,87.1466667 322.456,86.72 C322.456,86.2613333 322.578667,85.8453333 322.824,85.472 C323.069333,85.0986667 323.408,84.8053333 323.84,84.592 C324.272,84.3786667 324.770667,84.272 325.336,84.272 C326.2,84.272 326.885333,84.4906667 327.392,84.928 C327.898667,85.3653333 328.152,85.952 328.152,86.688 C328.152,87.424 327.898667,88.0133333 327.392,88.456 C326.885333,88.8986667 326.226667,89.12 325.416,89.12 Z M332.984,84.8 C333.730667,84.8 334.338667,84.5226667 334.808,83.968 C335.277333,83.4133333 335.512,82.6773333 335.512,81.76 C335.512,80.8426667 335.277333,80.1066667 334.808,79.552 C334.338667,78.9973333 333.730667,78.72 332.984,78.72 C332.226667,78.72 331.616,79 331.152,79.56 C330.688,80.12 330.456,80.8533333 330.456,81.76 C330.456,82.6666667 330.688,83.4 331.152,83.96 C331.616,84.52 332.226667,84.8 332.984,84.8 Z M333.064,90 L340.712,78.8 L339.768,78.8 L332.12,90 L333.064,90 Z M332.984,84.08 C332.450667,84.08 332.029333,83.872 331.72,83.456 C331.410667,83.04 331.256,82.4746667 331.256,81.76 C331.256,81.0453333 331.410667,80.48 331.72,80.064 C332.029333,79.648 332.450667,79.44 332.984,79.44 C333.506667,79.44 333.925333,79.6453333 334.24,80.056 C334.554667,80.4666667 334.712,81.0346667 334.712,81.76 C334.712,82.4853333 334.554667,83.0533333 334.24,83.464 C333.925333,83.8746667 333.506667,84.08 332.984,84.08 Z M339.848,90.08 C340.605333,90.08 341.216,89.8 341.68,89.24 C342.144,88.68 342.376,87.9466667 342.376,87.04 C342.376,86.1333333 342.144,85.4 341.68,84.84 C341.216,84.28 340.605333,84 339.848,84 C339.101333,84 338.493333,84.28 338.024,84.84 C337.554667,85.4 337.32,86.1333333 337.32,87.04 C337.32,87.9466667 337.554667,88.68 338.024,89.24 C338.493333,89.8 339.101333,90.08 339.848,90.08 Z M339.848,89.36 C339.325333,89.36 338.906667,89.1546667 338.592,88.744 C338.277333,88.3333333 338.12,87.7653333 338.12,87.04 C338.12,86.3146667 338.277333,85.7466667 338.592,85.336 C338.906667,84.9253333 339.325333,84.72 339.848,84.72 C340.381333,84.72 340.802667,84.928 341.112,85.344 C341.421333,85.76 341.576,86.3253333 341.576,87.04 C341.576,87.7546667 341.421333,88.32 341.112,88.736 C340.802667,89.152 340.381333,89.36 339.848,89.36 Z\",\"id\":\"26%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":35}),React.createElement(\"path\",{\"d\":\"M414.016,115 L414.016,113.976 L407.856,113.976 L411.664,110.232 C412.378667,109.538667 412.864,108.925333 413.12,108.392 C413.376,107.858667 413.504,107.304 413.504,106.728 C413.504,105.789333 413.170667,105.050667 412.504,104.512 C411.837333,103.973333 410.933333,103.704 409.792,103.704 C408.938667,103.704 408.173333,103.842667 407.496,104.12 C406.818667,104.397333 406.261333,104.792 405.824,105.304 L405.824,105.304 L406.64,106.008 C407.365333,105.176 408.384,104.76 409.696,104.76 C410.538667,104.76 411.186667,104.944 411.64,105.312 C412.093333,105.68 412.32,106.194667 412.32,106.856 C412.32,107.282667 412.216,107.706667 412.008,108.128 C411.8,108.549333 411.402667,109.048 410.816,109.624 L410.816,109.624 L406.16,114.184 L406.16,115 L414.016,115 Z M422.736,115 L422.736,112.056 L424.976,112.056 L424.976,111.032 L422.736,111.032 L422.736,108.44 L421.616,108.44 L421.616,111.032 L416.752,111.032 L422.48,103.8 L421.2,103.8 L415.264,111.224 L415.264,112.056 L421.584,112.056 L421.584,115 L422.736,115 Z M428.4,109.8 C429.146667,109.8 429.754667,109.522667 430.224,108.968 C430.693333,108.413333 430.928,107.677333 430.928,106.76 C430.928,105.842667 430.693333,105.106667 430.224,104.552 C429.754667,103.997333 429.146667,103.72 428.4,103.72 C427.642667,103.72 427.032,104 426.568,104.56 C426.104,105.12 425.872,105.853333 425.872,106.76 C425.872,107.666667 426.104,108.4 426.568,108.96 C427.032,109.52 427.642667,109.8 428.4,109.8 Z M428.48,115 L436.128,103.8 L435.184,103.8 L427.536,115 L428.48,115 Z M428.4,109.08 C427.866667,109.08 427.445333,108.872 427.136,108.456 C426.826667,108.04 426.672,107.474667 426.672,106.76 C426.672,106.045333 426.826667,105.48 427.136,105.064 C427.445333,104.648 427.866667,104.44 428.4,104.44 C428.922667,104.44 429.341333,104.645333 429.656,105.056 C429.970667,105.466667 430.128,106.034667 430.128,106.76 C430.128,107.485333 429.970667,108.053333 429.656,108.464 C429.341333,108.874667 428.922667,109.08 428.4,109.08 Z M435.264,115.08 C436.021333,115.08 436.632,114.8 437.096,114.24 C437.56,113.68 437.792,112.946667 437.792,112.04 C437.792,111.133333 437.56,110.4 437.096,109.84 C436.632,109.28 436.021333,109 435.264,109 C434.517333,109 433.909333,109.28 433.44,109.84 C432.970667,110.4 432.736,111.133333 432.736,112.04 C432.736,112.946667 432.970667,113.68 433.44,114.24 C433.909333,114.8 434.517333,115.08 435.264,115.08 Z M435.264,114.36 C434.741333,114.36 434.322667,114.154667 434.008,113.744 C433.693333,113.333333 433.536,112.765333 433.536,112.04 C433.536,111.314667 433.693333,110.746667 434.008,110.336 C434.322667,109.925333 434.741333,109.72 435.264,109.72 C435.797333,109.72 436.218667,109.928 436.528,110.344 C436.837333,110.76 436.992,111.325333 436.992,112.04 C436.992,112.754667 436.837333,113.32 436.528,113.736 C436.218667,114.152 435.797333,114.36 435.264,114.36 Z\",\"id\":\"24%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":36}),React.createElement(\"path\",{\"d\":\"M451.016,115 L451.016,113.976 L444.856,113.976 L448.664,110.232 C449.378667,109.538667 449.864,108.925333 450.12,108.392 C450.376,107.858667 450.504,107.304 450.504,106.728 C450.504,105.789333 450.170667,105.050667 449.504,104.512 C448.837333,103.973333 447.933333,103.704 446.792,103.704 C445.938667,103.704 445.173333,103.842667 444.496,104.12 C443.818667,104.397333 443.261333,104.792 442.824,105.304 L442.824,105.304 L443.64,106.008 C444.365333,105.176 445.384,104.76 446.696,104.76 C447.538667,104.76 448.186667,104.944 448.64,105.312 C449.093333,105.68 449.32,106.194667 449.32,106.856 C449.32,107.282667 449.216,107.706667 449.008,108.128 C448.8,108.549333 448.402667,109.048 447.816,109.624 L447.816,109.624 L443.16,114.184 L443.16,115 L451.016,115 Z M459.736,115 L459.736,112.056 L461.976,112.056 L461.976,111.032 L459.736,111.032 L459.736,108.44 L458.616,108.44 L458.616,111.032 L453.752,111.032 L459.48,103.8 L458.2,103.8 L452.264,111.224 L452.264,112.056 L458.584,112.056 L458.584,115 L459.736,115 Z M465.4,109.8 C466.146667,109.8 466.754667,109.522667 467.224,108.968 C467.693333,108.413333 467.928,107.677333 467.928,106.76 C467.928,105.842667 467.693333,105.106667 467.224,104.552 C466.754667,103.997333 466.146667,103.72 465.4,103.72 C464.642667,103.72 464.032,104 463.568,104.56 C463.104,105.12 462.872,105.853333 462.872,106.76 C462.872,107.666667 463.104,108.4 463.568,108.96 C464.032,109.52 464.642667,109.8 465.4,109.8 Z M465.48,115 L473.128,103.8 L472.184,103.8 L464.536,115 L465.48,115 Z M465.4,109.08 C464.866667,109.08 464.445333,108.872 464.136,108.456 C463.826667,108.04 463.672,107.474667 463.672,106.76 C463.672,106.045333 463.826667,105.48 464.136,105.064 C464.445333,104.648 464.866667,104.44 465.4,104.44 C465.922667,104.44 466.341333,104.645333 466.656,105.056 C466.970667,105.466667 467.128,106.034667 467.128,106.76 C467.128,107.485333 466.970667,108.053333 466.656,108.464 C466.341333,108.874667 465.922667,109.08 465.4,109.08 Z M472.264,115.08 C473.021333,115.08 473.632,114.8 474.096,114.24 C474.56,113.68 474.792,112.946667 474.792,112.04 C474.792,111.133333 474.56,110.4 474.096,109.84 C473.632,109.28 473.021333,109 472.264,109 C471.517333,109 470.909333,109.28 470.44,109.84 C469.970667,110.4 469.736,111.133333 469.736,112.04 C469.736,112.946667 469.970667,113.68 470.44,114.24 C470.909333,114.8 471.517333,115.08 472.264,115.08 Z M472.264,114.36 C471.741333,114.36 471.322667,114.154667 471.008,113.744 C470.693333,113.333333 470.536,112.765333 470.536,112.04 C470.536,111.314667 470.693333,110.746667 471.008,110.336 C471.322667,109.925333 471.741333,109.72 472.264,109.72 C472.797333,109.72 473.218667,109.928 473.528,110.344 C473.837333,110.76 473.992,111.325333 473.992,112.04 C473.992,112.754667 473.837333,113.32 473.528,113.736 C473.218667,114.152 472.797333,114.36 472.264,114.36 Z\",\"id\":\"24%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":37}),React.createElement(\"path\",{\"d\":\"M492.416,136 L492.416,134.976 L486.256,134.976 L490.064,131.232 C490.778667,130.538667 491.264,129.925333 491.52,129.392 C491.776,128.858667 491.904,128.304 491.904,127.728 C491.904,126.789333 491.570667,126.050667 490.904,125.512 C490.237333,124.973333 489.333333,124.704 488.192,124.704 C487.338667,124.704 486.573333,124.842667 485.896,125.12 C485.218667,125.397333 484.661333,125.792 484.224,126.304 L484.224,126.304 L485.04,127.008 C485.765333,126.176 486.784,125.76 488.096,125.76 C488.938667,125.76 489.586667,125.944 490.04,126.312 C490.493333,126.68 490.72,127.194667 490.72,127.856 C490.72,128.282667 490.616,128.706667 490.408,129.128 C490.2,129.549333 489.802667,130.048 489.216,130.624 L489.216,130.624 L484.56,135.184 L484.56,136 L492.416,136 Z M496.96,136 L496.96,124.8 L493.168,124.8 L493.168,125.824 L495.808,125.824 L495.808,136 L496.96,136 Z M502,130.8 C502.746667,130.8 503.354667,130.522667 503.824,129.968 C504.293333,129.413333 504.528,128.677333 504.528,127.76 C504.528,126.842667 504.293333,126.106667 503.824,125.552 C503.354667,124.997333 502.746667,124.72 502,124.72 C501.242667,124.72 500.632,125 500.168,125.56 C499.704,126.12 499.472,126.853333 499.472,127.76 C499.472,128.666667 499.704,129.4 500.168,129.96 C500.632,130.52 501.242667,130.8 502,130.8 Z M502.08,136 L509.728,124.8 L508.784,124.8 L501.136,136 L502.08,136 Z M502,130.08 C501.466667,130.08 501.045333,129.872 500.736,129.456 C500.426667,129.04 500.272,128.474667 500.272,127.76 C500.272,127.045333 500.426667,126.48 500.736,126.064 C501.045333,125.648 501.466667,125.44 502,125.44 C502.522667,125.44 502.941333,125.645333 503.256,126.056 C503.570667,126.466667 503.728,127.034667 503.728,127.76 C503.728,128.485333 503.570667,129.053333 503.256,129.464 C502.941333,129.874667 502.522667,130.08 502,130.08 Z M508.864,136.08 C509.621333,136.08 510.232,135.8 510.696,135.24 C511.16,134.68 511.392,133.946667 511.392,133.04 C511.392,132.133333 511.16,131.4 510.696,130.84 C510.232,130.28 509.621333,130 508.864,130 C508.117333,130 507.509333,130.28 507.04,130.84 C506.570667,131.4 506.336,132.133333 506.336,133.04 C506.336,133.946667 506.570667,134.68 507.04,135.24 C507.509333,135.8 508.117333,136.08 508.864,136.08 Z M508.864,135.36 C508.341333,135.36 507.922667,135.154667 507.608,134.744 C507.293333,134.333333 507.136,133.765333 507.136,133.04 C507.136,132.314667 507.293333,131.746667 507.608,131.336 C507.922667,130.925333 508.341333,130.72 508.864,130.72 C509.397333,130.72 509.818667,130.928 510.128,131.344 C510.437333,131.76 510.592,132.325333 510.592,133.04 C510.592,133.754667 510.437333,134.32 510.128,134.736 C509.818667,135.152 509.397333,135.36 508.864,135.36 Z\",\"id\":\"21%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":38}),React.createElement(\"path\",{\"d\":\"M585.76,130 L585.76,128.976 L579.6,128.976 L583.408,125.232 C584.122667,124.538667 584.608,123.925333 584.864,123.392 C585.12,122.858667 585.248,122.304 585.248,121.728 C585.248,120.789333 584.914667,120.050667 584.248,119.512 C583.581333,118.973333 582.677333,118.704 581.536,118.704 C580.682667,118.704 579.917333,118.842667 579.24,119.12 C578.562667,119.397333 578.005333,119.792 577.568,120.304 L577.568,120.304 L578.384,121.008 C579.109333,120.176 580.128,119.76 581.44,119.76 C582.282667,119.76 582.930667,119.944 583.384,120.312 C583.837333,120.68 584.064,121.194667 584.064,121.856 C584.064,122.282667 583.96,122.706667 583.752,123.128 C583.544,123.549333 583.146667,124.048 582.56,124.624 L582.56,124.624 L577.904,129.184 L577.904,130 L585.76,130 Z M594.848,130 L594.848,128.976 L588.688,128.976 L592.496,125.232 C593.210667,124.538667 593.696,123.925333 593.952,123.392 C594.208,122.858667 594.336,122.304 594.336,121.728 C594.336,120.789333 594.002667,120.050667 593.336,119.512 C592.669333,118.973333 591.765333,118.704 590.624,118.704 C589.770667,118.704 589.005333,118.842667 588.328,119.12 C587.650667,119.397333 587.093333,119.792 586.656,120.304 L586.656,120.304 L587.472,121.008 C588.197333,120.176 589.216,119.76 590.528,119.76 C591.370667,119.76 592.018667,119.944 592.472,120.312 C592.925333,120.68 593.152,121.194667 593.152,121.856 C593.152,122.282667 593.048,122.706667 592.84,123.128 C592.632,123.549333 592.234667,124.048 591.648,124.624 L591.648,124.624 L586.992,129.184 L586.992,130 L594.848,130 Z M598.656,124.8 C599.402667,124.8 600.010667,124.522667 600.48,123.968 C600.949333,123.413333 601.184,122.677333 601.184,121.76 C601.184,120.842667 600.949333,120.106667 600.48,119.552 C600.010667,118.997333 599.402667,118.72 598.656,118.72 C597.898667,118.72 597.288,119 596.824,119.56 C596.36,120.12 596.128,120.853333 596.128,121.76 C596.128,122.666667 596.36,123.4 596.824,123.96 C597.288,124.52 597.898667,124.8 598.656,124.8 Z M598.736,130 L606.384,118.8 L605.44,118.8 L597.792,130 L598.736,130 Z M598.656,124.08 C598.122667,124.08 597.701333,123.872 597.392,123.456 C597.082667,123.04 596.928,122.474667 596.928,121.76 C596.928,121.045333 597.082667,120.48 597.392,120.064 C597.701333,119.648 598.122667,119.44 598.656,119.44 C599.178667,119.44 599.597333,119.645333 599.912,120.056 C600.226667,120.466667 600.384,121.034667 600.384,121.76 C600.384,122.485333 600.226667,123.053333 599.912,123.464 C599.597333,123.874667 599.178667,124.08 598.656,124.08 Z M605.52,130.08 C606.277333,130.08 606.888,129.8 607.352,129.24 C607.816,128.68 608.048,127.946667 608.048,127.04 C608.048,126.133333 607.816,125.4 607.352,124.84 C606.888,124.28 606.277333,124 605.52,124 C604.773333,124 604.165333,124.28 603.696,124.84 C603.226667,125.4 602.992,126.133333 602.992,127.04 C602.992,127.946667 603.226667,128.68 603.696,129.24 C604.165333,129.8 604.773333,130.08 605.52,130.08 Z M605.52,129.36 C604.997333,129.36 604.578667,129.154667 604.264,128.744 C603.949333,128.333333 603.792,127.765333 603.792,127.04 C603.792,126.314667 603.949333,125.746667 604.264,125.336 C604.578667,124.925333 604.997333,124.72 605.52,124.72 C606.053333,124.72 606.474667,124.928 606.784,125.344 C607.093333,125.76 607.248,126.325333 607.248,127.04 C607.248,127.754667 607.093333,128.32 606.784,128.736 C606.474667,129.152 606.053333,129.36 605.52,129.36 Z\",\"id\":\"22%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":39}),React.createElement(\"path\",{\"d\":\"M623.76,130 L623.76,128.976 L617.6,128.976 L621.408,125.232 C622.122667,124.538667 622.608,123.925333 622.864,123.392 C623.12,122.858667 623.248,122.304 623.248,121.728 C623.248,120.789333 622.914667,120.050667 622.248,119.512 C621.581333,118.973333 620.677333,118.704 619.536,118.704 C618.682667,118.704 617.917333,118.842667 617.24,119.12 C616.562667,119.397333 616.005333,119.792 615.568,120.304 L615.568,120.304 L616.384,121.008 C617.109333,120.176 618.128,119.76 619.44,119.76 C620.282667,119.76 620.930667,119.944 621.384,120.312 C621.837333,120.68 622.064,121.194667 622.064,121.856 C622.064,122.282667 621.96,122.706667 621.752,123.128 C621.544,123.549333 621.146667,124.048 620.56,124.624 L620.56,124.624 L615.904,129.184 L615.904,130 L623.76,130 Z M632.848,130 L632.848,128.976 L626.688,128.976 L630.496,125.232 C631.210667,124.538667 631.696,123.925333 631.952,123.392 C632.208,122.858667 632.336,122.304 632.336,121.728 C632.336,120.789333 632.002667,120.050667 631.336,119.512 C630.669333,118.973333 629.765333,118.704 628.624,118.704 C627.770667,118.704 627.005333,118.842667 626.328,119.12 C625.650667,119.397333 625.093333,119.792 624.656,120.304 L624.656,120.304 L625.472,121.008 C626.197333,120.176 627.216,119.76 628.528,119.76 C629.370667,119.76 630.018667,119.944 630.472,120.312 C630.925333,120.68 631.152,121.194667 631.152,121.856 C631.152,122.282667 631.048,122.706667 630.84,123.128 C630.632,123.549333 630.234667,124.048 629.648,124.624 L629.648,124.624 L624.992,129.184 L624.992,130 L632.848,130 Z M636.656,124.8 C637.402667,124.8 638.010667,124.522667 638.48,123.968 C638.949333,123.413333 639.184,122.677333 639.184,121.76 C639.184,120.842667 638.949333,120.106667 638.48,119.552 C638.010667,118.997333 637.402667,118.72 636.656,118.72 C635.898667,118.72 635.288,119 634.824,119.56 C634.36,120.12 634.128,120.853333 634.128,121.76 C634.128,122.666667 634.36,123.4 634.824,123.96 C635.288,124.52 635.898667,124.8 636.656,124.8 Z M636.736,130 L644.384,118.8 L643.44,118.8 L635.792,130 L636.736,130 Z M636.656,124.08 C636.122667,124.08 635.701333,123.872 635.392,123.456 C635.082667,123.04 634.928,122.474667 634.928,121.76 C634.928,121.045333 635.082667,120.48 635.392,120.064 C635.701333,119.648 636.122667,119.44 636.656,119.44 C637.178667,119.44 637.597333,119.645333 637.912,120.056 C638.226667,120.466667 638.384,121.034667 638.384,121.76 C638.384,122.485333 638.226667,123.053333 637.912,123.464 C637.597333,123.874667 637.178667,124.08 636.656,124.08 Z M643.52,130.08 C644.277333,130.08 644.888,129.8 645.352,129.24 C645.816,128.68 646.048,127.946667 646.048,127.04 C646.048,126.133333 645.816,125.4 645.352,124.84 C644.888,124.28 644.277333,124 643.52,124 C642.773333,124 642.165333,124.28 641.696,124.84 C641.226667,125.4 640.992,126.133333 640.992,127.04 C640.992,127.946667 641.226667,128.68 641.696,129.24 C642.165333,129.8 642.773333,130.08 643.52,130.08 Z M643.52,129.36 C642.997333,129.36 642.578667,129.154667 642.264,128.744 C641.949333,128.333333 641.792,127.765333 641.792,127.04 C641.792,126.314667 641.949333,125.746667 642.264,125.336 C642.578667,124.925333 642.997333,124.72 643.52,124.72 C644.053333,124.72 644.474667,124.928 644.784,125.344 C645.093333,125.76 645.248,126.325333 645.248,127.04 C645.248,127.754667 645.093333,128.32 644.784,128.736 C644.474667,129.152 644.053333,129.36 643.52,129.36 Z\",\"id\":\"22%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":40}),React.createElement(\"path\",{\"d\":\"M658.704,175 L658.704,163.8 L654.912,163.8 L654.912,164.824 L657.552,164.824 L657.552,175 L658.704,175 Z M664.592,175 L669.28,164.616 L669.28,163.8 L661.056,163.8 L661.056,166.92 L662.192,166.92 L662.192,164.824 L667.952,164.824 L663.344,175 L664.592,175 Z M673.168,169.8 C673.914667,169.8 674.522667,169.522667 674.992,168.968 C675.461333,168.413333 675.696,167.677333 675.696,166.76 C675.696,165.842667 675.461333,165.106667 674.992,164.552 C674.522667,163.997333 673.914667,163.72 673.168,163.72 C672.410667,163.72 671.8,164 671.336,164.56 C670.872,165.12 670.64,165.853333 670.64,166.76 C670.64,167.666667 670.872,168.4 671.336,168.96 C671.8,169.52 672.410667,169.8 673.168,169.8 Z M673.248,175 L680.896,163.8 L679.952,163.8 L672.304,175 L673.248,175 Z M673.168,169.08 C672.634667,169.08 672.213333,168.872 671.904,168.456 C671.594667,168.04 671.44,167.474667 671.44,166.76 C671.44,166.045333 671.594667,165.48 671.904,165.064 C672.213333,164.648 672.634667,164.44 673.168,164.44 C673.690667,164.44 674.109333,164.645333 674.424,165.056 C674.738667,165.466667 674.896,166.034667 674.896,166.76 C674.896,167.485333 674.738667,168.053333 674.424,168.464 C674.109333,168.874667 673.690667,169.08 673.168,169.08 Z M680.032,175.08 C680.789333,175.08 681.4,174.8 681.864,174.24 C682.328,173.68 682.56,172.946667 682.56,172.04 C682.56,171.133333 682.328,170.4 681.864,169.84 C681.4,169.28 680.789333,169 680.032,169 C679.285333,169 678.677333,169.28 678.208,169.84 C677.738667,170.4 677.504,171.133333 677.504,172.04 C677.504,172.946667 677.738667,173.68 678.208,174.24 C678.677333,174.8 679.285333,175.08 680.032,175.08 Z M680.032,174.36 C679.509333,174.36 679.090667,174.154667 678.776,173.744 C678.461333,173.333333 678.304,172.765333 678.304,172.04 C678.304,171.314667 678.461333,170.746667 678.776,170.336 C679.090667,169.925333 679.509333,169.72 680.032,169.72 C680.565333,169.72 680.986667,169.928 681.296,170.344 C681.605333,170.76 681.76,171.325333 681.76,172.04 C681.76,172.754667 681.605333,173.32 681.296,173.736 C680.986667,174.152 680.565333,174.36 680.032,174.36 Z\",\"id\":\"17%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":41}),React.createElement(\"path\",{\"d\":\"M753.904,213 L753.904,201.8 L750.112,201.8 L750.112,202.824 L752.752,202.824 L752.752,213 L753.904,213 Z M759.92,213.096 C760.794667,213.096 761.536,212.952 762.144,212.664 C762.752,212.376 763.210667,211.984 763.52,211.488 C763.829333,210.992 763.984,210.424 763.984,209.784 C763.984,208.866667 763.677333,208.122667 763.064,207.552 C762.450667,206.981333 761.557333,206.664 760.384,206.6 L760.384,206.6 L763.552,202.616 L763.552,201.8 L756.352,201.8 L756.352,202.824 L762.08,202.824 L758.976,206.712 L758.976,207.56 L759.776,207.56 C760.789333,207.56 761.546667,207.757333 762.048,208.152 C762.549333,208.546667 762.8,209.090667 762.8,209.784 C762.8,210.488 762.549333,211.04 762.048,211.44 C761.546667,211.84 760.837333,212.04 759.92,212.04 C759.216,212.04 758.554667,211.92 757.936,211.68 C757.317333,211.44 756.821333,211.128 756.448,210.744 L756.448,210.744 L755.888,211.656 C756.325333,212.093333 756.904,212.442667 757.624,212.704 C758.344,212.965333 759.109333,213.096 759.92,213.096 Z M767.968,207.8 C768.714667,207.8 769.322667,207.522667 769.792,206.968 C770.261333,206.413333 770.496,205.677333 770.496,204.76 C770.496,203.842667 770.261333,203.106667 769.792,202.552 C769.322667,201.997333 768.714667,201.72 767.968,201.72 C767.210667,201.72 766.6,202 766.136,202.56 C765.672,203.12 765.44,203.853333 765.44,204.76 C765.44,205.666667 765.672,206.4 766.136,206.96 C766.6,207.52 767.210667,207.8 767.968,207.8 Z M768.048,213 L775.696,201.8 L774.752,201.8 L767.104,213 L768.048,213 Z M767.968,207.08 C767.434667,207.08 767.013333,206.872 766.704,206.456 C766.394667,206.04 766.24,205.474667 766.24,204.76 C766.24,204.045333 766.394667,203.48 766.704,203.064 C767.013333,202.648 767.434667,202.44 767.968,202.44 C768.490667,202.44 768.909333,202.645333 769.224,203.056 C769.538667,203.466667 769.696,204.034667 769.696,204.76 C769.696,205.485333 769.538667,206.053333 769.224,206.464 C768.909333,206.874667 768.490667,207.08 767.968,207.08 Z M774.832,213.08 C775.589333,213.08 776.2,212.8 776.664,212.24 C777.128,211.68 777.36,210.946667 777.36,210.04 C777.36,209.133333 777.128,208.4 776.664,207.84 C776.2,207.28 775.589333,207 774.832,207 C774.085333,207 773.477333,207.28 773.008,207.84 C772.538667,208.4 772.304,209.133333 772.304,210.04 C772.304,210.946667 772.538667,211.68 773.008,212.24 C773.477333,212.8 774.085333,213.08 774.832,213.08 Z M774.832,212.36 C774.309333,212.36 773.890667,212.154667 773.576,211.744 C773.261333,211.333333 773.104,210.765333 773.104,210.04 C773.104,209.314667 773.261333,208.746667 773.576,208.336 C773.890667,207.925333 774.309333,207.72 774.832,207.72 C775.365333,207.72 775.786667,207.928 776.096,208.344 C776.405333,208.76 776.56,209.325333 776.56,210.04 C776.56,210.754667 776.405333,211.32 776.096,211.736 C775.786667,212.152 775.365333,212.36 774.832,212.36 Z\",\"id\":\"13%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":42}),React.createElement(\"path\",{\"d\":\"M791.904,213 L791.904,201.8 L788.112,201.8 L788.112,202.824 L790.752,202.824 L790.752,213 L791.904,213 Z M797.92,213.096 C798.794667,213.096 799.536,212.952 800.144,212.664 C800.752,212.376 801.210667,211.984 801.52,211.488 C801.829333,210.992 801.984,210.424 801.984,209.784 C801.984,208.866667 801.677333,208.122667 801.064,207.552 C800.450667,206.981333 799.557333,206.664 798.384,206.6 L798.384,206.6 L801.552,202.616 L801.552,201.8 L794.352,201.8 L794.352,202.824 L800.08,202.824 L796.976,206.712 L796.976,207.56 L797.776,207.56 C798.789333,207.56 799.546667,207.757333 800.048,208.152 C800.549333,208.546667 800.8,209.090667 800.8,209.784 C800.8,210.488 800.549333,211.04 800.048,211.44 C799.546667,211.84 798.837333,212.04 797.92,212.04 C797.216,212.04 796.554667,211.92 795.936,211.68 C795.317333,211.44 794.821333,211.128 794.448,210.744 L794.448,210.744 L793.888,211.656 C794.325333,212.093333 794.904,212.442667 795.624,212.704 C796.344,212.965333 797.109333,213.096 797.92,213.096 Z M805.968,207.8 C806.714667,207.8 807.322667,207.522667 807.792,206.968 C808.261333,206.413333 808.496,205.677333 808.496,204.76 C808.496,203.842667 808.261333,203.106667 807.792,202.552 C807.322667,201.997333 806.714667,201.72 805.968,201.72 C805.210667,201.72 804.6,202 804.136,202.56 C803.672,203.12 803.44,203.853333 803.44,204.76 C803.44,205.666667 803.672,206.4 804.136,206.96 C804.6,207.52 805.210667,207.8 805.968,207.8 Z M806.048,213 L813.696,201.8 L812.752,201.8 L805.104,213 L806.048,213 Z M805.968,207.08 C805.434667,207.08 805.013333,206.872 804.704,206.456 C804.394667,206.04 804.24,205.474667 804.24,204.76 C804.24,204.045333 804.394667,203.48 804.704,203.064 C805.013333,202.648 805.434667,202.44 805.968,202.44 C806.490667,202.44 806.909333,202.645333 807.224,203.056 C807.538667,203.466667 807.696,204.034667 807.696,204.76 C807.696,205.485333 807.538667,206.053333 807.224,206.464 C806.909333,206.874667 806.490667,207.08 805.968,207.08 Z M812.832,213.08 C813.589333,213.08 814.2,212.8 814.664,212.24 C815.128,211.68 815.36,210.946667 815.36,210.04 C815.36,209.133333 815.128,208.4 814.664,207.84 C814.2,207.28 813.589333,207 812.832,207 C812.085333,207 811.477333,207.28 811.008,207.84 C810.538667,208.4 810.304,209.133333 810.304,210.04 C810.304,210.946667 810.538667,211.68 811.008,212.24 C811.477333,212.8 812.085333,213.08 812.832,213.08 Z M812.832,212.36 C812.309333,212.36 811.890667,212.154667 811.576,211.744 C811.261333,211.333333 811.104,210.765333 811.104,210.04 C811.104,209.314667 811.261333,208.746667 811.576,208.336 C811.890667,207.925333 812.309333,207.72 812.832,207.72 C813.365333,207.72 813.786667,207.928 814.096,208.344 C814.405333,208.76 814.56,209.325333 814.56,210.04 C814.56,210.754667 814.405333,211.32 814.096,211.736 C813.786667,212.152 813.365333,212.36 812.832,212.36 Z\",\"id\":\"13%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":43}),React.createElement(\"path\",{\"d\":\"M829.904,213 L829.904,201.8 L826.112,201.8 L826.112,202.824 L828.752,202.824 L828.752,213 L829.904,213 Z M835.92,213.096 C836.794667,213.096 837.536,212.952 838.144,212.664 C838.752,212.376 839.210667,211.984 839.52,211.488 C839.829333,210.992 839.984,210.424 839.984,209.784 C839.984,208.866667 839.677333,208.122667 839.064,207.552 C838.450667,206.981333 837.557333,206.664 836.384,206.6 L836.384,206.6 L839.552,202.616 L839.552,201.8 L832.352,201.8 L832.352,202.824 L838.08,202.824 L834.976,206.712 L834.976,207.56 L835.776,207.56 C836.789333,207.56 837.546667,207.757333 838.048,208.152 C838.549333,208.546667 838.8,209.090667 838.8,209.784 C838.8,210.488 838.549333,211.04 838.048,211.44 C837.546667,211.84 836.837333,212.04 835.92,212.04 C835.216,212.04 834.554667,211.92 833.936,211.68 C833.317333,211.44 832.821333,211.128 832.448,210.744 L832.448,210.744 L831.888,211.656 C832.325333,212.093333 832.904,212.442667 833.624,212.704 C834.344,212.965333 835.109333,213.096 835.92,213.096 Z M843.968,207.8 C844.714667,207.8 845.322667,207.522667 845.792,206.968 C846.261333,206.413333 846.496,205.677333 846.496,204.76 C846.496,203.842667 846.261333,203.106667 845.792,202.552 C845.322667,201.997333 844.714667,201.72 843.968,201.72 C843.210667,201.72 842.6,202 842.136,202.56 C841.672,203.12 841.44,203.853333 841.44,204.76 C841.44,205.666667 841.672,206.4 842.136,206.96 C842.6,207.52 843.210667,207.8 843.968,207.8 Z M844.048,213 L851.696,201.8 L850.752,201.8 L843.104,213 L844.048,213 Z M843.968,207.08 C843.434667,207.08 843.013333,206.872 842.704,206.456 C842.394667,206.04 842.24,205.474667 842.24,204.76 C842.24,204.045333 842.394667,203.48 842.704,203.064 C843.013333,202.648 843.434667,202.44 843.968,202.44 C844.490667,202.44 844.909333,202.645333 845.224,203.056 C845.538667,203.466667 845.696,204.034667 845.696,204.76 C845.696,205.485333 845.538667,206.053333 845.224,206.464 C844.909333,206.874667 844.490667,207.08 843.968,207.08 Z M850.832,213.08 C851.589333,213.08 852.2,212.8 852.664,212.24 C853.128,211.68 853.36,210.946667 853.36,210.04 C853.36,209.133333 853.128,208.4 852.664,207.84 C852.2,207.28 851.589333,207 850.832,207 C850.085333,207 849.477333,207.28 849.008,207.84 C848.538667,208.4 848.304,209.133333 848.304,210.04 C848.304,210.946667 848.538667,211.68 849.008,212.24 C849.477333,212.8 850.085333,213.08 850.832,213.08 Z M850.832,212.36 C850.309333,212.36 849.890667,212.154667 849.576,211.744 C849.261333,211.333333 849.104,210.765333 849.104,210.04 C849.104,209.314667 849.261333,208.746667 849.576,208.336 C849.890667,207.925333 850.309333,207.72 850.832,207.72 C851.365333,207.72 851.786667,207.928 852.096,208.344 C852.405333,208.76 852.56,209.325333 852.56,210.04 C852.56,210.754667 852.405333,211.32 852.096,211.736 C851.786667,212.152 851.365333,212.36 850.832,212.36 Z\",\"id\":\"13%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":44}),React.createElement(\"path\",{\"d\":\"M270.776,373 L270.776,371.976 L264.504,371.976 L264.504,361.8 L263.32,361.8 L263.32,373 L270.776,373 Z M276.072,373.08 C276.744,373.08 277.36,372.962667 277.92,372.728 C278.48,372.493333 278.946667,372.152 279.32,371.704 L279.32,371.704 L278.68,370.968 C278.36,371.330667 277.981333,371.605333 277.544,371.792 C277.106667,371.978667 276.626667,372.072 276.104,372.072 C275.176,372.072 274.408,371.802667 273.8,371.264 C273.192,370.725333 272.856,370.018667 272.792,369.144 L272.792,369.144 L279.832,369.144 L279.848,368.792 C279.848,367.96 279.672,367.221333 279.32,366.576 C278.968,365.930667 278.482667,365.426667 277.864,365.064 C277.245333,364.701333 276.546667,364.52 275.768,364.52 C274.989333,364.52 274.288,364.701333 273.664,365.064 C273.04,365.426667 272.549333,365.933333 272.192,366.584 C271.834667,367.234667 271.656,367.970667 271.656,368.792 C271.656,369.613333 271.842667,370.349333 272.216,371 C272.589333,371.650667 273.109333,372.16 273.776,372.528 C274.442667,372.896 275.208,373.08 276.072,373.08 Z M278.76,368.296 L272.792,368.296 C272.866667,367.464 273.178667,366.789333 273.728,366.272 C274.277333,365.754667 274.957333,365.496 275.768,365.496 C276.589333,365.496 277.274667,365.754667 277.824,366.272 C278.373333,366.789333 278.685333,367.464 278.76,368.296 L278.76,368.296 Z M285.496,373 L289.24,364.584 L288.12,364.584 L284.936,371.752 L281.784,364.584 L280.6,364.584 L284.328,373 L285.496,373 Z M294.408,373.08 C295.08,373.08 295.696,372.962667 296.256,372.728 C296.816,372.493333 297.282667,372.152 297.656,371.704 L297.656,371.704 L297.016,370.968 C296.696,371.330667 296.317333,371.605333 295.88,371.792 C295.442667,371.978667 294.962667,372.072 294.44,372.072 C293.512,372.072 292.744,371.802667 292.136,371.264 C291.528,370.725333 291.192,370.018667 291.128,369.144 L291.128,369.144 L298.168,369.144 L298.184,368.792 C298.184,367.96 298.008,367.221333 297.656,366.576 C297.304,365.930667 296.818667,365.426667 296.2,365.064 C295.581333,364.701333 294.882667,364.52 294.104,364.52 C293.325333,364.52 292.624,364.701333 292,365.064 C291.376,365.426667 290.885333,365.933333 290.528,366.584 C290.170667,367.234667 289.992,367.970667 289.992,368.792 C289.992,369.613333 290.178667,370.349333 290.552,371 C290.925333,371.650667 291.445333,372.16 292.112,372.528 C292.778667,372.896 293.544,373.08 294.408,373.08 Z M297.096,368.296 L291.128,368.296 C291.202667,367.464 291.514667,366.789333 292.064,366.272 C292.613333,365.754667 293.293333,365.496 294.104,365.496 C294.925333,365.496 295.610667,365.754667 296.16,366.272 C296.709333,366.789333 297.021333,367.464 297.096,368.296 L297.096,368.296 Z M301.64,373 L301.64,361.128 L300.504,361.128 L300.504,373 L301.64,373 Z M315.896,373 L315.896,371.976 L309.736,371.976 L313.544,368.232 C314.258667,367.538667 314.744,366.925333 315,366.392 C315.256,365.858667 315.384,365.304 315.384,364.728 C315.384,363.789333 315.050667,363.050667 314.384,362.512 C313.717333,361.973333 312.813333,361.704 311.672,361.704 C310.818667,361.704 310.053333,361.842667 309.376,362.12 C308.698667,362.397333 308.141333,362.792 307.704,363.304 L307.704,363.304 L308.52,364.008 C309.245333,363.176 310.264,362.76 311.576,362.76 C312.418667,362.76 313.066667,362.944 313.52,363.312 C313.973333,363.68 314.2,364.194667 314.2,364.856 C314.2,365.282667 314.096,365.706667 313.888,366.128 C313.68,366.549333 313.282667,367.048 312.696,367.624 L312.696,367.624 L308.04,372.184 L308.04,373 L315.896,373 Z\",\"id\":\"Level2\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":45}),React.createElement(\"path\",{\"d\":\"M441.808,373 L441.808,371.976 L435.536,371.976 L435.536,361.8 L434.352,361.8 L434.352,373 L441.808,373 Z M447.104,373.08 C447.776,373.08 448.392,372.962667 448.952,372.728 C449.512,372.493333 449.978667,372.152 450.352,371.704 L450.352,371.704 L449.712,370.968 C449.392,371.330667 449.013333,371.605333 448.576,371.792 C448.138667,371.978667 447.658667,372.072 447.136,372.072 C446.208,372.072 445.44,371.802667 444.832,371.264 C444.224,370.725333 443.888,370.018667 443.824,369.144 L443.824,369.144 L450.864,369.144 L450.88,368.792 C450.88,367.96 450.704,367.221333 450.352,366.576 C450,365.930667 449.514667,365.426667 448.896,365.064 C448.277333,364.701333 447.578667,364.52 446.8,364.52 C446.021333,364.52 445.32,364.701333 444.696,365.064 C444.072,365.426667 443.581333,365.933333 443.224,366.584 C442.866667,367.234667 442.688,367.970667 442.688,368.792 C442.688,369.613333 442.874667,370.349333 443.248,371 C443.621333,371.650667 444.141333,372.16 444.808,372.528 C445.474667,372.896 446.24,373.08 447.104,373.08 Z M449.792,368.296 L443.824,368.296 C443.898667,367.464 444.210667,366.789333 444.76,366.272 C445.309333,365.754667 445.989333,365.496 446.8,365.496 C447.621333,365.496 448.306667,365.754667 448.856,366.272 C449.405333,366.789333 449.717333,367.464 449.792,368.296 L449.792,368.296 Z M456.528,373 L460.272,364.584 L459.152,364.584 L455.968,371.752 L452.816,364.584 L451.632,364.584 L455.36,373 L456.528,373 Z M465.44,373.08 C466.112,373.08 466.728,372.962667 467.288,372.728 C467.848,372.493333 468.314667,372.152 468.688,371.704 L468.688,371.704 L468.048,370.968 C467.728,371.330667 467.349333,371.605333 466.912,371.792 C466.474667,371.978667 465.994667,372.072 465.472,372.072 C464.544,372.072 463.776,371.802667 463.168,371.264 C462.56,370.725333 462.224,370.018667 462.16,369.144 L462.16,369.144 L469.2,369.144 L469.216,368.792 C469.216,367.96 469.04,367.221333 468.688,366.576 C468.336,365.930667 467.850667,365.426667 467.232,365.064 C466.613333,364.701333 465.914667,364.52 465.136,364.52 C464.357333,364.52 463.656,364.701333 463.032,365.064 C462.408,365.426667 461.917333,365.933333 461.56,366.584 C461.202667,367.234667 461.024,367.970667 461.024,368.792 C461.024,369.613333 461.210667,370.349333 461.584,371 C461.957333,371.650667 462.477333,372.16 463.144,372.528 C463.810667,372.896 464.576,373.08 465.44,373.08 Z M468.128,368.296 L462.16,368.296 C462.234667,367.464 462.546667,366.789333 463.096,366.272 C463.645333,365.754667 464.325333,365.496 465.136,365.496 C465.957333,365.496 466.642667,365.754667 467.192,366.272 C467.741333,366.789333 468.053333,367.464 468.128,368.296 L468.128,368.296 Z M472.672,373 L472.672,361.128 L471.536,361.128 L471.536,373 L472.672,373 Z M482.624,373.096 C483.498667,373.096 484.24,372.952 484.848,372.664 C485.456,372.376 485.914667,371.984 486.224,371.488 C486.533333,370.992 486.688,370.424 486.688,369.784 C486.688,368.866667 486.381333,368.122667 485.768,367.552 C485.154667,366.981333 484.261333,366.664 483.088,366.6 L483.088,366.6 L486.256,362.616 L486.256,361.8 L479.056,361.8 L479.056,362.824 L484.784,362.824 L481.68,366.712 L481.68,367.56 L482.48,367.56 C483.493333,367.56 484.250667,367.757333 484.752,368.152 C485.253333,368.546667 485.504,369.090667 485.504,369.784 C485.504,370.488 485.253333,371.04 484.752,371.44 C484.250667,371.84 483.541333,372.04 482.624,372.04 C481.92,372.04 481.258667,371.92 480.64,371.68 C480.021333,371.44 479.525333,371.128 479.152,370.744 L479.152,370.744 L478.592,371.656 C479.029333,372.093333 479.608,372.442667 480.328,372.704 C481.048,372.965333 481.813333,373.096 482.624,373.096 Z\",\"id\":\"Level3\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":46}),React.createElement(\"path\",{\"d\":\"M608.448,373 L608.448,371.976 L602.176,371.976 L602.176,361.8 L600.992,361.8 L600.992,373 L608.448,373 Z M613.744,373.08 C614.416,373.08 615.032,372.962667 615.592,372.728 C616.152,372.493333 616.618667,372.152 616.992,371.704 L616.992,371.704 L616.352,370.968 C616.032,371.330667 615.653333,371.605333 615.216,371.792 C614.778667,371.978667 614.298667,372.072 613.776,372.072 C612.848,372.072 612.08,371.802667 611.472,371.264 C610.864,370.725333 610.528,370.018667 610.464,369.144 L610.464,369.144 L617.504,369.144 L617.52,368.792 C617.52,367.96 617.344,367.221333 616.992,366.576 C616.64,365.930667 616.154667,365.426667 615.536,365.064 C614.917333,364.701333 614.218667,364.52 613.44,364.52 C612.661333,364.52 611.96,364.701333 611.336,365.064 C610.712,365.426667 610.221333,365.933333 609.864,366.584 C609.506667,367.234667 609.328,367.970667 609.328,368.792 C609.328,369.613333 609.514667,370.349333 609.888,371 C610.261333,371.650667 610.781333,372.16 611.448,372.528 C612.114667,372.896 612.88,373.08 613.744,373.08 Z M616.432,368.296 L610.464,368.296 C610.538667,367.464 610.850667,366.789333 611.4,366.272 C611.949333,365.754667 612.629333,365.496 613.44,365.496 C614.261333,365.496 614.946667,365.754667 615.496,366.272 C616.045333,366.789333 616.357333,367.464 616.432,368.296 L616.432,368.296 Z M623.168,373 L626.912,364.584 L625.792,364.584 L622.608,371.752 L619.456,364.584 L618.272,364.584 L622,373 L623.168,373 Z M632.08,373.08 C632.752,373.08 633.368,372.962667 633.928,372.728 C634.488,372.493333 634.954667,372.152 635.328,371.704 L635.328,371.704 L634.688,370.968 C634.368,371.330667 633.989333,371.605333 633.552,371.792 C633.114667,371.978667 632.634667,372.072 632.112,372.072 C631.184,372.072 630.416,371.802667 629.808,371.264 C629.2,370.725333 628.864,370.018667 628.8,369.144 L628.8,369.144 L635.84,369.144 L635.856,368.792 C635.856,367.96 635.68,367.221333 635.328,366.576 C634.976,365.930667 634.490667,365.426667 633.872,365.064 C633.253333,364.701333 632.554667,364.52 631.776,364.52 C630.997333,364.52 630.296,364.701333 629.672,365.064 C629.048,365.426667 628.557333,365.933333 628.2,366.584 C627.842667,367.234667 627.664,367.970667 627.664,368.792 C627.664,369.613333 627.850667,370.349333 628.224,371 C628.597333,371.650667 629.117333,372.16 629.784,372.528 C630.450667,372.896 631.216,373.08 632.08,373.08 Z M634.768,368.296 L628.8,368.296 C628.874667,367.464 629.186667,366.789333 629.736,366.272 C630.285333,365.754667 630.965333,365.496 631.776,365.496 C632.597333,365.496 633.282667,365.754667 633.832,366.272 C634.381333,366.789333 634.693333,367.464 634.768,368.296 L634.768,368.296 Z M639.312,373 L639.312,361.128 L638.176,361.128 L638.176,373 L639.312,373 Z M653.2,373 L653.2,370.056 L655.44,370.056 L655.44,369.032 L653.2,369.032 L653.2,366.44 L652.08,366.44 L652.08,369.032 L647.216,369.032 L652.944,361.8 L651.664,361.8 L645.728,369.224 L645.728,370.056 L652.048,370.056 L652.048,373 L653.2,373 Z M660.816,369.16 L660.816,368.168 L656.624,368.168 L656.624,369.16 L660.816,369.16 Z M666.144,373.096 C667.029333,373.096 667.776,372.949333 668.384,372.656 C668.992,372.362667 669.448,371.96 669.752,371.448 C670.056,370.936 670.208,370.354667 670.208,369.704 C670.208,368.658667 669.837333,367.845333 669.096,367.264 C668.354667,366.682667 667.173333,366.392 665.552,366.392 L665.552,366.392 L664.112,366.392 L664.496,362.824 L669.616,362.824 L669.616,361.8 L663.488,361.8 L662.912,367.416 L665.296,367.416 C666.650667,367.416 667.613333,367.613333 668.184,368.008 C668.754667,368.402667 669.04,368.984 669.04,369.752 C669.04,370.445333 668.786667,371 668.28,371.416 C667.773333,371.832 667.056,372.04 666.128,372.04 C665.424,372.04 664.768,371.92 664.16,371.68 C663.552,371.44 663.061333,371.128 662.688,370.744 L662.688,370.744 L662.128,371.656 C662.565333,372.093333 663.144,372.442667 663.864,372.704 C664.584,372.965333 665.344,373.096 666.144,373.096 Z\",\"id\":\"Level4-5\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":47}),React.createElement(\"path\",{\"d\":\"M783.448,373 L783.448,371.976 L777.176,371.976 L777.176,361.8 L775.992,361.8 L775.992,373 L783.448,373 Z M788.744,373.08 C789.416,373.08 790.032,372.962667 790.592,372.728 C791.152,372.493333 791.618667,372.152 791.992,371.704 L791.992,371.704 L791.352,370.968 C791.032,371.330667 790.653333,371.605333 790.216,371.792 C789.778667,371.978667 789.298667,372.072 788.776,372.072 C787.848,372.072 787.08,371.802667 786.472,371.264 C785.864,370.725333 785.528,370.018667 785.464,369.144 L785.464,369.144 L792.504,369.144 L792.52,368.792 C792.52,367.96 792.344,367.221333 791.992,366.576 C791.64,365.930667 791.154667,365.426667 790.536,365.064 C789.917333,364.701333 789.218667,364.52 788.44,364.52 C787.661333,364.52 786.96,364.701333 786.336,365.064 C785.712,365.426667 785.221333,365.933333 784.864,366.584 C784.506667,367.234667 784.328,367.970667 784.328,368.792 C784.328,369.613333 784.514667,370.349333 784.888,371 C785.261333,371.650667 785.781333,372.16 786.448,372.528 C787.114667,372.896 787.88,373.08 788.744,373.08 Z M791.432,368.296 L785.464,368.296 C785.538667,367.464 785.850667,366.789333 786.4,366.272 C786.949333,365.754667 787.629333,365.496 788.44,365.496 C789.261333,365.496 789.946667,365.754667 790.496,366.272 C791.045333,366.789333 791.357333,367.464 791.432,368.296 L791.432,368.296 Z M798.168,373 L801.912,364.584 L800.792,364.584 L797.608,371.752 L794.456,364.584 L793.272,364.584 L797,373 L798.168,373 Z M807.08,373.08 C807.752,373.08 808.368,372.962667 808.928,372.728 C809.488,372.493333 809.954667,372.152 810.328,371.704 L810.328,371.704 L809.688,370.968 C809.368,371.330667 808.989333,371.605333 808.552,371.792 C808.114667,371.978667 807.634667,372.072 807.112,372.072 C806.184,372.072 805.416,371.802667 804.808,371.264 C804.2,370.725333 803.864,370.018667 803.8,369.144 L803.8,369.144 L810.84,369.144 L810.856,368.792 C810.856,367.96 810.68,367.221333 810.328,366.576 C809.976,365.930667 809.490667,365.426667 808.872,365.064 C808.253333,364.701333 807.554667,364.52 806.776,364.52 C805.997333,364.52 805.296,364.701333 804.672,365.064 C804.048,365.426667 803.557333,365.933333 803.2,366.584 C802.842667,367.234667 802.664,367.970667 802.664,368.792 C802.664,369.613333 802.850667,370.349333 803.224,371 C803.597333,371.650667 804.117333,372.16 804.784,372.528 C805.450667,372.896 806.216,373.08 807.08,373.08 Z M809.768,368.296 L803.8,368.296 C803.874667,367.464 804.186667,366.789333 804.736,366.272 C805.285333,365.754667 805.965333,365.496 806.776,365.496 C807.597333,365.496 808.282667,365.754667 808.832,366.272 C809.381333,366.789333 809.693333,367.464 809.768,368.296 L809.768,368.296 Z M814.312,373 L814.312,361.128 L813.176,361.128 L813.176,373 L814.312,373 Z M825.512,373.096 C826.237333,373.096 826.890667,372.954667 827.472,372.672 C828.053333,372.389333 828.509333,371.986667 828.84,371.464 C829.170667,370.941333 829.336,370.338667 829.336,369.656 C829.336,368.984 829.176,368.394667 828.856,367.888 C828.536,367.381333 828.090667,366.989333 827.52,366.712 C826.949333,366.434667 826.296,366.296 825.56,366.296 C824.770667,366.296 824.072,366.464 823.464,366.8 C822.856,367.136 822.413333,367.608 822.136,368.216 C822.104,367.874667 822.088,367.570667 822.088,367.304 C822.088,365.810667 822.44,364.672 823.144,363.888 C823.848,363.104 824.818667,362.712 826.056,362.712 C826.973333,362.712 827.698667,362.888 828.232,363.24 L828.232,363.24 L828.696,362.312 C828.034667,361.906667 827.149333,361.704 826.04,361.704 C825.016,361.704 824.12,361.925333 823.352,362.368 C822.584,362.810667 821.986667,363.464 821.56,364.328 C821.133333,365.192 820.92,366.248 820.92,367.496 C820.92,369.277333 821.314667,370.656 822.104,371.632 C822.893333,372.608 824.029333,373.096 825.512,373.096 Z M825.464,372.12 C824.845333,372.12 824.312,372.008 823.864,371.784 C823.416,371.56 823.077333,371.266667 822.848,370.904 C822.618667,370.541333 822.504,370.146667 822.504,369.72 C822.504,369.261333 822.626667,368.845333 822.872,368.472 C823.117333,368.098667 823.456,367.805333 823.888,367.592 C824.32,367.378667 824.818667,367.272 825.384,367.272 C826.248,367.272 826.933333,367.490667 827.44,367.928 C827.946667,368.365333 828.2,368.952 828.2,369.688 C828.2,370.424 827.946667,371.013333 827.44,371.456 C826.933333,371.898667 826.274667,372.12 825.464,372.12 Z\",\"id\":\"Level6\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":48})])))))]);\n}\n\nApprenticeshipsDesktop.defaultProps = {\"width\":\"860px\",\"height\":\"407px\",\"viewBox\":\"0 0 860 407\",\"version\":\"1.1\"};\n\nmodule.exports = ApprenticeshipsDesktop;\n\nApprenticeshipsDesktop.default = ApprenticeshipsDesktop;\n","var React = require('react');\n\nfunction SchoolYearsTypeAndQualityOfSchoolingDesktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 7\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Type-and-quality-of-schooling\",\"transform\":\"translate(-162.000000, -2520.000000)\"},React.createElement(\"g\",{\"id\":\"Group-7\",\"transform\":\"translate(165.000000, 2520.000000)\"},[React.createElement(\"path\",{\"d\":\"M1085.95859,81.6476189 C1086.17692,80.5405823 1087.24987,79.8204355 1088.35509,80.0391261 C1089.41007,80.2478762 1090.11311,81.2365982 1089.98495,82.2888857 L1089.96094,82.4395675 L1078.40425,141.037128 C1078.2589,141.774146 1077.72298,142.367284 1077.01551,142.590123 L1076.86137,142.632124 L1067.58884,144.773033 L1045.69533,174.995037 C1045.49673,175.269174 1045.23376,175.488826 1044.93077,175.63525 L1044.77605,175.702272 L1035.16344,179.401261 L1023.91363,190.660859 C1023.66955,190.905118 1023.36831,191.082698 1023.03865,191.178202 L1022.87159,191.219042 L1011.80924,193.432967 L991.40099,210.075491 C990.779442,210.582316 989.924252,210.674584 989.214173,210.325076 L989.064372,210.243409 L979.004423,204.202698 L968.566278,216.738866 C968.064604,217.341324 967.266911,217.599184 966.51546,217.414953 L966.355268,217.368672 L958.961912,214.901937 L949.643765,239.291037 C949.048004,240.850346 946.960753,241.058375 946.053837,239.713449 L945.964338,239.568771 L934.958018,220.131519 L928.830344,235.465073 C928.541074,236.188788 927.868534,236.679891 927.102179,236.742155 L926.936629,236.748862 L915.289818,236.747879 L903.505573,245.592996 C903.203034,245.82007 902.844498,245.957712 902.470481,245.992404 L902.282369,246.001108 L895.333999,246.00053 L873.5662,264.781553 C872.970906,265.29512 872.138719,265.417605 871.426407,265.109281 L871.275734,265.036603 L849.702633,253.522587 L841.507623,264.460045 C841.209685,264.857592 840.778717,265.130965 840.297184,265.232657 L840.114401,265.262651 L827.847717,266.706363 L819.125644,277.617845 C818.484517,278.419852 817.356569,278.614164 816.490254,278.09674 L816.34842,278.003894 L806.092754,270.673245 L796.120964,270.673245 L786.715529,281.534712 C785.895278,282.481863 784.438333,282.465099 783.635509,281.537048 L783.530209,281.404852 L782.55896,280.089695 L781.620248,278.839301 L781.012677,278.041785 L780.128916,276.899779 L779.278562,275.823077 L778.730379,275.141654 L777.936427,274.174239 L777.426147,273.565862 L776.931198,272.986809 L776.451675,272.437139 L775.987677,271.916913 C775.911642,271.832665 775.836259,271.749647 775.761529,271.667859 L775.320997,271.19191 L774.89623,270.745555 L774.487324,270.328852 C774.420501,270.261876 774.354342,270.196138 774.28885,270.13164 L773.903919,269.75953 C773.841103,269.699993 773.778958,269.641699 773.717486,269.584647 L773.356746,269.257264 L773.012255,268.959775 L772.684108,268.692239 C772.364167,268.439699 772.068887,268.232179 771.798705,268.069949 C770.190136,267.104087 767.866638,267.562012 764.665461,269.820912 L764.268761,270.107277 L753.655084,283.764039 C753.131888,284.437221 752.251126,284.709422 751.447951,284.462561 L751.288479,284.406233 L740.446413,280.065855 L720.035709,287.361116 L708.801367,298.603733 C708.461373,298.94398 708.013866,299.151672 707.538878,299.193626 L707.359626,299.201524 L699.309849,299.201486 L687.374586,304.427631 C686.727159,304.711091 685.983787,304.6374 685.407123,304.242722 L685.266582,304.137386 L677.467172,297.751832 L666.00835,299.185775 C665.693529,299.225157 665.374774,299.190341 665.07719,299.08523 L664.901381,299.013759 L656.040624,294.919951 L636.225557,311.07918 C635.459654,311.703714 634.3656,311.684818 633.623216,311.05714 L633.495996,310.940061 L622.801325,300.23739 L613.43398,312.291798 C613.145461,312.663028 612.739113,312.921702 612.284991,313.027125 L612.112592,313.059395 L590.540115,316.143477 C590.245649,316.185575 589.946289,316.162563 589.66287,316.076941 L589.494898,316.018074 L578.88955,311.772301 L569.747795,317.403354 C569.248259,317.71099 568.64342,317.787 568.087556,317.618134 L567.92242,317.560115 L557.554795,313.409929 L549.255083,321.02469 C548.925968,321.326603 548.508499,321.510872 548.067589,321.552222 L547.877381,321.56112 L538.016125,321.560272 L527.839446,333.200388 C527.245093,333.880155 526.281491,334.083517 525.470353,333.718689 L525.320179,333.643603 L504.709511,322.263134 L495.701937,337.520497 C495.025059,338.666838 493.465563,338.858427 492.530727,337.951921 L492.417235,337.832878 L482.166147,326.20754 L461.346426,343.452159 C461.02645,343.717164 460.634528,343.877148 460.223668,343.913004 L460.04658,343.920715 L451.17068,343.920079 L439.189776,348.416957 C438.949758,348.507031 438.695494,348.550788 438.440352,348.546559 L438.249039,348.534364 L418.040512,346.287131 L417.859937,346.377405 C410.450196,350.034526 404.295901,352.497693 399.369943,353.766091 L398.897071,353.885109 L398.225068,354.044835 L397.518444,354.202172 L396.777174,354.357128 L396.001233,354.50971 L395.190596,354.659928 L394.345236,354.80779 L393.012035,355.025183 L392.079758,355.16719 L391.112669,355.306871 L390.110742,355.444233 L389.073952,355.579284 L388.002274,355.712034 L386.895682,355.84249 L385.170275,356.033891 L383.366167,356.220179 L381.483273,356.401382 L378.850042,356.635123 L376.782978,356.804569 L374.63684,356.969023 L374.186872,357.001695 L365.978318,359.989333 C365.510739,360.159489 364.999374,360.151951 364.539872,359.972225 L364.370177,359.896767 L353.099959,354.257671 L344.84009,359.76946 C344.553004,359.960994 344.222936,360.075953 343.881065,360.10489 L343.70929,360.112146 L332.585222,360.111452 L298.310391,375.356733 C297.913714,375.533165 297.472769,375.577627 297.051635,375.486449 L296.872549,375.439058 C290.736219,373.51286 285.867137,372.781953 282.314563,373.205194 C280.702387,373.397263 278.718057,373.9013 276.37038,374.71809 L275.526715,375.019356 C275.240474,375.124108 274.949219,375.23319 274.652963,375.346603 L273.749208,375.699838 L272.815537,376.079068 L271.852037,376.484302 C271.525908,376.623715 271.194822,376.767463 270.858792,376.915547 L269.83589,377.37281 C269.66294,377.451189 269.488757,377.530653 269.313344,377.611201 L268.246117,378.107507 C267.885462,378.277282 267.5199,378.451396 267.149446,378.629851 L266.023419,379.17824 C265.549242,379.411619 265.00316,379.451615 264.500133,379.289807 L263.530825,378.983602 C263.213824,378.885355 262.902937,378.790927 262.598195,378.700312 L261.702435,378.439899 C261.556225,378.398401 261.41156,378.357855 261.268442,378.318259 L260.42835,378.092092 L259.625609,377.888709 L258.860413,377.708072 C256.994514,377.284883 255.482397,377.074598 254.337598,377.074598 C252.247737,377.074598 249.406881,377.785342 245.864009,379.23578 C245.469124,379.397444 245.035086,379.430473 244.622867,379.332834 L244.447716,379.282983 L233.903567,375.765463 L225.513422,382.063629 C224.836763,382.571502 223.923657,382.60536 223.215471,382.165204 L223.067015,382.063629 L212.369928,374.034868 L204.34909,384.739247 C203.998845,385.206589 203.467556,385.499075 202.891699,385.548392 L202.717741,385.555823 L190.580287,385.555476 L178.439075,387.833951 C178.303139,387.859458 178.165144,387.871018 178.027221,387.868562 L177.820658,387.854357 L159.357377,385.637205 L148.451242,393.642013 C147.978683,393.988815 147.382655,394.113747 146.815415,393.991097 L146.646258,393.946848 L127.624504,388.08905 L127.488136,388.194893 C127.16443,388.442514 126.843854,388.685038 126.526391,388.922462 L125.583325,389.619429 L124.65884,390.28578 C123.743612,390.936817 122.85611,391.541905 121.995894,392.100972 L121.144758,392.644697 C117.074738,395.198527 113.638748,396.676705 110.787277,397.07115 L110.49438,397.108089 C106.29785,397.585323 100.799397,395.959162 93.8822676,392.30992 L93.1867955,391.938447 L73.2814647,400.054447 C72.7767694,400.260217 72.2134135,400.254308 71.7162663,400.043167 L71.553174,399.965195 L61.1265278,394.400508 L50.6046473,402.123238 C50.4493555,402.237204 50.2790043,402.328384 50.0987734,402.394308 L49.915441,402.451724 L17.5567247,410.932949 C16.4668434,411.218608 15.352129,410.565201 15.0669404,409.473526 C14.7947149,408.431472 15.3767181,407.366754 16.3781042,407.023666 L16.5239653,406.979643 L48.5049775,398.59725 L59.7501597,390.345677 C60.3335532,389.917536 61.0953445,389.833265 61.7529378,390.113102 L61.9150018,390.190659 L72.6282024,395.908393 L92.5454274,387.788345 C93.0593629,387.578808 93.6336356,387.588933 94.1366777,387.810901 L94.3015397,387.892725 C95.4371877,388.521713 96.5282155,389.092966 97.5739994,389.606915 L98.4592909,390.033418 C103.41299,392.370857 107.295099,393.359253 110.034152,393.047765 C111.789749,392.848116 114.011127,392.014884 116.673582,390.544037 L117.378125,390.145872 L118.102582,389.718762 C118.347376,389.571567 118.595472,389.419545 118.846855,389.262694 L119.610846,388.77765 C119.739816,388.694393 119.869603,388.609929 120.000206,388.524257 L120.793593,387.99572 C120.92745,387.905213 121.062118,387.813497 121.197596,387.720571 L122.020159,387.148506 L122.862051,386.547401 C123.003972,386.444796 123.146694,386.34098 123.290215,386.235954 L124.160918,385.59126 L125.050707,384.917488 C125.350473,384.68805 125.653404,384.453762 125.959483,384.214622 C126.436933,383.84159 127.05234,383.702179 127.638623,383.827205 L127.813467,383.872677 L146.865357,389.738937 L157.596754,381.864451 C157.961794,381.596556 158.403801,381.458937 158.852606,381.47003 L159.045163,381.483943 L177.995454,383.7595 L190.015017,381.504349 C190.097585,381.488856 190.18099,381.478494 190.264754,381.473307 L190.390611,381.469415 L201.697451,381.469068 L210.331739,369.949663 C210.973865,369.092856 212.159031,368.885022 213.048439,369.446185 L213.186292,369.541198 L224.289771,377.875071 L232.312362,371.85426 C232.798963,371.489037 233.419963,371.362133 234.00563,371.501123 L234.1801,371.550824 L245.02787,375.169868 L245.346346,375.045181 C248.715588,373.74615 251.5832,373.055711 253.981387,372.992901 L254.337598,372.988189 C256.706056,372.988189 259.962171,373.631304 264.168296,374.905477 L264.961251,375.149436 L265.410301,374.933155 C266.031489,374.634032 266.640319,374.346262 267.236848,374.06985 L268.413522,373.532171 C273.828292,371.093687 278.174887,369.644887 281.500259,369.189963 L281.832718,369.147387 C285.778865,368.677257 290.762244,369.356774 296.823181,371.152255 L297.351973,371.311277 L331.324768,356.201561 C331.533281,356.108819 331.755473,356.051937 331.982022,356.032894 L332.152606,356.025737 L343.092472,356.025043 L351.823839,350.200259 C352.381878,349.827955 353.083189,349.756114 353.700211,349.99892 L353.866229,350.072951 L365.408393,355.848306 L373.06012,353.064468 C373.178007,353.021568 373.299466,352.989696 373.422939,352.969186 L373.609466,352.946982 L375.741681,352.787235 L377.795175,352.622765 L379.76986,352.453601 L381.042492,352.338231 L382.280035,352.220795 L383.482463,352.101302 L385.220207,351.918223 L386.334735,351.793624 L387.414058,351.666996 L388.458151,351.538349 L389.466988,351.407691 L390.440544,351.275029 L391.378793,351.140373 L392.719911,350.934668 L393.569781,350.795062 L394.384255,350.653491 L395.163308,350.509962 L395.906913,350.364485 L396.615045,350.217068 L397.287679,350.067719 L397.924788,349.916446 C400.408107,349.306053 403.281487,348.341868 406.540457,347.023756 L407.706686,346.543844 C408.494835,346.214106 409.304303,345.864771 410.135032,345.49584 L411.397062,344.927745 C412.036042,344.636348 412.686965,344.333928 413.349806,344.020482 L414.691371,343.378892 L416.064674,342.707902 C416.2962,342.59362 416.529046,342.478113 416.763213,342.361381 C417.055548,342.215652 417.377649,342.142774 417.702274,342.14759 L417.897134,342.159842 L438.214594,344.418621 L450.085559,339.964187 C450.257207,339.899771 450.436474,339.858921 450.618486,339.842522 L450.801233,339.834306 L459.312727,339.83367 L481.089657,321.79837 C481.893329,321.132766 483.059154,321.185961 483.799193,321.896081 L483.918455,322.020507 L493.617846,333.020605 L502.206231,318.477785 C502.739417,317.574797 503.861439,317.230182 504.800128,317.655047 L504.946705,317.728556 L525.8515,329.270303 L535.5566,318.171771 C535.905198,317.773076 536.393101,317.527413 536.915774,317.482268 L537.091143,317.474711 L547.083243,317.473863 L555.745028,309.529915 C556.281443,309.037834 557.03509,308.871821 557.722415,309.083748 L557.879722,309.139387 L568.483273,313.384389 L577.626825,307.754107 C578.126361,307.446471 578.7312,307.370461 579.287064,307.539327 L579.4522,307.597346 L590.501376,312.02055 L610.720334,309.130438 L621.000995,295.903211 C621.720016,294.978066 623.056219,294.854717 623.930682,295.600454 L624.052348,295.712907 L635.077122,306.746018 L654.451949,290.947665 C655.009356,290.493143 655.760342,290.368622 656.428733,290.609032 L656.59395,290.676758 L666.080749,295.057867 L677.829904,293.588824 C678.322153,293.527247 678.817684,293.647628 679.225193,293.923618 L679.373705,294.034356 L686.882084,300.182224 L698.067732,295.286153 C698.273852,295.195908 698.493094,295.140591 698.716515,295.122074 L698.884724,295.115116 L706.514587,295.115077 L717.474569,284.147599 C717.645433,283.976609 717.844907,283.837715 718.063449,283.736964 L718.230783,283.668645 L739.80326,275.95844 C740.212827,275.812057 740.656751,275.801127 741.070497,275.92444 L741.245781,275.985504 L751.376931,280.041337 L761.222099,267.375452 C761.296347,267.279919 761.378851,267.191281 761.468593,267.110538 L761.608507,266.995468 C766.308101,263.468143 770.469104,262.507195 773.896303,264.565049 C774.619211,264.999118 775.4262,265.623025 776.321227,266.439228 L776.776096,266.863365 L777.245749,267.31962 C777.325262,267.398343 777.405396,267.478407 777.486153,267.559813 L777.978186,268.064373 L778.485278,268.601221 L779.007538,269.170426 L779.545077,269.772056 L780.098004,270.406179 L780.666429,271.072863 L781.250462,271.772177 C781.349108,271.891453 781.448408,272.01209 781.548366,272.134092 L782.156019,272.882479 L782.779554,273.663666 L783.419083,274.477723 L784.074716,275.324716 L785.088599,276.657112 L785.297539,276.934644 L793.649532,267.291717 C793.998229,266.889074 794.488466,266.640656 795.014064,266.594999 L795.190427,266.587356 L806.747112,266.587356 C807.111273,266.587356 807.467645,266.684978 807.779812,266.868542 L807.932043,266.967432 L817.146682,273.554163 L825.186404,263.498379 C825.484315,263.125713 825.901793,262.870808 826.364908,262.774728 L826.540571,262.746223 L838.769055,261.306174 L847.490272,249.670461 C848.058408,248.912381 849.065852,248.651011 849.922222,249.017747 L850.080877,249.093902 L871.961438,260.771876 L893.246703,242.409767 C893.570646,242.130298 893.972804,241.960864 894.395613,241.922872 L894.577913,241.914699 L901.603467,241.914121 L913.386296,233.070565 C913.688835,232.843491 914.047371,232.705849 914.421388,232.671157 L914.609499,232.662453 L925.555345,232.66147 L932.747371,214.670729 C933.361671,213.133834 935.42769,212.94397 936.326681,214.278621 L936.415409,214.422133 L947.378643,233.784211 L955.849351,211.615785 C956.220023,210.645612 957.252712,210.116504 958.243071,210.362245 L958.398989,210.407534 L966.323718,213.050794 L976.99001,200.243053 C977.595793,199.515572 978.614464,199.305989 979.450762,199.715301 L979.605285,199.799325 L989.934941,206.001739 L1009.62738,189.943977 C1009.83344,189.775957 1010.06976,189.650286 1010.3228,189.573364 L1010.5155,189.524912 L1021.46587,187.33298 L1032.58683,176.204726 C1032.7483,176.043137 1032.9354,175.910128 1033.14014,175.810904 L1033.29688,175.742902 L1042.74759,172.104978 L1064.73632,141.754213 C1064.98938,141.404904 1065.34535,141.146143 1065.75185,141.012673 L1065.929,140.963244 L1074.65691,138.946836 L1085.95859,81.6476189 Z\",\"id\":\"Path-2\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M17,409.057737 L49.3611511,400.572748 L60.918705,392.08776 L72.476259,398.258661 L93.2798561,389.773672 C100.59509,393.826765 106.24545,395.626611 110.230935,395.17321 C114.21642,394.719809 119.86678,391.634359 127.182014,385.916859 L147.215108,392.08776 L158.772662,383.602771 L178.035252,385.916859 L190.363309,383.602771 L202.691367,383.602771 L211.93741,371.26097 L224.265468,380.517321 L233.511511,373.575058 L245.069065,377.431871 C248.835971,375.889145 251.917986,375.117783 254.315108,375.117783 C256.71223,375.117783 260.307914,375.889145 265.102158,377.431871 C272.517151,373.781039 278.16751,371.724072 282.053237,371.26097 C285.938964,370.797868 291.075655,371.56923 297.463309,373.575058 L332.135971,358.147806 L343.693525,358.147806 L352.939568,351.976905 L365.267626,358.147806 L373.743165,355.062356 C385.190204,354.23246 393.408909,353.203977 398.399281,351.976905 C403.389652,350.749834 409.810515,348.178625 417.661871,344.263279 L438.465468,346.577367 L450.793525,341.949192 L460.039568,341.949192 L482.384173,323.43649 L493.941727,336.549654 L503.958273,319.579677 L526.302878,331.921478 L537.089928,319.579677 L547.876978,319.579677 L557.123022,311.094688 L568.680576,315.722864 L578.697122,309.551963 L590.254676,314.180139 L611.828777,311.094688 L622.615827,297.210162 L634.943885,309.551963 L655.747482,292.581986 L665.764029,297.210162 L678.092086,295.667436 L686.567626,302.6097 L698.895683,297.210162 L707.371223,297.210162 L718.928777,285.639723 L740.502878,277.926097 L752.060432,282.554273 L762.847482,268.669746 C766.956835,265.584296 770.295683,264.812933 772.864029,266.355658 C775.432374,267.898383 779.541727,272.526559 785.192086,280.240185 L795.208633,268.669746 L806.766187,268.669746 L817.553237,276.383372 L826.799281,264.812933 L839.897842,263.270208 L849.143885,250.928406 L872.258993,263.270208 L894.603597,243.986143 L902.308633,243.986143 L914.636691,234.729792 L926.964748,234.729792 L934.669784,215.445727 L947.768345,238.586605 L957.784892,212.360277 L967.030935,215.445727 L978.588489,201.561201 L990.146043,208.503464 L1010.94964,191.533487 L1022.50719,189.2194 L1034.06475,177.648961 L1044.08129,173.792148 L1066.4259,142.937644 L1076.44245,140.623557 L1088,82 L1088,416 L17,416 L17,409.057737 Z\",\"id\":\"Path-2-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#FFBA08\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M5.51169506,437 C6.38492636,437 7.16382712,436.758427 7.84839734,436.275281 C8.53296756,435.792135 9.06930407,435.098315 9.45740687,434.19382 C9.84550967,433.289326 10.0395611,432.224719 10.0395611,431 C10.0395611,429.775281 9.84550967,428.710674 9.45740687,427.80618 C9.06930407,426.901685 8.53296756,426.207865 7.84839734,425.724719 C7.16382712,425.241573 6.38492636,425 5.51169506,425 C4.63846376,425 3.859563,425.241573 3.17499278,425.724719 C2.49042256,426.207865 1.95678121,426.901685 1.57406873,427.80618 C1.19135624,428.710674 1,429.775281 1,431 C1,432.224719 1.19135624,433.289326 1.57406873,434.19382 C1.95678121,435.098315 2.49042256,435.792135 3.17499278,436.275281 C3.859563,436.758427 4.63846376,437 5.51169506,437 Z M5.51169506,435.88764 C4.85407643,435.88764 4.27461738,435.696629 3.77331793,435.314607 C3.27201848,434.932584 2.88122052,434.376404 2.60092405,433.646067 C2.32062759,432.91573 2.18047935,432.033708 2.18047935,431 C2.18047935,429.966292 2.32062759,429.08427 2.60092405,428.353933 C2.88122052,427.623596 3.27201848,427.067416 3.77331793,426.685393 C4.27461738,426.303371 4.85407643,426.11236 5.51169506,426.11236 C6.1693137,426.11236 6.74877274,426.303371 7.25007219,426.685393 C7.75137164,427.067416 8.1421696,427.623596 8.42246607,428.353933 C8.70276254,429.08427 8.84291077,429.966292 8.84291077,431 C8.84291077,432.033708 8.70276254,432.91573 8.42246607,433.646067 C8.1421696,434.376404 7.75137164,434.932584 7.25007219,435.314607 C6.74877274,435.696629 6.1693137,435.88764 5.51169506,435.88764 Z M13.6941958,432.106039 C14.3545096,432.106039 14.8921937,431.850421 15.3072481,431.339185 C15.7223024,430.827949 15.9298296,430.149579 15.9298296,429.304073 C15.9298296,428.458567 15.7223024,427.780197 15.3072481,427.268961 C14.8921937,426.757725 14.3545096,426.502107 13.6941958,426.502107 C13.0244489,426.502107 12.4844066,426.760183 12.0740687,427.276334 C11.6637309,427.792486 11.4585619,428.468399 11.4585619,429.304073 C11.4585619,430.139747 11.6637309,430.81566 12.0740687,431.331812 C12.4844066,431.847963 13.0244489,432.106039 13.6941958,432.106039 Z M13.7649437,436.898876 L20.5284435,426.575843 L19.6936183,426.575843 L12.9301184,436.898876 L13.7649437,436.898876 Z M13.6941958,431.442416 C13.2225431,431.442416 12.8499374,431.250702 12.5763789,430.867275 C12.3028203,430.483848 12.166041,429.962781 12.166041,429.304073 C12.166041,428.645365 12.3028203,428.124298 12.5763789,427.740871 C12.8499374,427.357444 13.2225431,427.16573 13.6941958,427.16573 C14.1564154,427.16573 14.5266628,427.354986 14.8049379,427.733497 C15.083213,428.112008 15.2223506,428.635534 15.2223506,429.304073 C15.2223506,429.972612 15.083213,430.496138 14.8049379,430.874649 C14.5266628,431.25316 14.1564154,431.442416 13.6941958,431.442416 Z M19.7643662,436.972612 C20.434113,436.972612 20.9741554,436.714537 21.3844932,436.198385 C21.7948311,435.682233 22,435.00632 22,434.170646 C22,433.334972 21.7948311,432.659059 21.3844932,432.142907 C20.9741554,431.626756 20.434113,431.36868 19.7643662,431.36868 C19.1040524,431.36868 18.5663683,431.626756 18.1513139,432.142907 C17.7362595,432.659059 17.5287323,433.334972 17.5287323,434.170646 C17.5287323,435.00632 17.7362595,435.682233 18.1513139,436.198385 C18.5663683,436.714537 19.1040524,436.972612 19.7643662,436.972612 Z M19.7643662,436.308989 C19.3021465,436.308989 18.9318991,436.119733 18.653624,435.741222 C18.3753489,435.362711 18.2362114,434.839185 18.2362114,434.170646 C18.2362114,433.502107 18.3753489,432.978581 18.653624,432.60007 C18.9318991,432.221559 19.3021465,432.032303 19.7643662,432.032303 C20.2360189,432.032303 20.6086245,432.224017 20.8821831,432.607444 C21.1557416,432.990871 21.2925209,433.511938 21.2925209,434.170646 C21.2925209,434.829354 21.1557416,435.350421 20.8821831,435.733848 C20.6086245,436.117275 20.2360189,436.308989 19.7643662,436.308989 Z\",\"id\":\"0%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M8.35093719,330.898876 L8.35093719,329.820225 L2.07142387,329.820225 L5.95330483,325.876404 C6.68183711,325.146067 7.17658665,324.5 7.43755344,323.938202 C7.69852022,323.376404 7.82900362,322.792135 7.82900362,322.185393 C7.82900362,321.196629 7.48920311,320.418539 6.8096021,319.851124 C6.1300011,319.283708 5.20846213,319 4.0449852,319 C3.17509591,319 2.39491395,319.146067 1.70443933,319.438202 C1.0139647,319.730337 0.445818262,320.146067 0,320.685393 L0,320.685393 L0.831831634,321.426966 C1.57123753,320.550562 2.60966787,320.11236 3.94712266,320.11236 C4.80613833,320.11236 5.46671051,320.30618 5.9288392,320.69382 C6.39096788,321.081461 6.62203223,321.623596 6.62203223,322.320225 C6.62203223,322.769663 6.51601447,323.216292 6.30397895,323.660112 C6.09194344,324.103933 5.68690124,324.629213 5.08885235,325.235955 L5.08885235,325.235955 L0.342518908,330.039326 L0.342518908,330.898876 L8.35093719,330.898876 Z M14.3694837,331 C15.2502466,331 16.0358654,330.758427 16.72634,330.275281 C17.4168146,329.792135 17.957777,329.098315 18.3492272,328.19382 C18.7406774,327.289326 18.9364025,326.224719 18.9364025,325 C18.9364025,323.775281 18.7406774,322.710674 18.3492272,321.80618 C17.957777,320.901685 17.4168146,320.207865 16.72634,319.724719 C16.0358654,319.241573 15.2502466,319 14.3694837,319 C13.4887208,319 12.703102,319.241573 12.0126274,319.724719 C11.3221528,320.207865 10.7839088,320.901685 10.3978954,321.80618 C10.0118821,322.710674 9.81887537,323.775281 9.81887537,325 C9.81887537,326.224719 10.0118821,327.289326 10.3978954,328.19382 C10.7839088,329.098315 11.3221528,329.792135 12.0126274,330.275281 C12.703102,330.758427 13.4887208,331 14.3694837,331 Z M14.3694837,329.88764 C13.7061931,329.88764 13.1217363,329.696629 12.6161131,329.314607 C12.11049,328.932584 11.7163214,328.376404 11.4336074,327.646067 C11.1508933,326.91573 11.0095363,326.033708 11.0095363,325 C11.0095363,323.966292 11.1508933,323.08427 11.4336074,322.353933 C11.7163214,321.623596 12.11049,321.067416 12.6161131,320.685393 C13.1217363,320.303371 13.7061931,320.11236 14.3694837,320.11236 C15.0327743,320.11236 15.6172312,320.303371 16.1228543,320.685393 C16.6284775,321.067416 17.0226461,321.623596 17.3053601,322.353933 C17.5880741,323.08427 17.7294311,323.966292 17.7294311,325 C17.7294311,326.033708 17.5880741,326.91573 17.3053601,327.646067 C17.0226461,328.376404 16.6284775,328.932584 16.1228543,329.314607 C15.6172312,329.696629 15.0327743,329.88764 14.3694837,329.88764 Z M22.6225584,326.106039 C23.2885674,326.106039 23.830889,325.850421 24.2495232,325.339185 C24.6681574,324.827949 24.8774745,324.149579 24.8774745,323.304073 C24.8774745,322.458567 24.6681574,321.780197 24.2495232,321.268961 C23.830889,320.757725 23.2885674,320.502107 22.6225584,320.502107 C21.947035,320.502107 21.4023348,320.760183 20.9884577,321.276334 C20.5745807,321.792486 20.3676422,322.468399 20.3676422,323.304073 C20.3676422,324.139747 20.5745807,324.81566 20.9884577,325.331812 C21.4023348,325.847963 21.947035,326.106039 22.6225584,326.106039 Z M22.6939165,330.898876 L29.5157514,320.575843 L28.6737257,320.575843 L21.8518908,330.898876 L22.6939165,330.898876 Z M22.6225584,325.442416 C22.1468377,325.442416 21.7710183,325.250702 21.4951003,324.867275 C21.2191823,324.483848 21.0812233,323.962781 21.0812233,323.304073 C21.0812233,322.645365 21.2191823,322.124298 21.4951003,321.740871 C21.7710183,321.357444 22.1468377,321.16573 22.6225584,321.16573 C23.0887647,321.16573 23.4622054,321.354986 23.7428806,321.733497 C24.0235558,322.112008 24.1638935,322.635534 24.1638935,323.304073 C24.1638935,323.972612 24.0235558,324.496138 23.7428806,324.874649 C23.4622054,325.25316 23.0887647,325.442416 22.6225584,325.442416 Z M28.7450839,330.972612 C29.4206073,330.972612 29.9653075,330.714537 30.3791845,330.198385 C30.7930615,329.682233 31,329.00632 31,328.170646 C31,327.334972 30.7930615,326.659059 30.3791845,326.142907 C29.9653075,325.626756 29.4206073,325.36868 28.7450839,325.36868 C28.0790749,325.36868 27.5367533,325.626756 27.118119,326.142907 C26.6994848,326.659059 26.4901677,327.334972 26.4901677,328.170646 C26.4901677,329.00632 26.6994848,329.682233 27.118119,330.198385 C27.5367533,330.714537 28.0790749,330.972612 28.7450839,330.972612 Z M28.7450839,330.308989 C28.2788776,330.308989 27.9054368,330.119733 27.6247616,329.741222 C27.3440864,329.362711 27.2037488,328.839185 27.2037488,328.170646 C27.2037488,327.502107 27.3440864,326.978581 27.6247616,326.60007 C27.9054368,326.221559 28.2788776,326.032303 28.7450839,326.032303 C29.2208046,326.032303 29.5966239,326.224017 29.8725419,326.607444 C30.1484599,326.990871 30.2864189,327.511938 30.2864189,328.170646 C30.2864189,328.829354 30.1484599,329.350421 29.8725419,329.733848 C29.5966239,330.117275 29.2208046,330.308989 28.7450839,330.308989 Z\",\"id\":\"20%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M8.57953465,245.898876 L8.57953465,242.797753 L10.851772,242.797753 L10.851772,241.719101 L8.57953465,241.719101 L8.57953465,238.988764 L7.44341596,238.988764 L7.44341596,241.719101 L2.50941482,241.719101 L8.31985038,234.101124 L7.02142902,234.101124 L1,241.921348 L1,242.797753 L7.41095543,242.797753 L7.41095543,245.898876 L8.57953465,245.898876 Z M16.4512141,246 C17.3276485,246 18.1094064,245.758427 18.7964877,245.275281 C19.483569,244.792135 20.0218728,244.098315 20.4113992,243.19382 C20.8009256,242.289326 20.9956888,241.224719 20.9956888,240 C20.9956888,238.775281 20.8009256,237.710674 20.4113992,236.80618 C20.0218728,235.901685 19.483569,235.207865 18.7964877,234.724719 C18.1094064,234.241573 17.3276485,234 16.4512141,234 C15.5747797,234 14.7930218,234.241573 14.1059405,234.724719 C13.4188592,235.207865 12.8832604,235.901685 12.4991441,236.80618 C12.1150278,237.710674 11.9229696,238.775281 11.9229696,240 C11.9229696,241.224719 12.1150278,242.289326 12.4991441,243.19382 C12.8832604,244.098315 13.4188592,244.792135 14.1059405,245.275281 C14.7930218,245.758427 15.5747797,246 16.4512141,246 Z M16.4512141,244.88764 C15.7911832,244.88764 15.2095987,244.696629 14.7064604,244.314607 C14.2033221,243.932584 13.8110907,243.376404 13.5297661,242.646067 C13.2484414,241.91573 13.1077791,241.033708 13.1077791,240 C13.1077791,238.966292 13.2484414,238.08427 13.5297661,237.353933 C13.8110907,236.623596 14.2033221,236.067416 14.7064604,235.685393 C15.2095987,235.303371 15.7911832,235.11236 16.4512141,235.11236 C17.111245,235.11236 17.6928295,235.303371 18.1959678,235.685393 C18.6991061,236.067416 19.0913375,236.623596 19.3726621,237.353933 C19.6539868,238.08427 19.7946491,238.966292 19.7946491,240 C19.7946491,241.033708 19.6539868,241.91573 19.3726621,242.646067 C19.0913375,243.376404 18.6991061,243.932584 18.1959678,244.314607 C17.6928295,244.696629 17.111245,244.88764 16.4512141,244.88764 Z M24.6637292,241.106039 C25.3264651,241.106039 25.8661214,240.850421 26.2826983,240.339185 C26.6992751,239.827949 26.9075636,239.149579 26.9075636,238.304073 C26.9075636,237.458567 26.6992751,236.780197 26.2826983,236.268961 C25.8661214,235.757725 25.3264651,235.502107 24.6637292,235.502107 C23.9915256,235.502107 23.4495023,235.760183 23.0376593,236.276334 C22.6258163,236.792486 22.4198948,237.468399 22.4198948,238.304073 C22.4198948,239.139747 22.6258163,239.81566 23.0376593,240.331812 C23.4495023,240.847963 23.9915256,241.106039 24.6637292,241.106039 Z M24.7347366,245.898876 L31.5230457,235.575843 L30.6851582,235.575843 L23.896849,245.898876 L24.7347366,245.898876 Z M24.6637292,240.442416 C24.1903464,240.442416 23.816374,240.250702 23.541812,239.867275 C23.2672499,239.483848 23.1299689,238.962781 23.1299689,238.304073 C23.1299689,237.645365 23.2672499,237.124298 23.541812,236.740871 C23.816374,236.357444 24.1903464,236.16573 24.6637292,236.16573 C25.1276443,236.16573 25.4992498,236.354986 25.7785456,236.733497 C26.0578415,237.112008 26.1974894,237.635534 26.1974894,238.304073 C26.1974894,238.972612 26.0578415,239.496138 25.7785456,239.874649 C25.4992498,240.25316 25.1276443,240.442416 24.6637292,240.442416 Z M30.7561656,245.972612 C31.4283692,245.972612 31.9703924,245.714537 32.3822355,245.198385 C32.7940785,244.682233 33,244.00632 33,243.170646 C33,242.334972 32.7940785,241.659059 32.3822355,241.142907 C31.9703924,240.626756 31.4283692,240.36868 30.7561656,240.36868 C30.0934297,240.36868 29.5537733,240.626756 29.1371965,241.142907 C28.7206196,241.659059 28.5123312,242.334972 28.5123312,243.170646 C28.5123312,244.00632 28.7206196,244.682233 29.1371965,245.198385 C29.5537733,245.714537 30.0934297,245.972612 30.7561656,245.972612 Z M30.7561656,245.308989 C30.2922505,245.308989 29.920645,245.119733 29.6413491,244.741222 C29.3620533,244.362711 29.2224054,243.839185 29.2224054,243.170646 C29.2224054,242.502107 29.3620533,241.978581 29.6413491,241.60007 C29.920645,241.221559 30.2922505,241.032303 30.7561656,241.032303 C31.2295484,241.032303 31.6035208,241.224017 31.8780828,241.607444 C32.1526448,241.990871 32.2899258,242.511938 32.2899258,243.170646 C32.2899258,243.829354 32.1526448,244.350421 31.8780828,244.733848 C31.6035208,245.117275 31.2295484,245.308989 30.7561656,245.308989 Z\",\"id\":\"40%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M5.66391455,162 C6.40060721,162 7.06417229,161.851124 7.65460979,161.553371 C8.24504729,161.255618 8.70818863,160.831461 9.04403381,160.280899 C9.37987899,159.730337 9.54780159,159.095506 9.54780159,158.376404 C9.54780159,157.668539 9.38529585,157.047753 9.06028439,156.514045 C8.73527292,155.980337 8.28296529,155.567416 7.70336151,155.275281 C7.12375773,154.983146 6.46019265,154.837079 5.71266627,154.837079 C4.91097132,154.837079 4.20136295,155.014045 3.58384116,155.367978 C2.96631938,155.72191 2.51672018,156.219101 2.23504358,156.859551 C2.20254243,156.5 2.18629186,156.179775 2.18629186,155.898876 C2.18629186,154.325843 2.54380447,153.126404 3.2588297,152.300562 C3.97385492,151.474719 4.95972304,151.061798 6.21643405,151.061798 C7.14813359,151.061798 7.88482625,151.247191 8.42651202,151.617978 L8.42651202,151.617978 L8.89777865,150.640449 C8.22608829,150.213483 7.32688989,150 6.20018347,150 C5.16014678,150 4.25011467,150.233146 3.47008715,150.699438 C2.69005963,151.16573 2.08337156,151.853933 1.65002293,152.764045 C1.21667431,153.674157 1,154.786517 1,156.101124 C1,157.977528 1.40084748,159.429775 2.20254243,160.457865 C3.00423738,161.485955 4.15802809,162 5.66391455,162 Z M5.61516283,160.97191 C4.98680733,160.97191 4.44512155,160.853933 3.9901055,160.617978 C3.53508944,160.382022 3.19111897,160.073034 2.95819409,159.691011 C2.7252692,159.308989 2.60880676,158.893258 2.60880676,158.44382 C2.60880676,157.960674 2.73339449,157.522472 2.98256995,157.129213 C3.23174541,156.735955 3.57571588,156.426966 4.01448136,156.202247 C4.45324684,155.977528 4.95972304,155.865169 5.53390997,155.865169 C6.41144093,155.865169 7.10750715,156.095506 7.62210864,156.55618 C8.13671013,157.016854 8.39401088,157.634831 8.39401088,158.410112 C8.39401088,159.185393 8.13671013,159.80618 7.62210864,160.272472 C7.10750715,160.738764 6.43852522,160.97191 5.61516283,160.97191 Z M15.4305091,162 C16.3080401,162 17.0907761,161.758427 17.778717,161.275281 C18.4666579,160.792135 19.0056353,160.098315 19.395649,159.19382 C19.7856628,158.289326 19.9806697,157.224719 19.9806697,156 C19.9806697,154.775281 19.7856628,153.710674 19.395649,152.80618 C19.0056353,151.901685 18.4666579,151.207865 17.778717,150.724719 C17.0907761,150.241573 16.3080401,150 15.4305091,150 C14.5529782,150 13.7702422,150.241573 13.0823013,150.724719 C12.3943604,151.207865 11.8580914,151.901685 11.4734945,152.80618 C11.0888976,153.710674 10.8965992,154.775281 10.8965992,156 C10.8965992,157.224719 11.0888976,158.289326 11.4734945,159.19382 C11.8580914,160.098315 12.3943604,160.792135 13.0823013,161.275281 C13.7702422,161.758427 14.5529782,162 15.4305091,162 Z M15.4305091,160.88764 C14.7696525,160.88764 14.1873403,160.696629 13.6835725,160.314607 C13.1798047,159.932584 12.7870825,159.376404 12.5054059,158.646067 C12.2237293,157.91573 12.082891,157.033708 12.082891,156 C12.082891,154.966292 12.2237293,154.08427 12.5054059,153.353933 C12.7870825,152.623596 13.1798047,152.067416 13.6835725,151.685393 C14.1873403,151.303371 14.7696525,151.11236 15.4305091,151.11236 C16.0913658,151.11236 16.673678,151.303371 17.1774458,151.685393 C17.6812136,152.067416 18.0739357,152.623596 18.3556123,153.353933 C18.637289,154.08427 18.7781273,154.966292 18.7781273,156 C18.7781273,157.033708 18.637289,157.91573 18.3556123,158.646067 C18.0739357,159.376404 17.6812136,159.932584 17.1774458,160.314607 C16.673678,160.696629 16.0913658,160.88764 15.4305091,160.88764 Z M23.6532993,157.106039 C24.3168643,157.106039 24.8571959,156.850421 25.274294,156.339185 C25.691392,155.827949 25.899941,155.149579 25.899941,154.304073 C25.899941,153.458567 25.691392,152.780197 25.274294,152.268961 C24.8571959,151.757725 24.3168643,151.502107 23.6532993,151.502107 C22.9802547,151.502107 22.4375532,151.760183 22.0251949,152.276334 C21.6128366,152.792486 21.4066575,153.468399 21.4066575,154.304073 C21.4066575,155.139747 21.6128366,155.81566 22.0251949,156.331812 C22.4375532,156.847963 22.9802547,157.106039 23.6532993,157.106039 Z M23.7243955,161.898876 L30.5211978,151.575843 L29.682262,151.575843 L22.8854597,161.898876 L23.7243955,161.898876 Z M23.6532993,156.442416 C23.1793242,156.442416 22.8048839,156.250702 22.5299784,155.867275 C22.2550728,155.483848 22.1176201,154.962781 22.1176201,154.304073 C22.1176201,153.645365 22.2550728,153.124298 22.5299784,152.740871 C22.8048839,152.357444 23.1793242,152.16573 23.6532993,152.16573 C24.1177948,152.16573 24.4898652,152.354986 24.7695105,152.733497 C25.0491558,153.112008 25.1889784,153.635534 25.1889784,154.304073 C25.1889784,154.972612 25.0491558,155.496138 24.7695105,155.874649 C24.4898652,156.25316 24.1177948,156.442416 23.6532993,156.442416 Z M29.7533582,161.972612 C30.4264028,161.972612 30.9691043,161.714537 31.3814626,161.198385 C31.7938209,160.682233 32,160.00632 32,159.170646 C32,158.334972 31.7938209,157.659059 31.3814626,157.142907 C30.9691043,156.626756 30.4264028,156.36868 29.7533582,156.36868 C29.0897932,156.36868 28.5494616,156.626756 28.1323635,157.142907 C27.7152655,157.659059 27.5067165,158.334972 27.5067165,159.170646 C27.5067165,160.00632 27.7152655,160.682233 28.1323635,161.198385 C28.5494616,161.714537 29.0897932,161.972612 29.7533582,161.972612 Z M29.7533582,161.308989 C29.2888627,161.308989 28.9167923,161.119733 28.637147,160.741222 C28.3575017,160.362711 28.2176791,159.839185 28.2176791,159.170646 C28.2176791,158.502107 28.3575017,157.978581 28.637147,157.60007 C28.9167923,157.221559 29.2888627,157.032303 29.7533582,157.032303 C30.2273333,157.032303 30.6017736,157.224017 30.8766791,157.607444 C31.1515846,157.990871 31.2890374,158.511938 31.2890374,159.170646 C31.2890374,159.829354 31.1515846,160.350421 30.8766791,160.733848 C30.6017736,161.117275 30.2273333,161.308989 29.7533582,161.308989 Z\",\"id\":\"60%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M5.45217391,77 C6.36459474,77 7.15884058,76.8623596 7.83491143,76.5870787 C8.51098229,76.3117978 9.03040258,75.9185393 9.3931723,75.4073034 C9.75594203,74.8960674 9.93732689,74.2977528 9.93732689,73.6123596 C9.93732689,72.9157303 9.74220075,72.3202247 9.35194847,71.8258427 C8.96169619,71.3314607 8.40380032,70.9606742 7.67826087,70.7134831 C8.27188406,70.4775281 8.72809447,70.1376404 9.04689211,69.6938202 C9.36568975,69.25 9.52508857,68.7247191 9.52508857,68.1179775 C9.52508857,67.488764 9.35469673,66.9382022 9.01391304,66.4662921 C8.67312936,65.994382 8.19768116,65.6320225 7.58756844,65.3792135 C6.97745572,65.1264045 6.26565754,65 5.45217391,65 C4.22095545,65 3.23982823,65.2808989 2.50879227,65.8426966 C1.77775631,66.4044944 1.41223833,67.1629213 1.41223833,68.1179775 C1.41223833,68.7247191 1.56614063,69.25 1.87394525,69.6938202 C2.18174987,70.1376404 2.63246377,70.4775281 3.22608696,70.7134831 C2.5005475,70.9606742 1.94814815,71.3286517 1.56888889,71.8174157 C1.18962963,72.3061798 1,72.9044944 1,73.6123596 C1,74.6573034 1.39574879,75.4831461 2.18724638,76.0898876 C2.97874396,76.6966292 4.06705314,77 5.45217391,77 Z M5.45217391,70.2752809 C4.56173913,70.2752809 3.86368223,70.0842697 3.35800322,69.7022472 C2.85232421,69.3202247 2.5994847,68.8033708 2.5994847,68.1516854 C2.5994847,67.5 2.85507246,66.9831461 3.36624799,66.6011236 C3.87742351,66.2191011 4.57273215,66.0280899 5.45217391,66.0280899 C6.32062265,66.0280899 7.01593129,66.2191011 7.53809984,66.6011236 C8.06026838,66.9831461 8.32135266,67.505618 8.32135266,68.1685393 C8.32135266,68.8089888 8.0657649,69.3202247 7.55458937,69.7022472 C7.04341385,70.0842697 6.3426087,70.2752809 5.45217391,70.2752809 Z M5.45217391,75.9719101 C4.42982287,75.9719101 3.63282877,75.761236 3.06119163,75.3398876 C2.48955448,74.9185393 2.20373591,74.3370787 2.20373591,73.5955056 C2.20373591,72.8651685 2.49230274,72.2893258 3.06943639,71.8679775 C3.64657005,71.4466292 4.44081589,71.2359551 5.45217391,71.2359551 C6.47452496,71.2359551 7.27426731,71.4466292 7.85140097,71.8679775 C8.42853462,72.2893258 8.71710145,72.8651685 8.71710145,73.5955056 C8.71710145,74.3258427 8.42853462,74.9044944 7.85140097,75.3314607 C7.27426731,75.758427 6.47452496,75.9719101 5.45217391,75.9719101 Z M16.1868599,77 C17.0772947,77 17.8715405,76.758427 18.5695974,76.2752809 C19.2676543,75.7921348 19.8145572,75.0983146 20.210306,74.1938202 C20.6060548,73.2893258 20.8039291,72.2247191 20.8039291,71 C20.8039291,69.7752809 20.6060548,68.7106742 20.210306,67.8061798 C19.8145572,66.9016854 19.2676543,66.2078652 18.5695974,65.7247191 C17.8715405,65.241573 17.0772947,65 16.1868599,65 C15.2964251,65 14.5021793,65.241573 13.8041224,65.7247191 C13.1060655,66.2078652 12.5619109,66.9016854 12.1716586,67.8061798 C11.7814063,68.7106742 11.5862802,69.7752809 11.5862802,71 C11.5862802,72.2247191 11.7814063,73.2893258 12.1716586,74.1938202 C12.5619109,75.0983146 13.1060655,75.7921348 13.8041224,76.2752809 C14.5021793,76.758427 15.2964251,77 16.1868599,77 Z M16.1868599,75.8876404 C15.5162856,75.8876404 14.9254106,75.6966292 14.4142351,75.3146067 C13.9030596,74.9325843 13.5045625,74.3764045 13.218744,73.6460674 C12.9329254,72.9157303 12.7900161,72.0337079 12.7900161,71 C12.7900161,69.9662921 12.9329254,69.0842697 13.218744,68.3539326 C13.5045625,67.6235955 13.9030596,67.0674157 14.4142351,66.6853933 C14.9254106,66.3033708 15.5162856,66.1123596 16.1868599,66.1123596 C16.8574342,66.1123596 17.4483092,66.3033708 17.9594847,66.6853933 C18.4706602,67.0674157 18.8691573,67.6235955 19.1549758,68.3539326 C19.4407944,69.0842697 19.5837037,69.9662921 19.5837037,71 C19.5837037,72.0337079 19.4407944,72.9157303 19.1549758,73.6460674 C18.8691573,74.3764045 18.4706602,74.9325843 17.9594847,75.3146067 C17.4483092,75.6966292 16.8574342,75.8876404 16.1868599,75.8876404 Z M24.5305636,72.1060393 C25.2038862,72.1060393 25.7521632,71.8504213 26.1753945,71.3391854 C26.5986259,70.8279494 26.8102415,70.1495787 26.8102415,69.304073 C26.8102415,68.4585674 26.5986259,67.7801966 26.1753945,67.2689607 C25.7521632,66.7577247 25.2038862,66.5021067 24.5305636,66.5021067 C23.8476221,66.5021067 23.2969404,66.7601826 22.8785185,67.2763343 C22.4600966,67.792486 22.2508857,68.4683989 22.2508857,69.304073 C22.2508857,70.1397472 22.4600966,70.8156601 22.8785185,71.3318118 C23.2969404,71.8479635 23.8476221,72.1060393 24.5305636,72.1060393 Z M24.6027053,76.8988764 L31.4994525,66.5758427 L30.6481804,66.5758427 L23.7514332,76.8988764 L24.6027053,76.8988764 Z M24.5305636,71.4424157 C24.0496189,71.4424157 23.6696726,71.2507022 23.3907246,70.8672753 C23.1117767,70.4838483 22.9723027,69.9627809 22.9723027,69.304073 C22.9723027,68.6453652 23.1117767,68.1242978 23.3907246,67.7408708 C23.6696726,67.3574438 24.0496189,67.1657303 24.5305636,67.1657303 C25.0018894,67.1657303 25.379431,67.354986 25.6631884,67.7334972 C25.9469458,68.1120084 26.0888245,68.6355337 26.0888245,69.304073 C26.0888245,69.9726124 25.9469458,70.4961376 25.6631884,70.8746489 C25.379431,71.2531601 25.0018894,71.4424157 24.5305636,71.4424157 Z M30.7203221,76.9726124 C31.4032636,76.9726124 31.9539452,76.7145365 32.3723671,76.1983848 C32.790789,75.6822331 33,75.0063202 33,74.1706461 C33,73.3349719 32.790789,72.659059 32.3723671,72.1429073 C31.9539452,71.6267556 31.4032636,71.3686798 30.7203221,71.3686798 C30.0469995,71.3686798 29.4987225,71.6267556 29.0754911,72.1429073 C28.6522598,72.659059 28.4406441,73.3349719 28.4406441,74.1706461 C28.4406441,75.0063202 28.6522598,75.6822331 29.0754911,76.1983848 C29.4987225,76.7145365 30.0469995,76.9726124 30.7203221,76.9726124 Z M30.7203221,76.3089888 C30.2489962,76.3089888 29.8714546,76.1197331 29.5876973,75.7412219 C29.3039399,75.3627107 29.1620612,74.8391854 29.1620612,74.1706461 C29.1620612,73.5021067 29.3039399,72.9785815 29.5876973,72.6000702 C29.8714546,72.221559 30.2489962,72.0323034 30.7203221,72.0323034 C31.2012668,72.0323034 31.5812131,72.2240169 31.860161,72.6074438 C32.139109,72.9908708 32.2785829,73.5119382 32.2785829,74.1706461 C32.2785829,74.8293539 32.139109,75.3504213 31.860161,75.7338483 C31.5812131,76.1172753 31.2012668,76.3089888 30.7203221,76.3089888 Z\",\"id\":\"80%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":6}),React.createElement(\"g\",{\"id\":\"Group-3\",\"key\":7},[React.createElement(\"text\",{\"id\":\"Percentage-of-childr\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"48.9569941\",\"y\":\"15\"},\"Percentage of children attending grammar school\")),React.createElement(\"path\",{\"d\":\"M2.20306473,491.828624 L2.93741965,488.22052 L6.16858126,488.22052 C7.82223972,488.22052 9.11960007,487.820527 10.0606623,487.02054 C11.0017245,486.220553 11.4722556,485.09132 11.4722556,483.632841 C11.4722556,482.609728 11.1132377,481.815183 10.3952017,481.249206 C9.67716583,480.683229 8.67626729,480.400241 7.39250611,480.400241 L7.39250611,480.400241 L3.2964376,480.400241 L1.01177788,491.828624 L2.20306473,491.828624 Z M6.18490026,487.159313 L3.13324762,487.159313 L4.29189648,481.445121 L7.29459212,481.445121 C8.25197334,481.445121 8.98632825,481.641037 9.49765686,482.032867 C10.0089855,482.424697 10.2646498,482.996116 10.2646498,483.747124 C10.2646498,484.868194 9.91107147,485.71716 9.20391489,486.294021 C8.49675831,486.870882 7.4904201,487.159313 6.18490026,487.159313 L6.18490026,487.159313 Z M16.400593,491.910255 C17.0751116,491.910255 17.7142724,491.798692 18.3180753,491.575567 C18.9218782,491.352441 19.4250473,491.039521 19.8275826,490.636807 L19.8275826,490.636807 L19.3053747,489.804167 C18.989874,490.141577 18.5846189,490.405518 18.0896093,490.595991 C17.5945997,490.786464 17.0642323,490.881701 16.498507,490.881701 C15.5193671,490.881701 14.7822924,490.653133 14.2872828,490.195998 C13.7922732,489.738862 13.5447684,489.074928 13.5447684,488.204194 C13.5447684,488.051815 13.550208,487.937531 13.5610874,487.861342 L13.5610874,487.861342 L20.7740845,487.861342 C20.8502398,487.480396 20.8883175,487.132103 20.8883175,486.816461 C20.8883175,485.684507 20.5510582,484.794726 19.8765396,484.147118 C19.202021,483.499509 18.2935968,483.175705 17.1512669,483.175705 C16.2482824,483.175705 15.4350523,483.39611 14.7115767,483.836919 C13.9881011,484.277728 13.4223759,484.884521 13.0144009,485.657297 C12.606426,486.430073 12.4024385,487.295365 12.4024385,488.253172 C12.4024385,489.385127 12.7587366,490.277629 13.4713329,490.930679 C14.1839291,491.58373 15.1603492,491.910255 16.400593,491.910255 Z M19.7949446,486.99605 L13.6753204,486.99605 C13.892907,486.125316 14.3063216,485.434171 14.9155642,484.922615 C15.5248068,484.411059 16.2591617,484.155281 17.1186289,484.155281 C17.9345788,484.155281 18.5873388,484.375685 19.0769087,484.816494 C19.5664786,485.257304 19.8112636,485.880423 19.8112636,486.685851 C19.8112636,486.816461 19.8058239,486.919861 19.7949446,486.99605 L19.7949446,486.99605 Z M23.4993572,491.828624 L24.3642641,487.469512 C24.5709714,486.413747 24.9707868,485.619202 25.5637104,485.085878 C26.156634,484.552553 26.9154674,484.285891 27.8402106,484.285891 L27.8402106,484.285891 L28.1665906,484.302217 L28.3787376,483.175705 C27.5627877,483.175705 26.8665104,483.309036 26.2899058,483.575699 C25.7133012,483.842361 25.2346106,484.253238 24.853834,484.808331 L24.853834,484.808331 L25.147576,483.24101 L24.0378841,483.24101 L22.3407083,491.828624 L23.4993572,491.828624 Z M32.7685481,491.910255 C33.5083426,491.910255 34.1964604,491.76604 34.8329013,491.477609 C35.4693422,491.189178 35.977951,490.789185 36.3587276,490.277629 L36.3587276,490.277629 L35.5264587,489.640905 C35.2218374,490.043619 34.8329013,490.351097 34.3596504,490.563338 C33.8863994,490.77558 33.372351,490.881701 32.817505,490.881701 C31.9036412,490.881701 31.1992044,490.647691 30.7041948,490.179671 C30.2091852,489.711652 29.9616804,489.058601 29.9616804,488.22052 C29.9616804,487.447744 30.1221505,486.756599 30.4430908,486.147085 C30.7640311,485.537571 31.2100837,485.058667 31.7812487,484.710374 C32.3524136,484.36208 32.9915744,484.187933 33.6987309,484.187933 C34.8736988,484.187933 35.7059677,484.612416 36.1955376,485.461382 L36.1955376,485.461382 L37.1746775,484.889963 C36.8591769,484.323986 36.4158441,483.896782 35.8446792,483.608351 C35.2735143,483.319921 34.5908362,483.175705 33.7966449,483.175705 C32.8392637,483.175705 31.9797965,483.39611 31.2182432,483.836919 C30.45669,484.277728 29.8637664,484.884521 29.4394725,485.657297 C29.0151785,486.430073 28.8030315,487.300807 28.8030315,488.269499 C28.8030315,488.998738 28.9635017,489.638184 29.284442,490.187834 C29.6053823,490.737485 30.065034,491.161968 30.6633973,491.461283 C31.2617606,491.760598 31.9634775,491.910255 32.7685481,491.910255 Z M41.9887819,491.910255 C42.6633005,491.910255 43.3024613,491.798692 43.9062642,491.575567 C44.5100671,491.352441 45.0132362,491.039521 45.4157715,490.636807 L45.4157715,490.636807 L44.8935636,489.804167 C44.578063,490.141577 44.1728078,490.405518 43.6777982,490.595991 C43.1827886,490.786464 42.6524212,490.881701 42.0866959,490.881701 C41.1075561,490.881701 40.3704813,490.653133 39.8754717,490.195998 C39.3804621,489.738862 39.1329573,489.074928 39.1329573,488.204194 C39.1329573,488.051815 39.138397,487.937531 39.1492763,487.861342 L39.1492763,487.861342 L46.3622734,487.861342 C46.4384287,487.480396 46.4765064,487.132103 46.4765064,486.816461 C46.4765064,485.684507 46.1392471,484.794726 45.4647285,484.147118 C44.7902099,483.499509 43.8817857,483.175705 42.7394559,483.175705 C41.8364713,483.175705 41.0232412,483.39611 40.2997656,483.836919 C39.5762901,484.277728 39.0105648,484.884521 38.6025899,485.657297 C38.1946149,486.430073 37.9906274,487.295365 37.9906274,488.253172 C37.9906274,489.385127 38.3469256,490.277629 39.0595218,490.930679 C39.772118,491.58373 40.7485381,491.910255 41.9887819,491.910255 Z M45.3831335,486.99605 L39.2635093,486.99605 C39.4810959,486.125316 39.8945105,485.434171 40.5037531,484.922615 C41.1129957,484.411059 41.8473506,484.155281 42.7068179,484.155281 C43.5227678,484.155281 44.1755277,484.375685 44.6650976,484.816494 C45.1546676,485.257304 45.3994525,485.880423 45.3994525,486.685851 C45.3994525,486.816461 45.3940129,486.919861 45.3831335,486.99605 L45.3831335,486.99605 Z M49.0875461,491.828624 L50.00141,487.224618 C50.2081173,486.234158 50.6106526,485.485871 51.2090158,484.979757 C51.8073791,484.473643 52.5689323,484.220586 53.4936756,484.220586 C54.2225908,484.220586 54.7747169,484.38657 55.1500539,484.718537 C55.5253908,485.050504 55.7130593,485.526687 55.7130593,486.147085 C55.7130593,486.364768 55.685861,486.625988 55.6314643,486.930745 L55.6314643,486.930745 L54.6523244,491.828624 L55.8109733,491.828624 L56.7901132,486.947072 C56.8553892,486.598778 56.8880272,486.272253 56.8880272,485.967496 C56.8880272,485.096762 56.6187637,484.41378 56.0802367,483.91855 C55.5417098,483.42332 54.7883161,483.175705 53.8200555,483.175705 C52.394863,483.175705 51.2742918,483.654609 50.4583419,484.612416 L50.4583419,484.612416 L50.7357649,483.24101 L49.626073,483.24101 L47.9288972,491.828624 L49.0875461,491.828624 Z M61.7021316,491.910255 C62.4854435,491.910255 63.1218844,491.725224 63.6114543,491.355162 L63.6114543,491.355162 L63.3340314,490.473544 C62.9423754,490.767417 62.5017625,490.914353 62.0121925,490.914353 C61.1853633,490.914353 60.7719487,490.533407 60.7719487,489.771515 C60.7719487,489.673557 60.7937073,489.493968 60.8372247,489.232748 L60.8372247,489.232748 L61.8326836,484.220586 L64.4437232,484.220586 L64.6395512,483.24101 L62.0285115,483.24101 L62.4038485,481.36349 L61.2451996,481.36349 L60.8698627,483.24101 L59.3358769,483.24101 L59.1563679,484.220586 L60.6740347,484.220586 L59.6785758,489.281727 C59.6350585,489.488526 59.6132998,489.711652 59.6132998,489.951104 C59.6132998,490.560617 59.8009683,491.039521 60.1763053,491.387815 C60.5516422,491.736108 61.060251,491.910255 61.7021316,491.910255 Z M68.3766018,481.36349 C68.6377057,481.36349 68.8552924,481.276417 69.0293617,481.10227 C69.203431,480.928123 69.2904657,480.71044 69.2904657,480.44922 C69.2904657,480.253304 69.2143103,480.081879 69.0619997,479.934942 C68.909689,479.788006 68.7193007,479.714538 68.4908348,479.714538 C68.2297308,479.714538 68.014864,479.79889 67.8462343,479.967595 C67.6776047,480.1363 67.5932899,480.34582 67.5932899,480.596156 C67.5932899,480.802955 67.6667254,480.982544 67.8135963,481.134923 C67.9604673,481.287301 68.1481358,481.36349 68.3766018,481.36349 Z M66.761021,491.828624 L68.4581968,483.24101 L67.2995479,483.24101 L65.6023721,491.828624 L66.761021,491.828624 Z M71.1508314,491.828624 L73.5660431,479.714538 L72.4073943,479.714538 L69.9921826,491.828624 L71.1508314,491.828624 Z M78.2985526,491.910255 C78.9730712,491.910255 79.6122319,491.798692 80.2160348,491.575567 C80.8198378,491.352441 81.3230069,491.039521 81.7255422,490.636807 L81.7255422,490.636807 L81.2033342,489.804167 C80.8878336,490.141577 80.4825785,490.405518 79.9875689,490.595991 C79.4925593,490.786464 78.9621918,490.881701 78.3964666,490.881701 C77.4173267,490.881701 76.6802519,490.653133 76.1852423,490.195998 C75.6902327,489.738862 75.4427279,489.074928 75.4427279,488.204194 C75.4427279,488.051815 75.4481676,487.937531 75.4590469,487.861342 L75.4590469,487.861342 L82.672044,487.861342 C82.7481994,487.480396 82.786277,487.132103 82.786277,486.816461 C82.786277,485.684507 82.4490177,484.794726 81.7744992,484.147118 C81.0999806,483.499509 80.1915563,483.175705 79.0492265,483.175705 C78.1462419,483.175705 77.3330119,483.39611 76.6095363,483.836919 C75.8860607,484.277728 75.3203354,484.884521 74.9123605,485.657297 C74.5043855,486.430073 74.3003981,487.295365 74.3003981,488.253172 C74.3003981,489.385127 74.6566962,490.277629 75.3692924,490.930679 C76.0818887,491.58373 77.0583087,491.910255 78.2985526,491.910255 Z M81.6929042,486.99605 L75.5732799,486.99605 C75.7908665,486.125316 76.2042812,485.434171 76.8135238,484.922615 C77.4227663,484.411059 78.1571213,484.155281 79.0165885,484.155281 C79.8325384,484.155281 80.4852983,484.375685 80.9748683,484.816494 C81.4644382,485.257304 81.7092232,485.880423 81.7092232,486.685851 C81.7092232,486.816461 81.7037835,486.919861 81.6929042,486.99605 L81.6929042,486.99605 Z M92.3328909,491.910255 C93.2793928,491.910255 94.1307005,491.689851 94.8868141,491.249041 C95.6429277,490.808232 96.2331314,490.198719 96.6574254,489.4205 C97.0817193,488.642282 97.2938663,487.768827 97.2938663,486.800135 C97.2938663,485.689949 96.9430078,484.808331 96.2412909,484.155281 C95.539574,483.50223 94.5903523,483.175705 93.3936258,483.175705 C92.4471239,483.175705 91.5958161,483.39611 90.8397026,483.836919 C90.083589,484.277728 89.4933852,484.884521 89.0690913,485.657297 C88.6447973,486.430073 88.4326504,487.300807 88.4326504,488.269499 C88.4326504,488.998738 88.5931205,489.638184 88.9140608,490.187834 C89.2350011,490.737485 89.6892132,491.161968 90.2766971,491.461283 C90.8641811,491.760598 91.549579,491.910255 92.3328909,491.910255 Z M92.4144859,490.881701 C91.5223806,490.881701 90.8288232,490.647691 90.3338136,490.179671 C89.838804,489.711652 89.5912992,489.058601 89.5912992,488.22052 C89.5912992,487.458628 89.7517694,486.770204 90.0727097,486.155248 C90.39365,485.540292 90.8369827,485.058667 91.402708,484.710374 C91.9684333,484.36208 92.6048742,484.187933 93.3120308,484.187933 C94.204136,484.187933 94.8976934,484.424664 95.392703,484.898126 C95.8877126,485.371587 96.1352174,486.027359 96.1352174,486.86544 C96.1352174,487.627332 95.9747473,488.315756 95.653807,488.930712 C95.3328667,489.545668 94.8895339,490.024572 94.3238086,490.367423 C93.7580834,490.710275 93.1216425,490.881701 92.4144859,490.881701 Z M100.100734,491.828624 L101.618401,484.220586 L104.213121,484.220586 L104.408949,483.24101 L101.781591,483.24101 L101.977419,482.294087 C102.097091,481.717226 102.303799,481.292743 102.597541,481.020639 C102.891283,480.748534 103.293818,480.612482 103.805147,480.612482 C104.305596,480.612482 104.713571,480.753976 105.029071,481.036965 L105.029071,481.036965 L105.53496,480.187999 C105.339132,480.013853 105.088908,479.8778 104.784286,479.779843 C104.479665,479.681885 104.153285,479.632906 103.805147,479.632906 C103.000076,479.632906 102.350036,479.85059 101.855026,480.285957 C101.360017,480.721324 101.030917,481.347164 100.867727,482.163477 L100.867727,482.163477 L100.65558,483.24101 L99.1052751,483.24101 L98.9257661,484.220586 L100.459752,484.220586 L98.9420851,491.828624 L100.100734,491.828624 Z M112.127836,491.926581 C113.041699,491.926581 113.84949,491.790529 114.551207,491.518425 C115.252924,491.24632 115.80233,490.851769 116.199426,490.334771 C116.596521,489.817773 116.795069,489.200096 116.795069,488.48174 C116.795069,487.904879 116.642758,487.43958 116.338137,487.085845 C116.033516,486.732109 115.663618,486.460005 115.228445,486.269532 C114.793272,486.079059 114.222107,485.880423 113.51495,485.673623 C112.916587,485.499476 112.440616,485.338935 112.087038,485.191998 C111.73346,485.045062 111.436998,484.846426 111.197653,484.59609 C110.958307,484.345754 110.838635,484.024671 110.838635,483.632841 C110.838635,482.925369 111.143256,482.364834 111.752499,481.951236 C112.361741,481.537637 113.166812,481.330838 114.16771,481.330838 C114.755194,481.330838 115.31548,481.409748 115.848567,481.567568 C116.381654,481.725389 116.854905,481.956678 117.26832,482.261435 L117.26832,482.261435 L117.774209,481.281859 C117.339036,480.966218 116.811388,480.724045 116.191266,480.55534 C115.571144,480.386636 114.918384,480.302283 114.232986,480.302283 C113.340881,480.302283 112.54941,480.441056 111.858572,480.718603 C111.167734,480.996149 110.629208,481.393422 110.242991,481.91042 C109.856775,482.427418 109.663667,483.039653 109.663667,483.747124 C109.663667,484.345754 109.818697,484.832821 110.128758,485.208325 C110.438819,485.583829 110.814156,485.866817 111.254769,486.05729 C111.695382,486.247763 112.269267,486.4464 112.976423,486.653199 C113.574787,486.827346 114.048038,486.987887 114.396176,487.134824 C114.744315,487.28176 115.032617,487.474954 115.261083,487.714406 C115.489549,487.953858 115.603782,488.264057 115.603782,488.645003 C115.603782,489.352474 115.296441,489.904846 114.681759,490.302118 C114.067076,490.699391 113.253846,490.898027 112.242068,490.898027 C111.524033,490.898027 110.827755,490.772859 110.153237,490.522523 C109.478718,490.272187 108.951071,489.940219 108.570294,489.526621 L108.570294,489.526621 L107.98281,490.473544 C108.374466,490.898027 108.95379,491.24632 109.720783,491.518425 C110.487776,491.790529 111.290127,491.926581 112.127836,491.926581 Z M126.896529,491.828624 L127.108676,490.783743 L120.238378,490.783743 L121.086965,486.538915 L127.010762,486.538915 L127.20659,485.510361 L121.282793,485.510361 L122.098743,481.445121 L128.740576,481.445121 L128.952722,480.400241 L121.119603,480.400241 L118.834944,491.828624 L126.896529,491.828624 Z M133.081429,491.926581 C133.995293,491.926581 134.803083,491.790529 135.5048,491.518425 C136.206517,491.24632 136.755923,490.851769 137.153019,490.334771 C137.550115,489.817773 137.748662,489.200096 137.748662,488.48174 C137.748662,487.904879 137.596352,487.43958 137.29173,487.085845 C136.987109,486.732109 136.617212,486.460005 136.182039,486.269532 C135.746865,486.079059 135.1757,485.880423 134.468544,485.673623 C133.870181,485.499476 133.39421,485.338935 133.040631,485.191998 C132.687053,485.045062 132.390591,484.846426 132.151246,484.59609 C131.911901,484.345754 131.792228,484.024671 131.792228,483.632841 C131.792228,482.925369 132.096849,482.364834 132.706092,481.951236 C133.315335,481.537637 134.120405,481.330838 135.121304,481.330838 C135.708788,481.330838 136.269073,481.409748 136.802161,481.567568 C137.335248,481.725389 137.808499,481.956678 138.221913,482.261435 L138.221913,482.261435 L138.727802,481.281859 C138.292629,480.966218 137.764981,480.724045 137.144859,480.55534 C136.524738,480.386636 135.871978,480.302283 135.18658,480.302283 C134.294474,480.302283 133.503003,480.441056 132.812166,480.718603 C132.121328,480.996149 131.582801,481.393422 131.196585,481.91042 C130.810368,482.427418 130.61726,483.039653 130.61726,483.747124 C130.61726,484.345754 130.772291,484.832821 131.082352,485.208325 C131.392413,485.583829 131.76775,485.866817 132.208363,486.05729 C132.648976,486.247763 133.22286,486.4464 133.930017,486.653199 C134.52838,486.827346 135.001631,486.987887 135.34977,487.134824 C135.697908,487.28176 135.986211,487.474954 136.214677,487.714406 C136.443143,487.953858 136.557376,488.264057 136.557376,488.645003 C136.557376,489.352474 136.250034,489.904846 135.635352,490.302118 C135.02067,490.699391 134.20744,490.898027 133.195662,490.898027 C132.477626,490.898027 131.781349,490.772859 131.10683,490.522523 C130.432312,490.272187 129.904664,489.940219 129.523887,489.526621 L129.523887,489.526621 L128.936403,490.473544 C129.328059,490.898027 129.907384,491.24632 130.674377,491.518425 C131.44137,491.790529 132.24372,491.926581 133.081429,491.926581 Z M147.474785,491.910255 C148.160183,491.910255 148.785745,491.785087 149.35147,491.534751 C149.917195,491.284415 150.406765,490.930679 150.82018,490.473544 L150.82018,490.473544 L150.542757,491.828624 L151.652449,491.828624 L154.06766,479.714538 L152.909012,479.714538 L151.848277,485.036899 C151.598052,484.438269 151.192797,483.978413 150.632511,483.65733 C150.072226,483.336247 149.389548,483.175705 148.584477,483.175705 C147.670613,483.175705 146.843784,483.39611 146.103989,483.836919 C145.364195,484.277728 144.78487,484.884521 144.366016,485.657297 C143.947162,486.430073 143.737735,487.300807 143.737735,488.269499 C143.737735,489.009623 143.895485,489.65451 144.210986,490.204161 C144.526486,490.753812 144.967099,491.175573 145.532824,491.469446 C146.09855,491.763319 146.74587,491.910255 147.474785,491.910255 Z M147.71957,490.881701 C146.827465,490.881701 146.133908,490.647691 145.638898,490.179671 C145.143888,489.711652 144.896384,489.058601 144.896384,488.22052 C144.896384,487.458628 145.056854,486.770204 145.377794,486.155248 C145.698734,485.540292 146.142067,485.058667 146.707792,484.710374 C147.273518,484.36208 147.909959,484.187933 148.617115,484.187933 C149.50922,484.187933 150.202778,484.424664 150.697787,484.898126 C151.192797,485.371587 151.440302,486.027359 151.440302,486.86544 C151.440302,487.627332 151.279832,488.315756 150.958891,488.930712 C150.637951,489.545668 150.194618,490.024572 149.628893,490.367423 C149.063168,490.710275 148.426727,490.881701 147.71957,490.881701 Z M157.65784,481.36349 C157.918944,481.36349 158.136531,481.276417 158.3106,481.10227 C158.484669,480.928123 158.571704,480.71044 158.571704,480.44922 C158.571704,480.253304 158.495549,480.081879 158.343238,479.934942 C158.190927,479.788006 158.000539,479.714538 157.772073,479.714538 C157.510969,479.714538 157.296102,479.79889 157.127473,479.967595 C156.958843,480.1363 156.874528,480.34582 156.874528,480.596156 C156.874528,480.802955 156.947964,480.982544 157.094835,481.134923 C157.241706,481.287301 157.429374,481.36349 157.65784,481.36349 Z M156.042259,491.828624 L157.739435,483.24101 L156.580786,483.24101 L154.88361,491.828624 L156.042259,491.828624 Z M161.770228,491.910255 C162.923437,491.910255 163.84546,491.673524 164.536298,491.200063 C165.227135,490.726601 165.572554,490.07083 165.572554,489.232748 C165.572554,488.753845 165.442002,488.372898 165.180898,488.08991 C164.919794,487.806921 164.607013,487.602843 164.242556,487.477675 C163.878098,487.352507 163.402127,487.224618 162.814643,487.094008 C162.335953,486.99605 161.957896,486.903535 161.680473,486.816461 C161.40305,486.729388 161.171864,486.598778 160.986916,486.424631 C160.801967,486.250484 160.709493,486.021917 160.709493,485.738928 C160.709493,485.260025 160.927079,484.879078 161.362253,484.59609 C161.797426,484.313101 162.406668,484.171607 163.18998,484.171607 C163.657792,484.171607 164.112004,484.234191 164.552617,484.359359 C164.99323,484.484527 165.376726,484.666837 165.703106,484.906289 L165.703106,484.906289 L166.192676,483.975692 C165.866296,483.73624 165.439282,483.543046 164.911635,483.39611 C164.383987,483.249173 163.84274,483.175705 163.287894,483.175705 C162.156444,483.175705 161.253459,483.417878 160.578941,483.902224 C159.904422,484.38657 159.567163,485.036899 159.567163,485.853212 C159.567163,486.353884 159.697715,486.745714 159.958819,487.028703 C160.219923,487.311691 160.535423,487.518491 160.905321,487.649101 C161.275218,487.779711 161.759348,487.910321 162.357711,488.040931 C162.858161,488.149773 163.238937,488.24773 163.500041,488.334804 C163.761145,488.421877 163.981452,488.547045 164.160961,488.710308 C164.34047,488.87357 164.430224,489.091254 164.430224,489.363358 C164.430224,489.853146 164.209918,490.231371 163.769305,490.498033 C163.328692,490.764696 162.70041,490.898027 161.884461,490.898027 C161.296977,490.898027 160.736691,490.810953 160.203604,490.636807 C159.670516,490.46266 159.240783,490.234092 158.914403,489.951104 L158.914403,489.951104 L158.359557,490.865374 C158.696816,491.170131 159.178227,491.420467 159.803788,491.616382 C160.42935,491.812297 161.08483,491.910255 161.770228,491.910255 Z M169.978684,491.910255 C170.761995,491.910255 171.398436,491.725224 171.888006,491.355162 L171.888006,491.355162 L171.610583,490.473544 C171.218927,490.767417 170.778314,490.914353 170.288744,490.914353 C169.461915,490.914353 169.048501,490.533407 169.048501,489.771515 C169.048501,489.673557 169.070259,489.493968 169.113777,489.232748 L169.113777,489.232748 L170.109236,484.220586 L172.720275,484.220586 L172.916103,483.24101 L170.305063,483.24101 L170.6804,481.36349 L169.521752,481.36349 L169.146415,483.24101 L167.612429,483.24101 L167.43292,484.220586 L168.950587,484.220586 L167.955128,489.281727 C167.91161,489.488526 167.889852,489.711652 167.889852,489.951104 C167.889852,490.560617 168.07752,491.039521 168.452857,491.387815 C168.828194,491.736108 169.336803,491.910255 169.978684,491.910255 Z M175.037573,491.828624 L175.90248,487.469512 C176.109187,486.413747 176.509003,485.619202 177.101926,485.085878 C177.69485,484.552553 178.453683,484.285891 179.378426,484.285891 L179.378426,484.285891 L179.704806,484.302217 L179.916953,483.175705 C179.101003,483.175705 178.404726,483.309036 177.828122,483.575699 C177.251517,483.842361 176.772826,484.253238 176.39205,484.808331 L176.39205,484.808331 L176.685792,483.24101 L175.5761,483.24101 L173.878924,491.828624 L175.037573,491.828624 Z M183.197072,481.36349 C183.458176,481.36349 183.675763,481.276417 183.849832,481.10227 C184.023901,480.928123 184.110936,480.71044 184.110936,480.44922 C184.110936,480.253304 184.034781,480.081879 183.88247,479.934942 C183.730159,479.788006 183.539771,479.714538 183.311305,479.714538 C183.050201,479.714538 182.835334,479.79889 182.666705,479.967595 C182.498075,480.1363 182.41376,480.34582 182.41376,480.596156 C182.41376,480.802955 182.487196,480.982544 182.634067,481.134923 C182.780937,481.287301 182.968606,481.36349 183.197072,481.36349 Z M181.581491,491.828624 L183.278667,483.24101 L182.120018,483.24101 L180.422842,491.828624 L181.581491,491.828624 Z M189.5778,491.910255 C190.502543,491.910255 191.334812,491.689851 192.074607,491.249041 C192.814401,490.808232 193.393726,490.198719 193.81258,489.4205 C194.231434,488.642282 194.440862,487.768827 194.440862,486.800135 C194.440862,486.060011 194.283111,485.417845 193.967611,484.873636 C193.65211,484.329428 193.208777,483.910387 192.637612,483.616514 C192.066447,483.322642 191.416407,483.175705 190.687492,483.175705 C190.023853,483.175705 189.41733,483.29271 188.867924,483.52672 C188.318517,483.76073 187.837107,484.095418 187.423692,484.530785 L187.423692,484.530785 L188.386513,479.714538 L187.227864,479.714538 L184.812653,491.828624 L185.922345,491.828624 L186.297682,489.951104 C186.537027,490.582386 186.936842,491.066732 187.497128,491.404141 C188.057414,491.74155 188.750971,491.910255 189.5778,491.910255 Z M189.561481,490.881701 C188.669376,490.881701 187.975819,490.647691 187.480809,490.179671 C186.985799,489.711652 186.738295,489.058601 186.738295,488.22052 C186.738295,487.447744 186.898765,486.753877 187.219705,486.138922 C187.540645,485.523966 187.981258,485.045062 188.541544,484.702211 C189.101829,484.359359 189.73555,484.187933 190.442707,484.187933 C191.334812,484.187933 192.02837,484.424664 192.523379,484.898126 C193.018389,485.371587 193.265894,486.027359 193.265894,486.86544 C193.265894,487.638217 193.105424,488.329362 192.784483,488.938875 C192.463543,489.548389 192.02293,490.024572 191.462644,490.367423 C190.902359,490.710275 190.268638,490.881701 189.561481,490.881701 Z M199.467113,491.910255 C200.870547,491.910255 201.974799,491.425909 202.77987,490.457218 L202.77987,490.457218 L202.502447,491.828624 L203.612138,491.828624 L205.325633,483.24101 L204.166984,483.24101 L203.253121,487.861342 C203.046413,488.840918 202.643878,489.586484 202.045515,490.09804 C201.447151,490.609596 200.691038,490.865374 199.777174,490.865374 C199.048259,490.865374 198.501572,490.69667 198.137115,490.35926 C197.772657,490.021851 197.590428,489.537505 197.590428,488.906223 C197.590428,488.699424 197.617627,488.443646 197.672023,488.138889 L197.672023,488.138889 L198.651163,483.24101 L197.492514,483.24101 L196.513374,488.138889 C196.448098,488.476298 196.41546,488.797381 196.41546,489.102138 C196.41546,489.983756 196.684724,490.67218 197.223251,491.16741 C197.761778,491.66264 198.509732,491.910255 199.467113,491.910255 Z M209.584892,491.910255 C210.368204,491.910255 211.004645,491.725224 211.494215,491.355162 L211.494215,491.355162 L211.216792,490.473544 C210.825136,490.767417 210.384523,490.914353 209.894953,490.914353 C209.068123,490.914353 208.654709,490.533407 208.654709,489.771515 C208.654709,489.673557 208.676468,489.493968 208.719985,489.232748 L208.719985,489.232748 L209.715444,484.220586 L212.326483,484.220586 L212.522311,483.24101 L209.911272,483.24101 L210.286609,481.36349 L209.12796,481.36349 L208.752623,483.24101 L207.218637,483.24101 L207.039128,484.220586 L208.556795,484.220586 L207.561336,489.281727 C207.517819,489.488526 207.49606,489.711652 207.49606,489.951104 C207.49606,490.560617 207.683728,491.039521 208.059065,491.387815 C208.434402,491.736108 208.943011,491.910255 209.584892,491.910255 Z M216.259362,481.36349 C216.520466,481.36349 216.738053,481.276417 216.912122,481.10227 C217.086191,480.928123 217.173226,480.71044 217.173226,480.44922 C217.173226,480.253304 217.097071,480.081879 216.94476,479.934942 C216.792449,479.788006 216.602061,479.714538 216.373595,479.714538 C216.112491,479.714538 215.897624,479.79889 215.728995,479.967595 C215.560365,480.1363 215.47605,480.34582 215.47605,480.596156 C215.47605,480.802955 215.549486,480.982544 215.696357,481.134923 C215.843228,481.287301 216.030896,481.36349 216.259362,481.36349 Z M214.643781,491.828624 L216.340957,483.24101 L215.182308,483.24101 L213.485132,491.828624 L214.643781,491.828624 Z M221.693588,491.910255 C222.64009,491.910255 223.491398,491.689851 224.247512,491.249041 C225.003625,490.808232 225.593829,490.198719 226.018123,489.4205 C226.442417,488.642282 226.654564,487.768827 226.654564,486.800135 C226.654564,485.689949 226.303705,484.808331 225.601988,484.155281 C224.900271,483.50223 223.95105,483.175705 222.754323,483.175705 C221.807821,483.175705 220.956514,483.39611 220.2004,483.836919 C219.444286,484.277728 218.854083,484.884521 218.429789,485.657297 C218.005495,486.430073 217.793348,487.300807 217.793348,488.269499 C217.793348,488.998738 217.953818,489.638184 218.274758,490.187834 C218.595699,490.737485 219.049911,491.161968 219.637395,491.461283 C220.224878,491.760598 220.910276,491.910255 221.693588,491.910255 Z M221.775183,490.881701 C220.883078,490.881701 220.189521,490.647691 219.694511,490.179671 C219.199501,489.711652 218.951997,489.058601 218.951997,488.22052 C218.951997,487.458628 219.112467,486.770204 219.433407,486.155248 C219.754347,485.540292 220.19768,485.058667 220.763405,484.710374 C221.329131,484.36208 221.965572,484.187933 222.672728,484.187933 C223.564833,484.187933 224.258391,484.424664 224.7534,484.898126 C225.24841,485.371587 225.495915,486.027359 225.495915,486.86544 C225.495915,487.627332 225.335445,488.315756 225.014504,488.930712 C224.693564,489.545668 224.250231,490.024572 223.684506,490.367423 C223.118781,490.710275 222.48234,490.881701 221.775183,490.881701 Z M229.265603,491.828624 L230.179467,487.224618 C230.386175,486.234158 230.78871,485.485871 231.387073,484.979757 C231.985436,484.473643 232.74699,484.220586 233.671733,484.220586 C234.400648,484.220586 234.952774,484.38657 235.328111,484.718537 C235.703448,485.050504 235.891117,485.526687 235.891117,486.147085 C235.891117,486.364768 235.863918,486.625988 235.809522,486.930745 L235.809522,486.930745 L234.830382,491.828624 L235.989031,491.828624 L236.96817,486.947072 C237.033446,486.598778 237.066084,486.272253 237.066084,485.967496 C237.066084,485.096762 236.796821,484.41378 236.258294,483.91855 C235.719767,483.42332 234.966373,483.175705 233.998113,483.175705 C232.57292,483.175705 231.452349,483.654609 230.636399,484.612416 L230.636399,484.612416 L230.913822,483.24101 L229.80413,483.24101 L228.106955,491.828624 L229.265603,491.828624 Z M245.862024,494.995918 C245.405092,493.580976 245.176626,492.160591 245.176626,490.734764 C245.176626,488.797381 245.513886,486.83823 246.188404,484.85731 C246.862923,482.87639 247.776787,481.162133 248.929996,479.714538 L248.929996,479.714538 L247.738709,479.714538 C246.618138,481.085944 245.726033,482.756664 245.062393,484.7267 C244.398754,486.696736 244.066935,488.677655 244.066935,490.669459 C244.066935,491.409583 244.13493,492.163312 244.270922,492.930646 C244.406914,493.697981 244.589143,494.386405 244.817609,494.995918 L244.817609,494.995918 L245.862024,494.995918 Z M251.198337,491.828624 L253.482996,480.400241 L249.599075,480.400241 L249.386928,481.445121 L252.079563,481.445121 L250.00705,491.828624 L251.198337,491.828624 Z M266.995127,484.7267 L267.207274,483.747124 L260.10851,483.747124 L259.912682,484.7267 L266.995127,484.7267 Z M266.260772,488.48174 L266.4566,487.518491 L259.357836,487.518491 L259.162008,488.48174 L266.260772,488.48174 Z M273.78383,491.828624 L274.697694,487.224618 C274.904401,486.234158 275.296057,485.485871 275.872662,484.979757 C276.449266,484.473643 277.178182,484.220586 278.059408,484.220586 C278.766564,484.220586 279.296932,484.38657 279.65051,484.718537 C280.004088,485.050504 280.180877,485.526687 280.180877,486.147085 C280.180877,486.364768 280.153679,486.625988 280.099282,486.930745 L280.099282,486.930745 L279.120142,491.828624 L280.278791,491.828624 L281.225293,487.094008 C281.421121,486.147085 281.807337,485.43145 282.383942,484.947105 C282.960547,484.462759 283.684022,484.220586 284.554369,484.220586 C285.250646,484.220586 285.778294,484.38657 286.137312,484.718537 C286.49633,485.050504 286.675838,485.521245 286.675838,486.130759 C286.675838,486.413747 286.64864,486.680409 286.594243,486.930745 L286.594243,486.930745 L285.615104,491.828624 L286.773752,491.828624 L287.752892,486.947072 C287.829048,486.522589 287.867125,486.185179 287.867125,485.934843 C287.867125,485.064109 287.603302,484.38657 287.075654,483.902224 C286.548006,483.417878 285.800052,483.175705 284.831792,483.175705 C284.070238,483.175705 283.382121,483.319921 282.767438,483.608351 C282.152756,483.896782 281.633268,484.323986 281.208974,484.889963 C281.024026,484.33487 280.689486,483.910387 280.205356,483.616514 C279.721225,483.322642 279.120142,483.175705 278.402106,483.175705 C277.020431,483.175705 275.937938,483.654609 275.154626,484.612416 L275.154626,484.612416 L275.432049,483.24101 L274.322357,483.24101 L272.625181,491.828624 L273.78383,491.828624 Z M293.758284,491.910255 C294.704786,491.910255 295.556093,491.689851 296.312207,491.249041 C297.06832,490.808232 297.658524,490.198719 298.082818,489.4205 C298.507112,488.642282 298.719259,487.768827 298.719259,486.800135 C298.719259,485.689949 298.368401,484.808331 297.666684,484.155281 C296.964967,483.50223 296.015745,483.175705 294.819019,483.175705 C293.872517,483.175705 293.021209,483.39611 292.265095,483.836919 C291.508982,484.277728 290.918778,484.884521 290.494484,485.657297 C290.07019,486.430073 289.858043,487.300807 289.858043,488.269499 C289.858043,488.998738 290.018513,489.638184 290.339454,490.187834 C290.660394,490.737485 291.114606,491.161968 291.70209,491.461283 C292.289574,491.760598 292.974972,491.910255 293.758284,491.910255 Z M293.839879,490.881701 C292.947773,490.881701 292.254216,490.647691 291.759206,490.179671 C291.264197,489.711652 291.016692,489.058601 291.016692,488.22052 C291.016692,487.458628 291.177162,486.770204 291.498102,486.155248 C291.819043,485.540292 292.262375,485.058667 292.828101,484.710374 C293.393826,484.36208 294.030267,484.187933 294.737424,484.187933 C295.629529,484.187933 296.323086,484.424664 296.818096,484.898126 C297.313105,485.371587 297.56061,486.027359 297.56061,486.86544 C297.56061,487.627332 297.40014,488.315756 297.0792,488.930712 C296.758259,489.545668 296.314927,490.024572 295.749201,490.367423 C295.183476,490.710275 294.547035,490.881701 293.839879,490.881701 Z M301.330299,491.828624 L302.195206,487.469512 C302.401913,486.413747 302.801728,485.619202 303.394652,485.085878 C303.987576,484.552553 304.746409,484.285891 305.671152,484.285891 L305.671152,484.285891 L305.997532,484.302217 L306.209679,483.175705 C305.393729,483.175705 304.697452,483.309036 304.120847,483.575699 C303.544243,483.842361 303.065552,484.253238 302.684776,484.808331 L302.684776,484.808331 L302.978518,483.24101 L301.868826,483.24101 L300.17165,491.828624 L301.330299,491.828624 Z M310.632128,491.910255 C311.306646,491.910255 311.945807,491.798692 312.54961,491.575567 C313.153413,491.352441 313.656582,491.039521 314.059117,490.636807 L314.059117,490.636807 L313.536909,489.804167 C313.221409,490.141577 312.816154,490.405518 312.321144,490.595991 C311.826134,490.786464 311.295767,490.881701 310.730042,490.881701 C309.750902,490.881701 309.013827,490.653133 308.518817,490.195998 C308.023808,489.738862 307.776303,489.074928 307.776303,488.204194 C307.776303,488.051815 307.781743,487.937531 307.792622,487.861342 L307.792622,487.861342 L315.005619,487.861342 C315.081774,487.480396 315.119852,487.132103 315.119852,486.816461 C315.119852,485.684507 314.782593,484.794726 314.108074,484.147118 C313.433556,483.499509 312.525131,483.175705 311.382802,483.175705 C310.479817,483.175705 309.666587,483.39611 308.943111,483.836919 C308.219636,484.277728 307.65391,484.884521 307.245936,485.657297 C306.837961,486.430073 306.633973,487.295365 306.633973,488.253172 C306.633973,489.385127 306.990271,490.277629 307.702867,490.930679 C308.415464,491.58373 309.391884,491.910255 310.632128,491.910255 Z M314.026479,486.99605 L307.906855,486.99605 C308.124442,486.125316 308.537856,485.434171 309.147099,484.922615 C309.756341,484.411059 310.490696,484.155281 311.350164,484.155281 C312.166113,484.155281 312.818873,484.375685 313.308443,484.816494 C313.798013,485.257304 314.042798,485.880423 314.042798,486.685851 C314.042798,486.816461 314.037359,486.919861 314.026479,486.99605 L314.026479,486.99605 Z M324.503276,491.910255 C325.188674,491.910255 325.814235,491.785087 326.379961,491.534751 C326.945686,491.284415 327.435256,490.930679 327.848671,490.473544 L327.848671,490.473544 L327.571248,491.828624 L328.680939,491.828624 L331.096151,479.714538 L329.937502,479.714538 L328.876767,485.036899 C328.626543,484.438269 328.221288,483.978413 327.661002,483.65733 C327.100716,483.336247 326.418038,483.175705 325.612968,483.175705 C324.699104,483.175705 323.872275,483.39611 323.13248,483.836919 C322.392686,484.277728 321.813361,484.884521 321.394507,485.657297 C320.975653,486.430073 320.766225,487.300807 320.766225,488.269499 C320.766225,489.009623 320.923976,489.65451 321.239476,490.204161 C321.554977,490.753812 321.99559,491.175573 322.561315,491.469446 C323.12704,491.763319 323.774361,491.910255 324.503276,491.910255 Z M324.748061,490.881701 C323.855956,490.881701 323.162398,490.647691 322.667389,490.179671 C322.172379,489.711652 321.924874,489.058601 321.924874,488.22052 C321.924874,487.458628 322.085344,486.770204 322.406285,486.155248 C322.727225,485.540292 323.170558,485.058667 323.736283,484.710374 C324.302008,484.36208 324.938449,484.187933 325.645606,484.187933 C326.537711,484.187933 327.231268,484.424664 327.726278,484.898126 C328.221288,485.371587 328.468792,486.027359 328.468792,486.86544 C328.468792,487.627332 328.308322,488.315756 327.987382,488.930712 C327.666442,489.545668 327.223109,490.024572 326.657384,490.367423 C326.091658,490.710275 325.455217,490.881701 324.748061,490.881701 Z M335.828661,491.910255 C336.503179,491.910255 337.14234,491.798692 337.746143,491.575567 C338.349946,491.352441 338.853115,491.039521 339.25565,490.636807 L339.25565,490.636807 L338.733442,489.804167 C338.417942,490.141577 338.012686,490.405518 337.517677,490.595991 C337.022667,490.786464 336.4923,490.881701 335.926575,490.881701 C334.947435,490.881701 334.21036,490.653133 333.71535,490.195998 C333.220341,489.738862 332.972836,489.074928 332.972836,488.204194 C332.972836,488.051815 332.978276,487.937531 332.989155,487.861342 L332.989155,487.861342 L340.202152,487.861342 C340.278307,487.480396 340.316385,487.132103 340.316385,486.816461 C340.316385,485.684507 339.979126,484.794726 339.304607,484.147118 C338.630089,483.499509 337.721664,483.175705 336.579334,483.175705 C335.67635,483.175705 334.86312,483.39611 334.139644,483.836919 C333.416169,484.277728 332.850443,484.884521 332.442468,485.657297 C332.034494,486.430073 331.830506,487.295365 331.830506,488.253172 C331.830506,489.385127 332.186804,490.277629 332.8994,490.930679 C333.611997,491.58373 334.588417,491.910255 335.828661,491.910255 Z M339.223012,486.99605 L333.103388,486.99605 C333.320975,486.125316 333.734389,485.434171 334.343632,484.922615 C334.952874,484.411059 335.687229,484.155281 336.546696,484.155281 C337.362646,484.155281 338.015406,484.375685 338.504976,484.816494 C338.994546,485.257304 339.239331,485.880423 339.239331,486.685851 C339.239331,486.816461 339.233891,486.919861 339.223012,486.99605 L339.223012,486.99605 Z M342.290984,494.995918 L343.270124,490.032735 C343.520348,490.642249 343.922884,491.107547 344.47773,491.42863 C345.032575,491.749713 345.717973,491.910255 346.533923,491.910255 C347.458667,491.910255 348.290935,491.689851 349.03073,491.249041 C349.770525,490.808232 350.349849,490.198719 350.768703,489.4205 C351.187558,488.642282 351.396985,487.768827 351.396985,486.800135 C351.396985,486.060011 351.239234,485.417845 350.923734,484.873636 C350.608233,484.329428 350.1649,483.910387 349.593735,483.616514 C349.02257,483.322642 348.37253,483.175705 347.643615,483.175705 C346.958217,483.175705 346.332656,483.298152 345.76693,483.543046 C345.201205,483.78794 344.711635,484.144397 344.298221,484.612416 L344.298221,484.612416 L344.575644,483.24101 L343.465952,483.24101 L341.132335,494.995918 L342.290984,494.995918 Z M346.517604,490.881701 C345.625499,490.881701 344.931942,490.647691 344.436932,490.179671 C343.941922,489.711652 343.694418,489.058601 343.694418,488.22052 C343.694418,487.447744 343.854888,486.753877 344.175828,486.138922 C344.496768,485.523966 344.937381,485.045062 345.497667,484.702211 C346.057953,484.359359 346.691674,484.187933 347.39883,484.187933 C348.290935,484.187933 348.984493,484.424664 349.479502,484.898126 C349.974512,485.371587 350.222017,486.027359 350.222017,486.86544 C350.222017,487.638217 350.061547,488.329362 349.740606,488.938875 C349.419666,489.548389 348.979053,490.024572 348.418768,490.367423 C347.858482,490.710275 347.224761,490.881701 346.517604,490.881701 Z M353.991705,491.828624 L354.856612,487.469512 C355.06332,486.413747 355.463135,485.619202 356.056059,485.085878 C356.648982,484.552553 357.407816,484.285891 358.332559,484.285891 L358.332559,484.285891 L358.658939,484.302217 L358.871086,483.175705 C358.055136,483.175705 357.358859,483.309036 356.782254,483.575699 C356.205649,483.842361 355.726959,484.253238 355.346182,484.808331 L355.346182,484.808331 L355.639924,483.24101 L354.530232,483.24101 L352.833057,491.828624 L353.991705,491.828624 Z M362.151204,481.36349 C362.412308,481.36349 362.629895,481.276417 362.803964,481.10227 C362.978034,480.928123 363.065068,480.71044 363.065068,480.44922 C363.065068,480.253304 362.988913,480.081879 362.836602,479.934942 C362.684292,479.788006 362.493903,479.714538 362.265437,479.714538 C362.004333,479.714538 361.789467,479.79889 361.620837,479.967595 C361.452207,480.1363 361.367892,480.34582 361.367892,480.596156 C361.367892,480.802955 361.441328,480.982544 361.588199,481.134923 C361.73507,481.287301 361.922738,481.36349 362.151204,481.36349 Z M360.535624,491.828624 L362.232799,483.24101 L361.074151,483.24101 L359.376975,491.828624 L360.535624,491.828624 Z M367.177456,491.828624 L372.693277,483.24101 L371.485671,483.24101 L366.802119,490.571502 L365.023348,483.24101 L363.864699,483.24101 L365.986169,491.828624 L367.177456,491.828624 Z M376.528242,491.910255 C377.20276,491.910255 377.841921,491.798692 378.445724,491.575567 C379.049527,491.352441 379.552696,491.039521 379.955231,490.636807 L379.955231,490.636807 L379.433023,489.804167 C379.117523,490.141577 378.712268,490.405518 378.217258,490.595991 C377.722248,490.786464 377.191881,490.881701 376.626156,490.881701 C375.647016,490.881701 374.909941,490.653133 374.414931,490.195998 C373.919922,489.738862 373.672417,489.074928 373.672417,488.204194 C373.672417,488.051815 373.677857,487.937531 373.688736,487.861342 L373.688736,487.861342 L380.901733,487.861342 C380.977888,487.480396 381.015966,487.132103 381.015966,486.816461 C381.015966,485.684507 380.678707,484.794726 380.004188,484.147118 C379.32967,483.499509 378.421245,483.175705 377.278916,483.175705 C376.375931,483.175705 375.562701,483.39611 374.839225,483.836919 C374.11575,484.277728 373.550025,484.884521 373.14205,485.657297 C372.734075,486.430073 372.530087,487.295365 372.530087,488.253172 C372.530087,489.385127 372.886385,490.277629 373.598982,490.930679 C374.311578,491.58373 375.287998,491.910255 376.528242,491.910255 Z M379.922593,486.99605 L373.802969,486.99605 C374.020556,486.125316 374.43397,485.434171 375.043213,484.922615 C375.652455,484.411059 376.38681,484.155281 377.246278,484.155281 C378.062227,484.155281 378.714987,484.375685 379.204557,484.816494 C379.694127,485.257304 379.938912,485.880423 379.938912,486.685851 C379.938912,486.816461 379.933473,486.919861 379.922593,486.99605 L379.922593,486.99605 Z M386.123813,491.910255 C386.80921,491.910255 387.434772,491.785087 388.000497,491.534751 C388.566223,491.284415 389.055792,490.930679 389.469207,490.473544 L389.469207,490.473544 L389.191784,491.828624 L390.301476,491.828624 L392.716688,479.714538 L391.558039,479.714538 L390.497304,485.036899 C390.247079,484.438269 389.841824,483.978413 389.281539,483.65733 C388.721253,483.336247 388.038575,483.175705 387.233504,483.175705 C386.31964,483.175705 385.492811,483.39611 384.753017,483.836919 C384.013222,484.277728 383.433898,484.884521 383.015043,485.657297 C382.596189,486.430073 382.386762,487.300807 382.386762,488.269499 C382.386762,489.009623 382.544512,489.65451 382.860013,490.204161 C383.175514,490.753812 383.616126,491.175573 384.181852,491.469446 C384.747577,491.763319 385.394897,491.910255 386.123813,491.910255 Z M386.368597,490.881701 C385.476492,490.881701 384.782935,490.647691 384.287925,490.179671 C383.792916,489.711652 383.545411,489.058601 383.545411,488.22052 C383.545411,487.458628 383.705881,486.770204 384.026821,486.155248 C384.347762,485.540292 384.791094,485.058667 385.35682,484.710374 C385.922545,484.36208 386.558986,484.187933 387.266142,484.187933 C388.158248,484.187933 388.851805,484.424664 389.346815,484.898126 C389.841824,485.371587 390.089329,486.027359 390.089329,486.86544 C390.089329,487.627332 389.928859,488.315756 389.607919,488.930712 C389.286978,489.545668 388.843646,490.024572 388.27792,490.367423 C387.712195,490.710275 387.075754,490.881701 386.368597,490.881701 Z M395.164537,484.955268 C395.403883,484.955268 395.61331,484.865473 395.792819,484.685884 C395.972328,484.506296 396.062082,484.285891 396.062082,484.024671 C396.062082,483.785219 395.983207,483.583862 395.825457,483.420599 C395.667707,483.257337 395.469159,483.175705 395.229813,483.175705 C394.979589,483.175705 394.764722,483.2655 394.585213,483.445089 C394.405704,483.624677 394.31595,483.845082 394.31595,484.106302 C394.31595,484.345754 394.397545,484.547111 394.560734,484.710374 C394.723924,484.873636 394.925192,484.955268 395.164537,484.955268 Z M393.124663,494.212258 L394.364907,491.84495 C394.4737,491.649035 394.552575,491.491214 394.601532,491.371488 C394.650489,491.251762 394.674967,491.121152 394.674967,490.979658 C394.674967,490.740206 394.596092,490.538849 394.438342,490.375586 C394.280592,490.212324 394.082044,490.130693 393.842699,490.130693 C393.592474,490.130693 393.377607,490.220487 393.198098,490.400076 C393.018589,490.579665 392.928835,490.800069 392.928835,491.061289 C392.928835,491.224552 392.969632,491.374209 393.051227,491.510262 C393.132822,491.646314 393.244335,491.746992 393.385767,491.812297 L393.385767,491.812297 L392.341351,494.212258 L393.124663,494.212258 Z M403.666735,491.828624 L405.951395,480.400241 L402.067474,480.400241 L401.855327,481.445121 L404.547961,481.445121 L402.475449,491.828624 L403.666735,491.828624 Z M411.075561,491.926581 C412.207011,491.926581 413.20791,491.578288 414.078256,490.881701 C414.948603,490.185113 415.617682,489.26268 416.085493,488.114399 C416.553304,486.966119 416.78721,485.738928 416.78721,484.432827 C416.78721,483.137611 416.45811,482.125382 415.79991,481.396143 C415.141711,480.666903 414.230567,480.302283 413.066478,480.302283 C411.935028,480.302283 410.934129,480.650577 410.063783,481.347164 C409.193436,482.043751 408.524357,482.966185 408.056546,484.114465 C407.588735,485.262746 407.354829,486.489936 407.354829,487.796037 C407.354829,489.091254 407.683929,490.103482 408.342128,490.832722 C409.000328,491.561961 409.911472,491.926581 411.075561,491.926581 Z M411.173474,490.849048 C410.346645,490.849048 409.702045,490.585107 409.239673,490.057224 C408.777302,489.529342 408.546116,488.770171 408.546116,487.779711 C408.546116,486.767483 408.722905,485.766139 409.076483,484.775679 C409.430062,483.785219 409.94411,482.971627 410.618629,482.334903 C411.293147,481.698179 412.076459,481.379816 412.968564,481.379816 C413.795394,481.379816 414.439994,481.643758 414.902366,482.17164 C415.364737,482.699523 415.595923,483.458694 415.595923,484.449154 C415.595923,485.461382 415.419134,486.462726 415.065556,487.453186 C414.711977,488.443646 414.197929,489.257238 413.52341,489.893962 C412.848892,490.530686 412.06558,490.849048 411.173474,490.849048 Z M421.878737,491.926581 C423.010188,491.926581 424.011086,491.578288 424.881433,490.881701 C425.751779,490.185113 426.420858,489.26268 426.88867,488.114399 C427.356481,486.966119 427.590387,485.738928 427.590387,484.432827 C427.590387,483.137611 427.261287,482.125382 426.603087,481.396143 C425.944888,480.666903 425.033743,480.302283 423.869655,480.302283 C422.738204,480.302283 421.737306,480.650577 420.866959,481.347164 C419.996613,482.043751 419.327534,482.966185 418.859723,484.114465 C418.391911,485.262746 418.158006,486.489936 418.158006,487.796037 C418.158006,489.091254 418.487105,490.103482 419.145305,490.832722 C419.803505,491.561961 420.714649,491.926581 421.878737,491.926581 Z M421.976651,490.849048 C421.149822,490.849048 420.505222,490.585107 420.04285,490.057224 C419.580478,489.529342 419.349293,488.770171 419.349293,487.779711 C419.349293,486.767483 419.526082,485.766139 419.87966,484.775679 C420.233238,483.785219 420.747287,482.971627 421.421805,482.334903 C422.096324,481.698179 422.879636,481.379816 423.771741,481.379816 C424.59857,481.379816 425.243171,481.643758 425.705542,482.17164 C426.167914,482.699523 426.3991,483.458694 426.3991,484.449154 C426.3991,485.461382 426.222311,486.462726 425.868732,487.453186 C425.515154,488.443646 425.001106,489.257238 424.326587,489.893962 C423.652068,490.530686 422.868756,490.849048 421.976651,490.849048 Z M441.069879,484.7267 L441.282026,483.747124 L434.183262,483.747124 L433.987434,484.7267 L441.069879,484.7267 Z M440.335524,488.48174 L440.531352,487.518491 L433.432588,487.518491 L433.23676,488.48174 L440.335524,488.48174 Z M447.858582,491.828624 L450.273794,479.714538 L449.115145,479.714538 L446.699933,491.828624 L447.858582,491.828624 Z M455.006303,491.910255 C455.680822,491.910255 456.319983,491.798692 456.923785,491.575567 C457.527588,491.352441 458.030758,491.039521 458.433293,490.636807 L458.433293,490.636807 L457.911085,489.804167 C457.595584,490.141577 457.190329,490.405518 456.69532,490.595991 C456.20031,490.786464 455.669942,490.881701 455.104217,490.881701 C454.125077,490.881701 453.388003,490.653133 452.892993,490.195998 C452.397983,489.738862 452.150479,489.074928 452.150479,488.204194 C452.150479,488.051815 452.155918,487.937531 452.166798,487.861342 L452.166798,487.861342 L459.379795,487.861342 C459.45595,487.480396 459.494028,487.132103 459.494028,486.816461 C459.494028,485.684507 459.156768,484.794726 458.48225,484.147118 C457.807731,483.499509 456.899307,483.175705 455.756977,483.175705 C454.853993,483.175705 454.040763,483.39611 453.317287,483.836919 C452.593811,484.277728 452.028086,484.884521 451.620111,485.657297 C451.212136,486.430073 451.008149,487.295365 451.008149,488.253172 C451.008149,489.385127 451.364447,490.277629 452.077043,490.930679 C452.789639,491.58373 453.766059,491.910255 455.006303,491.910255 Z M458.400655,486.99605 L452.281031,486.99605 C452.498617,486.125316 452.912032,485.434171 453.521274,484.922615 C454.130517,484.411059 454.864872,484.155281 455.724339,484.155281 C456.540289,484.155281 457.193049,484.375685 457.682619,484.816494 C458.172189,485.257304 458.416974,485.880423 458.416974,486.685851 C458.416974,486.816461 458.411534,486.919861 458.400655,486.99605 L458.400655,486.99605 Z M464.601874,491.910255 C465.287272,491.910255 465.912834,491.785087 466.478559,491.534751 C467.044284,491.284415 467.533854,490.930679 467.947269,490.473544 L467.947269,490.473544 L467.669846,491.828624 L468.779538,491.828624 L470.493032,483.24101 L469.334383,483.24101 L468.975366,485.036899 C468.725141,484.438269 468.322606,483.978413 467.76776,483.65733 C467.212914,483.336247 466.527516,483.175705 465.711566,483.175705 C464.797702,483.175705 463.970873,483.39611 463.231078,483.836919 C462.491284,484.277728 461.911959,484.884521 461.493105,485.657297 C461.074251,486.430073 460.864824,487.300807 460.864824,488.269499 C460.864824,489.009623 461.022574,489.65451 461.338074,490.204161 C461.653575,490.753812 462.094188,491.175573 462.659913,491.469446 C463.225639,491.763319 463.872959,491.910255 464.601874,491.910255 Z M464.846659,490.881701 C463.954554,490.881701 463.260996,490.647691 462.765987,490.179671 C462.270977,489.711652 462.023472,489.058601 462.023472,488.22052 C462.023472,487.458628 462.183943,486.770204 462.504883,486.155248 C462.825823,485.540292 463.269156,485.058667 463.834881,484.710374 C464.400606,484.36208 465.037047,484.187933 465.744204,484.187933 C466.636309,484.187933 467.329867,484.424664 467.824876,484.898126 C468.319886,485.371587 468.567391,486.027359 468.567391,486.86544 C468.567391,487.627332 468.40692,488.315756 468.08598,488.930712 C467.76504,489.545668 467.321707,490.024572 466.755982,490.367423 C466.190257,490.710275 465.553816,490.881701 464.846659,490.881701 Z M474.507506,491.910255 C475.660715,491.910255 476.582738,491.673524 477.273576,491.200063 C477.964414,490.726601 478.309832,490.07083 478.309832,489.232748 C478.309832,488.753845 478.17928,488.372898 477.918176,488.08991 C477.657072,487.806921 477.344292,487.602843 476.979834,487.477675 C476.615376,487.352507 476.139406,487.224618 475.551922,487.094008 C475.073231,486.99605 474.695174,486.903535 474.417751,486.816461 C474.140328,486.729388 473.909143,486.598778 473.724194,486.424631 C473.539245,486.250484 473.446771,486.021917 473.446771,485.738928 C473.446771,485.260025 473.664358,484.879078 474.099531,484.59609 C474.534704,484.313101 475.143947,484.171607 475.927259,484.171607 C476.39507,484.171607 476.849282,484.234191 477.289895,484.359359 C477.730508,484.484527 478.114004,484.666837 478.440384,484.906289 L478.440384,484.906289 L478.929954,483.975692 C478.603574,483.73624 478.176561,483.543046 477.648913,483.39611 C477.121265,483.249173 476.580019,483.175705 476.025173,483.175705 C474.893722,483.175705 473.990738,483.417878 473.316219,483.902224 C472.6417,484.38657 472.304441,485.036899 472.304441,485.853212 C472.304441,486.353884 472.434993,486.745714 472.696097,487.028703 C472.957201,487.311691 473.272702,487.518491 473.642599,487.649101 C474.012496,487.779711 474.496627,487.910321 475.09499,488.040931 C475.595439,488.149773 475.976216,488.24773 476.23732,488.334804 C476.498424,488.421877 476.71873,488.547045 476.898239,488.710308 C477.077748,488.87357 477.167503,489.091254 477.167503,489.363358 C477.167503,489.853146 476.947196,490.231371 476.506583,490.498033 C476.06597,490.764696 475.437689,490.898027 474.621739,490.898027 C474.034255,490.898027 473.473969,490.810953 472.940882,490.636807 C472.407795,490.46266 471.978061,490.234092 471.651681,489.951104 L471.651681,489.951104 L471.096835,490.865374 C471.434095,491.170131 471.915505,491.420467 472.541067,491.616382 C473.166628,491.812297 473.822108,491.910255 474.507506,491.910255 Z M482.715962,491.910255 C483.499274,491.910255 484.135715,491.725224 484.625285,491.355162 L484.625285,491.355162 L484.347862,490.473544 C483.956206,490.767417 483.515593,490.914353 483.026023,490.914353 C482.199194,490.914353 481.785779,490.533407 481.785779,489.771515 C481.785779,489.673557 481.807538,489.493968 481.851055,489.232748 L481.851055,489.232748 L482.846514,484.220586 L485.457554,484.220586 L485.653382,483.24101 L483.042342,483.24101 L483.417679,481.36349 L482.25903,481.36349 L481.883693,483.24101 L480.349707,483.24101 L480.170198,484.220586 L481.687865,484.220586 L480.692406,489.281727 C480.648889,489.488526 480.62713,489.711652 480.62713,489.951104 C480.62713,490.560617 480.814799,491.039521 481.190136,491.387815 C481.565473,491.736108 482.074081,491.910255 482.715962,491.910255 Z M494.547235,491.910255 C495.232633,491.910255 495.858195,491.785087 496.42392,491.534751 C496.989646,491.284415 497.479215,490.930679 497.89263,490.473544 L497.89263,490.473544 L497.615207,491.828624 L498.724899,491.828624 L501.140111,479.714538 L499.981462,479.714538 L498.920727,485.036899 C498.670502,484.438269 498.265247,483.978413 497.704962,483.65733 C497.144676,483.336247 496.461998,483.175705 495.656927,483.175705 C494.743063,483.175705 493.916234,483.39611 493.17644,483.836919 C492.436645,484.277728 491.857321,484.884521 491.438466,485.657297 C491.019612,486.430073 490.810185,487.300807 490.810185,488.269499 C490.810185,489.009623 490.967935,489.65451 491.283436,490.204161 C491.598936,490.753812 492.039549,491.175573 492.605275,491.469446 C493.171,491.763319 493.81832,491.910255 494.547235,491.910255 Z M494.79202,490.881701 C493.899915,490.881701 493.206358,490.647691 492.711348,490.179671 C492.216339,489.711652 491.968834,489.058601 491.968834,488.22052 C491.968834,487.458628 492.129304,486.770204 492.450244,486.155248 C492.771185,485.540292 493.214517,485.058667 493.780243,484.710374 C494.345968,484.36208 494.982409,484.187933 495.689565,484.187933 C496.581671,484.187933 497.275228,484.424664 497.770238,484.898126 C498.265247,485.371587 498.512752,486.027359 498.512752,486.86544 C498.512752,487.627332 498.352282,488.315756 498.031342,488.930712 C497.710401,489.545668 497.267068,490.024572 496.701343,490.367423 C496.135618,490.710275 495.499177,490.881701 494.79202,490.881701 Z M505.87262,491.910255 C506.547139,491.910255 507.186299,491.798692 507.790102,491.575567 C508.393905,491.352441 508.897074,491.039521 509.29961,490.636807 L509.29961,490.636807 L508.777402,489.804167 C508.461901,490.141577 508.056646,490.405518 507.561636,490.595991 C507.066627,490.786464 506.536259,490.881701 505.970534,490.881701 C504.991394,490.881701 504.254319,490.653133 503.75931,490.195998 C503.2643,489.738862 503.016795,489.074928 503.016795,488.204194 C503.016795,488.051815 503.022235,487.937531 503.033114,487.861342 L503.033114,487.861342 L510.246112,487.861342 C510.322267,487.480396 510.360345,487.132103 510.360345,486.816461 C510.360345,485.684507 510.023085,484.794726 509.348567,484.147118 C508.674048,483.499509 507.765624,483.175705 506.623294,483.175705 C505.720309,483.175705 504.907079,483.39611 504.183604,483.836919 C503.460128,484.277728 502.894403,484.884521 502.486428,485.657297 C502.078453,486.430073 501.874466,487.295365 501.874466,488.253172 C501.874466,489.385127 502.230764,490.277629 502.94336,490.930679 C503.655956,491.58373 504.632376,491.910255 505.87262,491.910255 Z M509.266972,486.99605 L503.147347,486.99605 C503.364934,486.125316 503.778349,485.434171 504.387591,484.922615 C504.996834,484.411059 505.731189,484.155281 506.590656,484.155281 C507.406606,484.155281 508.059366,484.375685 508.548936,484.816494 C509.038506,485.257304 509.283291,485.880423 509.283291,486.685851 C509.283291,486.816461 509.277851,486.919861 509.266972,486.99605 L509.266972,486.99605 Z M512.334943,494.995918 L513.314083,490.032735 C513.564308,490.642249 513.966843,491.107547 514.521689,491.42863 C515.076535,491.749713 515.761933,491.910255 516.577883,491.910255 C517.502626,491.910255 518.334895,491.689851 519.07469,491.249041 C519.814484,490.808232 520.393809,490.198719 520.812663,489.4205 C521.231517,488.642282 521.440944,487.768827 521.440944,486.800135 C521.440944,486.060011 521.283194,485.417845 520.967693,484.873636 C520.652193,484.329428 520.20886,483.910387 519.637695,483.616514 C519.06653,483.322642 518.41649,483.175705 517.687575,483.175705 C517.002177,483.175705 516.376615,483.298152 515.81089,483.543046 C515.245165,483.78794 514.755595,484.144397 514.34218,484.612416 L514.34218,484.612416 L514.619603,483.24101 L513.509911,483.24101 L511.176294,494.995918 L512.334943,494.995918 Z M516.561564,490.881701 C515.669459,490.881701 514.975901,490.647691 514.480892,490.179671 C513.985882,489.711652 513.738377,489.058601 513.738377,488.22052 C513.738377,487.447744 513.898847,486.753877 514.219788,486.138922 C514.540728,485.523966 514.981341,485.045062 515.541626,484.702211 C516.101912,484.359359 516.735633,484.187933 517.44279,484.187933 C518.334895,484.187933 519.028452,484.424664 519.523462,484.898126 C520.018472,485.371587 520.265976,486.027359 520.265976,486.86544 C520.265976,487.638217 520.105506,488.329362 519.784566,488.938875 C519.463626,489.548389 519.023013,490.024572 518.462727,490.367423 C517.902441,490.710275 517.26872,490.881701 516.561564,490.881701 Z M524.035665,491.828624 L524.900572,487.469512 C525.107279,486.413747 525.507095,485.619202 526.100018,485.085878 C526.692942,484.552553 527.451775,484.285891 528.376518,484.285891 L528.376518,484.285891 L528.702898,484.302217 L528.915045,483.175705 C528.099095,483.175705 527.402818,483.309036 526.826214,483.575699 C526.249609,483.842361 525.770918,484.253238 525.390142,484.808331 L525.390142,484.808331 L525.683884,483.24101 L524.574192,483.24101 L522.877016,491.828624 L524.035665,491.828624 Z M532.195164,481.36349 C532.456268,481.36349 532.673855,481.276417 532.847924,481.10227 C533.021993,480.928123 533.109028,480.71044 533.109028,480.44922 C533.109028,480.253304 533.032872,480.081879 532.880562,479.934942 C532.728251,479.788006 532.537863,479.714538 532.309397,479.714538 C532.048293,479.714538 531.833426,479.79889 531.664796,479.967595 C531.496167,480.1363 531.411852,480.34582 531.411852,480.596156 C531.411852,480.802955 531.485288,480.982544 531.632158,481.134923 C531.779029,481.287301 531.966698,481.36349 532.195164,481.36349 Z M530.579583,491.828624 L532.276759,483.24101 L531.11811,483.24101 L529.420934,491.828624 L530.579583,491.828624 Z M537.221415,491.828624 L542.737237,483.24101 L541.529631,483.24101 L536.846078,490.571502 L535.067308,483.24101 L533.908659,483.24101 L536.030128,491.828624 L537.221415,491.828624 Z M546.572201,491.910255 C547.24672,491.910255 547.885881,491.798692 548.489683,491.575567 C549.093486,491.352441 549.596656,491.039521 549.999191,490.636807 L549.999191,490.636807 L549.476983,489.804167 C549.161482,490.141577 548.756227,490.405518 548.261217,490.595991 C547.766208,490.786464 547.23584,490.881701 546.670115,490.881701 C545.690975,490.881701 544.953901,490.653133 544.458891,490.195998 C543.963881,489.738862 543.716377,489.074928 543.716377,488.204194 C543.716377,488.051815 543.721816,487.937531 543.732696,487.861342 L543.732696,487.861342 L550.945693,487.861342 C551.021848,487.480396 551.059926,487.132103 551.059926,486.816461 C551.059926,485.684507 550.722666,484.794726 550.048148,484.147118 C549.373629,483.499509 548.465205,483.175705 547.322875,483.175705 C546.419891,483.175705 545.60666,483.39611 544.883185,483.836919 C544.159709,484.277728 543.593984,484.884521 543.186009,485.657297 C542.778034,486.430073 542.574047,487.295365 542.574047,488.253172 C542.574047,489.385127 542.930345,490.277629 543.642941,490.930679 C544.355537,491.58373 545.331957,491.910255 546.572201,491.910255 Z M549.966553,486.99605 L543.846929,486.99605 C544.064515,486.125316 544.47793,485.434171 545.087172,484.922615 C545.696415,484.411059 546.43077,484.155281 547.290237,484.155281 C548.106187,484.155281 548.758947,484.375685 549.248517,484.816494 C549.738087,485.257304 549.982872,485.880423 549.982872,486.685851 C549.982872,486.816461 549.977432,486.919861 549.966553,486.99605 L549.966553,486.99605 Z M556.167772,491.910255 C556.85317,491.910255 557.478732,491.785087 558.044457,491.534751 C558.610182,491.284415 559.099752,490.930679 559.513167,490.473544 L559.513167,490.473544 L559.235744,491.828624 L560.345436,491.828624 L562.760647,479.714538 L561.601998,479.714538 L560.541264,485.036899 C560.291039,484.438269 559.885784,483.978413 559.325498,483.65733 C558.765213,483.336247 558.082534,483.175705 557.277464,483.175705 C556.3636,483.175705 555.536771,483.39611 554.796976,483.836919 C554.057182,484.277728 553.477857,484.884521 553.059003,485.657297 C552.640149,486.430073 552.430721,487.300807 552.430721,488.269499 C552.430721,489.009623 552.588472,489.65451 552.903972,490.204161 C553.219473,490.753812 553.660086,491.175573 554.225811,491.469446 C554.791537,491.763319 555.438857,491.910255 556.167772,491.910255 Z M556.412557,490.881701 C555.520452,490.881701 554.826894,490.647691 554.331885,490.179671 C553.836875,489.711652 553.58937,489.058601 553.58937,488.22052 C553.58937,487.458628 553.749841,486.770204 554.070781,486.155248 C554.391721,485.540292 554.835054,485.058667 555.400779,484.710374 C555.966504,484.36208 556.602945,484.187933 557.310102,484.187933 C558.202207,484.187933 558.895765,484.424664 559.390774,484.898126 C559.885784,485.371587 560.133289,486.027359 560.133289,486.86544 C560.133289,487.627332 559.972818,488.315756 559.651878,488.930712 C559.330938,489.545668 558.887605,490.024572 558.32188,490.367423 C557.756155,490.710275 557.119714,490.881701 556.412557,490.881701 Z M563.968253,494.995918 C565.088824,493.624512 565.98093,491.953792 566.644569,489.983756 C567.308208,488.013721 567.640028,486.032801 567.640028,484.040997 C567.640028,483.300873 567.572032,482.547144 567.43604,481.77981 C567.300049,481.012476 567.11782,480.324052 566.889354,479.714538 L566.889354,479.714538 L565.844938,479.714538 C566.30187,481.12948 566.530336,482.549865 566.530336,483.975692 C566.530336,485.913075 566.193077,487.872226 565.518558,489.853146 C564.844039,491.834066 563.930175,493.548323 562.776966,494.995918 L562.776966,494.995918 L563.968253,494.995918 Z\",\"id\":\"PercentileofSESdistribution(1=moredeprived;100=leastdeprived)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"-2.57485516e-13\",\"y1\":\"15.0563481\",\"x2\":\"30.8099777\",\"y2\":\"15.0563481\",\"id\":\"Line-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":2})]),React.createElement(\"path\",{\"d\":\"M109.897511,436.898876 L109.897511,425.101124 L106,425.101124 L106,426.179775 L108.713457,426.179775 L108.713457,436.898876 L109.897511,436.898876 Z M117.232068,437 C118.120109,437 118.912219,436.758427 119.608399,436.275281 C120.304579,435.792135 120.850011,435.098315 121.244696,434.19382 C121.63938,433.289326 121.836723,432.224719 121.836723,431 C121.836723,429.775281 121.63938,428.710674 121.244696,427.80618 C120.850011,426.901685 120.304579,426.207865 119.608399,425.724719 C118.912219,425.241573 118.120109,425 117.232068,425 C116.344028,425 115.551917,425.241573 114.855737,425.724719 C114.159558,426.207865 113.616866,426.901685 113.227663,427.80618 C112.83846,428.710674 112.643859,429.775281 112.643859,431 C112.643859,432.224719 112.83846,433.289326 113.227663,434.19382 C113.616866,435.098315 114.159558,435.792135 114.855737,436.275281 C115.551917,436.758427 116.344028,437 117.232068,437 Z M117.232068,435.88764 C116.563297,435.88764 115.974011,435.696629 115.46421,435.314607 C114.954409,434.932584 114.556983,434.376404 114.271933,433.646067 C113.986883,432.91573 113.844358,432.033708 113.844358,431 C113.844358,429.966292 113.986883,429.08427 114.271933,428.353933 C114.556983,427.623596 114.954409,427.067416 115.46421,426.685393 C115.974011,426.303371 116.563297,426.11236 117.232068,426.11236 C117.900839,426.11236 118.490126,426.303371 118.999927,426.685393 C119.509728,427.067416 119.907153,427.623596 120.192203,428.353933 C120.477253,429.08427 120.619778,429.966292 120.619778,431 C120.619778,432.033708 120.477253,432.91573 120.192203,433.646067 C119.907153,434.376404 119.509728,434.932584 118.999927,435.314607 C118.490126,435.696629 117.900839,435.88764 117.232068,435.88764 Z M125.553337,432.106039 C126.224849,432.106039 126.771652,431.850421 127.193745,431.339185 C127.615838,430.827949 127.826885,430.149579 127.826885,429.304073 C127.826885,428.458567 127.615838,427.780197 127.193745,427.268961 C126.771652,426.757725 126.224849,426.502107 125.553337,426.502107 C124.872232,426.502107 124.323031,426.760183 123.905734,427.276334 C123.488437,427.792486 123.279789,428.468399 123.279789,429.304073 C123.279789,430.139747 123.488437,430.81566 123.905734,431.331812 C124.323031,431.847963 124.872232,432.106039 125.553337,432.106039 Z M125.625284,436.898876 L132.503487,426.575843 L131.654504,426.575843 L124.776301,436.898876 L125.625284,436.898876 Z M125.553337,431.442416 C125.073685,431.442416 124.694761,431.250702 124.416563,430.867275 C124.138365,430.483848 123.999266,429.962781 123.999266,429.304073 C123.999266,428.645365 124.138365,428.124298 124.416563,427.740871 C124.694761,427.357444 125.073685,427.16573 125.553337,427.16573 C126.023395,427.16573 126.399922,427.354986 126.682916,427.733497 C126.96591,428.112008 127.107408,428.635534 127.107408,429.304073 C127.107408,429.972612 126.96591,430.496138 126.682916,430.874649 C126.399922,431.25316 126.023395,431.442416 125.553337,431.442416 Z M131.726452,436.972612 C132.407557,436.972612 132.956758,436.714537 133.374055,436.198385 C133.791352,435.682233 134,435.00632 134,434.170646 C134,433.334972 133.791352,432.659059 133.374055,432.142907 C132.956758,431.626756 132.407557,431.36868 131.726452,431.36868 C131.05494,431.36868 130.508137,431.626756 130.086044,432.142907 C129.66395,432.659059 129.452904,433.334972 129.452904,434.170646 C129.452904,435.00632 129.66395,435.682233 130.086044,436.198385 C130.508137,436.714537 131.05494,436.972612 131.726452,436.972612 Z M131.726452,436.308989 C131.256393,436.308989 130.879867,436.119733 130.596872,435.741222 C130.313878,435.362711 130.172381,434.839185 130.172381,434.170646 C130.172381,433.502107 130.313878,432.978581 130.596872,432.60007 C130.879867,432.221559 131.256393,432.032303 131.726452,432.032303 C132.206103,432.032303 132.585028,432.224017 132.863226,432.607444 C133.141424,432.990871 133.280523,433.511938 133.280523,434.170646 C133.280523,434.829354 133.141424,435.350421 132.863226,435.733848 C132.585028,436.117275 132.206103,436.308989 131.726452,436.308989 Z\",\"id\":\"10%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M222.350937,436.898876 L222.350937,435.820225 L216.071424,435.820225 L219.953305,431.876404 C220.681837,431.146067 221.176587,430.5 221.437553,429.938202 C221.69852,429.376404 221.829004,428.792135 221.829004,428.185393 C221.829004,427.196629 221.489203,426.418539 220.809602,425.851124 C220.130001,425.283708 219.208462,425 218.044985,425 C217.175096,425 216.394914,425.146067 215.704439,425.438202 C215.013965,425.730337 214.445818,426.146067 214,426.685393 L214,426.685393 L214.831832,427.426966 C215.571238,426.550562 216.609668,426.11236 217.947123,426.11236 C218.806138,426.11236 219.466711,426.30618 219.928839,426.69382 C220.390968,427.081461 220.622032,427.623596 220.622032,428.320225 C220.622032,428.769663 220.516014,429.216292 220.303979,429.660112 C220.091943,430.103933 219.686901,430.629213 219.088852,431.235955 L219.088852,431.235955 L214.342519,436.039326 L214.342519,436.898876 L222.350937,436.898876 Z M228.369484,437 C229.250247,437 230.035865,436.758427 230.72634,436.275281 C231.416815,435.792135 231.957777,435.098315 232.349227,434.19382 C232.740677,433.289326 232.936402,432.224719 232.936402,431 C232.936402,429.775281 232.740677,428.710674 232.349227,427.80618 C231.957777,426.901685 231.416815,426.207865 230.72634,425.724719 C230.035865,425.241573 229.250247,425 228.369484,425 C227.488721,425 226.703102,425.241573 226.012627,425.724719 C225.322153,426.207865 224.783909,426.901685 224.397895,427.80618 C224.011882,428.710674 223.818875,429.775281 223.818875,431 C223.818875,432.224719 224.011882,433.289326 224.397895,434.19382 C224.783909,435.098315 225.322153,435.792135 226.012627,436.275281 C226.703102,436.758427 227.488721,437 228.369484,437 Z M228.369484,435.88764 C227.706193,435.88764 227.121736,435.696629 226.616113,435.314607 C226.11049,434.932584 225.716321,434.376404 225.433607,433.646067 C225.150893,432.91573 225.009536,432.033708 225.009536,431 C225.009536,429.966292 225.150893,429.08427 225.433607,428.353933 C225.716321,427.623596 226.11049,427.067416 226.616113,426.685393 C227.121736,426.303371 227.706193,426.11236 228.369484,426.11236 C229.032774,426.11236 229.617231,426.303371 230.122854,426.685393 C230.628477,427.067416 231.022646,427.623596 231.30536,428.353933 C231.588074,429.08427 231.729431,429.966292 231.729431,431 C231.729431,432.033708 231.588074,432.91573 231.30536,433.646067 C231.022646,434.376404 230.628477,434.932584 230.122854,435.314607 C229.617231,435.696629 229.032774,435.88764 228.369484,435.88764 Z M236.622558,432.106039 C237.288567,432.106039 237.830889,431.850421 238.249523,431.339185 C238.668157,430.827949 238.877475,430.149579 238.877475,429.304073 C238.877475,428.458567 238.668157,427.780197 238.249523,427.268961 C237.830889,426.757725 237.288567,426.502107 236.622558,426.502107 C235.947035,426.502107 235.402335,426.760183 234.988458,427.276334 C234.574581,427.792486 234.367642,428.468399 234.367642,429.304073 C234.367642,430.139747 234.574581,430.81566 234.988458,431.331812 C235.402335,431.847963 235.947035,432.106039 236.622558,432.106039 Z M236.693916,436.898876 L243.515751,426.575843 L242.673726,426.575843 L235.851891,436.898876 L236.693916,436.898876 Z M236.622558,431.442416 C236.146838,431.442416 235.771018,431.250702 235.4951,430.867275 C235.219182,430.483848 235.081223,429.962781 235.081223,429.304073 C235.081223,428.645365 235.219182,428.124298 235.4951,427.740871 C235.771018,427.357444 236.146838,427.16573 236.622558,427.16573 C237.088765,427.16573 237.462205,427.354986 237.742881,427.733497 C238.023556,428.112008 238.163893,428.635534 238.163893,429.304073 C238.163893,429.972612 238.023556,430.496138 237.742881,430.874649 C237.462205,431.25316 237.088765,431.442416 236.622558,431.442416 Z M242.745084,436.972612 C243.420607,436.972612 243.965307,436.714537 244.379184,436.198385 C244.793061,435.682233 245,435.00632 245,434.170646 C245,433.334972 244.793061,432.659059 244.379184,432.142907 C243.965307,431.626756 243.420607,431.36868 242.745084,431.36868 C242.079075,431.36868 241.536753,431.626756 241.118119,432.142907 C240.699485,432.659059 240.490168,433.334972 240.490168,434.170646 C240.490168,435.00632 240.699485,435.682233 241.118119,436.198385 C241.536753,436.714537 242.079075,436.972612 242.745084,436.972612 Z M242.745084,436.308989 C242.278878,436.308989 241.905437,436.119733 241.624762,435.741222 C241.344086,435.362711 241.203749,434.839185 241.203749,434.170646 C241.203749,433.502107 241.344086,432.978581 241.624762,432.60007 C241.905437,432.221559 242.278878,432.032303 242.745084,432.032303 C243.220805,432.032303 243.596624,432.224017 243.872542,432.607444 C244.14846,432.990871 244.286419,433.511938 244.286419,434.170646 C244.286419,434.829354 244.14846,435.350421 243.872542,435.733848 C243.596624,436.117275 243.220805,436.308989 242.745084,436.308989 Z\",\"id\":\"20%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M325.099442,437 C325.988739,437 326.742473,436.848315 327.360643,436.544944 C327.978813,436.241573 328.445151,435.828652 328.759659,435.30618 C329.074166,434.783708 329.23142,434.185393 329.23142,433.511236 C329.23142,432.544944 328.919624,431.761236 328.296031,431.160112 C327.672439,430.558989 326.764163,430.224719 325.571204,430.157303 L325.571204,430.157303 L328.792194,425.960674 L328.792194,425.101124 L321.471761,425.101124 L321.471761,426.179775 L327.295572,426.179775 L324.139652,430.275281 L324.139652,431.168539 L324.953034,431.168539 C325.983317,431.168539 326.753318,431.376404 327.263037,431.792135 C327.772756,432.207865 328.027616,432.780899 328.027616,433.511236 C328.027616,434.252809 327.772756,434.83427 327.263037,435.255618 C326.753318,435.676966 326.03212,435.88764 325.099442,435.88764 C324.383667,435.88764 323.711271,435.761236 323.082256,435.508427 C322.453241,435.255618 321.948945,434.926966 321.569367,434.522472 L321.569367,434.522472 L321,435.483146 C321.444649,435.94382 322.032994,436.311798 322.765038,436.587079 C323.497081,436.86236 324.275216,437 325.099442,437 Z M335.413119,437 C336.291571,437 337.075128,436.758427 337.763791,436.275281 C338.452454,435.792135 338.991997,435.098315 339.38242,434.19382 C339.772844,433.289326 339.968055,432.224719 339.968055,431 C339.968055,429.775281 339.772844,428.710674 339.38242,427.80618 C338.991997,426.901685 338.452454,426.207865 337.763791,425.724719 C337.075128,425.241573 336.291571,425 335.413119,425 C334.534667,425 333.75111,425.241573 333.062447,425.724719 C332.373784,426.207865 331.836952,426.901685 331.451951,427.80618 C331.066951,428.710674 330.874451,429.775281 330.874451,431 C330.874451,432.224719 331.066951,433.289326 331.451951,434.19382 C331.836952,435.098315 332.373784,435.792135 333.062447,436.275281 C333.75111,436.758427 334.534667,437 335.413119,437 Z M335.413119,435.88764 C334.751569,435.88764 334.168645,435.696629 333.664349,435.314607 C333.160052,434.932584 332.766918,434.376404 332.484946,433.646067 C332.202974,432.91573 332.061988,432.033708 332.061988,431 C332.061988,429.966292 332.202974,429.08427 332.484946,428.353933 C332.766918,427.623596 333.160052,427.067416 333.664349,426.685393 C334.168645,426.303371 334.751569,426.11236 335.413119,426.11236 C336.074669,426.11236 336.657593,426.303371 337.161889,426.685393 C337.666186,427.067416 338.05932,427.623596 338.341292,428.353933 C338.623264,429.08427 338.764251,429.966292 338.764251,431 C338.764251,432.033708 338.623264,432.91573 338.341292,433.646067 C338.05932,434.376404 337.666186,434.932584 337.161889,435.314607 C336.657593,435.696629 336.074669,435.88764 335.413119,435.88764 Z M343.644539,432.106039 C344.308801,432.106039 344.849699,431.850421 345.267235,431.339185 C345.684771,430.827949 345.893539,430.149579 345.893539,429.304073 C345.893539,428.458567 345.684771,427.780197 345.267235,427.268961 C344.849699,426.757725 344.308801,426.502107 343.644539,426.502107 C342.970788,426.502107 342.427517,426.760183 342.014726,427.276334 C341.601935,427.792486 341.39554,428.468399 341.39554,429.304073 C341.39554,430.139747 341.601935,430.81566 342.014726,431.331812 C342.427517,431.847963 342.970788,432.106039 343.644539,432.106039 Z M343.71571,436.898876 L350.519646,426.575843 L349.679829,426.575843 L342.875894,436.898876 L343.71571,436.898876 Z M343.644539,431.442416 C343.170067,431.442416 342.795233,431.250702 342.520039,430.867275 C342.244845,430.483848 342.107248,429.962781 342.107248,429.304073 C342.107248,428.645365 342.244845,428.124298 342.520039,427.740871 C342.795233,427.357444 343.170067,427.16573 343.644539,427.16573 C344.109522,427.16573 344.481983,427.354986 344.761922,427.733497 C345.041861,428.112008 345.18183,428.635534 345.18183,429.304073 C345.18183,429.972612 345.041861,430.496138 344.761922,430.874649 C344.481983,431.25316 344.109522,431.442416 343.644539,431.442416 Z M349.751,436.972612 C350.424751,436.972612 350.968022,436.714537 351.380813,436.198385 C351.793604,435.682233 352,435.00632 352,434.170646 C352,433.334972 351.793604,432.659059 351.380813,432.142907 C350.968022,431.626756 350.424751,431.36868 349.751,431.36868 C349.086739,431.36868 348.54584,431.626756 348.128304,432.142907 C347.710769,432.659059 347.502001,433.334972 347.502001,434.170646 C347.502001,435.00632 347.710769,435.682233 348.128304,436.198385 C348.54584,436.714537 349.086739,436.972612 349.751,436.972612 Z M349.751,436.308989 C349.286017,436.308989 348.913556,436.119733 348.633618,435.741222 C348.353679,435.362711 348.213709,434.839185 348.213709,434.170646 C348.213709,433.502107 348.353679,432.978581 348.633618,432.60007 C348.913556,432.221559 349.286017,432.032303 349.751,432.032303 C350.225473,432.032303 350.600306,432.224017 350.8755,432.607444 C351.150694,432.990871 351.288291,433.511938 351.288291,434.170646 C351.288291,434.829354 351.150694,435.350421 350.8755,435.733848 C350.600306,436.117275 350.225473,436.308989 349.751,436.308989 Z\",\"id\":\"30%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M434.579535,436.898876 L434.579535,433.797753 L436.851772,433.797753 L436.851772,432.719101 L434.579535,432.719101 L434.579535,429.988764 L433.443416,429.988764 L433.443416,432.719101 L428.509415,432.719101 L434.31985,425.101124 L433.021429,425.101124 L427,432.921348 L427,433.797753 L433.410955,433.797753 L433.410955,436.898876 L434.579535,436.898876 Z M442.451214,437 C443.327649,437 444.109406,436.758427 444.796488,436.275281 C445.483569,435.792135 446.021873,435.098315 446.411399,434.19382 C446.800926,433.289326 446.995689,432.224719 446.995689,431 C446.995689,429.775281 446.800926,428.710674 446.411399,427.80618 C446.021873,426.901685 445.483569,426.207865 444.796488,425.724719 C444.109406,425.241573 443.327649,425 442.451214,425 C441.57478,425 440.793022,425.241573 440.105941,425.724719 C439.418859,426.207865 438.88326,426.901685 438.499144,427.80618 C438.115028,428.710674 437.92297,429.775281 437.92297,431 C437.92297,432.224719 438.115028,433.289326 438.499144,434.19382 C438.88326,435.098315 439.418859,435.792135 440.105941,436.275281 C440.793022,436.758427 441.57478,437 442.451214,437 Z M442.451214,435.88764 C441.791183,435.88764 441.209599,435.696629 440.70646,435.314607 C440.203322,434.932584 439.811091,434.376404 439.529766,433.646067 C439.248441,432.91573 439.107779,432.033708 439.107779,431 C439.107779,429.966292 439.248441,429.08427 439.529766,428.353933 C439.811091,427.623596 440.203322,427.067416 440.70646,426.685393 C441.209599,426.303371 441.791183,426.11236 442.451214,426.11236 C443.111245,426.11236 443.69283,426.303371 444.195968,426.685393 C444.699106,427.067416 445.091338,427.623596 445.372662,428.353933 C445.653987,429.08427 445.794649,429.966292 445.794649,431 C445.794649,432.033708 445.653987,432.91573 445.372662,433.646067 C445.091338,434.376404 444.699106,434.932584 444.195968,435.314607 C443.69283,435.696629 443.111245,435.88764 442.451214,435.88764 Z M450.663729,432.106039 C451.326465,432.106039 451.866121,431.850421 452.282698,431.339185 C452.699275,430.827949 452.907564,430.149579 452.907564,429.304073 C452.907564,428.458567 452.699275,427.780197 452.282698,427.268961 C451.866121,426.757725 451.326465,426.502107 450.663729,426.502107 C449.991526,426.502107 449.449502,426.760183 449.037659,427.276334 C448.625816,427.792486 448.419895,428.468399 448.419895,429.304073 C448.419895,430.139747 448.625816,430.81566 449.037659,431.331812 C449.449502,431.847963 449.991526,432.106039 450.663729,432.106039 Z M450.734737,436.898876 L457.523046,426.575843 L456.685158,426.575843 L449.896849,436.898876 L450.734737,436.898876 Z M450.663729,431.442416 C450.190346,431.442416 449.816374,431.250702 449.541812,430.867275 C449.26725,430.483848 449.129969,429.962781 449.129969,429.304073 C449.129969,428.645365 449.26725,428.124298 449.541812,427.740871 C449.816374,427.357444 450.190346,427.16573 450.663729,427.16573 C451.127644,427.16573 451.49925,427.354986 451.778546,427.733497 C452.057841,428.112008 452.197489,428.635534 452.197489,429.304073 C452.197489,429.972612 452.057841,430.496138 451.778546,430.874649 C451.49925,431.25316 451.127644,431.442416 450.663729,431.442416 Z M456.756166,436.972612 C457.428369,436.972612 457.970392,436.714537 458.382235,436.198385 C458.794078,435.682233 459,435.00632 459,434.170646 C459,433.334972 458.794078,432.659059 458.382235,432.142907 C457.970392,431.626756 457.428369,431.36868 456.756166,431.36868 C456.09343,431.36868 455.553773,431.626756 455.137196,432.142907 C454.72062,432.659059 454.512331,433.334972 454.512331,434.170646 C454.512331,435.00632 454.72062,435.682233 455.137196,436.198385 C455.553773,436.714537 456.09343,436.972612 456.756166,436.972612 Z M456.756166,436.308989 C456.29225,436.308989 455.920645,436.119733 455.641349,435.741222 C455.362053,435.362711 455.222405,434.839185 455.222405,434.170646 C455.222405,433.502107 455.362053,432.978581 455.641349,432.60007 C455.920645,432.221559 456.29225,432.032303 456.756166,432.032303 C457.229548,432.032303 457.603521,432.224017 457.878083,432.607444 C458.152645,432.990871 458.289926,433.511938 458.289926,434.170646 C458.289926,434.829354 458.152645,435.350421 457.878083,435.733848 C457.603521,436.117275 457.229548,436.308989 456.756166,436.308989 Z\",\"id\":\"40%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M544.106881,437 C545.01225,437 545.775813,436.845506 546.397572,436.536517 C547.019331,436.227528 547.48565,435.803371 547.79653,435.264045 C548.107409,434.724719 548.262849,434.11236 548.262849,433.426966 C548.262849,432.325843 547.883794,431.469101 547.125685,430.856742 C546.367575,430.244382 545.159508,429.938202 543.501484,429.938202 L543.501484,429.938202 L542.028898,429.938202 L542.421587,426.179775 L547.657452,426.179775 L547.657452,425.101124 L541.390777,425.101124 L540.801742,431.016854 L543.239691,431.016854 C544.625014,431.016854 545.609465,431.224719 546.193046,431.640449 C546.776627,432.05618 547.068417,432.668539 547.068417,433.477528 C547.068417,434.207865 546.809351,434.792135 546.291219,435.230337 C545.773086,435.668539 545.03952,435.88764 544.090519,435.88764 C543.370588,435.88764 542.699743,435.761236 542.077984,435.508427 C541.456225,435.255618 540.954454,434.926966 540.572673,434.522472 L540.572673,434.522472 L540,435.483146 C540.44723,435.94382 541.038992,436.311798 541.775285,436.587079 C542.511579,436.86236 543.288777,437 544.106881,437 Z M554.316817,437 C555.200369,437 555.988476,436.758427 556.681137,436.275281 C557.373799,435.792135 557.916474,435.098315 558.309164,434.19382 C558.701854,433.289326 558.898199,432.224719 558.898199,431 C558.898199,429.775281 558.701854,428.710674 558.309164,427.80618 C557.916474,426.901685 557.373799,426.207865 556.681137,425.724719 C555.988476,425.241573 555.200369,425 554.316817,425 C553.433265,425 552.645158,425.241573 551.952497,425.724719 C551.259836,426.207865 550.719887,426.901685 550.332652,427.80618 C549.945416,428.710674 549.751798,429.775281 549.751798,431 C549.751798,432.224719 549.945416,433.289326 550.332652,434.19382 C550.719887,435.098315 551.259836,435.792135 551.952497,436.275281 C552.645158,436.758427 553.433265,437 554.316817,437 Z M554.316817,435.88764 C553.651426,435.88764 553.065118,435.696629 552.557894,435.314607 C552.05067,434.932584 551.655253,434.376404 551.371643,433.646067 C551.088034,432.91573 550.946229,432.033708 550.946229,431 C550.946229,429.966292 551.088034,429.08427 551.371643,428.353933 C551.655253,427.623596 552.05067,427.067416 552.557894,426.685393 C553.065118,426.303371 553.651426,426.11236 554.316817,426.11236 C554.982208,426.11236 555.568516,426.303371 556.075741,426.685393 C556.582965,427.067416 556.978382,427.623596 557.261991,428.353933 C557.5456,429.08427 557.687405,429.966292 557.687405,431 C557.687405,432.033708 557.5456,432.91573 557.261991,433.646067 C556.978382,434.376404 556.582965,434.932584 556.075741,435.314607 C555.568516,435.696629 554.982208,435.88764 554.316817,435.88764 Z M562.596028,432.106039 C563.264146,432.106039 563.808185,431.850421 564.228145,431.339185 C564.648105,430.827949 564.858085,430.149579 564.858085,429.304073 C564.858085,428.458567 564.648105,427.780197 564.228145,427.268961 C563.808185,426.757725 563.264146,426.502107 562.596028,426.502107 C561.918366,426.502107 561.37194,426.760183 560.956753,427.276334 C560.541565,427.792486 560.333971,428.468399 560.333971,429.304073 C560.333971,430.139747 560.541565,430.81566 560.956753,431.331812 C561.37194,431.847963 561.918366,432.106039 562.596028,432.106039 Z M562.667612,436.898876 L569.511051,426.575843 L568.666359,426.575843 L561.82292,436.898876 L562.667612,436.898876 Z M562.596028,431.442416 C562.118801,431.442416 561.741791,431.250702 561.465,430.867275 C561.188208,430.483848 561.049812,429.962781 561.049812,429.304073 C561.049812,428.645365 561.188208,428.124298 561.465,427.740871 C561.741791,427.357444 562.118801,427.16573 562.596028,427.16573 C563.063711,427.16573 563.438334,427.354986 563.719898,427.733497 C564.001462,428.112008 564.142245,428.635534 564.142245,429.304073 C564.142245,429.972612 564.001462,430.496138 563.719898,430.874649 C563.438334,431.25316 563.063711,431.442416 562.596028,431.442416 Z M568.737943,436.972612 C569.415606,436.972612 569.962031,436.714537 570.377218,436.198385 C570.792406,435.682233 571,435.00632 571,434.170646 C571,433.334972 570.792406,432.659059 570.377218,432.142907 C569.962031,431.626756 569.415606,431.36868 568.737943,431.36868 C568.069825,431.36868 567.525786,431.626756 567.105826,432.142907 C566.685866,432.659059 566.475886,433.334972 566.475886,434.170646 C566.475886,435.00632 566.685866,435.682233 567.105826,436.198385 C567.525786,436.714537 568.069825,436.972612 568.737943,436.972612 Z M568.737943,436.308989 C568.27026,436.308989 567.895637,436.119733 567.614073,435.741222 C567.332509,435.362711 567.191727,434.839185 567.191727,434.170646 C567.191727,433.502107 567.332509,432.978581 567.614073,432.60007 C567.895637,432.221559 568.27026,432.032303 568.737943,432.032303 C569.21517,432.032303 569.59218,432.224017 569.868971,432.607444 C570.145763,432.990871 570.284159,433.511938 570.284159,434.170646 C570.284159,434.829354 570.145763,435.350421 569.868971,435.733848 C569.59218,436.117275 569.21517,436.308989 568.737943,436.308989 Z\",\"id\":\"50%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M651.663915,437 C652.400607,437 653.064172,436.851124 653.65461,436.553371 C654.245047,436.255618 654.708189,435.831461 655.044034,435.280899 C655.379879,434.730337 655.547802,434.095506 655.547802,433.376404 C655.547802,432.668539 655.385296,432.047753 655.060284,431.514045 C654.735273,430.980337 654.282965,430.567416 653.703362,430.275281 C653.123758,429.983146 652.460193,429.837079 651.712666,429.837079 C650.910971,429.837079 650.201363,430.014045 649.583841,430.367978 C648.966319,430.72191 648.51672,431.219101 648.235044,431.859551 C648.202542,431.5 648.186292,431.179775 648.186292,430.898876 C648.186292,429.325843 648.543804,428.126404 649.25883,427.300562 C649.973855,426.474719 650.959723,426.061798 652.216434,426.061798 C653.148134,426.061798 653.884826,426.247191 654.426512,426.617978 L654.426512,426.617978 L654.897779,425.640449 C654.226088,425.213483 653.32689,425 652.200183,425 C651.160147,425 650.250115,425.233146 649.470087,425.699438 C648.69006,426.16573 648.083372,426.853933 647.650023,427.764045 C647.216674,428.674157 647,429.786517 647,431.101124 C647,432.977528 647.400847,434.429775 648.202542,435.457865 C649.004237,436.485955 650.158028,437 651.663915,437 Z M651.615163,435.97191 C650.986807,435.97191 650.445122,435.853933 649.990105,435.617978 C649.535089,435.382022 649.191119,435.073034 648.958194,434.691011 C648.725269,434.308989 648.608807,433.893258 648.608807,433.44382 C648.608807,432.960674 648.733394,432.522472 648.98257,432.129213 C649.231745,431.735955 649.575716,431.426966 650.014481,431.202247 C650.453247,430.977528 650.959723,430.865169 651.53391,430.865169 C652.411441,430.865169 653.107507,431.095506 653.622109,431.55618 C654.13671,432.016854 654.394011,432.634831 654.394011,433.410112 C654.394011,434.185393 654.13671,434.80618 653.622109,435.272472 C653.107507,435.738764 652.438525,435.97191 651.615163,435.97191 Z M661.430509,437 C662.30804,437 663.090776,436.758427 663.778717,436.275281 C664.466658,435.792135 665.005635,435.098315 665.395649,434.19382 C665.785663,433.289326 665.98067,432.224719 665.98067,431 C665.98067,429.775281 665.785663,428.710674 665.395649,427.80618 C665.005635,426.901685 664.466658,426.207865 663.778717,425.724719 C663.090776,425.241573 662.30804,425 661.430509,425 C660.552978,425 659.770242,425.241573 659.082301,425.724719 C658.39436,426.207865 657.858091,426.901685 657.473495,427.80618 C657.088898,428.710674 656.896599,429.775281 656.896599,431 C656.896599,432.224719 657.088898,433.289326 657.473495,434.19382 C657.858091,435.098315 658.39436,435.792135 659.082301,436.275281 C659.770242,436.758427 660.552978,437 661.430509,437 Z M661.430509,435.88764 C660.769652,435.88764 660.18734,435.696629 659.683573,435.314607 C659.179805,434.932584 658.787083,434.376404 658.505406,433.646067 C658.223729,432.91573 658.082891,432.033708 658.082891,431 C658.082891,429.966292 658.223729,429.08427 658.505406,428.353933 C658.787083,427.623596 659.179805,427.067416 659.683573,426.685393 C660.18734,426.303371 660.769652,426.11236 661.430509,426.11236 C662.091366,426.11236 662.673678,426.303371 663.177446,426.685393 C663.681214,427.067416 664.073936,427.623596 664.355612,428.353933 C664.637289,429.08427 664.778127,429.966292 664.778127,431 C664.778127,432.033708 664.637289,432.91573 664.355612,433.646067 C664.073936,434.376404 663.681214,434.932584 663.177446,435.314607 C662.673678,435.696629 662.091366,435.88764 661.430509,435.88764 Z M669.653299,432.106039 C670.316864,432.106039 670.857196,431.850421 671.274294,431.339185 C671.691392,430.827949 671.899941,430.149579 671.899941,429.304073 C671.899941,428.458567 671.691392,427.780197 671.274294,427.268961 C670.857196,426.757725 670.316864,426.502107 669.653299,426.502107 C668.980255,426.502107 668.437553,426.760183 668.025195,427.276334 C667.612837,427.792486 667.406657,428.468399 667.406657,429.304073 C667.406657,430.139747 667.612837,430.81566 668.025195,431.331812 C668.437553,431.847963 668.980255,432.106039 669.653299,432.106039 Z M669.724396,436.898876 L676.521198,426.575843 L675.682262,426.575843 L668.88546,436.898876 L669.724396,436.898876 Z M669.653299,431.442416 C669.179324,431.442416 668.804884,431.250702 668.529978,430.867275 C668.255073,430.483848 668.11762,429.962781 668.11762,429.304073 C668.11762,428.645365 668.255073,428.124298 668.529978,427.740871 C668.804884,427.357444 669.179324,427.16573 669.653299,427.16573 C670.117795,427.16573 670.489865,427.354986 670.769511,427.733497 C671.049156,428.112008 671.188978,428.635534 671.188978,429.304073 C671.188978,429.972612 671.049156,430.496138 670.769511,430.874649 C670.489865,431.25316 670.117795,431.442416 669.653299,431.442416 Z M675.753358,436.972612 C676.426403,436.972612 676.969104,436.714537 677.381463,436.198385 C677.793821,435.682233 678,435.00632 678,434.170646 C678,433.334972 677.793821,432.659059 677.381463,432.142907 C676.969104,431.626756 676.426403,431.36868 675.753358,431.36868 C675.089793,431.36868 674.549462,431.626756 674.132364,432.142907 C673.715265,432.659059 673.506716,433.334972 673.506716,434.170646 C673.506716,435.00632 673.715265,435.682233 674.132364,436.198385 C674.549462,436.714537 675.089793,436.972612 675.753358,436.972612 Z M675.753358,436.308989 C675.288863,436.308989 674.916792,436.119733 674.637147,435.741222 C674.357502,435.362711 674.217679,434.839185 674.217679,434.170646 C674.217679,433.502107 674.357502,432.978581 674.637147,432.60007 C674.916792,432.221559 675.288863,432.032303 675.753358,432.032303 C676.227333,432.032303 676.601774,432.224017 676.876679,432.607444 C677.151585,432.990871 677.289037,433.511938 677.289037,434.170646 C677.289037,434.829354 677.151585,435.350421 676.876679,435.733848 C676.601774,436.117275 676.227333,436.308989 675.753358,436.308989 Z\",\"id\":\"60%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M755.591377,436.898876 L760.352795,425.960674 L760.352795,425.101124 L752,425.101124 L752,428.38764 L753.153791,428.38764 L753.153791,426.179775 L759.003997,426.179775 L754.323832,436.898876 L755.591377,436.898876 Z M766.430509,437 C767.30804,437 768.090776,436.758427 768.778717,436.275281 C769.466658,435.792135 770.005635,435.098315 770.395649,434.19382 C770.785663,433.289326 770.98067,432.224719 770.98067,431 C770.98067,429.775281 770.785663,428.710674 770.395649,427.80618 C770.005635,426.901685 769.466658,426.207865 768.778717,425.724719 C768.090776,425.241573 767.30804,425 766.430509,425 C765.552978,425 764.770242,425.241573 764.082301,425.724719 C763.39436,426.207865 762.858091,426.901685 762.473495,427.80618 C762.088898,428.710674 761.896599,429.775281 761.896599,431 C761.896599,432.224719 762.088898,433.289326 762.473495,434.19382 C762.858091,435.098315 763.39436,435.792135 764.082301,436.275281 C764.770242,436.758427 765.552978,437 766.430509,437 Z M766.430509,435.88764 C765.769652,435.88764 765.18734,435.696629 764.683573,435.314607 C764.179805,434.932584 763.787083,434.376404 763.505406,433.646067 C763.223729,432.91573 763.082891,432.033708 763.082891,431 C763.082891,429.966292 763.223729,429.08427 763.505406,428.353933 C763.787083,427.623596 764.179805,427.067416 764.683573,426.685393 C765.18734,426.303371 765.769652,426.11236 766.430509,426.11236 C767.091366,426.11236 767.673678,426.303371 768.177446,426.685393 C768.681214,427.067416 769.073936,427.623596 769.355612,428.353933 C769.637289,429.08427 769.778127,429.966292 769.778127,431 C769.778127,432.033708 769.637289,432.91573 769.355612,433.646067 C769.073936,434.376404 768.681214,434.932584 768.177446,435.314607 C767.673678,435.696629 767.091366,435.88764 766.430509,435.88764 Z M774.653299,432.106039 C775.316864,432.106039 775.857196,431.850421 776.274294,431.339185 C776.691392,430.827949 776.899941,430.149579 776.899941,429.304073 C776.899941,428.458567 776.691392,427.780197 776.274294,427.268961 C775.857196,426.757725 775.316864,426.502107 774.653299,426.502107 C773.980255,426.502107 773.437553,426.760183 773.025195,427.276334 C772.612837,427.792486 772.406657,428.468399 772.406657,429.304073 C772.406657,430.139747 772.612837,430.81566 773.025195,431.331812 C773.437553,431.847963 773.980255,432.106039 774.653299,432.106039 Z M774.724396,436.898876 L781.521198,426.575843 L780.682262,426.575843 L773.88546,436.898876 L774.724396,436.898876 Z M774.653299,431.442416 C774.179324,431.442416 773.804884,431.250702 773.529978,430.867275 C773.255073,430.483848 773.11762,429.962781 773.11762,429.304073 C773.11762,428.645365 773.255073,428.124298 773.529978,427.740871 C773.804884,427.357444 774.179324,427.16573 774.653299,427.16573 C775.117795,427.16573 775.489865,427.354986 775.769511,427.733497 C776.049156,428.112008 776.188978,428.635534 776.188978,429.304073 C776.188978,429.972612 776.049156,430.496138 775.769511,430.874649 C775.489865,431.25316 775.117795,431.442416 774.653299,431.442416 Z M780.753358,436.972612 C781.426403,436.972612 781.969104,436.714537 782.381463,436.198385 C782.793821,435.682233 783,435.00632 783,434.170646 C783,433.334972 782.793821,432.659059 782.381463,432.142907 C781.969104,431.626756 781.426403,431.36868 780.753358,431.36868 C780.089793,431.36868 779.549462,431.626756 779.132364,432.142907 C778.715265,432.659059 778.506716,433.334972 778.506716,434.170646 C778.506716,435.00632 778.715265,435.682233 779.132364,436.198385 C779.549462,436.714537 780.089793,436.972612 780.753358,436.972612 Z M780.753358,436.308989 C780.288863,436.308989 779.916792,436.119733 779.637147,435.741222 C779.357502,435.362711 779.217679,434.839185 779.217679,434.170646 C779.217679,433.502107 779.357502,432.978581 779.637147,432.60007 C779.916792,432.221559 780.288863,432.032303 780.753358,432.032303 C781.227333,432.032303 781.601774,432.224017 781.876679,432.607444 C782.151585,432.990871 782.289037,433.511938 782.289037,434.170646 C782.289037,434.829354 782.151585,435.350421 781.876679,435.733848 C781.601774,436.117275 781.227333,436.308989 780.753358,436.308989 Z\",\"id\":\"70%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":14}),React.createElement(\"path\",{\"d\":\"M864.452174,437 C865.364595,437 866.158841,436.86236 866.834911,436.587079 C867.510982,436.311798 868.030403,435.918539 868.393172,435.407303 C868.755942,434.896067 868.937327,434.297753 868.937327,433.61236 C868.937327,432.91573 868.742201,432.320225 868.351948,431.825843 C867.961696,431.331461 867.4038,430.960674 866.678261,430.713483 C867.271884,430.477528 867.728094,430.13764 868.046892,429.69382 C868.36569,429.25 868.525089,428.724719 868.525089,428.117978 C868.525089,427.488764 868.354697,426.938202 868.013913,426.466292 C867.673129,425.994382 867.197681,425.632022 866.587568,425.379213 C865.977456,425.126404 865.265658,425 864.452174,425 C863.220955,425 862.239828,425.280899 861.508792,425.842697 C860.777756,426.404494 860.412238,427.162921 860.412238,428.117978 C860.412238,428.724719 860.566141,429.25 860.873945,429.69382 C861.18175,430.13764 861.632464,430.477528 862.226087,430.713483 C861.500548,430.960674 860.948148,431.328652 860.568889,431.817416 C860.18963,432.30618 860,432.904494 860,433.61236 C860,434.657303 860.395749,435.483146 861.187246,436.089888 C861.978744,436.696629 863.067053,437 864.452174,437 Z M864.452174,430.275281 C863.561739,430.275281 862.863682,430.08427 862.358003,429.702247 C861.852324,429.320225 861.599485,428.803371 861.599485,428.151685 C861.599485,427.5 861.855072,426.983146 862.366248,426.601124 C862.877424,426.219101 863.572732,426.02809 864.452174,426.02809 C865.320623,426.02809 866.015931,426.219101 866.5381,426.601124 C867.060268,426.983146 867.321353,427.505618 867.321353,428.168539 C867.321353,428.808989 867.065765,429.320225 866.554589,429.702247 C866.043414,430.08427 865.342609,430.275281 864.452174,430.275281 Z M864.452174,435.97191 C863.429823,435.97191 862.632829,435.761236 862.061192,435.339888 C861.489554,434.918539 861.203736,434.337079 861.203736,433.595506 C861.203736,432.865169 861.492303,432.289326 862.069436,431.867978 C862.64657,431.446629 863.440816,431.235955 864.452174,431.235955 C865.474525,431.235955 866.274267,431.446629 866.851401,431.867978 C867.428535,432.289326 867.717101,432.865169 867.717101,433.595506 C867.717101,434.325843 867.428535,434.904494 866.851401,435.331461 C866.274267,435.758427 865.474525,435.97191 864.452174,435.97191 Z M875.18686,437 C876.077295,437 876.871541,436.758427 877.569597,436.275281 C878.267654,435.792135 878.814557,435.098315 879.210306,434.19382 C879.606055,433.289326 879.803929,432.224719 879.803929,431 C879.803929,429.775281 879.606055,428.710674 879.210306,427.80618 C878.814557,426.901685 878.267654,426.207865 877.569597,425.724719 C876.871541,425.241573 876.077295,425 875.18686,425 C874.296425,425 873.502179,425.241573 872.804122,425.724719 C872.106065,426.207865 871.561911,426.901685 871.171659,427.80618 C870.781406,428.710674 870.58628,429.775281 870.58628,431 C870.58628,432.224719 870.781406,433.289326 871.171659,434.19382 C871.561911,435.098315 872.106065,435.792135 872.804122,436.275281 C873.502179,436.758427 874.296425,437 875.18686,437 Z M875.18686,435.88764 C874.516286,435.88764 873.925411,435.696629 873.414235,435.314607 C872.90306,434.932584 872.504563,434.376404 872.218744,433.646067 C871.932925,432.91573 871.790016,432.033708 871.790016,431 C871.790016,429.966292 871.932925,429.08427 872.218744,428.353933 C872.504563,427.623596 872.90306,427.067416 873.414235,426.685393 C873.925411,426.303371 874.516286,426.11236 875.18686,426.11236 C875.857434,426.11236 876.448309,426.303371 876.959485,426.685393 C877.47066,427.067416 877.869157,427.623596 878.154976,428.353933 C878.440794,429.08427 878.583704,429.966292 878.583704,431 C878.583704,432.033708 878.440794,432.91573 878.154976,433.646067 C877.869157,434.376404 877.47066,434.932584 876.959485,435.314607 C876.448309,435.696629 875.857434,435.88764 875.18686,435.88764 Z M883.530564,432.106039 C884.203886,432.106039 884.752163,431.850421 885.175395,431.339185 C885.598626,430.827949 885.810242,430.149579 885.810242,429.304073 C885.810242,428.458567 885.598626,427.780197 885.175395,427.268961 C884.752163,426.757725 884.203886,426.502107 883.530564,426.502107 C882.847622,426.502107 882.29694,426.760183 881.878519,427.276334 C881.460097,427.792486 881.250886,428.468399 881.250886,429.304073 C881.250886,430.139747 881.460097,430.81566 881.878519,431.331812 C882.29694,431.847963 882.847622,432.106039 883.530564,432.106039 Z M883.602705,436.898876 L890.499452,426.575843 L889.64818,426.575843 L882.751433,436.898876 L883.602705,436.898876 Z M883.530564,431.442416 C883.049619,431.442416 882.669673,431.250702 882.390725,430.867275 C882.111777,430.483848 881.972303,429.962781 881.972303,429.304073 C881.972303,428.645365 882.111777,428.124298 882.390725,427.740871 C882.669673,427.357444 883.049619,427.16573 883.530564,427.16573 C884.001889,427.16573 884.379431,427.354986 884.663188,427.733497 C884.946946,428.112008 885.088824,428.635534 885.088824,429.304073 C885.088824,429.972612 884.946946,430.496138 884.663188,430.874649 C884.379431,431.25316 884.001889,431.442416 883.530564,431.442416 Z M889.720322,436.972612 C890.403264,436.972612 890.953945,436.714537 891.372367,436.198385 C891.790789,435.682233 892,435.00632 892,434.170646 C892,433.334972 891.790789,432.659059 891.372367,432.142907 C890.953945,431.626756 890.403264,431.36868 889.720322,431.36868 C889.046999,431.36868 888.498722,431.626756 888.075491,432.142907 C887.65226,432.659059 887.440644,433.334972 887.440644,434.170646 C887.440644,435.00632 887.65226,435.682233 888.075491,436.198385 C888.498722,436.714537 889.046999,436.972612 889.720322,436.972612 Z M889.720322,436.308989 C889.248996,436.308989 888.871455,436.119733 888.587697,435.741222 C888.30394,435.362711 888.162061,434.839185 888.162061,434.170646 C888.162061,433.502107 888.30394,432.978581 888.587697,432.60007 C888.871455,432.221559 889.248996,432.032303 889.720322,432.032303 C890.201267,432.032303 890.581213,432.224017 890.860161,432.607444 C891.139109,432.990871 891.278583,433.511938 891.278583,434.170646 C891.278583,434.829354 891.139109,435.350421 890.860161,435.733848 C890.581213,436.117275 890.201267,436.308989 889.720322,436.308989 Z\",\"id\":\"80%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M969.311167,437 C970.339879,437 971.240003,436.766854 972.011537,436.300562 C972.783071,435.83427 973.383153,435.146067 973.811783,434.235955 C974.240413,433.325843 974.454728,432.213483 974.454728,430.898876 C974.454728,429.022472 974.058245,427.570225 973.26528,426.542135 C972.472314,425.514045 971.331086,425 969.841597,425 C969.112926,425 968.456586,425.148876 967.872578,425.446629 C967.288569,425.744382 966.830471,426.168539 966.498282,426.719101 C966.166094,427.269663 966,427.904494 966,428.623596 C966,429.331461 966.160736,429.952247 966.482209,430.485955 C966.803681,431.019663 967.251064,431.432584 967.824357,431.724719 C968.397649,432.016854 969.053989,432.162921 969.793376,432.162921 C970.586342,432.162921 971.288223,431.985955 971.899021,431.632022 C972.509819,431.27809 972.954523,430.780899 973.233132,430.140449 C973.26528,430.488764 973.281353,430.808989 973.281353,431.101124 C973.281353,432.674157 972.927733,433.873596 972.220494,434.699438 C971.513254,435.525281 970.538121,435.938202 969.295094,435.938202 C968.373539,435.938202 967.644868,435.752809 967.10908,435.382022 L967.10908,435.382022 L966.642945,436.359551 C967.307322,436.786517 968.196729,437 969.311167,437 Z M969.970186,431.134831 C969.10221,431.134831 968.413723,430.904494 967.904725,430.44382 C967.395727,429.983146 967.141228,429.365169 967.141228,428.589888 C967.141228,427.814607 967.395727,427.19382 967.904725,426.727528 C968.413723,426.261236 969.075421,426.02809 969.889818,426.02809 C970.511331,426.02809 971.047119,426.146067 971.497181,426.382022 C971.947242,426.617978 972.287467,426.926966 972.517856,427.308989 C972.748245,427.691011 972.863439,428.106742 972.863439,428.55618 C972.863439,429.039326 972.740208,429.477528 972.493746,429.870787 C972.247283,430.264045 971.907058,430.573034 971.47307,430.797753 C971.039082,431.022472 970.538121,431.134831 969.970186,431.134831 Z M980.610927,437 C981.478903,437 982.253116,436.758427 982.933567,436.275281 C983.614017,435.792135 984.147126,435.098315 984.532893,434.19382 C984.91866,433.289326 985.111543,432.224719 985.111543,431 C985.111543,429.775281 984.91866,428.710674 984.532893,427.80618 C984.147126,426.901685 983.614017,426.207865 982.933567,425.724719 C982.253116,425.241573 981.478903,425 980.610927,425 C979.742952,425 978.968739,425.241573 978.288288,425.724719 C977.607838,426.207865 977.077408,426.901685 976.696999,427.80618 C976.31659,428.710674 976.126385,429.775281 976.126385,431 C976.126385,432.224719 976.31659,433.289326 976.696999,434.19382 C977.077408,435.098315 977.607838,435.792135 978.288288,436.275281 C978.968739,436.758427 979.742952,437 980.610927,437 Z M980.610927,435.88764 C979.957267,435.88764 979.381295,435.696629 978.883013,435.314607 C978.38473,434.932584 977.996284,434.376404 977.717675,433.646067 C977.439065,432.91573 977.29976,432.033708 977.29976,431 C977.29976,429.966292 977.439065,429.08427 977.717675,428.353933 C977.996284,427.623596 978.38473,427.067416 978.883013,426.685393 C979.381295,426.303371 979.957267,426.11236 980.610927,426.11236 C981.264588,426.11236 981.84056,426.303371 982.338842,426.685393 C982.837125,427.067416 983.225571,427.623596 983.50418,428.353933 C983.78279,429.08427 983.922095,429.966292 983.922095,431 C983.922095,432.033708 983.78279,432.91573 983.50418,433.646067 C983.225571,434.376404 982.837125,434.932584 982.338842,435.314607 C981.84056,435.696629 981.264588,435.88764 980.610927,435.88764 Z M988.744183,432.106039 C989.400523,432.106039 989.934971,431.850421 990.347527,431.339185 C990.760084,430.827949 990.966362,430.149579 990.966362,429.304073 C990.966362,428.458567 990.760084,427.780197 990.347527,427.268961 C989.934971,426.757725 989.400523,426.502107 988.744183,426.502107 C988.078467,426.502107 987.541675,426.760183 987.133806,427.276334 C986.725938,427.792486 986.522004,428.468399 986.522004,429.304073 C986.522004,430.139747 986.725938,430.81566 987.133806,431.331812 C987.541675,431.847963 988.078467,432.106039 988.744183,432.106039 Z M988.814505,436.898876 L995.5373,426.575843 L994.707499,426.575843 L987.984704,436.898876 L988.814505,436.898876 Z M988.744183,431.442416 C988.275369,431.442416 987.905006,431.250702 987.633094,430.867275 C987.361181,430.483848 987.225225,429.962781 987.225225,429.304073 C987.225225,428.645365 987.361181,428.124298 987.633094,427.740871 C987.905006,427.357444 988.275369,427.16573 988.744183,427.16573 C989.203621,427.16573 989.57164,427.354986 989.84824,427.733497 C990.124841,428.112008 990.263141,428.635534 990.263141,429.304073 C990.263141,429.972612 990.124841,430.496138 989.84824,430.874649 C989.57164,431.25316 989.203621,431.442416 988.744183,431.442416 Z M994.777821,436.972612 C995.443537,436.972612 995.980329,436.714537 996.388198,436.198385 C996.796066,435.682233 997,435.00632 997,434.170646 C997,433.334972 996.796066,432.659059 996.388198,432.142907 C995.980329,431.626756 995.443537,431.36868 994.777821,431.36868 C994.121481,431.36868 993.587033,431.626756 993.174477,432.142907 C992.76192,432.659059 992.555642,433.334972 992.555642,434.170646 C992.555642,435.00632 992.76192,435.682233 993.174477,436.198385 C993.587033,436.714537 994.121481,436.972612 994.777821,436.972612 Z M994.777821,436.308989 C994.318383,436.308989 993.950364,436.119733 993.673764,435.741222 C993.397163,435.362711 993.258863,434.839185 993.258863,434.170646 C993.258863,433.502107 993.397163,432.978581 993.673764,432.60007 C993.950364,432.221559 994.318383,432.032303 994.777821,432.032303 C995.246635,432.032303 995.616998,432.224017 995.88891,432.607444 C996.160823,432.990871 996.296779,433.511938 996.296779,434.170646 C996.296779,434.829354 996.160823,435.350421 995.88891,435.733848 C995.616998,436.117275 995.246635,436.308989 994.777821,436.308989 Z\",\"id\":\"90%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M1074.90887,436.898876 L1074.90887,425.101124 L1071,425.101124 L1071,426.179775 L1073.72136,426.179775 L1073.72136,436.898876 L1074.90887,436.898876 Z M1082.26479,437 C1083.15542,437 1083.94983,436.758427 1084.64804,436.275281 C1085.34625,435.792135 1085.89327,435.098315 1086.28911,434.19382 C1086.68494,433.289326 1086.88286,432.224719 1086.88286,431 C1086.88286,429.775281 1086.68494,428.710674 1086.28911,427.80618 C1085.89327,426.901685 1085.34625,426.207865 1084.64804,425.724719 C1083.94983,425.241573 1083.15542,425 1082.26479,425 C1081.37416,425 1080.57974,425.241573 1079.88154,425.724719 C1079.18333,426.207865 1078.63905,426.901685 1078.24872,427.80618 C1077.85838,428.710674 1077.66321,429.775281 1077.66321,431 C1077.66321,432.224719 1077.85838,433.289326 1078.24872,434.19382 C1078.63905,435.098315 1079.18333,435.792135 1079.88154,436.275281 C1080.57974,436.758427 1081.37416,437 1082.26479,437 Z M1082.26479,435.88764 C1081.59407,435.88764 1081.00307,435.696629 1080.49178,435.314607 C1079.98049,434.932584 1079.58191,434.376404 1079.29603,433.646067 C1079.01015,432.91573 1078.86721,432.033708 1078.86721,431 C1078.86721,429.966292 1079.01015,429.08427 1079.29603,428.353933 C1079.58191,427.623596 1079.98049,427.067416 1080.49178,426.685393 C1081.00307,426.303371 1081.59407,426.11236 1082.26479,426.11236 C1082.93551,426.11236 1083.52651,426.303371 1084.0378,426.685393 C1084.54908,427.067416 1084.94767,427.623596 1085.23355,428.353933 C1085.51943,429.08427 1085.66237,429.966292 1085.66237,431 C1085.66237,432.033708 1085.51943,432.91573 1085.23355,433.646067 C1084.94767,434.376404 1084.54908,434.932584 1084.0378,435.314607 C1083.52651,435.696629 1082.93551,435.88764 1082.26479,435.88764 Z M1093.18322,437 C1094.07385,437 1094.86827,436.758427 1095.56647,436.275281 C1096.26468,435.792135 1096.8117,435.098315 1097.20754,434.19382 C1097.60337,433.289326 1097.80129,432.224719 1097.80129,431 C1097.80129,429.775281 1097.60337,428.710674 1097.20754,427.80618 C1096.8117,426.901685 1096.26468,426.207865 1095.56647,425.724719 C1094.86827,425.241573 1094.07385,425 1093.18322,425 C1092.29259,425 1091.49818,425.241573 1090.79997,425.724719 C1090.10176,426.207865 1089.55749,426.901685 1089.16715,427.80618 C1088.77681,428.710674 1088.58165,429.775281 1088.58165,431 C1088.58165,432.224719 1088.77681,433.289326 1089.16715,434.19382 C1089.55749,435.098315 1090.10176,435.792135 1090.79997,436.275281 C1091.49818,436.758427 1092.29259,437 1093.18322,437 Z M1093.18322,435.88764 C1092.5125,435.88764 1091.9215,435.696629 1091.41021,435.314607 C1090.89893,434.932584 1090.50034,434.376404 1090.21446,433.646067 C1089.92858,432.91573 1089.78564,432.033708 1089.78564,431 C1089.78564,429.966292 1089.92858,429.08427 1090.21446,428.353933 C1090.50034,427.623596 1090.89893,427.067416 1091.41021,426.685393 C1091.9215,426.303371 1092.5125,426.11236 1093.18322,426.11236 C1093.85394,426.11236 1094.44494,426.303371 1094.95623,426.685393 C1095.46752,427.067416 1095.8661,427.623596 1096.15198,428.353933 C1096.43786,429.08427 1096.5808,429.966292 1096.5808,431 C1096.5808,432.033708 1096.43786,432.91573 1096.15198,433.646067 C1095.8661,434.376404 1095.46752,434.932584 1094.95623,435.314607 C1094.44494,435.696629 1093.85394,435.88764 1093.18322,435.88764 Z M1101.52873,432.106039 C1102.2022,432.106039 1102.75059,431.850421 1103.17392,431.339185 C1103.59724,430.827949 1103.8089,430.149579 1103.8089,429.304073 C1103.8089,428.458567 1103.59724,427.780197 1103.17392,427.268961 C1102.75059,426.757725 1102.2022,426.502107 1101.52873,426.502107 C1100.84564,426.502107 1100.29484,426.760183 1099.87633,427.276334 C1099.45782,427.792486 1099.24856,428.468399 1099.24856,429.304073 C1099.24856,430.139747 1099.45782,430.81566 1099.87633,431.331812 C1100.29484,431.847963 1100.84564,432.106039 1101.52873,432.106039 Z M1101.60089,436.898876 L1108.49913,426.575843 L1107.64767,426.575843 L1100.74943,436.898876 L1101.60089,436.898876 Z M1101.52873,431.442416 C1101.04768,431.442416 1100.66765,431.250702 1100.38865,430.867275 C1100.10964,430.483848 1099.97013,429.962781 1099.97013,429.304073 C1099.97013,428.645365 1100.10964,428.124298 1100.38865,427.740871 C1100.66765,427.357444 1101.04768,427.16573 1101.52873,427.16573 C1102.00016,427.16573 1102.37778,427.354986 1102.6616,427.733497 C1102.94542,428.112008 1103.08733,428.635534 1103.08733,429.304073 C1103.08733,429.972612 1102.94542,430.496138 1102.6616,430.874649 C1102.37778,431.25316 1102.00016,431.442416 1101.52873,431.442416 Z M1107.71983,436.972612 C1108.40292,436.972612 1108.95372,436.714537 1109.37223,436.198385 C1109.79074,435.682233 1110,435.00632 1110,434.170646 C1110,433.334972 1109.79074,432.659059 1109.37223,432.142907 C1108.95372,431.626756 1108.40292,431.36868 1107.71983,431.36868 C1107.04636,431.36868 1106.49796,431.626756 1106.07464,432.142907 C1105.65132,432.659059 1105.43966,433.334972 1105.43966,434.170646 C1105.43966,435.00632 1105.65132,435.682233 1106.07464,436.198385 C1106.49796,436.714537 1107.04636,436.972612 1107.71983,436.972612 Z M1107.71983,436.308989 C1107.2484,436.308989 1106.87078,436.119733 1106.58696,435.741222 C1106.30314,435.362711 1106.16123,434.839185 1106.16123,434.170646 C1106.16123,433.502107 1106.30314,432.978581 1106.58696,432.60007 C1106.87078,432.221559 1107.2484,432.032303 1107.71983,432.032303 C1108.20088,432.032303 1108.58091,432.224017 1108.85991,432.607444 C1109.13892,432.990871 1109.27843,433.511938 1109.27843,434.170646 C1109.27843,434.829354 1109.13892,435.350421 1108.85991,435.733848 C1108.58091,436.117275 1108.20088,436.308989 1107.71983,436.308989 Z\",\"id\":\"100%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"1088.22961\",\"y1\":\"77.5\",\"x2\":\"69\",\"y2\":\"78.25\",\"id\":\"Line\",\"stroke\":\"#EFEFEF\",\"strokeLinecap\":\"square\",\"key\":18}),React.createElement(\"line\",{\"x1\":\"1088.22961\",\"y1\":\"162.5\",\"x2\":\"69\",\"y2\":\"163.25\",\"id\":\"Line-Copy\",\"stroke\":\"#EFEFEF\",\"strokeLinecap\":\"square\",\"key\":19}),React.createElement(\"line\",{\"x1\":\"1088.22961\",\"y1\":\"246.5\",\"x2\":\"69\",\"y2\":\"247.25\",\"id\":\"Line-Copy-2\",\"stroke\":\"#EFEFEF\",\"strokeLinecap\":\"square\",\"key\":20}),React.createElement(\"line\",{\"x1\":\"1088.22961\",\"y1\":\"332.5\",\"x2\":\"69\",\"y2\":\"333.25\",\"id\":\"Line-Copy-3\",\"stroke\":\"#EFEFEF\",\"strokeLinecap\":\"square\",\"key\":21})])))]);\n}\n\nSchoolYearsTypeAndQualityOfSchoolingDesktop.defaultProps = {\"width\":\"1113px\",\"height\":\"495px\",\"viewBox\":\"0 0 1113 495\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsTypeAndQualityOfSchoolingDesktop;\n\nSchoolYearsTypeAndQualityOfSchoolingDesktop.default = SchoolYearsTypeAndQualityOfSchoolingDesktop;\n","import QualityOfSchoolingSVGMobile from \"../../../../src/content/school-years/svg/school-years-type-and-quality-of-schooling-mobile.svg\";\nimport QualityOfSchoolingSVGTable from \"../../../../src/content/school-years/svg/school-years-type-and-quality-of-schooling-tablet.svg\";\nimport QualityOfSchoolingSVGDesktop from \"../../../../src/content/school-years/svg/school-years-type-and-quality-of-schooling-desktop.svg\";\nimport ResizableGraph from \"../../../../src/components/research/resizable-graph\";\nimport ResearchImage from \"../../../../src/components/research/research-image\";\nimport * as React from 'react';\nexport default {\n  QualityOfSchoolingSVGMobile,\n  QualityOfSchoolingSVGTable,\n  QualityOfSchoolingSVGDesktop,\n  ResizableGraph,\n  ResearchImage,\n  React\n};","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.ScrollHandler = exports.ScrollContext = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _sessionStorage = require(\"./session-storage\");\n\nvar ScrollContext = React.createContext(new _sessionStorage.SessionStorage());\nexports.ScrollContext = ScrollContext;\nScrollContext.displayName = \"GatsbyScrollContext\";\n\nvar ScrollHandler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ScrollHandler, _React$Component);\n\n  function ScrollHandler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this._stateStorage = new _sessionStorage.SessionStorage();\n\n    _this.scrollListener = function () {\n      var key = _this.props.location.key;\n\n      if (key) {\n        _this._stateStorage.save(_this.props.location, key, window.scrollY);\n      }\n    };\n\n    _this.windowScroll = function (position, prevProps) {\n      if (_this.shouldUpdateScroll(prevProps, _this.props)) {\n        window.scrollTo(0, position);\n      }\n    };\n\n    _this.scrollToHash = function (hash, prevProps) {\n      var node = document.getElementById(hash.substring(1));\n\n      if (node && _this.shouldUpdateScroll(prevProps, _this.props)) {\n        node.scrollIntoView();\n      }\n    };\n\n    _this.shouldUpdateScroll = function (prevRouterProps, routerProps) {\n      var shouldUpdateScroll = _this.props.shouldUpdateScroll;\n\n      if (!shouldUpdateScroll) {\n        return true;\n      } // Hack to allow accessing this._stateStorage.\n\n\n      return shouldUpdateScroll.call((0, _assertThisInitialized2.default)(_this), prevRouterProps, routerProps);\n    };\n\n    return _this;\n  }\n\n  var _proto = ScrollHandler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    window.addEventListener(\"scroll\", this.scrollListener);\n    var scrollPosition;\n    var _this$props$location = this.props.location,\n        key = _this$props$location.key,\n        hash = _this$props$location.hash;\n\n    if (key) {\n      scrollPosition = this._stateStorage.read(this.props.location, key);\n    }\n\n    if (scrollPosition) {\n      this.windowScroll(scrollPosition, undefined);\n    } else if (hash) {\n      this.scrollToHash(decodeURI(hash), undefined);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.scrollListener);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props$location2 = this.props.location,\n        hash = _this$props$location2.hash,\n        key = _this$props$location2.key;\n    var scrollPosition;\n\n    if (key) {\n      scrollPosition = this._stateStorage.read(this.props.location, key);\n    }\n\n    if (hash && scrollPosition === 0) {\n      this.scrollToHash(decodeURI(hash), prevProps);\n    } else {\n      this.windowScroll(scrollPosition, prevProps);\n    }\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(ScrollContext.Provider, {\n      value: this._stateStorage\n    }, this.props.children);\n  };\n\n  return ScrollHandler;\n}(React.Component);\n\nexports.ScrollHandler = ScrollHandler;\nScrollHandler.propTypes = {\n  shouldUpdateScroll: _propTypes.default.func,\n  children: _propTypes.default.element.isRequired,\n  location: _propTypes.default.object.isRequired\n};","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","exports.f = {}.propertyIsEnumerable;\n","/**\n * Implement Gatsby's Browser APIs in this file.\n *\n * See: https://www.gatsbyjs.org/docs/browser-apis/\n */\n\n// You can delete this file if you're not using it\nimport \"tailwindcss/dist/base.css\";\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","export enum BreakPoint {\n  sm,\n  md,\n  lg,\n  xl,\n}\n\nexport const screenSizes = {\n  [BreakPoint.sm]: 640,\n  [BreakPoint.md]: 768,\n  [BreakPoint.lg]: 1024,\n  [BreakPoint.xl]: 1280,\n};\n\nexport const mq = (size: BreakPoint) => {\n  return `@media screen and (min-width: ${screenSizes[size]}px)`;\n};\n","import React, { createElement } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { publicLoader } from \"./loader\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport { grabMatchParams } from \"./find-path\"\n\n// Renders page\nclass PageRenderer extends React.Component {\n  render() {\n    const props = {\n      ...this.props,\n      params: {\n        ...grabMatchParams(this.props.location.pathname),\n        ...this.props.pageResources.json.pageContext.__params,\n      },\n      pathContext: this.props.pageContext,\n    }\n\n    const [replacementElement] = apiRunner(`replaceComponentRenderer`, {\n      props: this.props,\n      loader: publicLoader,\n    })\n\n    const pageElement =\n      replacementElement ||\n      createElement(this.props.pageResources.component, {\n        ...props,\n        key: this.props.path || this.props.pageResources.page.path,\n      })\n\n    const wrappedPage = apiRunner(\n      `wrapPageElement`,\n      { element: pageElement, props },\n      pageElement,\n      ({ result }) => {\n        return { element: result, props }\n      }\n    ).pop()\n\n    return wrappedPage\n  }\n}\n\nPageRenderer.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageResources: PropTypes.object.isRequired,\n  data: PropTypes.object,\n  pageContext: PropTypes.object.isRequired,\n}\n\nexport default PageRenderer\n","/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */\n(function () {\n  function aa(a, b, c) {\n    return a.call.apply(a.bind, arguments);\n  }\n\n  function ba(a, b, c) {\n    if (!a) throw Error();\n\n    if (2 < arguments.length) {\n      var d = Array.prototype.slice.call(arguments, 2);\n      return function () {\n        var c = Array.prototype.slice.call(arguments);\n        Array.prototype.unshift.apply(c, d);\n        return a.apply(b, c);\n      };\n    }\n\n    return function () {\n      return a.apply(b, arguments);\n    };\n  }\n\n  function p(a, b, c) {\n    p = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? aa : ba;\n    return p.apply(null, arguments);\n  }\n\n  var q = Date.now || function () {\n    return +new Date();\n  };\n\n  function ca(a, b) {\n    this.a = a;\n    this.o = b || a;\n    this.c = this.o.document;\n  }\n\n  var da = !!window.FontFace;\n\n  function t(a, b, c, d) {\n    b = a.c.createElement(b);\n    if (c) for (var e in c) {\n      c.hasOwnProperty(e) && (\"style\" == e ? b.style.cssText = c[e] : b.setAttribute(e, c[e]));\n    }\n    d && b.appendChild(a.c.createTextNode(d));\n    return b;\n  }\n\n  function u(a, b, c) {\n    a = a.c.getElementsByTagName(b)[0];\n    a || (a = document.documentElement);\n    a.insertBefore(c, a.lastChild);\n  }\n\n  function v(a) {\n    a.parentNode && a.parentNode.removeChild(a);\n  }\n\n  function w(a, b, c) {\n    b = b || [];\n    c = c || [];\n\n    for (var d = a.className.split(/\\s+/), e = 0; e < b.length; e += 1) {\n      for (var f = !1, g = 0; g < d.length; g += 1) {\n        if (b[e] === d[g]) {\n          f = !0;\n          break;\n        }\n      }\n\n      f || d.push(b[e]);\n    }\n\n    b = [];\n\n    for (e = 0; e < d.length; e += 1) {\n      f = !1;\n\n      for (g = 0; g < c.length; g += 1) {\n        if (d[e] === c[g]) {\n          f = !0;\n          break;\n        }\n      }\n\n      f || b.push(d[e]);\n    }\n\n    a.className = b.join(\" \").replace(/\\s+/g, \" \").replace(/^\\s+|\\s+$/, \"\");\n  }\n\n  function y(a, b) {\n    for (var c = a.className.split(/\\s+/), d = 0, e = c.length; d < e; d++) {\n      if (c[d] == b) return !0;\n    }\n\n    return !1;\n  }\n\n  function ea(a) {\n    return a.o.location.hostname || a.a.location.hostname;\n  }\n\n  function z(a, b, c) {\n    function d() {\n      m && e && f && (m(g), m = null);\n    }\n\n    b = t(a, \"link\", {\n      rel: \"stylesheet\",\n      href: b,\n      media: \"all\"\n    });\n    var e = !1,\n        f = !0,\n        g = null,\n        m = c || null;\n    da ? (b.onload = function () {\n      e = !0;\n      d();\n    }, b.onerror = function () {\n      e = !0;\n      g = Error(\"Stylesheet failed to load\");\n      d();\n    }) : setTimeout(function () {\n      e = !0;\n      d();\n    }, 0);\n    u(a, \"head\", b);\n  }\n\n  function A(a, b, c, d) {\n    var e = a.c.getElementsByTagName(\"head\")[0];\n\n    if (e) {\n      var f = t(a, \"script\", {\n        src: b\n      }),\n          g = !1;\n\n      f.onload = f.onreadystatechange = function () {\n        g || this.readyState && \"loaded\" != this.readyState && \"complete\" != this.readyState || (g = !0, c && c(null), f.onload = f.onreadystatechange = null, \"HEAD\" == f.parentNode.tagName && e.removeChild(f));\n      };\n\n      e.appendChild(f);\n      setTimeout(function () {\n        g || (g = !0, c && c(Error(\"Script load timeout\")));\n      }, d || 5E3);\n      return f;\n    }\n\n    return null;\n  }\n\n  ;\n\n  function B() {\n    this.a = 0;\n    this.c = null;\n  }\n\n  function C(a) {\n    a.a++;\n    return function () {\n      a.a--;\n      D(a);\n    };\n  }\n\n  function E(a, b) {\n    a.c = b;\n    D(a);\n  }\n\n  function D(a) {\n    0 == a.a && a.c && (a.c(), a.c = null);\n  }\n\n  ;\n\n  function F(a) {\n    this.a = a || \"-\";\n  }\n\n  F.prototype.c = function (a) {\n    for (var b = [], c = 0; c < arguments.length; c++) {\n      b.push(arguments[c].replace(/[\\W_]+/g, \"\").toLowerCase());\n    }\n\n    return b.join(this.a);\n  };\n\n  function G(a, b) {\n    this.c = a;\n    this.f = 4;\n    this.a = \"n\";\n    var c = (b || \"n4\").match(/^([nio])([1-9])$/i);\n    c && (this.a = c[1], this.f = parseInt(c[2], 10));\n  }\n\n  function fa(a) {\n    return H(a) + \" \" + (a.f + \"00\") + \" 300px \" + I(a.c);\n  }\n\n  function I(a) {\n    var b = [];\n    a = a.split(/,\\s*/);\n\n    for (var c = 0; c < a.length; c++) {\n      var d = a[c].replace(/['\"]/g, \"\");\n      -1 != d.indexOf(\" \") || /^\\d/.test(d) ? b.push(\"'\" + d + \"'\") : b.push(d);\n    }\n\n    return b.join(\",\");\n  }\n\n  function J(a) {\n    return a.a + a.f;\n  }\n\n  function H(a) {\n    var b = \"normal\";\n    \"o\" === a.a ? b = \"oblique\" : \"i\" === a.a && (b = \"italic\");\n    return b;\n  }\n\n  function ga(a) {\n    var b = 4,\n        c = \"n\",\n        d = null;\n    a && ((d = a.match(/(normal|oblique|italic)/i)) && d[1] && (c = d[1].substr(0, 1).toLowerCase()), (d = a.match(/([1-9]00|normal|bold)/i)) && d[1] && (/bold/i.test(d[1]) ? b = 7 : /[1-9]00/.test(d[1]) && (b = parseInt(d[1].substr(0, 1), 10))));\n    return c + b;\n  }\n\n  ;\n\n  function ha(a, b) {\n    this.c = a;\n    this.f = a.o.document.documentElement;\n    this.h = b;\n    this.a = new F(\"-\");\n    this.j = !1 !== b.events;\n    this.g = !1 !== b.classes;\n  }\n\n  function ia(a) {\n    a.g && w(a.f, [a.a.c(\"wf\", \"loading\")]);\n    K(a, \"loading\");\n  }\n\n  function L(a) {\n    if (a.g) {\n      var b = y(a.f, a.a.c(\"wf\", \"active\")),\n          c = [],\n          d = [a.a.c(\"wf\", \"loading\")];\n      b || c.push(a.a.c(\"wf\", \"inactive\"));\n      w(a.f, c, d);\n    }\n\n    K(a, \"inactive\");\n  }\n\n  function K(a, b, c) {\n    if (a.j && a.h[b]) if (c) a.h[b](c.c, J(c));else a.h[b]();\n  }\n\n  ;\n\n  function ja() {\n    this.c = {};\n  }\n\n  function ka(a, b, c) {\n    var d = [],\n        e;\n\n    for (e in b) {\n      if (b.hasOwnProperty(e)) {\n        var f = a.c[e];\n        f && d.push(f(b[e], c));\n      }\n    }\n\n    return d;\n  }\n\n  ;\n\n  function M(a, b) {\n    this.c = a;\n    this.f = b;\n    this.a = t(this.c, \"span\", {\n      \"aria-hidden\": \"true\"\n    }, this.f);\n  }\n\n  function N(a) {\n    u(a.c, \"body\", a.a);\n  }\n\n  function O(a) {\n    return \"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\" + I(a.c) + \";\" + (\"font-style:\" + H(a) + \";font-weight:\" + (a.f + \"00\") + \";\");\n  }\n\n  ;\n\n  function P(a, b, c, d, e, f) {\n    this.g = a;\n    this.j = b;\n    this.a = d;\n    this.c = c;\n    this.f = e || 3E3;\n    this.h = f || void 0;\n  }\n\n  P.prototype.start = function () {\n    var a = this.c.o.document,\n        b = this,\n        c = q(),\n        d = new Promise(function (d, e) {\n      function f() {\n        q() - c >= b.f ? e() : a.fonts.load(fa(b.a), b.h).then(function (a) {\n          1 <= a.length ? d() : setTimeout(f, 25);\n        }, function () {\n          e();\n        });\n      }\n\n      f();\n    }),\n        e = null,\n        f = new Promise(function (a, d) {\n      e = setTimeout(d, b.f);\n    });\n    Promise.race([f, d]).then(function () {\n      e && (clearTimeout(e), e = null);\n      b.g(b.a);\n    }, function () {\n      b.j(b.a);\n    });\n  };\n\n  function Q(a, b, c, d, e, f, g) {\n    this.v = a;\n    this.B = b;\n    this.c = c;\n    this.a = d;\n    this.s = g || \"BESbswy\";\n    this.f = {};\n    this.w = e || 3E3;\n    this.u = f || null;\n    this.m = this.j = this.h = this.g = null;\n    this.g = new M(this.c, this.s);\n    this.h = new M(this.c, this.s);\n    this.j = new M(this.c, this.s);\n    this.m = new M(this.c, this.s);\n    a = new G(this.a.c + \",serif\", J(this.a));\n    a = O(a);\n    this.g.a.style.cssText = a;\n    a = new G(this.a.c + \",sans-serif\", J(this.a));\n    a = O(a);\n    this.h.a.style.cssText = a;\n    a = new G(\"serif\", J(this.a));\n    a = O(a);\n    this.j.a.style.cssText = a;\n    a = new G(\"sans-serif\", J(this.a));\n    a = O(a);\n    this.m.a.style.cssText = a;\n    N(this.g);\n    N(this.h);\n    N(this.j);\n    N(this.m);\n  }\n\n  var R = {\n    D: \"serif\",\n    C: \"sans-serif\"\n  },\n      S = null;\n\n  function T() {\n    if (null === S) {\n      var a = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);\n      S = !!a && (536 > parseInt(a[1], 10) || 536 === parseInt(a[1], 10) && 11 >= parseInt(a[2], 10));\n    }\n\n    return S;\n  }\n\n  Q.prototype.start = function () {\n    this.f.serif = this.j.a.offsetWidth;\n    this.f[\"sans-serif\"] = this.m.a.offsetWidth;\n    this.A = q();\n    U(this);\n  };\n\n  function la(a, b, c) {\n    for (var d in R) {\n      if (R.hasOwnProperty(d) && b === a.f[R[d]] && c === a.f[R[d]]) return !0;\n    }\n\n    return !1;\n  }\n\n  function U(a) {\n    var b = a.g.a.offsetWidth,\n        c = a.h.a.offsetWidth,\n        d;\n    (d = b === a.f.serif && c === a.f[\"sans-serif\"]) || (d = T() && la(a, b, c));\n    d ? q() - a.A >= a.w ? T() && la(a, b, c) && (null === a.u || a.u.hasOwnProperty(a.a.c)) ? V(a, a.v) : V(a, a.B) : ma(a) : V(a, a.v);\n  }\n\n  function ma(a) {\n    setTimeout(p(function () {\n      U(this);\n    }, a), 50);\n  }\n\n  function V(a, b) {\n    setTimeout(p(function () {\n      v(this.g.a);\n      v(this.h.a);\n      v(this.j.a);\n      v(this.m.a);\n      b(this.a);\n    }, a), 0);\n  }\n\n  ;\n\n  function W(a, b, c) {\n    this.c = a;\n    this.a = b;\n    this.f = 0;\n    this.m = this.j = !1;\n    this.s = c;\n  }\n\n  var X = null;\n\n  W.prototype.g = function (a) {\n    var b = this.a;\n    b.g && w(b.f, [b.a.c(\"wf\", a.c, J(a).toString(), \"active\")], [b.a.c(\"wf\", a.c, J(a).toString(), \"loading\"), b.a.c(\"wf\", a.c, J(a).toString(), \"inactive\")]);\n    K(b, \"fontactive\", a);\n    this.m = !0;\n    na(this);\n  };\n\n  W.prototype.h = function (a) {\n    var b = this.a;\n\n    if (b.g) {\n      var c = y(b.f, b.a.c(\"wf\", a.c, J(a).toString(), \"active\")),\n          d = [],\n          e = [b.a.c(\"wf\", a.c, J(a).toString(), \"loading\")];\n      c || d.push(b.a.c(\"wf\", a.c, J(a).toString(), \"inactive\"));\n      w(b.f, d, e);\n    }\n\n    K(b, \"fontinactive\", a);\n    na(this);\n  };\n\n  function na(a) {\n    0 == --a.f && a.j && (a.m ? (a = a.a, a.g && w(a.f, [a.a.c(\"wf\", \"active\")], [a.a.c(\"wf\", \"loading\"), a.a.c(\"wf\", \"inactive\")]), K(a, \"active\")) : L(a.a));\n  }\n\n  ;\n\n  function oa(a) {\n    this.j = a;\n    this.a = new ja();\n    this.h = 0;\n    this.f = this.g = !0;\n  }\n\n  oa.prototype.load = function (a) {\n    this.c = new ca(this.j, a.context || this.j);\n    this.g = !1 !== a.events;\n    this.f = !1 !== a.classes;\n    pa(this, new ha(this.c, a), a);\n  };\n\n  function qa(a, b, c, d, e) {\n    var f = 0 == --a.h;\n    (a.f || a.g) && setTimeout(function () {\n      var a = e || null,\n          m = d || null || {};\n      if (0 === c.length && f) L(b.a);else {\n        b.f += c.length;\n        f && (b.j = f);\n        var h,\n            l = [];\n\n        for (h = 0; h < c.length; h++) {\n          var k = c[h],\n              n = m[k.c],\n              r = b.a,\n              x = k;\n          r.g && w(r.f, [r.a.c(\"wf\", x.c, J(x).toString(), \"loading\")]);\n          K(r, \"fontloading\", x);\n          r = null;\n          if (null === X) if (window.FontFace) {\n            var x = /Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),\n                xa = /OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent) && /Apple/.exec(window.navigator.vendor);\n            X = x ? 42 < parseInt(x[1], 10) : xa ? !1 : !0;\n          } else X = !1;\n          X ? r = new P(p(b.g, b), p(b.h, b), b.c, k, b.s, n) : r = new Q(p(b.g, b), p(b.h, b), b.c, k, b.s, a, n);\n          l.push(r);\n        }\n\n        for (h = 0; h < l.length; h++) {\n          l[h].start();\n        }\n      }\n    }, 0);\n  }\n\n  function pa(a, b, c) {\n    var d = [],\n        e = c.timeout;\n    ia(b);\n    var d = ka(a.a, c, a.c),\n        f = new W(a.c, b, e);\n    a.h = d.length;\n    b = 0;\n\n    for (c = d.length; b < c; b++) {\n      d[b].load(function (b, d, c) {\n        qa(a, f, b, d, c);\n      });\n    }\n  }\n\n  ;\n\n  function ra(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  ra.prototype.load = function (a) {\n    function b() {\n      if (f[\"__mti_fntLst\" + d]) {\n        var c = f[\"__mti_fntLst\" + d](),\n            e = [],\n            h;\n        if (c) for (var l = 0; l < c.length; l++) {\n          var k = c[l].fontfamily;\n          void 0 != c[l].fontStyle && void 0 != c[l].fontWeight ? (h = c[l].fontStyle + c[l].fontWeight, e.push(new G(k, h))) : e.push(new G(k));\n        }\n        a(e);\n      } else setTimeout(function () {\n        b();\n      }, 50);\n    }\n\n    var c = this,\n        d = c.a.projectId,\n        e = c.a.version;\n\n    if (d) {\n      var f = c.c.o;\n      A(this.c, (c.a.api || \"https://fast.fonts.net/jsapi\") + \"/\" + d + \".js\" + (e ? \"?v=\" + e : \"\"), function (e) {\n        e ? a([]) : (f[\"__MonotypeConfiguration__\" + d] = function () {\n          return c.a;\n        }, b());\n      }).id = \"__MonotypeAPIScript__\" + d;\n    } else a([]);\n  };\n\n  function sa(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  sa.prototype.load = function (a) {\n    var b,\n        c,\n        d = this.a.urls || [],\n        e = this.a.families || [],\n        f = this.a.testStrings || {},\n        g = new B();\n    b = 0;\n\n    for (c = d.length; b < c; b++) {\n      z(this.c, d[b], C(g));\n    }\n\n    var m = [];\n    b = 0;\n\n    for (c = e.length; b < c; b++) {\n      if (d = e[b].split(\":\"), d[1]) for (var h = d[1].split(\",\"), l = 0; l < h.length; l += 1) {\n        m.push(new G(d[0], h[l]));\n      } else m.push(new G(d[0]));\n    }\n\n    E(g, function () {\n      a(m, f);\n    });\n  };\n\n  function ta(a, b) {\n    a ? this.c = a : this.c = ua;\n    this.a = [];\n    this.f = [];\n    this.g = b || \"\";\n  }\n\n  var ua = \"https://fonts.googleapis.com/css\";\n\n  function va(a, b) {\n    for (var c = b.length, d = 0; d < c; d++) {\n      var e = b[d].split(\":\");\n      3 == e.length && a.f.push(e.pop());\n      var f = \"\";\n      2 == e.length && \"\" != e[1] && (f = \":\");\n      a.a.push(e.join(f));\n    }\n  }\n\n  function wa(a) {\n    if (0 == a.a.length) throw Error(\"No fonts to load!\");\n    if (-1 != a.c.indexOf(\"kit=\")) return a.c;\n\n    for (var b = a.a.length, c = [], d = 0; d < b; d++) {\n      c.push(a.a[d].replace(/ /g, \"+\"));\n    }\n\n    b = a.c + \"?family=\" + c.join(\"%7C\");\n    0 < a.f.length && (b += \"&subset=\" + a.f.join(\",\"));\n    0 < a.g.length && (b += \"&text=\" + encodeURIComponent(a.g));\n    return b;\n  }\n\n  ;\n\n  function ya(a) {\n    this.f = a;\n    this.a = [];\n    this.c = {};\n  }\n\n  var za = {\n    latin: \"BESbswy\",\n    \"latin-ext\": \"\\xE7\\xF6\\xFC\\u011F\\u015F\",\n    cyrillic: \"\\u0439\\u044F\\u0416\",\n    greek: \"\\u03B1\\u03B2\\u03A3\",\n    khmer: \"\\u1780\\u1781\\u1782\",\n    Hanuman: \"\\u1780\\u1781\\u1782\"\n  },\n      Aa = {\n    thin: \"1\",\n    extralight: \"2\",\n    \"extra-light\": \"2\",\n    ultralight: \"2\",\n    \"ultra-light\": \"2\",\n    light: \"3\",\n    regular: \"4\",\n    book: \"4\",\n    medium: \"5\",\n    \"semi-bold\": \"6\",\n    semibold: \"6\",\n    \"demi-bold\": \"6\",\n    demibold: \"6\",\n    bold: \"7\",\n    \"extra-bold\": \"8\",\n    extrabold: \"8\",\n    \"ultra-bold\": \"8\",\n    ultrabold: \"8\",\n    black: \"9\",\n    heavy: \"9\",\n    l: \"3\",\n    r: \"4\",\n    b: \"7\"\n  },\n      Ba = {\n    i: \"i\",\n    italic: \"i\",\n    n: \"n\",\n    normal: \"n\"\n  },\n      Ca = /^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\n\n  function Da(a) {\n    for (var b = a.f.length, c = 0; c < b; c++) {\n      var d = a.f[c].split(\":\"),\n          e = d[0].replace(/\\+/g, \" \"),\n          f = [\"n4\"];\n\n      if (2 <= d.length) {\n        var g;\n        var m = d[1];\n        g = [];\n        if (m) for (var m = m.split(\",\"), h = m.length, l = 0; l < h; l++) {\n          var k;\n          k = m[l];\n\n          if (k.match(/^[\\w-]+$/)) {\n            var n = Ca.exec(k.toLowerCase());\n            if (null == n) k = \"\";else {\n              k = n[2];\n              k = null == k || \"\" == k ? \"n\" : Ba[k];\n              n = n[1];\n              if (null == n || \"\" == n) n = \"4\";else var r = Aa[n],\n                  n = r ? r : isNaN(n) ? \"4\" : n.substr(0, 1);\n              k = [k, n].join(\"\");\n            }\n          } else k = \"\";\n\n          k && g.push(k);\n        }\n        0 < g.length && (f = g);\n        3 == d.length && (d = d[2], g = [], d = d ? d.split(\",\") : g, 0 < d.length && (d = za[d[0]]) && (a.c[e] = d));\n      }\n\n      a.c[e] || (d = za[e]) && (a.c[e] = d);\n\n      for (d = 0; d < f.length; d += 1) {\n        a.a.push(new G(e, f[d]));\n      }\n    }\n  }\n\n  ;\n\n  function Ea(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  var Fa = {\n    Arimo: !0,\n    Cousine: !0,\n    Tinos: !0\n  };\n\n  Ea.prototype.load = function (a) {\n    var b = new B(),\n        c = this.c,\n        d = new ta(this.a.api, this.a.text),\n        e = this.a.families;\n    va(d, e);\n    var f = new ya(e);\n    Da(f);\n    z(c, wa(d), C(b));\n    E(b, function () {\n      a(f.a, f.c, Fa);\n    });\n  };\n\n  function Ga(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  Ga.prototype.load = function (a) {\n    var b = this.a.id,\n        c = this.c.o;\n    b ? A(this.c, (this.a.api || \"https://use.typekit.net\") + \"/\" + b + \".js\", function (b) {\n      if (b) a([]);else if (c.Typekit && c.Typekit.config && c.Typekit.config.fn) {\n        b = c.Typekit.config.fn;\n\n        for (var e = [], f = 0; f < b.length; f += 2) {\n          for (var g = b[f], m = b[f + 1], h = 0; h < m.length; h++) {\n            e.push(new G(g, m[h]));\n          }\n        }\n\n        try {\n          c.Typekit.load({\n            events: !1,\n            classes: !1,\n            async: !0\n          });\n        } catch (l) {}\n\n        a(e);\n      }\n    }, 2E3) : a([]);\n  };\n\n  function Ha(a, b) {\n    this.c = a;\n    this.f = b;\n    this.a = [];\n  }\n\n  Ha.prototype.load = function (a) {\n    var b = this.f.id,\n        c = this.c.o,\n        d = this;\n    b ? (c.__webfontfontdeckmodule__ || (c.__webfontfontdeckmodule__ = {}), c.__webfontfontdeckmodule__[b] = function (b, c) {\n      for (var g = 0, m = c.fonts.length; g < m; ++g) {\n        var h = c.fonts[g];\n        d.a.push(new G(h.name, ga(\"font-weight:\" + h.weight + \";font-style:\" + h.style)));\n      }\n\n      a(d.a);\n    }, A(this.c, (this.f.api || \"https://f.fontdeck.com/s/css/js/\") + ea(this.c) + \"/\" + b + \".js\", function (b) {\n      b && a([]);\n    })) : a([]);\n  };\n\n  var Y = new oa(window);\n\n  Y.a.c.custom = function (a, b) {\n    return new sa(b, a);\n  };\n\n  Y.a.c.fontdeck = function (a, b) {\n    return new Ha(b, a);\n  };\n\n  Y.a.c.monotype = function (a, b) {\n    return new ra(b, a);\n  };\n\n  Y.a.c.typekit = function (a, b) {\n    return new Ga(b, a);\n  };\n\n  Y.a.c.google = function (a, b) {\n    return new Ea(b, a);\n  };\n\n  var Z = {\n    load: p(Y.load, Y)\n  };\n  \"function\" === typeof define && define.amd ? define(function () {\n    return Z;\n  }) : \"undefined\" !== typeof module && module.exports ? module.exports = Z : (window.WebFont = Z, window.WebFontConfig && Y.load(window.WebFontConfig));\n})();","import * as React from 'react';\nexport default {\n  React\n};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import invariant from \"invariant\";\n\n////////////////////////////////////////////////////////////////////////////////\n// startsWith(string, search) - Check if `string` starts with `search`\nvar startsWith = function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// pick(routes, uri)\n//\n// Ranks and picks the best route to match. Each segment gets the highest\n// amount of points, then the type of segment gets an additional amount of\n// points where\n//\n//     static > dynamic > splat > root\n//\n// This way we don't have to worry about the order of our routes, let the\n// computers do it.\n//\n// A route looks like this\n//\n//     { path, default, value }\n//\n// And a returned match looks like:\n//\n//     { route, params, uri }\n//\n// I know, I should use TypeScript not comments for these types.\nvar pick = function pick(routes, uri) {\n  var match = void 0;\n  var default_ = void 0;\n\n  var _uri$split = uri.split(\"?\"),\n      uriPathname = _uri$split[0];\n\n  var uriSegments = segmentize(uriPathname);\n  var isRootUri = uriSegments[0] === \"\";\n  var ranked = rankRoutes(routes);\n\n  for (var i = 0, l = ranked.length; i < l; i++) {\n    var missed = false;\n    var route = ranked[i].route;\n\n    if (route.default) {\n      default_ = {\n        route: route,\n        params: {},\n        uri: uri\n      };\n      continue;\n    }\n\n    var routeSegments = segmentize(route.path);\n    var params = {};\n    var max = Math.max(uriSegments.length, routeSegments.length);\n    var index = 0;\n\n    for (; index < max; index++) {\n      var routeSegment = routeSegments[index];\n      var uriSegment = uriSegments[index];\n\n      if (isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/*\n        var param = routeSegment.slice(1) || \"*\";\n        params[param] = uriSegments.slice(index).map(decodeURIComponent).join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      var dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        var matchIsNotReserved = reservedNames.indexOf(dynamicMatch[1]) === -1;\n        !matchIsNotReserved ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Router> dynamic segment \\\"\" + dynamicMatch[1] + \"\\\" is a reserved name. Please use a different name in path \\\"\" + route.path + \"\\\".\") : invariant(false) : void 0;\n        var value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route: route,\n        params: params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// match(path, uri) - Matches just one path to a uri, also lol\nvar match = function match(path, uri) {\n  return pick([{ path: path }], uri);\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// resolve(to, basepath)\n//\n// Resolves URIs as though every path is a directory, no files.  Relative URIs\n// in the browser can feel awkward because not only can you be \"in a directory\"\n// you can be \"at a file\", too. For example\n//\n//     browserSpecResolve('foo', '/bar/') => /bar/foo\n//     browserSpecResolve('foo', '/bar') => /foo\n//\n// But on the command line of a file system, it's not as complicated, you can't\n// `cd` from a file, only directories.  This way, links have to know less about\n// their current path. To go deeper you can do this:\n//\n//     <Link to=\"deeper\"/>\n//     // instead of\n//     <Link to=`{${props.uri}/deeper}`/>\n//\n// Just like `cd`, if you want to go deeper from the command line, you do this:\n//\n//     cd deeper\n//     # not\n//     cd $(pwd)/deeper\n//\n// By treating every path as a directory, linking to relative paths should\n// require less contextual information and (fingers crossed) be more intuitive.\nvar resolve = function resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  var _to$split = to.split(\"?\"),\n      toPathname = _to$split[0],\n      toQuery = _to$split[1];\n\n  var _base$split = base.split(\"?\"),\n      basePathname = _base$split[0];\n\n  var toSegments = segmentize(toPathname);\n  var baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    var pathname = baseSegments.concat(toSegments).join(\"/\");\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./         /users/123  =>  /users/123\n  // ../        /users/123  =>  /users\n  // ../..      /users/123  =>  /\n  // ../../one  /a/b/c/d    =>  /a/b/one\n  // .././one   /a/b/c/d    =>  /a/b/c/one\n  var allSegments = baseSegments.concat(toSegments);\n  var segments = [];\n  for (var i = 0, l = allSegments.length; i < l; i++) {\n    var segment = allSegments[i];\n    if (segment === \"..\") segments.pop();else if (segment !== \".\") segments.push(segment);\n  }\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// insertParams(path, params)\n\nvar insertParams = function insertParams(path, params) {\n  var _path$split = path.split(\"?\"),\n      pathBase = _path$split[0],\n      _path$split$ = _path$split[1],\n      query = _path$split$ === undefined ? \"\" : _path$split$;\n\n  var segments = segmentize(pathBase);\n  var constructedPath = \"/\" + segments.map(function (segment) {\n    var match = paramRe.exec(segment);\n    return match ? params[match[1]] : segment;\n  }).join(\"/\");\n  var _params$location = params.location;\n  _params$location = _params$location === undefined ? {} : _params$location;\n  var _params$location$sear = _params$location.search,\n      search = _params$location$sear === undefined ? \"\" : _params$location$sear;\n\n  var searchSplit = search.split(\"?\")[1] || \"\";\n  constructedPath = addQuery(constructedPath, query, searchSplit);\n  return constructedPath;\n};\n\nvar validateRedirect = function validateRedirect(from, to) {\n  var filter = function filter(segment) {\n    return isDynamic(segment);\n  };\n  var fromString = segmentize(from).filter(filter).sort().join(\"/\");\n  var toString = segmentize(to).filter(filter).sort().join(\"/\");\n  return fromString === toString;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Junk\nvar paramRe = /^:(.+)/;\n\nvar SEGMENT_POINTS = 4;\nvar STATIC_POINTS = 3;\nvar DYNAMIC_POINTS = 2;\nvar SPLAT_PENALTY = 1;\nvar ROOT_POINTS = 1;\n\nvar isRootSegment = function isRootSegment(segment) {\n  return segment === \"\";\n};\nvar isDynamic = function isDynamic(segment) {\n  return paramRe.test(segment);\n};\nvar isSplat = function isSplat(segment) {\n  return segment && segment[0] === \"*\";\n};\n\nvar rankRoute = function rankRoute(route, index) {\n  var score = route.default ? 0 : segmentize(route.path).reduce(function (score, segment) {\n    score += SEGMENT_POINTS;\n    if (isRootSegment(segment)) score += ROOT_POINTS;else if (isDynamic(segment)) score += DYNAMIC_POINTS;else if (isSplat(segment)) score -= SEGMENT_POINTS + SPLAT_PENALTY;else score += STATIC_POINTS;\n    return score;\n  }, 0);\n  return { route: route, score: score, index: index };\n};\n\nvar rankRoutes = function rankRoutes(routes) {\n  return routes.map(rankRoute).sort(function (a, b) {\n    return a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index;\n  });\n};\n\nvar segmentize = function segmentize(uri) {\n  return uri\n  // strip starting/ending slashes\n  .replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\n};\n\nvar addQuery = function addQuery(pathname) {\n  for (var _len = arguments.length, query = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    query[_key - 1] = arguments[_key];\n  }\n\n  query = query.filter(function (q) {\n    return q && q.length > 0;\n  });\n  return pathname + (query && query.length > 0 ? \"?\" + query.join(\"&\") : \"\");\n};\n\nvar reservedNames = [\"uri\", \"path\"];\n\n/**\n * Shallow compares two objects.\n * @param {Object} obj1 The first object to compare.\n * @param {Object} obj2 The second object to compare.\n */\nvar shallowCompare = function shallowCompare(obj1, obj2) {\n  var obj1Keys = Object.keys(obj1);\n  return obj1Keys.length === Object.keys(obj2).length && obj1Keys.every(function (key) {\n    return obj2.hasOwnProperty(key) && obj1[key] === obj2[key];\n  });\n};\n\n////////////////////////////////////////////////////////////////////////////////\nexport { startsWith, pick, match, resolve, insertParams, validateRedirect, shallowCompare };","module.exports = [{\n      plugin: require('../node_modules/gatsby-plugin-mdx/gatsby-browser.js'),\n      options: {\"plugins\":[]},\n    },{\n      plugin: require('../node_modules/gatsby-plugin-manifest/gatsby-browser.js'),\n      options: {\"plugins\":[],\"name\":\"gatsby-starter-default\",\"short_name\":\"starter\",\"start_url\":\"/\",\"background_color\":\"#663399\",\"theme_color\":\"#663399\",\"display\":\"minimal-ui\",\"icon\":\"src/images/gatsby-icon.png\",\"cache_busting_mode\":\"query\",\"include_favicon\":true,\"legacy\":true,\"theme_color_in_head\":true,\"cacheDigest\":\"4a9773549091c227cd2eb82ccd9c5e3a\"},\n    },{\n      plugin: require('../node_modules/gatsby-plugin-web-font-loader/gatsby-browser.js'),\n      options: {\"plugins\":[],\"google\":{\"families\":[\"Montserrat:300,400,600,700\"]}},\n    },{\n      plugin: require('../node_modules/gatsby-plugin-breadcrumb/gatsby-browser.js'),\n      options: {\"plugins\":[],\"useAutoGen\":true,\"exclude\":[\"/404/\",\"/404.html\"],\"trailingSlashes\":true,\"usePathPrefix\":\"/\"},\n    },{\n      plugin: require('../gatsby-browser.js'),\n      options: {\"plugins\":[]},\n    }]\n","const WebFont = require('webfontloader')\n\nexports.onInitialClientRender = (a, options) => {\n\toptions = { ...options }\n\tdelete options.plugins\n\tWebFont.load(options)\n}","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","/*!\n * domready (c) Dustin Diaz 2014 - License MIT\n * ie10 fix - Mikael Kristiansson 2019\n */\n!(function(name, definition) {\n  if (typeof module != \"undefined\") module.exports = definition();\n  else if (typeof define == \"function\" && typeof define.amd == \"object\")\n    define(definition);\n  else this[name] = definition();\n})(\"domready\", function() {\n  var ie10 = false;\n  if (navigator.appVersion.indexOf(\"MSIE 10\") !== -1) {\n    ie10 = true;\n  }\n\n  var fns = [],\n    listener,\n    doc = typeof document === \"object\" && document,\n    hack = ie10\n      ? doc.documentElement.doScroll(\"left\")\n      : doc.documentElement.doScroll,\n    domContentLoaded = \"DOMContentLoaded\",\n    loaded =\n      doc && (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\n  if (!loaded && doc)\n    doc.addEventListener(\n      domContentLoaded,\n      (listener = function() {\n        doc.removeEventListener(domContentLoaded, listener);\n        loaded = 1;\n        while ((listener = fns.shift())) listener();\n      })\n    );\n\n  return function(fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn);\n  };\n});\n","import SchoolYearsOverviewSVG from \"../../../../src/content/school-years/svg/school-years-executive-summary.svg\";\nimport * as React from 'react';\nexport default {\n  SchoolYearsOverviewSVG,\n  React\n};","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\nexport default unitlessKeys;","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\n\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };","import { apiRunner } from \"./api-runner-browser\"\n\nif (\n  window.location.protocol !== `https:` &&\n  window.location.hostname !== `localhost`\n) {\n  console.error(\n    `Service workers can only be used over HTTPS, or on localhost for development`\n  )\n} else if (`serviceWorker` in navigator) {\n  navigator.serviceWorker\n    .register(`${__BASE_PATH__}/sw.js`)\n    .then(function (reg) {\n      reg.addEventListener(`updatefound`, () => {\n        apiRunner(`onServiceWorkerUpdateFound`, { serviceWorker: reg })\n        // The updatefound event implies that reg.installing is set; see\n        // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\n        const installingWorker = reg.installing\n        console.log(`installingWorker`, installingWorker)\n        installingWorker.addEventListener(`statechange`, () => {\n          switch (installingWorker.state) {\n            case `installed`:\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and the fresh content will\n                // have been added to the cache.\n\n                // We set a flag so Gatsby Link knows to refresh the page on next navigation attempt\n                window.___swUpdated = true\n                // We call the onServiceWorkerUpdateReady API so users can show update prompts.\n                apiRunner(`onServiceWorkerUpdateReady`, { serviceWorker: reg })\n\n                // If resources failed for the current page, reload.\n                if (window.___failedResources) {\n                  console.log(`resources failed, SW updated - reloading`)\n                  window.location.reload()\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a \"Content is cached for offline use.\" message.\n                console.log(`Content is now available offline!`)\n\n                // Post to service worker that install is complete.\n                // Delay to allow time for the event listener to be added --\n                // otherwise fetch is called too soon and resources aren't cached.\n                apiRunner(`onServiceWorkerInstalled`, { serviceWorker: reg })\n              }\n              break\n\n            case `redundant`:\n              console.error(`The installing service worker became redundant.`)\n              apiRunner(`onServiceWorkerRedundant`, { serviceWorker: reg })\n              break\n\n            case `activated`:\n              apiRunner(`onServiceWorkerActive`, { serviceWorker: reg })\n              break\n          }\n        })\n      })\n    })\n    .catch(function (e) {\n      console.error(`Error during service worker registration:`, e)\n    })\n}\n","// prefer default export if available\nconst preferDefault = m => (m && m.default) || m\n\nexports.components = {\n  \"component---src-pages-404-js\": () => import(\"./../../../src/pages/404.js\" /* webpackChunkName: \"component---src-pages-404-js\" */),\n  \"component---src-pages-activity-map-tsx\": () => import(\"./../../../src/pages/activity-map.tsx\" /* webpackChunkName: \"component---src-pages-activity-map-tsx\" */),\n  \"component---src-pages-get-involved-js\": () => import(\"./../../../src/pages/get-involved.js\" /* webpackChunkName: \"component---src-pages-get-involved-js\" */),\n  \"component---src-pages-index-js\": () => import(\"./../../../src/pages/index.js\" /* webpackChunkName: \"component---src-pages-index-js\" */),\n  \"component---src-pages-issues-chronology-tsx\": () => import(\"./../../../src/pages/issues-chronology.tsx\" /* webpackChunkName: \"component---src-pages-issues-chronology-tsx\" */),\n  \"component---src-pages-operational-review-tsx\": () => import(\"./../../../src/pages/operational-review.tsx\" /* webpackChunkName: \"component---src-pages-operational-review-tsx\" */),\n  \"component---src-templates-life-stage-tsx\": () => import(\"./../../../src/templates/life-stage.tsx\" /* webpackChunkName: \"component---src-templates-life-stage-tsx\" */)\n}\n\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  React\n};","module.exports = {\n  \"default\": require(\"core-js/library/fn/object/assign\"),\n  __esModule: true\n};","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport CovidImpactRedundanciesSVG from \"../../../../src/content/early-years/svg/early-years-graph-3.svg\";\nimport CovidImpactChildCareSVG from \"../../../../src/content/early-years/svg/early-years-graph-4.svg\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  CovidImpactRedundanciesSVG,\n  CovidImpactChildCareSVG,\n  React\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport ApprenticeshipsDesktop from \"../../../../src/content/further-education/svg/apprenticeships-desktop.svg\";\nimport ApprenticeshipsMobile from \"../../../../src/content/further-education/svg/apprenticeships-mobile.svg\";\nimport ApprenticeshipsTablet from \"../../../../src/content/further-education/svg/apprenticeships-tablet.svg\";\nimport ResizableGraph from \"../../../../src/components/research/resizable-graph\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  ApprenticeshipsDesktop,\n  ApprenticeshipsMobile,\n  ApprenticeshipsTablet,\n  ResizableGraph,\n  React\n};","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph3Mobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 12 Copy 2\"),React.createElement(\"defs\",{\"key\":1},[React.createElement(\"path\",{\"d\":\"M0.0570501883,0.0173873752 C13.4226914,9.502733 24.1895723,16.1752939 32.3576926,20.0350701 C40.525813,23.8948463 51.2079152,27.357821 64.4039993,30.4239941 L64.4039993,25.6096147 C54.2569565,21.7962486 45.2704261,18.333274 37.444408,15.2206907 C29.6183898,12.1081075 17.1559372,7.0403397 0.0570501883,0.0173873752 Z\",\"id\":\"path-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0,68.9360959 C12.9890831,56.8384295 23.8561616,48.6135816 32.6012356,44.2615524 C38.685778,41.2335498 47.3096773,37.350209 58.3256481,34.5952363 C61.5368825,33.7921421 66.8006237,32.9442196 74.1168716,32.051469 C90.1755273,32.8299144 105.457357,35.6280585 119.962359,40.4459013 C134.467362,45.2637441 156.201519,54.7604757 185.16483,68.9360959 C160.872002,46.5745676 142.618706,31.3967556 130.404942,23.4026599 C123.086953,18.6129235 112.690623,9.67767067 102.133558,5.08753476 C97.4250699,3.04031765 90.1237515,1.42926498 80.2296033,0.254376738 C73.8405407,0.999157504 69.340891,1.84707996 66.7306542,2.79814412 C60.5676626,5.04368756 55.9261725,8.97452157 51.9582193,11.7013299 C45.4694209,16.1604827 36.3852224,25.0636685 24.7056239,38.4108874 L0,68.9360959 Z\",\"id\":\"path-3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":2},React.createElement(\"g\",{\"id\":\"Mobile/Timeline/School-years/Early-years-foundation-stage-Copy\",\"transform\":\"translate(-12.000000, -2523.000000)\"},React.createElement(\"g\",{\"id\":\"Group-12-Copy\",\"transform\":\"translate(12.000000, 2523.000000)\"},[React.createElement(\"line\",{\"x1\":\"77.4690111\",\"y1\":\"187.203436\",\"x2\":\"349.072165\",\"y2\":\"187.203436\",\"id\":\"Line\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"158.969417\",\"x2\":\"349.331595\",\"y2\":\"158.969417\",\"id\":\"Line-Copy\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"130.527484\",\"x2\":\"349.331595\",\"y2\":\"130.527484\",\"id\":\"Line-Copy-2\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"103.179471\",\"x2\":\"349.331595\",\"y2\":\"103.179471\",\"id\":\"Line-Copy-3\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"75.0110173\",\"x2\":\"349.331595\",\"y2\":\"75.0110173\",\"id\":\"Line-Copy-4\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"77.7284414\",\"y1\":\"47.1160442\",\"x2\":\"349.331595\",\"y2\":\"47.1160442\",\"id\":\"Line-Copy-5\",\"stroke\":\"#F3F3F3\",\"strokeLinecap\":\"square\",\"key\":5}),React.createElement(\"g\",{\"id\":\"Group-35\",\"transform\":\"translate(285.318552, 151.311973)\",\"key\":6},[React.createElement(\"mask\",{\"id\":\"mask-2\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-1\"})),React.createElement(\"use\",{\"id\":\"Path-6-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#FFBA08\",\"xlinkHref\":\"#path-1\",\"key\":1}),React.createElement(\"g\",{\"id\":\"Group-11-Copy-2\",\"mask\":\"url(#mask-2)\",\"strokeLinecap\":\"square\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(28.752453, 20.995183) rotate(-345.000000) translate(-28.752453, -20.995183) translate(-10.236028, -14.960861)\"},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.000000, -0.000000)\",\"key\":0},[React.createElement(\"line\",{\"x1\":\"0.705890966\",\"y1\":\"-2.06352723e-12\",\"x2\":\"0.705890966\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.17464348\",\"y1\":\"0\",\"x2\":\"3.17464348\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.64339599\",\"y1\":\"0\",\"x2\":\"5.64339599\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.11214851\",\"y1\":\"-1.03176361e-12\",\"x2\":\"8.11214851\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.580901\",\"y1\":\"-5.15881807e-13\",\"x2\":\"10.580901\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-2\",\"transform\":\"translate(59.230247, -0.000000)\",\"key\":1},[React.createElement(\"line\",{\"x1\":\"0.725704722\",\"y1\":\"0\",\"x2\":\"0.725704722\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.19445724\",\"y1\":\"0\",\"x2\":\"3.19445724\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.66320975\",\"y1\":\"0\",\"x2\":\"5.66320975\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.13196226\",\"y1\":\"0\",\"x2\":\"8.13196226\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.6007148\",\"y1\":\"0\",\"x2\":\"10.6007148\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"13.0694673\",\"y1\":\"0\",\"x2\":\"13.0694673\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.5382198\",\"y1\":\"0\",\"x2\":\"15.5382198\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"18.0069723\",\"y1\":\"0\",\"x2\":\"18.0069723\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":7})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy\",\"transform\":\"translate(12.432465, 0.000000)\",\"key\":2},[React.createElement(\"line\",{\"x1\":\"0.617188128\",\"y1\":\"0\",\"x2\":\"0.617188128\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.08594064\",\"y1\":\"0\",\"x2\":\"3.08594064\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.55469315\",\"y1\":\"0\",\"x2\":\"5.55469315\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.02344567\",\"y1\":\"0\",\"x2\":\"8.02344567\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.4921982\",\"y1\":\"0\",\"x2\":\"10.4921982\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"12.9609507\",\"y1\":\"0\",\"x2\":\"12.9609507\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.4297032\",\"y1\":\"0\",\"x2\":\"15.4297032\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"17.8984557\",\"y1\":\"0\",\"x2\":\"17.8984557\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.3672082\",\"y1\":\"0\",\"x2\":\"20.3672082\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.8359607\",\"y1\":\"0\",\"x2\":\"22.8359607\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.3047133\",\"y1\":\"0\",\"x2\":\"25.3047133\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.7734658\",\"y1\":\"0\",\"x2\":\"27.7734658\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.2422183\",\"y1\":\"0\",\"x2\":\"30.2422183\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.7109708\",\"y1\":\"0\",\"x2\":\"32.7109708\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.1797233\",\"y1\":\"0\",\"x2\":\"35.1797233\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.6484758\",\"y1\":\"0\",\"x2\":\"37.6484758\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.1172283\",\"y1\":\"0\",\"x2\":\"40.1172283\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.5859809\",\"y1\":\"0\",\"x2\":\"42.5859809\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.0547334\",\"y1\":\"0\",\"x2\":\"45.0547334\",\"y2\":\"71.4555258\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"0.5\",\"key\":18})])]))]),React.createElement(\"g\",{\"id\":\"Group-34\",\"transform\":\"translate(91.147661, 76.651898)\",\"key\":7},[React.createElement(\"mask\",{\"id\":\"mask-4\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-3\"})),React.createElement(\"use\",{\"id\":\"Path-5-Copy\",\"fillOpacity\":\"0.2\",\"fill\":\"#3772FF\",\"xlinkHref\":\"#path-3\",\"key\":1}),React.createElement(\"g\",{\"id\":\"Group-11\",\"mask\":\"url(#mask-4)\",\"strokeLinecap\":\"square\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(99.417658, 42.376051) rotate(-345.000000) translate(-99.417658, -42.376051) translate(6.076919, -12.916704)\"},[React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(0.175124, 0.292629)\",\"key\":0},[React.createElement(\"line\",{\"x1\":\"0.509394307\",\"y1\":\"0\",\"x2\":\"0.509394307\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"2.98165467\",\"y1\":\"0\",\"x2\":\"2.98165467\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.45391504\",\"y1\":\"0\",\"x2\":\"5.45391504\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"7.92617541\",\"y1\":\"0\",\"x2\":\"7.92617541\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.3984358\",\"y1\":\"0\",\"x2\":\"10.3984358\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"12.8706961\",\"y1\":\"0\",\"x2\":\"12.8706961\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.3429565\",\"y1\":\"0\",\"x2\":\"15.3429565\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"17.8152169\",\"y1\":\"0\",\"x2\":\"17.8152169\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.2874772\",\"y1\":\"0\",\"x2\":\"20.2874772\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.7597376\",\"y1\":\"0\",\"x2\":\"22.7597376\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.231998\",\"y1\":\"0\",\"x2\":\"25.231998\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.7042584\",\"y1\":\"0\",\"x2\":\"27.7042584\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.1765187\",\"y1\":\"0\",\"x2\":\"30.1765187\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.6487791\",\"y1\":\"0\",\"x2\":\"32.6487791\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.1210395\",\"y1\":\"0\",\"x2\":\"35.1210395\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.5932998\",\"y1\":\"0\",\"x2\":\"37.5932998\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.0655602\",\"y1\":\"0\",\"x2\":\"40.0655602\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.5378206\",\"y1\":\"0\",\"x2\":\"42.5378206\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.0100809\",\"y1\":\"0\",\"x2\":\"45.0100809\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-2\",\"transform\":\"translate(93.462218, 0.082790)\",\"key\":1},[React.createElement(\"line\",{\"x1\":\"0.726735877\",\"y1\":\"0\",\"x2\":\"0.726735877\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.19899624\",\"y1\":\"0\",\"x2\":\"3.19899624\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.67125661\",\"y1\":\"0\",\"x2\":\"5.67125661\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.14351698\",\"y1\":\"0\",\"x2\":\"8.14351698\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.6157773\",\"y1\":\"0\",\"x2\":\"10.6157773\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"13.0880377\",\"y1\":\"0\",\"x2\":\"13.0880377\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.5602981\",\"y1\":\"0\",\"x2\":\"15.5602981\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"18.0325585\",\"y1\":\"0\",\"x2\":\"18.0325585\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.5048188\",\"y1\":\"0\",\"x2\":\"20.5048188\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.9770792\",\"y1\":\"0\",\"x2\":\"22.9770792\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.4493396\",\"y1\":\"0\",\"x2\":\"25.4493396\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.9215999\",\"y1\":\"0\",\"x2\":\"27.9215999\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.3938603\",\"y1\":\"0\",\"x2\":\"30.3938603\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.8661207\",\"y1\":\"0\",\"x2\":\"32.8661207\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.338381\",\"y1\":\"0\",\"x2\":\"35.338381\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.8106414\",\"y1\":\"0\",\"x2\":\"37.8106414\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.2829018\",\"y1\":\"0\",\"x2\":\"40.2829018\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.7551621\",\"y1\":\"0\",\"x2\":\"42.7551621\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.2274225\",\"y1\":\"0\",\"x2\":\"45.2274225\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy\",\"transform\":\"translate(47.130610, 0.367581)\",\"key\":2},[React.createElement(\"line\",{\"x1\":\"0.618065092\",\"y1\":\"0\",\"x2\":\"0.618065092\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.09032546\",\"y1\":\"0\",\"x2\":\"3.09032546\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.56258583\",\"y1\":\"0\",\"x2\":\"5.56258583\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"8.03484619\",\"y1\":\"0\",\"x2\":\"8.03484619\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.5071066\",\"y1\":\"0\",\"x2\":\"10.5071066\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"12.9793669\",\"y1\":\"0\",\"x2\":\"12.9793669\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.4516273\",\"y1\":\"0\",\"x2\":\"15.4516273\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"17.9238877\",\"y1\":\"0\",\"x2\":\"17.9238877\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.396148\",\"y1\":\"0\",\"x2\":\"20.396148\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.8684084\",\"y1\":\"0\",\"x2\":\"22.8684084\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.3406688\",\"y1\":\"0\",\"x2\":\"25.3406688\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.8129291\",\"y1\":\"0\",\"x2\":\"27.8129291\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.2851895\",\"y1\":\"0\",\"x2\":\"30.2851895\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.7574499\",\"y1\":\"0\",\"x2\":\"32.7574499\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.2297102\",\"y1\":\"0\",\"x2\":\"35.2297102\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.7019706\",\"y1\":\"0\",\"x2\":\"37.7019706\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.174231\",\"y1\":\"0\",\"x2\":\"40.174231\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.6464913\",\"y1\":\"0\",\"x2\":\"42.6464913\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.1187517\",\"y1\":\"0\",\"x2\":\"45.1187517\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})]),React.createElement(\"g\",{\"id\":\"Group-10-Copy-3\",\"transform\":\"translate(140.701655, 0.157742)\",\"key\":3},[React.createElement(\"line\",{\"x1\":\"0.551456391\",\"y1\":\"0\",\"x2\":\"0.551456391\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"3.02371676\",\"y1\":\"0\",\"x2\":\"3.02371676\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-2\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":1}),React.createElement(\"line\",{\"x1\":\"5.49597713\",\"y1\":\"0\",\"x2\":\"5.49597713\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"7.96823749\",\"y1\":\"0\",\"x2\":\"7.96823749\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-4\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"10.4404979\",\"y1\":\"0\",\"x2\":\"10.4404979\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-5\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"12.9127582\",\"y1\":\"0\",\"x2\":\"12.9127582\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-6\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":5}),React.createElement(\"line\",{\"x1\":\"15.3850186\",\"y1\":\"0\",\"x2\":\"15.3850186\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":6}),React.createElement(\"line\",{\"x1\":\"17.857279\",\"y1\":\"0\",\"x2\":\"17.857279\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-8\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":7}),React.createElement(\"line\",{\"x1\":\"20.3295393\",\"y1\":\"0\",\"x2\":\"20.3295393\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-9\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":8}),React.createElement(\"line\",{\"x1\":\"22.8017997\",\"y1\":\"0\",\"x2\":\"22.8017997\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-10\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":9}),React.createElement(\"line\",{\"x1\":\"25.2740601\",\"y1\":\"5.15806298e-13\",\"x2\":\"25.2740601\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-11\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":10}),React.createElement(\"line\",{\"x1\":\"27.7463204\",\"y1\":\"0\",\"x2\":\"27.7463204\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-12\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":11}),React.createElement(\"line\",{\"x1\":\"30.2185808\",\"y1\":\"0\",\"x2\":\"30.2185808\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-13\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":12}),React.createElement(\"line\",{\"x1\":\"32.6908412\",\"y1\":\"0\",\"x2\":\"32.6908412\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-14\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":13}),React.createElement(\"line\",{\"x1\":\"35.1631015\",\"y1\":\"0\",\"x2\":\"35.1631015\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-15\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":14}),React.createElement(\"line\",{\"x1\":\"37.6353619\",\"y1\":\"0\",\"x2\":\"37.6353619\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-16\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":15}),React.createElement(\"line\",{\"x1\":\"40.1076223\",\"y1\":\"0\",\"x2\":\"40.1076223\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-17\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":16}),React.createElement(\"line\",{\"x1\":\"42.5798826\",\"y1\":\"0\",\"x2\":\"42.5798826\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-18\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":17}),React.createElement(\"line\",{\"x1\":\"45.052143\",\"y1\":\"-5.15806298e-13\",\"x2\":\"45.052143\",\"y2\":\"109.890751\",\"id\":\"Line-5-Copy-19\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"0.5\",\"key\":18})])]))]),React.createElement(\"path\",{\"d\":\"M80.4819356,156.888923 C111.426831,122.809029 142.626767,106.786392 174.081743,108.821013 C196.211915,110.252472 225.055205,119.464691 279.923488,147.224475 C303.047146,158.923543 326.085791,168.672767 349.039422,176.472145\",\"id\":\"Path-3-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"1.5\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M80.4819356,157.478678 C94.1621794,141.393052 103.768699,130.09587 109.301495,123.587134 C137.202422,90.7647098 153.678516,74.9158192 176.377107,77.4640556 C199.075698,80.012292 214.888199,92.4986503 279.923488,147.79538 C286.339541,153.250676 297.231593,161.327471 313.333774,169.200566 C321.325038,173.107862 333.226921,177.354922 349.039422,181.941748\",\"id\":\"Path-4-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"1.5\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":9}),React.createElement(\"text\",{\"id\":\"18\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":10},React.createElement(\"tspan\",{\"x\":\"70.1595094\",\"y\":\"204.395599\"},\"18\")),React.createElement(\"text\",{\"id\":\"42\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":11},React.createElement(\"tspan\",{\"x\":\"199.500344\",\"y\":\"204.395599\"},\"42\")),React.createElement(\"text\",{\"id\":\"£0\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":12},React.createElement(\"tspan\",{\"x\":\"52.0969385\",\"y\":\"182.950083\"},\"£0\")),React.createElement(\"text\",{\"id\":\"£5k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":13},React.createElement(\"tspan\",{\"x\":\"45.0269385\",\"y\":\"154.92429\"},\"£5k\")),React.createElement(\"text\",{\"id\":\"£10k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":14},React.createElement(\"tspan\",{\"x\":\"38.6289385\",\"y\":\"126.898496\"},\"£10k\")),React.createElement(\"text\",{\"id\":\"£15k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":15},React.createElement(\"tspan\",{\"x\":\"39.9729385\",\"y\":\"98.872702\"},\"£15k\")),React.createElement(\"text\",{\"id\":\"£20k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":16},React.createElement(\"tspan\",{\"x\":\"35.7309385\",\"y\":\"70.8469082\"},\"£20k\")),React.createElement(\"text\",{\"id\":\"£25k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":17},React.createElement(\"tspan\",{\"x\":\"37.0749385\",\"y\":\"42.8211144\"},\"£25k\")),React.createElement(\"text\",{\"id\":\"Discounted-Yearly-Pr\",\"transform\":\"translate(11.322581, 117.617102) rotate(-90.000000) translate(-11.322581, -117.617102) \",\"fontFamily\":\"Montserrat-SemiBold, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"500\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":18},React.createElement(\"tspan\",{\"x\":\"-100.719419\",\"y\":\"120.353763\"},\"Discounted Yearly Productivity \")),React.createElement(\"text\",{\"id\":\"Age\",\"transform\":\"translate(213.240701, 225.918437) rotate(-360.000000) translate(-213.240701, -225.918437) \",\"fontFamily\":\"Montserrat-SemiBold, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"500\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":19},React.createElement(\"tspan\",{\"x\":\"198.785701\",\"y\":\"228.655098\"},\"Age\")),React.createElement(\"text\",{\"id\":\"66\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":20},React.createElement(\"tspan\",{\"x\":\"332.215179\",\"y\":\"204.395599\"},\"66\"))])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph3Mobile.defaultProps = {\"width\":\"351px\",\"height\":\"238px\",\"viewBox\":\"0 0 351 238\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph3Mobile;\n\nSchoolYearsGapsInAttainmentGraph3Mobile.default = SchoolYearsGapsInAttainmentGraph3Mobile;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","import OverviewSVG from \"../../../../src/content/early-years/svg/early-years-graph-1.svg\";\nimport * as React from 'react';\nexport default {\n  OverviewSVG,\n  React\n};","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// This is extracted to separate module because it's shared\n// between browser and SSR code\nexport const RouteAnnouncerProps = {\n  id: `gatsby-announcer`,\n  style: {\n    position: `absolute`,\n    top: 0,\n    width: 1,\n    height: 1,\n    padding: 0,\n    overflow: `hidden`,\n    clip: `rect(0, 0, 0, 0)`,\n    whiteSpace: `nowrap`,\n    border: 0,\n  },\n  \"aria-live\": `assertive`,\n  \"aria-atomic\": `true`,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport loader, { PageResourceStatus } from \"./loader\"\nimport redirects from \"./redirects.json\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport emitter from \"./emitter\"\nimport { RouteAnnouncerProps } from \"./route-announcer-props\"\nimport { navigate as reachNavigate } from \"@reach/router\"\nimport { globalHistory } from \"@reach/router/lib/history\"\nimport { parsePath } from \"gatsby-link\"\n\n// Convert to a map for faster lookup in maybeRedirect()\nconst redirectMap = redirects.reduce((map, redirect) => {\n  map[redirect.fromPath] = redirect\n  return map\n}, {})\n\nfunction maybeRedirect(pathname) {\n  const redirect = redirectMap[pathname]\n\n  if (redirect != null) {\n    if (process.env.NODE_ENV !== `production`) {\n      if (!loader.isPageNotFound(pathname)) {\n        console.error(\n          `The route \"${pathname}\" matches both a page and a redirect; this is probably not intentional.`\n        )\n      }\n    }\n\n    window.___replace(redirect.toPath)\n    return true\n  } else {\n    return false\n  }\n}\n\nconst onPreRouteUpdate = (location, prevLocation) => {\n  if (!maybeRedirect(location.pathname)) {\n    apiRunner(`onPreRouteUpdate`, { location, prevLocation })\n  }\n}\n\nconst onRouteUpdate = (location, prevLocation) => {\n  if (!maybeRedirect(location.pathname)) {\n    apiRunner(`onRouteUpdate`, { location, prevLocation })\n  }\n}\n\nconst navigate = (to, options = {}) => {\n  // Support forward/backward navigation with numbers\n  // navigate(-2) (jumps back 2 history steps)\n  // navigate(2)  (jumps forward 2 history steps)\n  if (typeof to === `number`) {\n    globalHistory.navigate(to)\n    return\n  }\n\n  let { pathname } = parsePath(to)\n  const redirect = redirectMap[pathname]\n\n  // If we're redirecting, just replace the passed in pathname\n  // to the one we want to redirect to.\n  if (redirect) {\n    to = redirect.toPath\n    pathname = parsePath(to).pathname\n  }\n\n  // If we had a service worker update, no matter the path, reload window and\n  // reset the pathname whitelist\n  if (window.___swUpdated) {\n    window.location = pathname\n    return\n  }\n\n  // Start a timer to wait for a second before transitioning and showing a\n  // loader in case resources aren't around yet.\n  const timeoutId = setTimeout(() => {\n    emitter.emit(`onDelayedLoadPageResources`, { pathname })\n    apiRunner(`onRouteUpdateDelayed`, {\n      location: window.location,\n    })\n  }, 1000)\n\n  loader.loadPage(pathname).then(pageResources => {\n    // If no page resources, then refresh the page\n    // Do this, rather than simply `window.location.reload()`, so that\n    // pressing the back/forward buttons work - otherwise when pressing\n    // back, the browser will just change the URL and expect JS to handle\n    // the change, which won't always work since it might not be a Gatsby\n    // page.\n    if (!pageResources || pageResources.status === PageResourceStatus.Error) {\n      window.history.replaceState({}, ``, location.href)\n      window.location = pathname\n      clearTimeout(timeoutId)\n      return\n    }\n\n    // If the loaded page has a different compilation hash to the\n    // window, then a rebuild has occurred on the server. Reload.\n    if (process.env.NODE_ENV === `production` && pageResources) {\n      if (\n        pageResources.page.webpackCompilationHash !==\n        window.___webpackCompilationHash\n      ) {\n        // Purge plugin-offline cache\n        if (\n          `serviceWorker` in navigator &&\n          navigator.serviceWorker.controller !== null &&\n          navigator.serviceWorker.controller.state === `activated`\n        ) {\n          navigator.serviceWorker.controller.postMessage({\n            gatsbyApi: `clearPathResources`,\n          })\n        }\n\n        console.log(`Site has changed on server. Reloading browser`)\n        window.location = pathname\n      }\n    }\n    reachNavigate(to, options)\n    clearTimeout(timeoutId)\n  })\n}\n\nfunction shouldUpdateScroll(prevRouterProps, { location }) {\n  const { pathname, hash } = location\n  const results = apiRunner(`shouldUpdateScroll`, {\n    prevRouterProps,\n    // `pathname` for backwards compatibility\n    pathname,\n    routerProps: { location },\n    getSavedScrollPosition: args => this._stateStorage.read(args),\n  })\n  if (results.length > 0) {\n    // Use the latest registered shouldUpdateScroll result, this allows users to override plugin's configuration\n    // @see https://github.com/gatsbyjs/gatsby/issues/12038\n    return results[results.length - 1]\n  }\n\n  if (prevRouterProps) {\n    const {\n      location: { pathname: oldPathname },\n    } = prevRouterProps\n    if (oldPathname === pathname) {\n      // Scroll to element if it exists, if it doesn't, or no hash is provided,\n      // scroll to top.\n      return hash ? decodeURI(hash.slice(1)) : [0, 0]\n    }\n  }\n  return true\n}\n\nfunction init() {\n  // The \"scroll-behavior\" package expects the \"action\" to be on the location\n  // object so let's copy it over.\n  globalHistory.listen(args => {\n    args.location.action = args.action\n  })\n\n  window.___push = to => navigate(to, { replace: false })\n  window.___replace = to => navigate(to, { replace: true })\n  window.___navigate = (to, options) => navigate(to, options)\n\n  // Check for initial page-load redirect\n  maybeRedirect(window.location.pathname)\n}\n\nclass RouteAnnouncer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.announcementRef = React.createRef()\n  }\n\n  componentDidUpdate(prevProps, nextProps) {\n    requestAnimationFrame(() => {\n      let pageName = `new page at ${this.props.location.pathname}`\n      if (document.title) {\n        pageName = document.title\n      }\n      const pageHeadings = document.querySelectorAll(`#gatsby-focus-wrapper h1`)\n      if (pageHeadings && pageHeadings.length) {\n        pageName = pageHeadings[0].textContent\n      }\n      const newAnnouncement = `Navigated to ${pageName}`\n      if (this.announcementRef.current) {\n        const oldAnnouncement = this.announcementRef.current.innerText\n        if (oldAnnouncement !== newAnnouncement) {\n          this.announcementRef.current.innerText = newAnnouncement\n        }\n      }\n    })\n  }\n\n  render() {\n    return <div {...RouteAnnouncerProps} ref={this.announcementRef}></div>\n  }\n}\n\n// Fire on(Pre)RouteUpdate APIs\nclass RouteUpdates extends React.Component {\n  constructor(props) {\n    super(props)\n    onPreRouteUpdate(props.location, null)\n  }\n\n  componentDidMount() {\n    onRouteUpdate(this.props.location, null)\n  }\n\n  componentDidUpdate(prevProps, prevState, shouldFireRouteUpdate) {\n    if (shouldFireRouteUpdate) {\n      onRouteUpdate(this.props.location, prevProps.location)\n    }\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      onPreRouteUpdate(this.props.location, prevProps.location)\n      return true\n    }\n\n    return false\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.children}\n        <RouteAnnouncer location={location} />\n      </React.Fragment>\n    )\n  }\n}\n\nRouteUpdates.propTypes = {\n  location: PropTypes.object.isRequired,\n}\n\nexport { init, shouldUpdateScroll, RouteUpdates }\n","// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) return true;\n  }for (var _i in b) {\n    if (a[_i] !== b[_i]) return true;\n  }return false;\n}\n\nexport default (function (instance, nextProps, nextState) {\n  return shallowDiffers(instance.props, nextProps) || shallowDiffers(instance.state, nextState);\n});","import React from \"react\"\nimport loader, { PageResourceStatus } from \"./loader\"\nimport shallowCompare from \"shallow-compare\"\n\nclass EnsureResources extends React.Component {\n  constructor(props) {\n    super()\n    const { location, pageResources } = props\n    this.state = {\n      location: { ...location },\n      pageResources: pageResources || loader.loadPageSync(location.pathname),\n    }\n  }\n\n  static getDerivedStateFromProps({ location }, prevState) {\n    if (prevState.location.href !== location.href) {\n      const pageResources = loader.loadPageSync(location.pathname)\n      return {\n        pageResources,\n        location: { ...location },\n      }\n    }\n\n    return {\n      location: { ...location },\n    }\n  }\n\n  loadResources(rawPath) {\n    loader.loadPage(rawPath).then(pageResources => {\n      if (pageResources && pageResources.status !== PageResourceStatus.Error) {\n        this.setState({\n          location: { ...window.location },\n          pageResources,\n        })\n      } else {\n        window.history.replaceState({}, ``, location.href)\n        window.location = rawPath\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Always return false if we're missing resources.\n    if (!nextState.pageResources) {\n      this.loadResources(nextProps.location.pathname)\n      return false\n    }\n\n    // Check if the component or json have changed.\n    if (this.state.pageResources !== nextState.pageResources) {\n      return true\n    }\n    if (\n      this.state.pageResources.component !== nextState.pageResources.component\n    ) {\n      return true\n    }\n\n    if (this.state.pageResources.json !== nextState.pageResources.json) {\n      return true\n    }\n    // Check if location has changed on a page using internal routing\n    // via matchPath configuration.\n    if (\n      this.state.location.key !== nextState.location.key &&\n      nextState.pageResources.page &&\n      (nextState.pageResources.page.matchPath ||\n        nextState.pageResources.page.path)\n    ) {\n      return true\n    }\n    return shallowCompare(this, nextProps, nextState)\n  }\n\n  render() {\n    if (process.env.NODE_ENV !== `production` && !this.state.pageResources) {\n      throw new Error(\n        `EnsureResources was not able to find resources for path: \"${this.props.location.pathname}\"\nThis typically means that an issue occurred building components for that path.\nRun \\`gatsby clean\\` to remove any cached elements.`\n      )\n    }\n\n    return this.props.children(this.state)\n  }\n}\n\nexport default EnsureResources\n","import { apiRunner, apiRunnerAsync } from \"./api-runner-browser\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Router, navigate, Location, BaseContext } from \"@reach/router\"\nimport { ScrollContext } from \"gatsby-react-router-scroll\"\nimport domReady from \"@mikaelkristiansson/domready\"\nimport { StaticQueryContext } from \"gatsby\"\nimport {\n  shouldUpdateScroll,\n  init as navigationInit,\n  RouteUpdates,\n} from \"./navigation\"\nimport emitter from \"./emitter\"\nimport PageRenderer from \"./page-renderer\"\nimport asyncRequires from \"$virtual/async-requires\"\nimport {\n  setLoader,\n  ProdLoader,\n  publicLoader,\n  PageResourceStatus,\n  getStaticQueryResults,\n} from \"./loader\"\nimport EnsureResources from \"./ensure-resources\"\nimport stripPrefix from \"./strip-prefix\"\n\n// Generated during bootstrap\nimport matchPaths from \"$virtual/match-paths.json\"\n\nconst loader = new ProdLoader(asyncRequires, matchPaths)\nsetLoader(loader)\nloader.setApiRunner(apiRunner)\n\nwindow.asyncRequires = asyncRequires\nwindow.___emitter = emitter\nwindow.___loader = publicLoader\n\nnavigationInit()\n\napiRunnerAsync(`onClientEntry`).then(() => {\n  // Let plugins register a service worker. The plugin just needs\n  // to return true.\n  if (apiRunner(`registerServiceWorker`).length > 0) {\n    require(`./register-service-worker`)\n  }\n\n  // In gatsby v2 if Router is used in page using matchPaths\n  // paths need to contain full path.\n  // For example:\n  //   - page have `/app/*` matchPath\n  //   - inside template user needs to use `/app/xyz` as path\n  // Resetting `basepath`/`baseuri` keeps current behaviour\n  // to not introduce breaking change.\n  // Remove this in v3\n  const RouteHandler = props => (\n    <BaseContext.Provider\n      value={{\n        baseuri: `/`,\n        basepath: `/`,\n      }}\n    >\n      <PageRenderer {...props} />\n    </BaseContext.Provider>\n  )\n\n  const DataContext = React.createContext({})\n\n  class GatsbyRoot extends React.Component {\n    render() {\n      const { children } = this.props\n      return (\n        <Location>\n          {({ location }) => (\n            <EnsureResources location={location}>\n              {({ pageResources, location }) => {\n                const staticQueryResults = getStaticQueryResults()\n                return (\n                  <StaticQueryContext.Provider value={staticQueryResults}>\n                    <DataContext.Provider value={{ pageResources, location }}>\n                      {children}\n                    </DataContext.Provider>\n                  </StaticQueryContext.Provider>\n                )\n              }}\n            </EnsureResources>\n          )}\n        </Location>\n      )\n    }\n  }\n\n  class LocationHandler extends React.Component {\n    render() {\n      return (\n        <DataContext.Consumer>\n          {({ pageResources, location }) => (\n            <RouteUpdates location={location}>\n              <ScrollContext\n                location={location}\n                shouldUpdateScroll={shouldUpdateScroll}\n              >\n                <Router\n                  basepath={__BASE_PATH__}\n                  location={location}\n                  id=\"gatsby-focus-wrapper\"\n                >\n                  <RouteHandler\n                    path={\n                      pageResources.page.path === `/404.html`\n                        ? stripPrefix(location.pathname, __BASE_PATH__)\n                        : encodeURI(\n                            pageResources.page.matchPath ||\n                              pageResources.page.path\n                          )\n                    }\n                    {...this.props}\n                    location={location}\n                    pageResources={pageResources}\n                    {...pageResources.json}\n                  />\n                </Router>\n              </ScrollContext>\n            </RouteUpdates>\n          )}\n        </DataContext.Consumer>\n      )\n    }\n  }\n\n  const { pagePath, location: browserLoc } = window\n\n  // Explicitly call navigate if the canonical path (window.pagePath)\n  // is different to the browser path (window.location.pathname). But\n  // only if NONE of the following conditions hold:\n  //\n  // - The url matches a client side route (page.matchPath)\n  // - it's a 404 page\n  // - it's the offline plugin shell (/offline-plugin-app-shell-fallback/)\n  if (\n    pagePath &&\n    __BASE_PATH__ + pagePath !== browserLoc.pathname &&\n    !(\n      loader.findMatchPath(stripPrefix(browserLoc.pathname, __BASE_PATH__)) ||\n      pagePath === `/404.html` ||\n      pagePath.match(/^\\/404\\/?$/) ||\n      pagePath.match(/^\\/offline-plugin-app-shell-fallback\\/?$/)\n    )\n  ) {\n    navigate(__BASE_PATH__ + pagePath + browserLoc.search + browserLoc.hash, {\n      replace: true,\n    })\n  }\n\n  publicLoader.loadPage(browserLoc.pathname).then(page => {\n    if (!page || page.status === PageResourceStatus.Error) {\n      throw new Error(\n        `page resources for ${browserLoc.pathname} not found. Not rendering React`\n      )\n    }\n\n    window.___webpackCompilationHash = page.page.webpackCompilationHash\n\n    const SiteRoot = apiRunner(\n      `wrapRootElement`,\n      { element: <LocationHandler /> },\n      <LocationHandler />,\n      ({ result }) => {\n        return { element: result }\n      }\n    ).pop()\n\n    const App = () => <GatsbyRoot>{SiteRoot}</GatsbyRoot>\n\n    const renderer = apiRunner(\n      `replaceHydrateFunction`,\n      undefined,\n      ReactDOM.hydrate\n    )[0]\n\n    domReady(() => {\n      renderer(\n        <App />,\n        typeof window !== `undefined`\n          ? document.getElementById(`___gatsby`)\n          : void 0,\n        () => {\n          apiRunner(`onInitialClientRender`)\n        }\n      )\n    })\n  })\n})\n","var core = module.exports = { version: '2.6.11' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","import { useState, useEffect } from \"react\";\n\nexport type WindowSize = {\n  width: number;\n  height: number;\n};\n\nconst useWindowSize = () : WindowSize => {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n};\n\nexport default useWindowSize;\n","import React from \"react\";\nimport useWindowSize from \"../../util/useWindowSize\";\nimport { BreakPoint, screenSizes, mq } from \"../../util/mq\";\nimport { css } from \"@emotion/core\";\n\nconst graphContainerStyles = (fullSpan: boolean) => css`\n  ${mq(BreakPoint.lg)} {\n    ${fullSpan ? \"grid-column: 1 / span  2\" : \"\"};\n  }\n`;\n\ninterface ResizableGraphProps {\n  mobile: React.ReactNode;\n  tablet: React.ReactNode;\n  desktop: React.ReactNode;\n  children: any;\n  fullSpan: boolean;\n}\n\nconst ResizableGraph = ({\n  mobile,\n  tablet,\n  desktop,\n  fullSpan,\n  children\n}: ResizableGraphProps) => {\n  const { width } = useWindowSize();\n\n  let Graph = undefined;\n\n  if (width < screenSizes[BreakPoint.md]) {\n    Graph = mobile;\n  } else if (width < screenSizes[BreakPoint.lg]) {\n    Graph = tablet;\n  } else {\n    Graph = desktop;\n  }\n\n  return (\n    <div css={graphContainerStyles(fullSpan)}>\n        {children}\n      <Graph />\n    </div>\n  );\n};\n\nResizableGraph.defaultProps = {\n  fullSpan: true,\n};\n\nexport default ResizableGraph;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport { useScrollRestoration } from \"gatsby-react-router-scroll\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context?.[query]?.data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nfunction unstable_collectionGraphql() {\n  // TODO: Strip this out of the component and throw error if it gets called\n  return null\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  useScrollRestoration,\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n  // Experimental API\n  unstable_collectionGraphql,\n}\n","var React = require('react');\n\nfunction EarlyYearsGraph3 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 21\"),React.createElement(\"defs\",{\"key\":1},[React.createElement(\"polygon\",{\"id\":\"path-1\",\"points\":\"0 0.463195097 149.70632 0.463195097 149.70632 188.118256 0 188.118256\",\"key\":0}),React.createElement(\"polygon\",{\"id\":\"path-3\",\"points\":\"0.698134169 0.463195097 94.9792356 0.463195097 94.9792356 170.192891 0.698134169 170.192891\",\"key\":1})]),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":2},React.createElement(\"g\",{\"transform\":\"translate(-164.000000, -730.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(164.000000, 730.000000)\"},[React.createElement(\"g\",{\"key\":0},[React.createElement(\"g\",{\"key\":0},[React.createElement(\"g\",{\"transform\":\"translate(0.000000, 0.459230)\",\"key\":0},[React.createElement(\"mask\",{\"id\":\"mask-2\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-1\"})),React.createElement(\"g\",{\"key\":1}),React.createElement(\"path\",{\"d\":\"M94.2892559,94.2871751 L149.70632,170.192891 C107.581048,200.650528 48.6195684,191.357117 18.0134183,149.436255 C-12.5936584,107.514471 -3.25493242,48.8400177 38.8712655,18.3823811 C55.7213739,6.1989576 73.4601348,0.463195097 94.2892559,0.463195097 L94.2892559,94.2871751 Z\",\"id\":\"Fill-1\",\"fill\":\"#EFEFEF\",\"mask\":\"url(#mask-2)\",\"key\":2})]),React.createElement(\"g\",{\"transform\":\"translate(93.591122, 0.459230)\",\"key\":1},[React.createElement(\"mask\",{\"id\":\"mask-4\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#path-3\"})),React.createElement(\"g\",{\"key\":1}),React.createElement(\"path\",{\"d\":\"M0.698134169,94.2871751 L0.698134169,0.463195097 C52.7681571,0.463195097 94.9796063,42.4698172 94.9796063,94.2871751 C94.9796063,125.378328 81.3903607,151.918678 56.115198,170.192891 L0.698134169,94.2871751 Z\",\"id\":\"Fill-4\",\"fill\":\"#FFBA08\",\"mask\":\"url(#mask-4)\",\"key\":2})]),React.createElement(\"path\",{\"d\":\"M93.7146435,94.7473271 L34.6243598,128.697139 C15.7828917,96.2218423 26.9647141,54.6947373 59.5992896,35.9437736 C70.4660529,29.7017516 81.16602,26.8477026 93.7146435,26.8477026 L93.7146435,94.7473271 Z\",\"id\":\"Fill-7\",\"fill\":\"#D3D3D3\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M93.7146435,94.7473271 L152.804,128.697139 C133.962532,161.172437 92.2329385,172.300922 59.5992896,153.550881 C48.7315998,147.306092 40.8995982,139.512095 34.6243598,128.697139 L93.7146435,94.7473271 Z\",\"id\":\"Fill-9\",\"fill\":\"#D3D3D3\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M93.7146435,94.7473271 L93.7146435,26.8477026 C131.396653,26.8477026 161.945351,57.2472439 161.945351,94.7473271 C161.945351,107.23506 159.078312,117.883106 152.804,128.697139 L93.7146435,94.7473271 Z\",\"id\":\"Fill-11\",\"fill\":\"#3772FF\",\"key\":4})]),React.createElement(\"ellipse\",{\"id\":\"Oval\",\"fill\":\"#FFFFFF\",\"cx\":\"94.035533\",\"cy\":\"94.520202\",\"rx\":\"34.2385787\",\"ry\":\"34.0656566\",\"key\":1})]),React.createElement(\"text\",{\"id\":\"A-third-of-Early-Yea\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"26\",\"fill\":\"#2D3142\",\"key\":1},[React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"113\",\"key\":0},\"A third of Early Years \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"139\",\"key\":1},\"providers in financially \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"165\",\"key\":2},\"deprived areas may have \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"191\",\"key\":3},\"to close within a year\")]),React.createElement(\"text\",{\"id\":\"Over-40%-are-likely\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"26\",\"fill\":\"#2D3142\",\"key\":2},[React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"15\",\"key\":0},\"Over 40% are likely to \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"41\",\"key\":1},\"make redundancies in the \"),React.createElement(\"tspan\",{\"x\":\"231\",\"y\":\"67\",\"key\":2},\"coming year.\")]),React.createElement(\"line\",{\"x1\":\"197\",\"y1\":\"112.5\",\"x2\":\"217\",\"y2\":\"112.5\",\"id\":\"Line-3\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"4\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":3}),React.createElement(\"line\",{\"x1\":\"197\",\"y1\":\"14.5\",\"x2\":\"217\",\"y2\":\"14.5\",\"id\":\"Line-3-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"4\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":4})])))]);\n}\n\nEarlyYearsGraph3.defaultProps = {\"width\":\"446px\",\"height\":\"202px\",\"viewBox\":\"0 0 446 202\",\"version\":\"1.1\"};\n\nmodule.exports = EarlyYearsGraph3;\n\nEarlyYearsGraph3.default = EarlyYearsGraph3;\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport createContext from \"create-react-context\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { startsWith, pick, resolve, match, insertParams, validateRedirect, shallowCompare } from \"./lib/utils\";\nimport { globalHistory, navigate, createHistory, createMemorySource } from \"./lib/history\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar createNamedContext = function createNamedContext(name, defaultValue) {\n  var Ctx = createContext(defaultValue);\n  Ctx.displayName = name;\n  return Ctx;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Location Context/Provider\nvar LocationContext = createNamedContext(\"Location\");\n\n// sets up a listener if there isn't one already so apps don't need to be\n// wrapped in some top level provider\nvar Location = function Location(_ref) {\n  var children = _ref.children;\n  return React.createElement(\n    LocationContext.Consumer,\n    null,\n    function (context) {\n      return context ? children(context) : React.createElement(\n        LocationProvider,\n        null,\n        children\n      );\n    }\n  );\n};\n\nvar LocationProvider = function (_React$Component) {\n  _inherits(LocationProvider, _React$Component);\n\n  function LocationProvider() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LocationProvider);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      context: _this.getContext(),\n      refs: { unlisten: null }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  LocationProvider.prototype.getContext = function getContext() {\n    var _props$history = this.props.history,\n        navigate = _props$history.navigate,\n        location = _props$history.location;\n\n    return { navigate: navigate, location: location };\n  };\n\n  LocationProvider.prototype.componentDidCatch = function componentDidCatch(error, info) {\n    if (isRedirect(error)) {\n      var _navigate = this.props.history.navigate;\n\n      _navigate(error.uri, { replace: true });\n    } else {\n      throw error;\n    }\n  };\n\n  LocationProvider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevState.context.location !== this.state.context.location) {\n      this.props.history._onTransitionComplete();\n    }\n  };\n\n  LocationProvider.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var refs = this.state.refs,\n        history = this.props.history;\n\n    history._onTransitionComplete();\n    refs.unlisten = history.listen(function () {\n      Promise.resolve().then(function () {\n        // TODO: replace rAF with react deferred update API when it's ready https://github.com/facebook/react/issues/13306\n        requestAnimationFrame(function () {\n          if (!_this2.unmounted) {\n            _this2.setState(function () {\n              return { context: _this2.getContext() };\n            });\n          }\n        });\n      });\n    });\n  };\n\n  LocationProvider.prototype.componentWillUnmount = function componentWillUnmount() {\n    var refs = this.state.refs;\n\n    this.unmounted = true;\n    refs.unlisten();\n  };\n\n  LocationProvider.prototype.render = function render() {\n    var context = this.state.context,\n        children = this.props.children;\n\n    return React.createElement(\n      LocationContext.Provider,\n      { value: context },\n      typeof children === \"function\" ? children(context) : children || null\n    );\n  };\n\n  return LocationProvider;\n}(React.Component);\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nLocationProvider.defaultProps = {\n  history: globalHistory\n};\nprocess.env.NODE_ENV !== \"production\" ? LocationProvider.propTypes = {\n  history: PropTypes.object.isRequired\n} : void 0;\nvar ServerLocation = function ServerLocation(_ref2) {\n  var url = _ref2.url,\n      children = _ref2.children;\n\n  var searchIndex = url.indexOf(\"?\");\n  var searchExists = searchIndex > -1;\n  var pathname = void 0;\n  var search = \"\";\n  var hash = \"\";\n\n  if (searchExists) {\n    pathname = url.substring(0, searchIndex);\n    search = url.substring(searchIndex);\n  } else {\n    pathname = url;\n  }\n\n  return React.createElement(\n    LocationContext.Provider,\n    {\n      value: {\n        location: {\n          pathname: pathname,\n          search: search,\n          hash: hash\n        },\n        navigate: function navigate() {\n          throw new Error(\"You can't call navigate on the server.\");\n        }\n      }\n    },\n    children\n  );\n};\n////////////////////////////////////////////////////////////////////////////////\n// Sets baseuri and basepath for nested routers and links\nvar BaseContext = createNamedContext(\"Base\", { baseuri: \"/\", basepath: \"/\" });\n\n////////////////////////////////////////////////////////////////////////////////\n// The main event, welcome to the show everybody.\nvar Router = function Router(props) {\n  return React.createElement(\n    BaseContext.Consumer,\n    null,\n    function (baseContext) {\n      return React.createElement(\n        Location,\n        null,\n        function (locationContext) {\n          return React.createElement(RouterImpl, _extends({}, baseContext, locationContext, props));\n        }\n      );\n    }\n  );\n};\n\nvar RouterImpl = function (_React$PureComponent) {\n  _inherits(RouterImpl, _React$PureComponent);\n\n  function RouterImpl() {\n    _classCallCheck(this, RouterImpl);\n\n    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));\n  }\n\n  RouterImpl.prototype.render = function render() {\n    var _props = this.props,\n        location = _props.location,\n        _navigate2 = _props.navigate,\n        basepath = _props.basepath,\n        primary = _props.primary,\n        children = _props.children,\n        baseuri = _props.baseuri,\n        _props$component = _props.component,\n        component = _props$component === undefined ? \"div\" : _props$component,\n        domProps = _objectWithoutProperties(_props, [\"location\", \"navigate\", \"basepath\", \"primary\", \"children\", \"baseuri\", \"component\"]);\n\n    var routes = React.Children.toArray(children).reduce(function (array, child) {\n      var routes = createRoute(basepath)(child);\n      return array.concat(routes);\n    }, []);\n    var pathname = location.pathname;\n\n\n    var match = pick(routes, pathname);\n\n    if (match) {\n      var params = match.params,\n          uri = match.uri,\n          route = match.route,\n          element = match.route.value;\n\n      // remove the /* from the end for child routes relative paths\n\n      basepath = route.default ? basepath : route.path.replace(/\\*$/, \"\");\n\n      var props = _extends({}, params, {\n        uri: uri,\n        location: location,\n        navigate: function navigate(to, options) {\n          return _navigate2(resolve(to, uri), options);\n        }\n      });\n\n      var clone = React.cloneElement(element, props, element.props.children ? React.createElement(\n        Router,\n        { location: location, primary: primary },\n        element.props.children\n      ) : undefined);\n\n      // using 'div' for < 16.3 support\n      var FocusWrapper = primary ? FocusHandler : component;\n      // don't pass any props to 'div'\n      var wrapperProps = primary ? _extends({ uri: uri, location: location, component: component }, domProps) : domProps;\n\n      return React.createElement(\n        BaseContext.Provider,\n        { value: { baseuri: uri, basepath: basepath } },\n        React.createElement(\n          FocusWrapper,\n          wrapperProps,\n          clone\n        )\n      );\n    } else {\n      // Not sure if we want this, would require index routes at every level\n      // warning(\n      //   false,\n      //   `<Router basepath=\"${basepath}\">\\n\\nNothing matched:\\n\\t${\n      //     location.pathname\n      //   }\\n\\nPaths checked: \\n\\t${routes\n      //     .map(route => route.path)\n      //     .join(\n      //       \"\\n\\t\"\n      //     )}\\n\\nTo get rid of this warning, add a default NotFound component as child of Router:\n      //   \\n\\tlet NotFound = () => <div>Not Found!</div>\n      //   \\n\\t<Router>\\n\\t  <NotFound default/>\\n\\t  {/* ... */}\\n\\t</Router>`\n      // );\n      return null;\n    }\n  };\n\n  return RouterImpl;\n}(React.PureComponent);\n\nRouterImpl.defaultProps = {\n  primary: true\n};\n\n\nvar FocusContext = createNamedContext(\"Focus\");\n\nvar FocusHandler = function FocusHandler(_ref3) {\n  var uri = _ref3.uri,\n      location = _ref3.location,\n      component = _ref3.component,\n      domProps = _objectWithoutProperties(_ref3, [\"uri\", \"location\", \"component\"]);\n\n  return React.createElement(\n    FocusContext.Consumer,\n    null,\n    function (requestFocus) {\n      return React.createElement(FocusHandlerImpl, _extends({}, domProps, {\n        component: component,\n        requestFocus: requestFocus,\n        uri: uri,\n        location: location\n      }));\n    }\n  );\n};\n\n// don't focus on initial render\nvar initialRender = true;\nvar focusHandlerCount = 0;\n\nvar FocusHandlerImpl = function (_React$Component2) {\n  _inherits(FocusHandlerImpl, _React$Component2);\n\n  function FocusHandlerImpl() {\n    var _temp2, _this4, _ret2;\n\n    _classCallCheck(this, FocusHandlerImpl);\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _ret2 = (_temp2 = (_this4 = _possibleConstructorReturn(this, _React$Component2.call.apply(_React$Component2, [this].concat(args))), _this4), _this4.state = {}, _this4.requestFocus = function (node) {\n      if (!_this4.state.shouldFocus && node) {\n        node.focus();\n      }\n    }, _temp2), _possibleConstructorReturn(_this4, _ret2);\n  }\n\n  FocusHandlerImpl.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var initial = prevState.uri == null;\n    if (initial) {\n      return _extends({\n        shouldFocus: true\n      }, nextProps);\n    } else {\n      var myURIChanged = nextProps.uri !== prevState.uri;\n      var navigatedUpToMe = prevState.location.pathname !== nextProps.location.pathname && nextProps.location.pathname === nextProps.uri;\n      return _extends({\n        shouldFocus: myURIChanged || navigatedUpToMe\n      }, nextProps);\n    }\n  };\n\n  FocusHandlerImpl.prototype.componentDidMount = function componentDidMount() {\n    focusHandlerCount++;\n    this.focus();\n  };\n\n  FocusHandlerImpl.prototype.componentWillUnmount = function componentWillUnmount() {\n    focusHandlerCount--;\n    if (focusHandlerCount === 0) {\n      initialRender = true;\n    }\n  };\n\n  FocusHandlerImpl.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location !== this.props.location && this.state.shouldFocus) {\n      this.focus();\n    }\n  };\n\n  FocusHandlerImpl.prototype.focus = function focus() {\n    if (process.env.NODE_ENV === \"test\") {\n      // getting cannot read property focus of null in the tests\n      // and that bit of global `initialRender` state causes problems\n      // should probably figure it out!\n      return;\n    }\n\n    var requestFocus = this.props.requestFocus;\n\n\n    if (requestFocus) {\n      requestFocus(this.node);\n    } else {\n      if (initialRender) {\n        initialRender = false;\n      } else if (this.node) {\n        // React polyfills [autofocus] and it fires earlier than cDM,\n        // so we were stealing focus away, this line prevents that.\n        if (!this.node.contains(document.activeElement)) {\n          this.node.focus();\n        }\n      }\n    }\n  };\n\n  FocusHandlerImpl.prototype.render = function render() {\n    var _this5 = this;\n\n    var _props2 = this.props,\n        children = _props2.children,\n        style = _props2.style,\n        requestFocus = _props2.requestFocus,\n        _props2$component = _props2.component,\n        Comp = _props2$component === undefined ? \"div\" : _props2$component,\n        uri = _props2.uri,\n        location = _props2.location,\n        domProps = _objectWithoutProperties(_props2, [\"children\", \"style\", \"requestFocus\", \"component\", \"uri\", \"location\"]);\n\n    return React.createElement(\n      Comp,\n      _extends({\n        style: _extends({ outline: \"none\" }, style),\n        tabIndex: \"-1\",\n        ref: function ref(n) {\n          return _this5.node = n;\n        }\n      }, domProps),\n      React.createElement(\n        FocusContext.Provider,\n        { value: this.requestFocus },\n        this.props.children\n      )\n    );\n  };\n\n  return FocusHandlerImpl;\n}(React.Component);\n\npolyfill(FocusHandlerImpl);\n\nvar k = function k() {};\n\n////////////////////////////////////////////////////////////////////////////////\nvar forwardRef = React.forwardRef;\n\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = function forwardRef(C) {\n    return C;\n  };\n}\n\nvar Link = forwardRef(function (_ref4, ref) {\n  var innerRef = _ref4.innerRef,\n      props = _objectWithoutProperties(_ref4, [\"innerRef\"]);\n\n  return React.createElement(\n    BaseContext.Consumer,\n    null,\n    function (_ref5) {\n      var basepath = _ref5.basepath,\n          baseuri = _ref5.baseuri;\n      return React.createElement(\n        Location,\n        null,\n        function (_ref6) {\n          var location = _ref6.location,\n              navigate = _ref6.navigate;\n\n          var to = props.to,\n              state = props.state,\n              replace = props.replace,\n              _props$getProps = props.getProps,\n              getProps = _props$getProps === undefined ? k : _props$getProps,\n              anchorProps = _objectWithoutProperties(props, [\"to\", \"state\", \"replace\", \"getProps\"]);\n\n          var href = resolve(to, baseuri);\n          var encodedHref = encodeURI(href);\n          var isCurrent = location.pathname === encodedHref;\n          var isPartiallyCurrent = startsWith(location.pathname, encodedHref);\n\n          return React.createElement(\"a\", _extends({\n            ref: ref || innerRef,\n            \"aria-current\": isCurrent ? \"page\" : undefined\n          }, anchorProps, getProps({ isCurrent: isCurrent, isPartiallyCurrent: isPartiallyCurrent, href: href, location: location }), {\n            href: href,\n            onClick: function onClick(event) {\n              if (anchorProps.onClick) anchorProps.onClick(event);\n              if (shouldNavigate(event)) {\n                event.preventDefault();\n                var shouldReplace = replace;\n                if (typeof replace !== \"boolean\" && isCurrent) {\n                  var _location$state = _extends({}, location.state),\n                      key = _location$state.key,\n                      restState = _objectWithoutProperties(_location$state, [\"key\"]);\n\n                  shouldReplace = shallowCompare(_extends({}, state), restState);\n                }\n                navigate(href, {\n                  state: state,\n                  replace: shouldReplace\n                });\n              }\n            }\n          }));\n        }\n      );\n    }\n  );\n});\n\nLink.displayName = \"Link\";\n\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  to: PropTypes.string.isRequired\n} : void 0;\n\n////////////////////////////////////////////////////////////////////////////////\nfunction RedirectRequest(uri) {\n  this.uri = uri;\n}\n\nvar isRedirect = function isRedirect(o) {\n  return o instanceof RedirectRequest;\n};\n\nvar redirectTo = function redirectTo(to) {\n  throw new RedirectRequest(to);\n};\n\nvar RedirectImpl = function (_React$Component3) {\n  _inherits(RedirectImpl, _React$Component3);\n\n  function RedirectImpl() {\n    _classCallCheck(this, RedirectImpl);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  // Support React < 16 with this hook\n  RedirectImpl.prototype.componentDidMount = function componentDidMount() {\n    var _props3 = this.props,\n        navigate = _props3.navigate,\n        to = _props3.to,\n        from = _props3.from,\n        _props3$replace = _props3.replace,\n        replace = _props3$replace === undefined ? true : _props3$replace,\n        state = _props3.state,\n        noThrow = _props3.noThrow,\n        baseuri = _props3.baseuri,\n        props = _objectWithoutProperties(_props3, [\"navigate\", \"to\", \"from\", \"replace\", \"state\", \"noThrow\", \"baseuri\"]);\n\n    Promise.resolve().then(function () {\n      var resolvedTo = resolve(to, baseuri);\n      navigate(insertParams(resolvedTo, props), { replace: replace, state: state });\n    });\n  };\n\n  RedirectImpl.prototype.render = function render() {\n    var _props4 = this.props,\n        navigate = _props4.navigate,\n        to = _props4.to,\n        from = _props4.from,\n        replace = _props4.replace,\n        state = _props4.state,\n        noThrow = _props4.noThrow,\n        baseuri = _props4.baseuri,\n        props = _objectWithoutProperties(_props4, [\"navigate\", \"to\", \"from\", \"replace\", \"state\", \"noThrow\", \"baseuri\"]);\n\n    var resolvedTo = resolve(to, baseuri);\n    if (!noThrow) redirectTo(insertParams(resolvedTo, props));\n    return null;\n  };\n\n  return RedirectImpl;\n}(React.Component);\n\nvar Redirect = function Redirect(props) {\n  return React.createElement(\n    BaseContext.Consumer,\n    null,\n    function (_ref7) {\n      var baseuri = _ref7.baseuri;\n      return React.createElement(\n        Location,\n        null,\n        function (locationContext) {\n          return React.createElement(RedirectImpl, _extends({}, locationContext, { baseuri: baseuri }, props));\n        }\n      );\n    }\n  );\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Redirect.propTypes = {\n  from: PropTypes.string,\n  to: PropTypes.string.isRequired\n} : void 0;\n\n////////////////////////////////////////////////////////////////////////////////\nvar Match = function Match(_ref8) {\n  var path = _ref8.path,\n      children = _ref8.children;\n  return React.createElement(\n    BaseContext.Consumer,\n    null,\n    function (_ref9) {\n      var baseuri = _ref9.baseuri;\n      return React.createElement(\n        Location,\n        null,\n        function (_ref10) {\n          var navigate = _ref10.navigate,\n              location = _ref10.location;\n\n          var resolvedPath = resolve(path, baseuri);\n          var result = match(resolvedPath, location.pathname);\n          return children({\n            navigate: navigate,\n            location: location,\n            match: result ? _extends({}, result.params, {\n              uri: result.uri,\n              path: path\n            }) : null\n          });\n        }\n      );\n    }\n  );\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Hooks\n\nvar useLocation = function useLocation() {\n  var context = useContext(LocationContext);\n\n  if (!context) {\n    throw new Error(\"useLocation hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router\");\n  }\n\n  return context.location;\n};\n\nvar useNavigate = function useNavigate() {\n  var context = useContext(LocationContext);\n\n  if (!context) {\n    throw new Error(\"useNavigate hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router\");\n  }\n\n  return context.navigate;\n};\n\nvar useParams = function useParams() {\n  var context = useContext(BaseContext);\n\n  if (!context) {\n    throw new Error(\"useParams hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router\");\n  }\n\n  var location = useLocation();\n\n  var results = match(context.basepath, location.pathname);\n\n  return results ? results.params : null;\n};\n\nvar useMatch = function useMatch(path) {\n  if (!path) {\n    throw new Error(\"useMatch(path: string) requires an argument of a string to match against\");\n  }\n  var context = useContext(BaseContext);\n\n  if (!context) {\n    throw new Error(\"useMatch hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router\");\n  }\n\n  var location = useLocation();\n\n  var resolvedPath = resolve(path, context.baseuri);\n  var result = match(resolvedPath, location.pathname);\n  return result ? _extends({}, result.params, {\n    uri: result.uri,\n    path: path\n  }) : null;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Junk\nvar stripSlashes = function stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n};\n\nvar createRoute = function createRoute(basepath) {\n  return function (element) {\n    if (!element) {\n      return null;\n    }\n\n    if (element.type === React.Fragment && element.props.children) {\n      return React.Children.map(element.props.children, createRoute(basepath));\n    }\n    !(element.props.path || element.props.default || element.type === Redirect) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Router>: Children of <Router> must have a `path` or `default` prop, or be a `<Redirect>`. None found on element type `\" + element.type + \"`\") : invariant(false) : void 0;\n\n    !!(element.type === Redirect && (!element.props.from || !element.props.to)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Redirect from=\\\"\" + element.props.from + \"\\\" to=\\\"\" + element.props.to + \"\\\"/> requires both \\\"from\\\" and \\\"to\\\" props when inside a <Router>.\") : invariant(false) : void 0;\n\n    !!(element.type === Redirect && !validateRedirect(element.props.from, element.props.to)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Redirect from=\\\"\" + element.props.from + \" to=\\\"\" + element.props.to + \"\\\"/> has mismatched dynamic segments, ensure both paths have the exact same dynamic segments.\") : invariant(false) : void 0;\n\n    if (element.props.default) {\n      return { value: element, default: true };\n    }\n\n    var elementPath = element.type === Redirect ? element.props.from : element.props.path;\n\n    var path = elementPath === \"/\" ? basepath : stripSlashes(basepath) + \"/\" + stripSlashes(elementPath);\n\n    return {\n      value: element,\n      default: element.props.default,\n      path: element.props.children ? stripSlashes(path) + \"/*\" : path\n    };\n  };\n};\n\nvar shouldNavigate = function shouldNavigate(event) {\n  return !event.defaultPrevented && event.button === 0 && !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n////////////////////////////////////////////////////////////////////////\nexport {  Link, Location, LocationProvider, Match, Redirect, Router, ServerLocation, createHistory, createMemorySource, isRedirect, navigate, redirectTo, globalHistory, match as matchPath, useLocation, useNavigate, useParams, useMatch , BaseContext };","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.wrapRootElement = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _appProviders = require(\"./components/app-providers\");\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable import/prefer-default-export */\n\n/* eslint-disable react/prop-types */\nvar wrapRootElement = function wrapRootElement(_ref, pluginOptions) {\n  var element = _ref.element;\n  return /*#__PURE__*/_react.default.createElement(_appProviders.AppProviders, {\n    element: element,\n    pluginOptions: pluginOptions\n  });\n};\n\nexports.wrapRootElement = wrapRootElement;","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph1Mobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 32\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Mobile/Timeline/School-years/Early-years-foundation-stage-Copy\",\"transform\":\"translate(-12.000000, -1812.000000)\"},React.createElement(\"g\",{\"id\":\"Group-32\",\"transform\":\"translate(12.000000, 1812.000000)\"},[React.createElement(\"path\",{\"d\":\"M205.024345,21.770069 C206.046414,21.770069 206.909793,21.6033103 207.614483,21.2697931 C208.319172,20.9362759 208.843655,20.4924828 209.187931,19.9384138 C209.532207,19.3843448 209.704345,18.7791724 209.704345,18.1228966 C209.704345,17.2729655 209.440759,16.5602069 208.913586,15.9846207 C208.386414,15.4090345 207.627931,15.0405517 206.638138,14.8791724 L206.638138,14.8791724 L209.187931,11.9743448 L209.187931,10.2798621 L201.280345,10.2798621 L201.280345,12.3777931 L206.089448,12.3777931 L203.765586,15.0082759 L203.765586,16.7350345 L204.959793,16.7350345 C206.369172,16.7350345 207.073862,17.1976552 207.073862,18.1228966 C207.073862,18.5855172 206.885586,18.9432414 206.509034,19.196069 C206.132483,19.4488966 205.616069,19.5753103 204.959793,19.5753103 C204.368069,19.5753103 203.789793,19.4865517 203.224966,19.3090345 C202.660138,19.1315172 202.162552,18.8813793 201.732207,18.5586207 L201.732207,18.5586207 L200.715517,20.5597241 C201.253448,20.9470345 201.907034,21.2455862 202.676276,21.4553793 C203.445517,21.6651724 204.228207,21.770069 205.024345,21.770069 Z M214.174552,21.770069 C215.314966,21.770069 216.320897,21.5333793 217.192345,21.06 C218.063793,20.5866207 218.738897,19.8926897 219.217655,18.9782069 C219.696414,18.0637241 219.935793,16.9663448 219.935793,15.686069 C219.935793,13.8786207 219.48931,12.4934483 218.596345,11.5305517 C217.703379,10.5676552 216.466138,10.0862069 214.884621,10.0862069 C214.088483,10.0862069 213.364966,10.2395172 212.714069,10.5461379 C212.063172,10.8527586 211.549448,11.2911724 211.172897,11.8613793 C210.796345,12.4315862 210.608069,13.0932414 210.608069,13.8463448 C210.608069,14.5456552 210.780207,15.1615862 211.124483,15.6941379 C211.468759,16.2266897 211.936759,16.6382069 212.528483,16.9286897 C213.120207,17.2191724 213.776483,17.3644138 214.49731,17.3644138 C215.691517,17.3644138 216.627517,17.0255172 217.30531,16.3477241 C217.262276,17.4128276 216.961034,18.2277931 216.401586,18.7926207 C215.842138,19.3574483 215.083655,19.6398621 214.126138,19.6398621 C213.265448,19.6398621 212.560759,19.4515862 212.012069,19.0750345 L212.012069,19.0750345 L211.043793,20.9954483 C211.431103,21.2428966 211.899103,21.4338621 212.447793,21.5683448 C212.996483,21.7028276 213.572069,21.770069 214.174552,21.770069 Z M215.078276,15.4117241 C214.49731,15.4117241 214.032,15.2584138 213.682345,14.9517931 C213.33269,14.6451724 213.157862,14.2336552 213.157862,13.7172414 C213.157862,13.2008276 213.33269,12.792 213.682345,12.4907586 C214.032,12.1895172 214.486552,12.0388966 215.046,12.0388966 C215.659241,12.0388966 216.14069,12.1948966 216.490345,12.5068966 C216.84,12.8188966 217.014828,13.2223448 217.014828,13.7172414 C217.014828,14.2121379 216.834621,14.6182759 216.474207,14.9356552 C216.113793,15.2530345 215.648483,15.4117241 215.078276,15.4117241 Z M223.403431,17.0295517 C224.128293,17.0295517 224.716655,16.7824397 225.168517,16.2882155 C225.620379,15.7939914 225.84631,15.1326724 225.84631,14.3042586 C225.84631,13.4758448 225.620379,12.8145259 225.168517,12.3203017 C224.716655,11.8260776 224.128293,11.5789655 223.403431,11.5789655 C222.678569,11.5789655 222.087853,11.8260776 221.631284,12.3203017 C221.174716,12.8145259 220.946431,13.4758448 220.946431,14.3042586 C220.946431,15.1326724 221.174716,15.7939914 221.631284,16.2882155 C222.087853,16.7824397 222.678569,17.0295517 223.403431,17.0295517 Z M224.222431,21.5764138 L230.972121,11.691931 L229.291759,11.691931 L222.542069,21.5764138 L224.222431,21.5764138 Z M223.403431,15.8716552 C223.092776,15.8716552 222.84331,15.7375086 222.655034,15.4692155 C222.466759,15.2009224 222.372621,14.8126034 222.372621,14.3042586 C222.372621,13.7959138 222.466759,13.4075948 222.655034,13.1393017 C222.84331,12.8710086 223.092776,12.7368621 223.403431,12.7368621 C223.7235,12.7368621 223.975319,12.8686552 224.158888,13.1322414 C224.342457,13.3958276 224.434241,13.7865 224.434241,14.3042586 C224.434241,14.8220172 224.342457,15.2126897 224.158888,15.4762759 C223.975319,15.7398621 223.7235,15.8716552 223.403431,15.8716552 Z M230.110759,21.6893793 C230.835621,21.6893793 231.426336,21.4422672 231.882905,20.9480431 C232.339474,20.453819 232.567759,19.7925 232.567759,18.9640862 C232.567759,18.1356724 232.339474,17.4743534 231.882905,16.9801293 C231.426336,16.4859052 230.835621,16.2387931 230.110759,16.2387931 C229.640069,16.2387931 229.218802,16.3494052 228.846957,16.5706293 C228.475112,16.7918534 228.185638,17.109569 227.978534,17.5237759 C227.771431,17.9379828 227.667879,18.4180862 227.667879,18.9640862 C227.667879,19.5100862 227.771431,19.9901897 227.978534,20.4043966 C228.185638,20.8186034 228.475112,21.136319 228.846957,21.3575431 C229.218802,21.5787672 229.640069,21.6893793 230.110759,21.6893793 Z M230.110759,20.5314828 C229.800103,20.5314828 229.550638,20.3996897 229.362362,20.1361034 C229.174086,19.8725172 229.079948,19.4818448 229.079948,18.9640862 C229.079948,18.4463276 229.174086,18.0556552 229.362362,17.792069 C229.550638,17.5284828 229.800103,17.3966897 230.110759,17.3966897 C230.430828,17.3966897 230.682647,17.5308362 230.866216,17.7991293 C231.049784,18.0674224 231.141569,18.4557414 231.141569,18.9640862 C231.141569,19.472431 231.049784,19.86075 230.866216,20.1290431 C230.682647,20.3973362 230.430828,20.5314828 230.110759,20.5314828 Z\",\"id\":\"39%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M9.27124138,37.6175172 L9.27124138,36.5846897 L3.05813793,36.5846897 L6.89896552,32.8084138 C7.6197931,32.1091034 8.10931034,31.4904828 8.36751724,30.9525517 C8.62572414,30.4146207 8.75482759,29.8551724 8.75482759,29.2742069 C8.75482759,28.3274483 8.41862069,27.5824138 7.7462069,27.0391034 C7.0737931,26.4957931 6.162,26.2241379 5.01082759,26.2241379 C4.15013793,26.2241379 3.3782069,26.364 2.69503448,26.6437241 C2.01186207,26.9234483 1.44972414,27.3215172 1.00862069,27.837931 L1.00862069,27.837931 L1.83165517,28.548 C2.56324138,27.7088276 3.59068966,27.2892414 4.914,27.2892414 C5.76393103,27.2892414 6.41751724,27.4748276 6.87475862,27.846 C7.332,28.2171724 7.56062069,28.7362759 7.56062069,29.4033103 C7.56062069,29.8336552 7.45572414,30.2613103 7.24593103,30.6862759 C7.03613793,31.1112414 6.63537931,31.6142069 6.04365517,32.1951724 L6.04365517,32.1951724 L1.34751724,36.7944828 L1.34751724,37.6175172 L9.27124138,37.6175172 Z M15.2261379,37.7143448 C16.0975862,37.7143448 16.8748966,37.4830345 17.558069,37.0204138 C18.2412414,36.5577931 18.7764828,35.8934483 19.1637931,35.0273793 C19.5511034,34.1613103 19.7447586,33.141931 19.7447586,31.9692414 C19.7447586,30.7965517 19.5511034,29.7771724 19.1637931,28.9111034 C18.7764828,28.0450345 18.2412414,27.3806897 17.558069,26.918069 C16.8748966,26.4554483 16.0975862,26.2241379 15.2261379,26.2241379 C14.3546897,26.2241379 13.5773793,26.4554483 12.8942069,26.918069 C12.2110345,27.3806897 11.6784828,28.0450345 11.2965517,28.9111034 C10.9146207,29.7771724 10.7236552,30.7965517 10.7236552,31.9692414 C10.7236552,33.141931 10.9146207,34.1613103 11.2965517,35.0273793 C11.6784828,35.8934483 12.2110345,36.5577931 12.8942069,37.0204138 C13.5773793,37.4830345 14.3546897,37.7143448 15.2261379,37.7143448 Z M15.2261379,36.6492414 C14.5698621,36.6492414 13.9915862,36.4663448 13.4913103,36.1005517 C12.9910345,35.7347586 12.6010345,35.2022069 12.3213103,34.5028966 C12.0415862,33.8035862 11.9017241,32.9590345 11.9017241,31.9692414 C11.9017241,30.9794483 12.0415862,30.1348966 12.3213103,29.4355862 C12.6010345,28.7362759 12.9910345,28.2037241 13.4913103,27.837931 C13.9915862,27.4721379 14.5698621,27.2892414 15.2261379,27.2892414 C15.8824138,27.2892414 16.4606897,27.4721379 16.9609655,27.837931 C17.4612414,28.2037241 17.8512414,28.7362759 18.1309655,29.4355862 C18.4106897,30.1348966 18.5505517,30.9794483 18.5505517,31.9692414 C18.5505517,32.9590345 18.4106897,33.8035862 18.1309655,34.5028966 C17.8512414,35.2022069 17.4612414,35.7347586 16.9609655,36.1005517 C16.4606897,36.4663448 15.8824138,36.6492414 15.2261379,36.6492414 Z M24.5377241,37.6175172 L24.5377241,26.3209655 L20.7130345,26.3209655 L20.7130345,27.3537931 L23.3757931,27.3537931 L23.3757931,37.6175172 L24.5377241,37.6175172 Z M31.8643448,37.7143448 C32.595931,37.7143448 33.2548966,37.5717931 33.8412414,37.2866897 C34.4275862,37.0015862 34.8875172,36.5954483 35.2210345,36.0682759 C35.5545517,35.5411034 35.7213103,34.9332414 35.7213103,34.2446897 C35.7213103,33.5668966 35.559931,32.9724828 35.2371724,32.4614483 C34.9144138,31.9504138 34.4652414,31.5550345 33.8896552,31.2753103 C33.314069,30.9955862 32.6551034,30.8557241 31.9127586,30.8557241 C31.1166207,30.8557241 30.411931,31.0251724 29.7986897,31.364069 C29.1854483,31.7029655 28.7389655,32.1790345 28.4592414,32.7922759 C28.4269655,32.448 28.4108276,32.1413793 28.4108276,31.8724138 C28.4108276,30.3662069 28.7658621,29.2177241 29.475931,28.4269655 C30.186,27.6362069 31.1650345,27.2408276 32.4130345,27.2408276 C33.3382759,27.2408276 34.0698621,27.4183448 34.6077931,27.7733793 L34.6077931,27.7733793 L35.0757931,26.8373793 C34.4087586,26.4285517 33.5157931,26.2241379 32.3968966,26.2241379 C31.364069,26.2241379 30.4603448,26.4473793 29.6857241,26.8938621 C28.9111034,27.3403448 28.3086207,27.9993103 27.8782759,28.8707586 C27.447931,29.7422069 27.2327586,30.8073103 27.2327586,32.066069 C27.2327586,33.8627586 27.6308276,35.2533103 28.4269655,36.2377241 C29.2231034,37.2221379 30.3688966,37.7143448 31.8643448,37.7143448 Z M31.815931,36.729931 C31.191931,36.729931 30.654,36.6169655 30.2021379,36.3910345 C29.7502759,36.1651034 29.4086897,35.8692414 29.1773793,35.5034483 C28.946069,35.1376552 28.8304138,34.7395862 28.8304138,34.3092414 C28.8304138,33.8466207 28.9541379,33.4270345 29.2015862,33.0504828 C29.4490345,32.673931 29.7906207,32.378069 30.2263448,32.1628966 C30.662069,31.9477241 31.1650345,31.8401379 31.7352414,31.8401379 C32.6066897,31.8401379 33.297931,32.0606897 33.8089655,32.5017931 C34.32,32.9428966 34.5755172,33.5346207 34.5755172,34.2769655 C34.5755172,35.0193103 34.32,35.6137241 33.8089655,36.0602069 C33.297931,36.5066897 32.6335862,36.729931 31.815931,36.729931 Z\",\"id\":\"2016\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M9.27124138,118.307172 L9.27124138,117.274345 L3.05813793,117.274345 L6.89896552,113.498069 C7.6197931,112.798759 8.10931034,112.180138 8.36751724,111.642207 C8.62572414,111.104276 8.75482759,110.544828 8.75482759,109.963862 C8.75482759,109.017103 8.41862069,108.272069 7.7462069,107.728759 C7.0737931,107.185448 6.162,106.913793 5.01082759,106.913793 C4.15013793,106.913793 3.3782069,107.053655 2.69503448,107.333379 C2.01186207,107.613103 1.44972414,108.011172 1.00862069,108.527586 L1.00862069,108.527586 L1.83165517,109.237655 C2.56324138,108.398483 3.59068966,107.978897 4.914,107.978897 C5.76393103,107.978897 6.41751724,108.164483 6.87475862,108.535655 C7.332,108.906828 7.56062069,109.425931 7.56062069,110.092966 C7.56062069,110.52331 7.45572414,110.950966 7.24593103,111.375931 C7.03613793,111.800897 6.63537931,112.303862 6.04365517,112.884828 L6.04365517,112.884828 L1.34751724,117.484138 L1.34751724,118.307172 L9.27124138,118.307172 Z M15.2261379,118.404 C16.0975862,118.404 16.8748966,118.17269 17.558069,117.710069 C18.2412414,117.247448 18.7764828,116.583103 19.1637931,115.717034 C19.5511034,114.850966 19.7447586,113.831586 19.7447586,112.658897 C19.7447586,111.486207 19.5511034,110.466828 19.1637931,109.600759 C18.7764828,108.73469 18.2412414,108.070345 17.558069,107.607724 C16.8748966,107.145103 16.0975862,106.913793 15.2261379,106.913793 C14.3546897,106.913793 13.5773793,107.145103 12.8942069,107.607724 C12.2110345,108.070345 11.6784828,108.73469 11.2965517,109.600759 C10.9146207,110.466828 10.7236552,111.486207 10.7236552,112.658897 C10.7236552,113.831586 10.9146207,114.850966 11.2965517,115.717034 C11.6784828,116.583103 12.2110345,117.247448 12.8942069,117.710069 C13.5773793,118.17269 14.3546897,118.404 15.2261379,118.404 Z M15.2261379,117.338897 C14.5698621,117.338897 13.9915862,117.156 13.4913103,116.790207 C12.9910345,116.424414 12.6010345,115.891862 12.3213103,115.192552 C12.0415862,114.493241 11.9017241,113.64869 11.9017241,112.658897 C11.9017241,111.669103 12.0415862,110.824552 12.3213103,110.125241 C12.6010345,109.425931 12.9910345,108.893379 13.4913103,108.527586 C13.9915862,108.161793 14.5698621,107.978897 15.2261379,107.978897 C15.8824138,107.978897 16.4606897,108.161793 16.9609655,108.527586 C17.4612414,108.893379 17.8512414,109.425931 18.1309655,110.125241 C18.4106897,110.824552 18.5505517,111.669103 18.5505517,112.658897 C18.5505517,113.64869 18.4106897,114.493241 18.1309655,115.192552 C17.8512414,115.891862 17.4612414,116.424414 16.9609655,116.790207 C16.4606897,117.156 15.8824138,117.338897 15.2261379,117.338897 Z M24.5377241,118.307172 L24.5377241,107.010621 L20.7130345,107.010621 L20.7130345,108.043448 L23.3757931,108.043448 L23.3757931,118.307172 L24.5377241,118.307172 Z M30.4764828,118.307172 L35.2048966,107.833655 L35.2048966,107.010621 L26.91,107.010621 L26.91,110.157517 L28.0557931,110.157517 L28.0557931,108.043448 L33.8654483,108.043448 L29.2177241,118.307172 L30.4764828,118.307172 Z\",\"id\":\"2017\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M8.26262069,198.996828 L8.26262069,197.964 L2.04951724,197.964 L5.89034483,194.187724 C6.61117241,193.488414 7.10068966,192.869793 7.35889655,192.331862 C7.61710345,191.793931 7.7462069,191.234483 7.7462069,190.653517 C7.7462069,189.706759 7.41,188.961724 6.73758621,188.418414 C6.06517241,187.875103 5.15337931,187.603448 4.0022069,187.603448 C3.14151724,187.603448 2.36958621,187.74331 1.68641379,188.023034 C1.00324138,188.302759 0.441103448,188.700828 0,189.217241 L0,189.217241 L0.823034483,189.92731 C1.55462069,189.088138 2.58206897,188.668552 3.90537931,188.668552 C4.75531034,188.668552 5.40889655,188.854138 5.86613793,189.22531 C6.32337931,189.596483 6.552,190.115586 6.552,190.782621 C6.552,191.212966 6.44710345,191.640621 6.23731034,192.065586 C6.02751724,192.490552 5.62675862,192.993517 5.03503448,193.574483 L5.03503448,193.574483 L0.338896552,198.173793 L0.338896552,198.996828 L8.26262069,198.996828 Z M14.2175172,199.093655 C15.0889655,199.093655 15.8662759,198.862345 16.5494483,198.399724 C17.2326207,197.937103 17.7678621,197.272759 18.1551724,196.40669 C18.5424828,195.540621 18.7361379,194.521241 18.7361379,193.348552 C18.7361379,192.175862 18.5424828,191.156483 18.1551724,190.290414 C17.7678621,189.424345 17.2326207,188.76 16.5494483,188.297379 C15.8662759,187.834759 15.0889655,187.603448 14.2175172,187.603448 C13.346069,187.603448 12.5687586,187.834759 11.8855862,188.297379 C11.2024138,188.76 10.6698621,189.424345 10.287931,190.290414 C9.906,191.156483 9.71503448,192.175862 9.71503448,193.348552 C9.71503448,194.521241 9.906,195.540621 10.287931,196.40669 C10.6698621,197.272759 11.2024138,197.937103 11.8855862,198.399724 C12.5687586,198.862345 13.346069,199.093655 14.2175172,199.093655 Z M14.2175172,198.028552 C13.5612414,198.028552 12.9829655,197.845655 12.4826897,197.479862 C11.9824138,197.114069 11.5924138,196.581517 11.3126897,195.882207 C11.0329655,195.182897 10.8931034,194.338345 10.8931034,193.348552 C10.8931034,192.358759 11.0329655,191.514207 11.3126897,190.814897 C11.5924138,190.115586 11.9824138,189.583034 12.4826897,189.217241 C12.9829655,188.851448 13.5612414,188.668552 14.2175172,188.668552 C14.8737931,188.668552 15.452069,188.851448 15.9523448,189.217241 C16.4526207,189.583034 16.8426207,190.115586 17.1223448,190.814897 C17.402069,191.514207 17.541931,192.358759 17.541931,193.348552 C17.541931,194.338345 17.402069,195.182897 17.1223448,195.882207 C16.8426207,196.581517 16.4526207,197.114069 15.9523448,197.479862 C15.452069,197.845655 14.8737931,198.028552 14.2175172,198.028552 Z M23.5291034,198.996828 L23.5291034,187.700276 L19.7044138,187.700276 L19.7044138,188.733103 L22.3671724,188.733103 L22.3671724,198.996828 L23.5291034,198.996828 Z M30.5168276,199.093655 C31.4097931,199.093655 32.1871034,198.961862 32.8487586,198.698276 C33.5104138,198.43469 34.0187586,198.058138 34.3737931,197.568621 C34.7288276,197.079103 34.9063448,196.506207 34.9063448,195.849931 C34.9063448,195.182897 34.7153793,194.61269 34.3334483,194.13931 C33.9515172,193.665931 33.4055172,193.310897 32.6954483,193.074207 C33.2764138,192.848276 33.7228966,192.522828 34.0348966,192.097862 C34.3468966,191.672897 34.5028966,191.169931 34.5028966,190.588966 C34.5028966,189.986483 34.3361379,189.45931 34.0026207,189.007448 C33.6691034,188.555586 33.2037931,188.208621 32.6066897,187.966552 C32.0095862,187.724483 31.3129655,187.603448 30.5168276,187.603448 C29.3118621,187.603448 28.3516552,187.872414 27.6362069,188.410345 C26.9207586,188.948276 26.5630345,189.674483 26.5630345,190.588966 C26.5630345,191.169931 26.7136552,191.672897 27.0148966,192.097862 C27.3161379,192.522828 27.7572414,192.848276 28.3382069,193.074207 C27.6281379,193.310897 27.0875172,193.663241 26.7163448,194.131241 C26.3451724,194.599241 26.1595862,195.172138 26.1595862,195.849931 C26.1595862,196.850483 26.5468966,197.641241 27.3215172,198.222207 C28.0961379,198.803172 29.1612414,199.093655 30.5168276,199.093655 Z M30.5168276,192.654621 C29.6453793,192.654621 28.9622069,192.471724 28.4673103,192.105931 C27.9724138,191.740138 27.7249655,191.245241 27.7249655,190.621241 C27.7249655,189.997241 27.9751034,189.502345 28.4753793,189.136552 C28.9756552,188.770759 29.6561379,188.587862 30.5168276,188.587862 C31.3667586,188.587862 32.0472414,188.770759 32.5582759,189.136552 C33.0693103,189.502345 33.3248276,190.002621 33.3248276,190.637379 C33.3248276,191.250621 33.0746897,191.740138 32.5744138,192.105931 C32.0741379,192.471724 31.3882759,192.654621 30.5168276,192.654621 Z M30.5168276,198.109241 C29.5162759,198.109241 28.7362759,197.907517 28.1768276,197.504069 C27.6173793,197.100621 27.3376552,196.543862 27.3376552,195.833793 C27.3376552,195.134483 27.620069,194.583103 28.1848966,194.179655 C28.7497241,193.776207 29.5270345,193.574483 30.5168276,193.574483 C31.5173793,193.574483 32.300069,193.776207 32.8648966,194.179655 C33.4297241,194.583103 33.7121379,195.134483 33.7121379,195.833793 C33.7121379,196.533103 33.4297241,197.087172 32.8648966,197.496 C32.300069,197.904828 31.5173793,198.109241 30.5168276,198.109241 Z\",\"id\":\"2018\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M9.27124138,279.686483 L9.27124138,278.653655 L3.05813793,278.653655 L6.89896552,274.877379 C7.6197931,274.178069 8.10931034,273.559448 8.36751724,273.021517 C8.62572414,272.483586 8.75482759,271.924138 8.75482759,271.343172 C8.75482759,270.396414 8.41862069,269.651379 7.7462069,269.108069 C7.0737931,268.564759 6.162,268.293103 5.01082759,268.293103 C4.15013793,268.293103 3.3782069,268.432966 2.69503448,268.71269 C2.01186207,268.992414 1.44972414,269.390483 1.00862069,269.906897 L1.00862069,269.906897 L1.83165517,270.616966 C2.56324138,269.777793 3.59068966,269.358207 4.914,269.358207 C5.76393103,269.358207 6.41751724,269.543793 6.87475862,269.914966 C7.332,270.286138 7.56062069,270.805241 7.56062069,271.472276 C7.56062069,271.902621 7.45572414,272.330276 7.24593103,272.755241 C7.03613793,273.180207 6.63537931,273.683172 6.04365517,274.264138 L6.04365517,274.264138 L1.34751724,278.863448 L1.34751724,279.686483 L9.27124138,279.686483 Z M15.2261379,279.78331 C16.0975862,279.78331 16.8748966,279.552 17.558069,279.089379 C18.2412414,278.626759 18.7764828,277.962414 19.1637931,277.096345 C19.5511034,276.230276 19.7447586,275.210897 19.7447586,274.038207 C19.7447586,272.865517 19.5511034,271.846138 19.1637931,270.980069 C18.7764828,270.114 18.2412414,269.449655 17.558069,268.987034 C16.8748966,268.524414 16.0975862,268.293103 15.2261379,268.293103 C14.3546897,268.293103 13.5773793,268.524414 12.8942069,268.987034 C12.2110345,269.449655 11.6784828,270.114 11.2965517,270.980069 C10.9146207,271.846138 10.7236552,272.865517 10.7236552,274.038207 C10.7236552,275.210897 10.9146207,276.230276 11.2965517,277.096345 C11.6784828,277.962414 12.2110345,278.626759 12.8942069,279.089379 C13.5773793,279.552 14.3546897,279.78331 15.2261379,279.78331 Z M15.2261379,278.718207 C14.5698621,278.718207 13.9915862,278.53531 13.4913103,278.169517 C12.9910345,277.803724 12.6010345,277.271172 12.3213103,276.571862 C12.0415862,275.872552 11.9017241,275.028 11.9017241,274.038207 C11.9017241,273.048414 12.0415862,272.203862 12.3213103,271.504552 C12.6010345,270.805241 12.9910345,270.27269 13.4913103,269.906897 C13.9915862,269.541103 14.5698621,269.358207 15.2261379,269.358207 C15.8824138,269.358207 16.4606897,269.541103 16.9609655,269.906897 C17.4612414,270.27269 17.8512414,270.805241 18.1309655,271.504552 C18.4106897,272.203862 18.5505517,273.048414 18.5505517,274.038207 C18.5505517,275.028 18.4106897,275.872552 18.1309655,276.571862 C17.8512414,277.271172 17.4612414,277.803724 16.9609655,278.169517 C16.4606897,278.53531 15.8824138,278.718207 15.2261379,278.718207 Z M24.5377241,279.686483 L24.5377241,268.389931 L20.7130345,268.389931 L20.7130345,269.422759 L23.3757931,269.422759 L23.3757931,279.686483 L24.5377241,279.686483 Z M30.2182759,279.78331 C31.2511034,279.78331 32.1548276,279.560069 32.9294483,279.113586 C33.704069,278.667103 34.3065517,278.008138 34.7368966,277.13669 C35.1672414,276.265241 35.3824138,275.200138 35.3824138,273.941379 C35.3824138,272.14469 34.9843448,270.754138 34.1882069,269.769724 C33.392069,268.78531 32.2462759,268.293103 30.7508276,268.293103 C30.0192414,268.293103 29.3602759,268.435655 28.773931,268.720759 C28.1875862,269.005862 27.7276552,269.412 27.3941379,269.939172 C27.0606207,270.466345 26.8938621,271.074207 26.8938621,271.762759 C26.8938621,272.440552 27.0552414,273.034966 27.378,273.546 C27.7007586,274.057034 28.149931,274.452414 28.7255172,274.732138 C29.3011034,275.011862 29.960069,275.151724 30.7024138,275.151724 C31.4985517,275.151724 32.2032414,274.982276 32.8164828,274.643379 C33.4297241,274.304483 33.8762069,273.828414 34.155931,273.215172 C34.1882069,273.54869 34.2043448,273.85531 34.2043448,274.135034 C34.2043448,275.641241 33.8493103,276.789724 33.1392414,277.580483 C32.4291724,278.371241 31.4501379,278.766621 30.2021379,278.766621 C29.2768966,278.766621 28.5453103,278.589103 28.0073793,278.234069 L28.0073793,278.234069 L27.5393793,279.170069 C28.2064138,279.578897 29.0993793,279.78331 30.2182759,279.78331 Z M30.879931,274.16731 C30.0084828,274.16731 29.3172414,273.946759 28.8062069,273.505655 C28.2951724,273.064552 28.0396552,272.472828 28.0396552,271.730483 C28.0396552,270.988138 28.2951724,270.393724 28.8062069,269.947241 C29.3172414,269.500759 29.9815862,269.277517 30.7992414,269.277517 C31.4232414,269.277517 31.9611724,269.390483 32.4130345,269.616414 C32.8648966,269.842345 33.2064828,270.138207 33.4377931,270.504 C33.6691034,270.869793 33.7847586,271.267862 33.7847586,271.698207 C33.7847586,272.160828 33.6610345,272.580414 33.4135862,272.956966 C33.1661379,273.333517 32.8245517,273.629379 32.3888276,273.844552 C31.9531034,274.059724 31.4501379,274.16731 30.879931,274.16731 Z\",\"id\":\"2019\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M210.357931,102.072414 L210.357931,99.7001379 L212.197655,99.7001379 L212.197655,97.569931 L210.357931,97.569931 L210.357931,95.4558621 L207.888828,95.4558621 L207.888828,97.569931 L204.854897,97.569931 L209.793103,90.7758621 L207.049655,90.7758621 L201.724138,97.9411034 L201.724138,99.7001379 L207.808138,99.7001379 L207.808138,102.072414 L210.357931,102.072414 Z M217.62,102.072414 L221.815862,92.4703448 L221.815862,90.7758621 L212.762483,90.7758621 L212.762483,94.7457931 L215.086345,94.7457931 L215.086345,92.906069 L218.830345,92.906069 L214.779724,102.072414 L217.62,102.072414 Z M225.186672,97.5255517 C225.911534,97.5255517 226.499897,97.2784397 226.951759,96.7842155 C227.403621,96.2899914 227.629552,95.6286724 227.629552,94.8002586 C227.629552,93.9718448 227.403621,93.3105259 226.951759,92.8163017 C226.499897,92.3220776 225.911534,92.0749655 225.186672,92.0749655 C224.46181,92.0749655 223.871095,92.3220776 223.414526,92.8163017 C222.957957,93.3105259 222.729672,93.9718448 222.729672,94.8002586 C222.729672,95.6286724 222.957957,96.2899914 223.414526,96.7842155 C223.871095,97.2784397 224.46181,97.5255517 225.186672,97.5255517 Z M226.005672,102.072414 L232.755362,92.187931 L231.075,92.187931 L224.32531,102.072414 L226.005672,102.072414 Z M225.186672,96.3676552 C224.876017,96.3676552 224.626552,96.2335086 224.438276,95.9652155 C224.25,95.6969224 224.155862,95.3086034 224.155862,94.8002586 C224.155862,94.2919138 224.25,93.9035948 224.438276,93.6353017 C224.626552,93.3670086 224.876017,93.2328621 225.186672,93.2328621 C225.506741,93.2328621 225.75856,93.3646552 225.942129,93.6282414 C226.125698,93.8918276 226.217483,94.2825 226.217483,94.8002586 C226.217483,95.3180172 226.125698,95.7086897 225.942129,95.9722759 C225.75856,96.2358621 225.506741,96.3676552 225.186672,96.3676552 Z M231.894,102.185379 C232.618862,102.185379 233.209578,101.938267 233.666147,101.444043 C234.122716,100.949819 234.351,100.2885 234.351,99.4600862 C234.351,98.6316724 234.122716,97.9703534 233.666147,97.4761293 C233.209578,96.9819052 232.618862,96.7347931 231.894,96.7347931 C231.42331,96.7347931 231.002043,96.8454052 230.630198,97.0666293 C230.258353,97.2878534 229.968879,97.605569 229.761776,98.0197759 C229.554672,98.4339828 229.451121,98.9140862 229.451121,99.4600862 C229.451121,100.006086 229.554672,100.48619 229.761776,100.900397 C229.968879,101.314603 230.258353,101.632319 230.630198,101.853543 C231.002043,102.074767 231.42331,102.185379 231.894,102.185379 Z M231.894,101.027483 C231.583345,101.027483 231.333879,100.89569 231.145603,100.632103 C230.957328,100.368517 230.86319,99.9778448 230.86319,99.4600862 C230.86319,98.9423276 230.957328,98.5516552 231.145603,98.288069 C231.333879,98.0244828 231.583345,97.8926897 231.894,97.8926897 C232.214069,97.8926897 232.465888,98.0268362 232.649457,98.2951293 C232.833026,98.5634224 232.92481,98.9517414 232.92481,99.4600862 C232.92481,99.968431 232.833026,100.35675 232.649457,100.625043 C232.465888,100.893336 232.214069,101.027483 231.894,101.027483 Z\",\"id\":\"47%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M205.024345,182.955724 C206.057172,182.955724 206.925931,182.786276 207.630621,182.447379 C208.33531,182.108483 208.859793,181.656621 209.204069,181.091793 C209.548345,180.526966 209.720483,179.900276 209.720483,179.211724 C209.720483,178.146621 209.341241,177.29669 208.582759,176.661931 C207.824276,176.027172 206.648897,175.709793 205.056621,175.709793 L205.056621,175.709793 L204.136759,175.709793 L204.314276,173.563448 L209.026552,173.563448 L209.026552,171.465517 L202.135655,171.465517 L201.55469,177.823862 L204.443379,177.823862 C205.411655,177.823862 206.092138,177.947586 206.484828,178.195034 C206.877517,178.442483 207.073862,178.808276 207.073862,179.292414 C207.073862,179.755034 206.885586,180.115448 206.509034,180.373655 C206.132483,180.631862 205.616069,180.760966 204.959793,180.760966 C204.368069,180.760966 203.792483,180.672207 203.233034,180.49469 C202.673586,180.317172 202.17869,180.067034 201.748345,179.744276 L201.748345,179.744276 L200.715517,181.745379 C201.253448,182.13269 201.907034,182.431241 202.676276,182.641034 C203.445517,182.850828 204.228207,182.955724 205.024345,182.955724 Z M215.142828,182.762069 L215.142828,171.465517 L210.269172,171.465517 L210.269172,173.563448 L212.528483,173.563448 L212.528483,182.762069 L215.142828,182.762069 Z M219.320534,178.215207 C220.045397,178.215207 220.633759,177.968095 221.085621,177.473871 C221.537483,176.979647 221.763414,176.318328 221.763414,175.489914 C221.763414,174.6615 221.537483,174.000181 221.085621,173.505957 C220.633759,173.011733 220.045397,172.764621 219.320534,172.764621 C218.595672,172.764621 218.004957,173.011733 217.548388,173.505957 C217.091819,174.000181 216.863534,174.6615 216.863534,175.489914 C216.863534,176.318328 217.091819,176.979647 217.548388,177.473871 C218.004957,177.968095 218.595672,178.215207 219.320534,178.215207 Z M220.139534,182.762069 L226.889224,172.877586 L225.208862,172.877586 L218.459172,182.762069 L220.139534,182.762069 Z M219.320534,177.05731 C219.009879,177.05731 218.760414,176.923164 218.572138,176.654871 C218.383862,176.386578 218.289724,175.998259 218.289724,175.489914 C218.289724,174.981569 218.383862,174.59325 218.572138,174.324957 C218.760414,174.056664 219.009879,173.922517 219.320534,173.922517 C219.640603,173.922517 219.892422,174.05431 220.075991,174.317897 C220.25956,174.581483 220.351345,174.972155 220.351345,175.489914 C220.351345,176.007672 220.25956,176.398345 220.075991,176.661931 C219.892422,176.925517 219.640603,177.05731 219.320534,177.05731 Z M226.027862,182.875034 C226.752724,182.875034 227.34344,182.627922 227.800009,182.133698 C228.256578,181.639474 228.484862,180.978155 228.484862,180.149741 C228.484862,179.321328 228.256578,178.660009 227.800009,178.165784 C227.34344,177.67156 226.752724,177.424448 226.027862,177.424448 C225.557172,177.424448 225.135905,177.53506 224.76406,177.756284 C224.392216,177.977509 224.102741,178.295224 223.895638,178.709431 C223.688534,179.123638 223.584983,179.603741 223.584983,180.149741 C223.584983,180.695741 223.688534,181.175845 223.895638,181.590052 C224.102741,182.004259 224.392216,182.321974 224.76406,182.543198 C225.135905,182.764422 225.557172,182.875034 226.027862,182.875034 Z M226.027862,181.717138 C225.717207,181.717138 225.467741,181.585345 225.279466,181.321759 C225.09119,181.058172 224.997052,180.6675 224.997052,180.149741 C224.997052,179.631983 225.09119,179.24131 225.279466,178.977724 C225.467741,178.714138 225.717207,178.582345 226.027862,178.582345 C226.347931,178.582345 226.59975,178.716491 226.783319,178.984784 C226.966888,179.253078 227.058672,179.641397 227.058672,180.149741 C227.058672,180.658086 226.966888,181.046405 226.783319,181.314698 C226.59975,181.582991 226.347931,181.717138 226.027862,181.717138 Z\",\"id\":\"51%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M205.024345,263.645379 C206.057172,263.645379 206.925931,263.475931 207.630621,263.137034 C208.33531,262.798138 208.859793,262.346276 209.204069,261.781448 C209.548345,261.216621 209.720483,260.589931 209.720483,259.901379 C209.720483,258.836276 209.341241,257.986345 208.582759,257.351586 C207.824276,256.716828 206.648897,256.399448 205.056621,256.399448 L205.056621,256.399448 L204.136759,256.399448 L204.314276,254.253103 L209.026552,254.253103 L209.026552,252.155172 L202.135655,252.155172 L201.55469,258.513517 L204.443379,258.513517 C205.411655,258.513517 206.092138,258.637241 206.484828,258.88469 C206.877517,259.132138 207.073862,259.497931 207.073862,259.982069 C207.073862,260.44469 206.885586,260.805103 206.509034,261.06331 C206.132483,261.321517 205.616069,261.450621 204.959793,261.450621 C204.368069,261.450621 203.792483,261.361862 203.233034,261.184345 C202.673586,261.006828 202.17869,260.75669 201.748345,260.433931 L201.748345,260.433931 L200.715517,262.435034 C201.253448,262.822345 201.907034,263.120897 202.676276,263.33069 C203.445517,263.540483 204.228207,263.645379 205.024345,263.645379 Z M215.142828,263.451724 L215.142828,252.155172 L210.269172,252.155172 L210.269172,254.253103 L212.528483,254.253103 L212.528483,263.451724 L215.142828,263.451724 Z M219.320534,258.904862 C220.045397,258.904862 220.633759,258.65775 221.085621,258.163526 C221.537483,257.669302 221.763414,257.007983 221.763414,256.179569 C221.763414,255.351155 221.537483,254.689836 221.085621,254.195612 C220.633759,253.701388 220.045397,253.454276 219.320534,253.454276 C218.595672,253.454276 218.004957,253.701388 217.548388,254.195612 C217.091819,254.689836 216.863534,255.351155 216.863534,256.179569 C216.863534,257.007983 217.091819,257.669302 217.548388,258.163526 C218.004957,258.65775 218.595672,258.904862 219.320534,258.904862 Z M220.139534,263.451724 L226.889224,253.567241 L225.208862,253.567241 L218.459172,263.451724 L220.139534,263.451724 Z M219.320534,257.746966 C219.009879,257.746966 218.760414,257.612819 218.572138,257.344526 C218.383862,257.076233 218.289724,256.687914 218.289724,256.179569 C218.289724,255.671224 218.383862,255.282905 218.572138,255.014612 C218.760414,254.746319 219.009879,254.612172 219.320534,254.612172 C219.640603,254.612172 219.892422,254.743966 220.075991,255.007552 C220.25956,255.271138 220.351345,255.66181 220.351345,256.179569 C220.351345,256.697328 220.25956,257.088 220.075991,257.351586 C219.892422,257.615172 219.640603,257.746966 219.320534,257.746966 Z M226.027862,263.56469 C226.752724,263.56469 227.34344,263.317578 227.800009,262.823353 C228.256578,262.329129 228.484862,261.66781 228.484862,260.839397 C228.484862,260.010983 228.256578,259.349664 227.800009,258.85544 C227.34344,258.361216 226.752724,258.114103 226.027862,258.114103 C225.557172,258.114103 225.135905,258.224716 224.76406,258.44594 C224.392216,258.667164 224.102741,258.984879 223.895638,259.399086 C223.688534,259.813293 223.584983,260.293397 223.584983,260.839397 C223.584983,261.385397 223.688534,261.8655 223.895638,262.279707 C224.102741,262.693914 224.392216,263.011629 224.76406,263.232853 C225.135905,263.454078 225.557172,263.56469 226.027862,263.56469 Z M226.027862,262.406793 C225.717207,262.406793 225.467741,262.275 225.279466,262.011414 C225.09119,261.747828 224.997052,261.357155 224.997052,260.839397 C224.997052,260.321638 225.09119,259.930966 225.279466,259.667379 C225.467741,259.403793 225.717207,259.272 226.027862,259.272 C226.347931,259.272 226.59975,259.406147 226.783319,259.67444 C226.966888,259.942733 227.058672,260.331052 227.058672,260.839397 C227.058672,261.347741 226.966888,261.73606 226.783319,262.004353 C226.59975,262.272647 226.347931,262.406793 226.027862,262.406793 Z\",\"id\":\"51%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M206.77531,134.735586 C207.571448,134.735586 208.294966,134.582276 208.945862,134.275655 C209.596759,133.969034 210.110483,133.530621 210.487034,132.960414 C210.863586,132.390207 211.051862,131.728552 211.051862,130.975448 C211.051862,130.276138 210.879724,129.660207 210.535448,129.127655 C210.191172,128.595103 209.723172,128.183586 209.131448,127.893103 C208.539724,127.602621 207.883448,127.457379 207.162621,127.457379 C205.968414,127.457379 205.037793,127.790897 204.370759,128.457931 C204.413793,127.392828 204.715034,126.580552 205.274483,126.021103 C205.833931,125.461655 206.592414,125.181931 207.549931,125.181931 C208.399862,125.181931 209.104552,125.370207 209.664,125.746759 L209.664,125.746759 L210.632276,123.826345 C210.244966,123.578897 209.774276,123.387931 209.220207,123.253448 C208.666138,123.118966 208.087862,123.051724 207.485379,123.051724 C206.344966,123.051724 205.341724,123.288414 204.475655,123.761793 C203.609586,124.235172 202.934483,124.929103 202.450345,125.843586 C201.966207,126.758069 201.724138,127.855448 201.724138,129.135724 C201.724138,130.932414 202.170621,132.314897 203.063586,133.283172 C203.956552,134.251448 205.193793,134.735586 206.77531,134.735586 Z M206.630069,132.782897 C206.016828,132.782897 205.53269,132.626897 205.177655,132.314897 C204.822621,132.002897 204.645103,131.599448 204.645103,131.104552 C204.645103,130.609655 204.828,130.203517 205.193793,129.886138 C205.559586,129.568759 206.027586,129.410069 206.597793,129.410069 C207.178759,129.410069 207.644069,129.563379 207.993724,129.87 C208.343379,130.176621 208.518207,130.588138 208.518207,131.104552 C208.518207,131.620966 208.343379,132.029793 207.993724,132.331034 C207.644069,132.632276 207.189517,132.782897 206.630069,132.782897 Z M216.651724,134.541931 L220.847586,124.939862 L220.847586,123.245379 L211.794207,123.245379 L211.794207,127.21531 L214.118069,127.21531 L214.118069,125.375586 L217.862069,125.375586 L213.811448,134.541931 L216.651724,134.541931 Z M224.218397,129.995069 C224.943259,129.995069 225.531621,129.747957 225.983483,129.253733 C226.435345,128.759509 226.661276,128.09819 226.661276,127.269776 C226.661276,126.441362 226.435345,125.780043 225.983483,125.285819 C225.531621,124.791595 224.943259,124.544483 224.218397,124.544483 C223.493534,124.544483 222.902819,124.791595 222.44625,125.285819 C221.989681,125.780043 221.761397,126.441362 221.761397,127.269776 C221.761397,128.09819 221.989681,128.759509 222.44625,129.253733 C222.902819,129.747957 223.493534,129.995069 224.218397,129.995069 Z M225.037397,134.541931 L231.787086,124.657448 L230.106724,124.657448 L223.357034,134.541931 L225.037397,134.541931 Z M224.218397,128.837172 C223.907741,128.837172 223.658276,128.703026 223.47,128.434733 C223.281724,128.16644 223.187586,127.778121 223.187586,127.269776 C223.187586,126.761431 223.281724,126.373112 223.47,126.104819 C223.658276,125.836526 223.907741,125.702379 224.218397,125.702379 C224.538466,125.702379 224.790284,125.834172 224.973853,126.097759 C225.157422,126.361345 225.249207,126.752017 225.249207,127.269776 C225.249207,127.787534 225.157422,128.178207 224.973853,128.441793 C224.790284,128.705379 224.538466,128.837172 224.218397,128.837172 Z M230.925724,134.654897 C231.650586,134.654897 232.241302,134.407784 232.697871,133.91356 C233.15444,133.419336 233.382724,132.758017 233.382724,131.929603 C233.382724,131.10119 233.15444,130.439871 232.697871,129.945647 C232.241302,129.451422 231.650586,129.20431 230.925724,129.20431 C230.455034,129.20431 230.033767,129.314922 229.661922,129.536147 C229.290078,129.757371 229.000603,130.075086 228.7935,130.489293 C228.586397,130.9035 228.482845,131.383603 228.482845,131.929603 C228.482845,132.475603 228.586397,132.955707 228.7935,133.369914 C229.000603,133.784121 229.290078,134.101836 229.661922,134.32306 C230.033767,134.544284 230.455034,134.654897 230.925724,134.654897 Z M230.925724,133.497 C230.615069,133.497 230.365603,133.365207 230.177328,133.101621 C229.989052,132.838034 229.894914,132.447362 229.894914,131.929603 C229.894914,131.411845 229.989052,131.021172 230.177328,130.757586 C230.365603,130.494 230.615069,130.362207 230.925724,130.362207 C231.245793,130.362207 231.497612,130.496353 231.681181,130.764647 C231.86475,131.03294 231.956534,131.421259 231.956534,131.929603 C231.956534,132.437948 231.86475,132.826267 231.681181,133.09456 C231.497612,133.362853 231.245793,133.497 230.925724,133.497 Z\",\"id\":\"67%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M206.581655,215.231586 L210.777517,205.629517 L210.777517,203.935034 L201.724138,203.935034 L201.724138,207.904966 L204.048,207.904966 L204.048,206.065241 L207.792,206.065241 L203.741379,215.231586 L206.581655,215.231586 Z M216.780828,215.425241 C217.716828,215.425241 218.550621,215.193931 219.282207,214.73131 C220.013793,214.26869 220.58669,213.598966 221.000897,212.722138 C221.415103,211.84531 221.622207,210.799034 221.622207,209.58331 C221.622207,208.367586 221.415103,207.32131 221.000897,206.444483 C220.58669,205.567655 220.013793,204.897931 219.282207,204.43531 C218.550621,203.97269 217.716828,203.741379 216.780828,203.741379 C215.844828,203.741379 215.011034,203.97269 214.279448,204.43531 C213.547862,204.897931 212.974966,205.567655 212.560759,206.444483 C212.146552,207.32131 211.939448,208.367586 211.939448,209.58331 C211.939448,210.799034 212.146552,211.84531 212.560759,212.722138 C212.974966,213.598966 213.547862,214.26869 214.279448,214.73131 C215.011034,215.193931 215.844828,215.425241 216.780828,215.425241 Z M216.780828,213.214345 C216.103034,213.214345 215.567793,212.918483 215.175103,212.326759 C214.782414,211.735034 214.586069,210.820552 214.586069,209.58331 C214.586069,208.346069 214.782414,207.431586 215.175103,206.839862 C215.567793,206.248138 216.103034,205.952276 216.780828,205.952276 C217.469379,205.952276 218.01,206.248138 218.40269,206.839862 C218.795379,207.431586 218.991724,208.346069 218.991724,209.58331 C218.991724,210.820552 218.795379,211.735034 218.40269,212.326759 C218.01,212.918483 217.469379,213.214345 216.780828,213.214345 Z M225.105983,210.684724 C225.830845,210.684724 226.419207,210.437612 226.871069,209.943388 C227.322931,209.449164 227.548862,208.787845 227.548862,207.959431 C227.548862,207.131017 227.322931,206.469698 226.871069,205.975474 C226.419207,205.48125 225.830845,205.234138 225.105983,205.234138 C224.381121,205.234138 223.790405,205.48125 223.333836,205.975474 C222.877267,206.469698 222.648983,207.131017 222.648983,207.959431 C222.648983,208.787845 222.877267,209.449164 223.333836,209.943388 C223.790405,210.437612 224.381121,210.684724 225.105983,210.684724 Z M225.924983,215.231586 L232.674672,205.347103 L230.99431,205.347103 L224.244621,215.231586 L225.924983,215.231586 Z M225.105983,209.526828 C224.795328,209.526828 224.545862,209.392681 224.357586,209.124388 C224.16931,208.856095 224.075172,208.467776 224.075172,207.959431 C224.075172,207.451086 224.16931,207.062767 224.357586,206.794474 C224.545862,206.526181 224.795328,206.392034 225.105983,206.392034 C225.426052,206.392034 225.677871,206.523828 225.86144,206.787414 C226.045009,207.051 226.136793,207.441672 226.136793,207.959431 C226.136793,208.47719 226.045009,208.867862 225.86144,209.131448 C225.677871,209.395034 225.426052,209.526828 225.105983,209.526828 Z M231.81331,215.344552 C232.538172,215.344552 233.128888,215.09744 233.585457,214.603216 C234.042026,214.108991 234.27031,213.447672 234.27031,212.619259 C234.27031,211.790845 234.042026,211.129526 233.585457,210.635302 C233.128888,210.141078 232.538172,209.893966 231.81331,209.893966 C231.342621,209.893966 230.921353,210.004578 230.549509,210.225802 C230.177664,210.447026 229.88819,210.764741 229.681086,211.178948 C229.473983,211.593155 229.370431,212.073259 229.370431,212.619259 C229.370431,213.165259 229.473983,213.645362 229.681086,214.059569 C229.88819,214.473776 230.177664,214.791491 230.549509,215.012716 C230.921353,215.23394 231.342621,215.344552 231.81331,215.344552 Z M231.81331,214.186655 C231.502655,214.186655 231.25319,214.054862 231.064914,213.791276 C230.876638,213.52769 230.7825,213.137017 230.7825,212.619259 C230.7825,212.1015 230.876638,211.710828 231.064914,211.447241 C231.25319,211.183655 231.502655,211.051862 231.81331,211.051862 C232.133379,211.051862 232.385198,211.186009 232.568767,211.454302 C232.752336,211.722595 232.844121,212.110914 232.844121,212.619259 C232.844121,213.127603 232.752336,213.515922 232.568767,213.784216 C232.385198,214.052509 232.133379,214.186655 231.81331,214.186655 Z\",\"id\":\"70%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M206.581655,295.727586 L210.777517,286.125517 L210.777517,284.431034 L201.724138,284.431034 L201.724138,288.400966 L204.048,288.400966 L204.048,286.561241 L207.792,286.561241 L203.741379,295.727586 L206.581655,295.727586 Z M216.29669,295.727586 L216.29669,284.431034 L211.423034,284.431034 L211.423034,286.528966 L213.682345,286.528966 L213.682345,295.727586 L216.29669,295.727586 Z M220.474397,291.180724 C221.199259,291.180724 221.787621,290.933612 222.239483,290.439388 C222.691345,289.945164 222.917276,289.283845 222.917276,288.455431 C222.917276,287.627017 222.691345,286.965698 222.239483,286.471474 C221.787621,285.97725 221.199259,285.730138 220.474397,285.730138 C219.749534,285.730138 219.158819,285.97725 218.70225,286.471474 C218.245681,286.965698 218.017397,287.627017 218.017397,288.455431 C218.017397,289.283845 218.245681,289.945164 218.70225,290.439388 C219.158819,290.933612 219.749534,291.180724 220.474397,291.180724 Z M221.293397,295.727586 L228.043086,285.843103 L226.362724,285.843103 L219.613034,295.727586 L221.293397,295.727586 Z M220.474397,290.022828 C220.163741,290.022828 219.914276,289.888681 219.726,289.620388 C219.537724,289.352095 219.443586,288.963776 219.443586,288.455431 C219.443586,287.947086 219.537724,287.558767 219.726,287.290474 C219.914276,287.022181 220.163741,286.888034 220.474397,286.888034 C220.794466,286.888034 221.046284,287.019828 221.229853,287.283414 C221.413422,287.547 221.505207,287.937672 221.505207,288.455431 C221.505207,288.97319 221.413422,289.363862 221.229853,289.627448 C221.046284,289.891034 220.794466,290.022828 220.474397,290.022828 Z M227.181724,295.840552 C227.906586,295.840552 228.497302,295.59344 228.953871,295.099216 C229.41044,294.604991 229.638724,293.943672 229.638724,293.115259 C229.638724,292.286845 229.41044,291.625526 228.953871,291.131302 C228.497302,290.637078 227.906586,290.389966 227.181724,290.389966 C226.711034,290.389966 226.289767,290.500578 225.917922,290.721802 C225.546078,290.943026 225.256603,291.260741 225.0495,291.674948 C224.842397,292.089155 224.738845,292.569259 224.738845,293.115259 C224.738845,293.661259 224.842397,294.141362 225.0495,294.555569 C225.256603,294.969776 225.546078,295.287491 225.917922,295.508716 C226.289767,295.72994 226.711034,295.840552 227.181724,295.840552 Z M227.181724,294.682655 C226.871069,294.682655 226.621603,294.550862 226.433328,294.287276 C226.245052,294.02369 226.150914,293.633017 226.150914,293.115259 C226.150914,292.5975 226.245052,292.206828 226.433328,291.943241 C226.621603,291.679655 226.871069,291.547862 227.181724,291.547862 C227.501793,291.547862 227.753612,291.682009 227.937181,291.950302 C228.12075,292.218595 228.212534,292.606914 228.212534,293.115259 C228.212534,293.623603 228.12075,294.011922 227.937181,294.280216 C227.753612,294.548509 227.501793,294.682655 227.181724,294.682655 Z\",\"id\":\"71%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":10}),React.createElement(\"g\",{\"id\":\"Group-25-Copy-8\",\"transform\":\"translate(278.856592, 16.105989)\",\"key\":11},[React.createElement(\"path\",{\"d\":\"M19.6539828,18.1067586 L19.6539828,15.5367931 L22.280431,15.5367931 L22.280431,14.7036724 L19.6539828,14.7036724 L19.6539828,12.1195862 L18.7643793,12.1195862 L18.7643793,14.7036724 L16.137931,14.7036724 L16.137931,15.5367931 L18.7643793,15.5367931 L18.7643793,18.1067586 L19.6539828,18.1067586 Z M30.7528448,20.0554138 L30.7528448,19.1516897 L25.3163793,19.1516897 L28.6771034,15.8474483 C29.3078276,15.2355517 29.7361552,14.6942586 29.9620862,14.223569 C30.1880172,13.7528793 30.3009828,13.2633621 30.3009828,12.7550172 C30.3009828,11.9266034 30.0068017,11.2746983 29.4184397,10.7993017 C28.8300776,10.3239052 28.0322586,10.0862069 27.0249828,10.0862069 C26.2718793,10.0862069 25.5964397,10.2085862 24.9986638,10.4533448 C24.4008879,10.6981034 23.9090172,11.0464138 23.5230517,11.4982759 L23.5230517,11.4982759 L24.2432069,12.1195862 C24.8833448,11.3853103 25.7823621,11.0181724 26.9402586,11.0181724 C27.6839483,11.0181724 28.2558362,11.1805603 28.6559224,11.5053362 C29.0560086,11.8301121 29.2560517,12.2843276 29.2560517,12.8679828 C29.2560517,13.2445345 29.1642672,13.6187328 28.9806983,13.9905776 C28.7971293,14.3624224 28.4464655,14.8025172 27.9287069,15.3108621 L27.9287069,15.3108621 L23.8195862,19.3352586 L23.8195862,20.0554138 L30.7528448,20.0554138 Z M34.7631207,20.0554138 L34.7631207,10.170931 L31.4165172,10.170931 L31.4165172,11.0746552 L33.746431,11.0746552 L33.746431,20.0554138 L34.7631207,20.0554138 Z M38.7875172,22.7948276 L38.7875172,18.6574655 C39.0981724,19.137569 39.4959052,19.5023534 39.9807155,19.751819 C40.4655259,20.0012845 41.0091724,20.1260172 41.6116552,20.1260172 C42.3176897,20.1260172 42.9507672,19.9683362 43.5108879,19.6529741 C44.0710086,19.3376121 44.5111034,18.8928103 44.8311724,18.318569 C45.1512414,17.7443276 45.3112759,17.0853621 45.3112759,16.3416724 C45.3112759,15.6073966 45.1512414,14.9531379 44.8311724,14.3788966 C44.5111034,13.8046552 44.0686552,13.3598534 43.5038276,13.0444914 C42.939,12.7291293 42.3082759,12.5714483 41.6116552,12.5714483 C40.9903448,12.5714483 40.4325776,12.7032414 39.9383534,12.9668276 C39.4441293,13.2304138 39.0463966,13.6069655 38.7451552,14.0964828 L38.7451552,14.0964828 L38.7451552,12.627931 L37.7849483,12.627931 L37.7849483,22.7948276 L38.7875172,22.7948276 Z M41.5410517,19.2364138 C41.0138793,19.2364138 40.5408362,19.1163879 40.1219224,18.8763362 C39.7030086,18.6362845 39.3735259,18.2950345 39.1334741,17.8525862 C38.8934224,17.4101379 38.7733966,16.9065 38.7733966,16.3416724 C38.7733966,15.7768448 38.8934224,15.2755603 39.1334741,14.837819 C39.3735259,14.4000776 39.7030086,14.0588276 40.1219224,13.814069 C40.5408362,13.5693103 41.0138793,13.446931 41.5410517,13.446931 C42.0588103,13.446931 42.5295,13.5693103 42.9531207,13.814069 C43.3767414,14.0588276 43.7085776,14.4000776 43.9486293,14.837819 C44.188681,15.2755603 44.3087069,15.7768448 44.3087069,16.3416724 C44.3087069,16.9065 44.188681,17.4101379 43.9486293,17.8525862 C43.7085776,18.2950345 43.3767414,18.6362845 42.9531207,18.8763362 C42.5295,19.1163879 42.0588103,19.2364138 41.5410517,19.2364138 Z M48.3613448,22.7948276 L48.3613448,18.6574655 C48.672,19.137569 49.0697328,19.5023534 49.5545431,19.751819 C50.0393534,20.0012845 50.583,20.1260172 51.1854828,20.1260172 C51.8915172,20.1260172 52.5245948,19.9683362 53.0847155,19.6529741 C53.6448362,19.3376121 54.084931,18.8928103 54.405,18.318569 C54.725069,17.7443276 54.8851034,17.0853621 54.8851034,16.3416724 C54.8851034,15.6073966 54.725069,14.9531379 54.405,14.3788966 C54.084931,13.8046552 53.6424828,13.3598534 53.0776552,13.0444914 C52.5128276,12.7291293 51.8821034,12.5714483 51.1854828,12.5714483 C50.5641724,12.5714483 50.0064052,12.7032414 49.512181,12.9668276 C49.0179569,13.2304138 48.6202241,13.6069655 48.3189828,14.0964828 L48.3189828,14.0964828 L48.3189828,12.627931 L47.3587759,12.627931 L47.3587759,22.7948276 L48.3613448,22.7948276 Z M51.1148793,19.2364138 C50.5877069,19.2364138 50.1146638,19.1163879 49.69575,18.8763362 C49.2768362,18.6362845 48.9473534,18.2950345 48.7073017,17.8525862 C48.46725,17.4101379 48.3472241,16.9065 48.3472241,16.3416724 C48.3472241,15.7768448 48.46725,15.2755603 48.7073017,14.837819 C48.9473534,14.4000776 49.2768362,14.0588276 49.69575,13.814069 C50.1146638,13.5693103 50.5877069,13.446931 51.1148793,13.446931 C51.6326379,13.446931 52.1033276,13.5693103 52.5269483,13.814069 C52.950569,14.0588276 53.2824052,14.4000776 53.5224569,14.837819 C53.7625086,15.2755603 53.8825345,15.7768448 53.8825345,16.3416724 C53.8825345,16.9065 53.7625086,17.4101379 53.5224569,17.8525862 C53.2824052,18.2950345 52.950569,18.6362845 52.5269483,18.8763362 C52.1033276,19.1163879 51.6326379,19.2364138 51.1148793,19.2364138 Z\",\"id\":\"+21pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"71.1347869\",\"height\":\"32.211979\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-9\",\"transform\":\"translate(278.856592, 97.978103)\",\"key\":12},[React.createElement(\"path\",{\"d\":\"M17.6367414,18.1067586 L17.6367414,15.5367931 L20.2631897,15.5367931 L20.2631897,14.7036724 L17.6367414,14.7036724 L17.6367414,12.1195862 L16.7471379,12.1195862 L16.7471379,14.7036724 L14.1206897,14.7036724 L14.1206897,15.5367931 L16.7471379,15.5367931 L16.7471379,18.1067586 L17.6367414,18.1067586 Z M28.7356034,20.0554138 L28.7356034,19.1516897 L23.2991379,19.1516897 L26.6598621,15.8474483 C27.2905862,15.2355517 27.7189138,14.6942586 27.9448448,14.223569 C28.1707759,13.7528793 28.2837414,13.2633621 28.2837414,12.7550172 C28.2837414,11.9266034 27.9895603,11.2746983 27.4011983,10.7993017 C26.8128362,10.3239052 26.0150172,10.0862069 25.0077414,10.0862069 C24.2546379,10.0862069 23.5791983,10.2085862 22.9814224,10.4533448 C22.3836466,10.6981034 21.8917759,11.0464138 21.5058103,11.4982759 L21.5058103,11.4982759 L22.2259655,12.1195862 C22.8661034,11.3853103 23.7651207,11.0181724 24.9230172,11.0181724 C25.6667069,11.0181724 26.2385948,11.1805603 26.638681,11.5053362 C27.0387672,11.8301121 27.2388103,12.2843276 27.2388103,12.8679828 C27.2388103,13.2445345 27.1470259,13.6187328 26.9634569,13.9905776 C26.7798879,14.3624224 26.4292241,14.8025172 25.9114655,15.3108621 L25.9114655,15.3108621 L21.8023448,19.3352586 L21.8023448,20.0554138 L28.7356034,20.0554138 Z M33.9461379,20.1401379 C34.7086552,20.1401379 35.3888017,19.9377414 35.9865776,19.5329483 C36.5843534,19.1281552 37.0526897,18.5468534 37.3915862,17.7890431 C37.7304828,17.0312328 37.899931,16.1392759 37.899931,15.1131724 C37.899931,14.087069 37.7304828,13.1951121 37.3915862,12.4373017 C37.0526897,11.6794914 36.5843534,11.0981897 35.9865776,10.6933966 C35.3888017,10.2886034 34.7086552,10.0862069 33.9461379,10.0862069 C33.1836207,10.0862069 32.5034741,10.2886034 31.9056983,10.6933966 C31.3079224,11.0981897 30.8419397,11.6794914 30.50775,12.4373017 C30.1735603,13.1951121 30.0064655,14.087069 30.0064655,15.1131724 C30.0064655,16.1392759 30.1735603,17.0312328 30.50775,17.7890431 C30.8419397,18.5468534 31.3079224,19.1281552 31.9056983,19.5329483 C32.5034741,19.9377414 33.1836207,20.1401379 33.9461379,20.1401379 Z M33.9461379,19.2081724 C33.3718966,19.2081724 32.8659052,19.0481379 32.4281638,18.728069 C31.9904224,18.408 31.6491724,17.9420172 31.4044138,17.3301207 C31.1596552,16.7182241 31.0372759,15.9792414 31.0372759,15.1131724 C31.0372759,14.2471034 31.1596552,13.5081207 31.4044138,12.8962241 C31.6491724,12.2843276 31.9904224,11.8183448 32.4281638,11.4982759 C32.8659052,11.1782069 33.3718966,11.0181724 33.9461379,11.0181724 C34.5203793,11.0181724 35.0263707,11.1782069 35.4641121,11.4982759 C35.9018534,11.8183448 36.2431034,12.2843276 36.4878621,12.8962241 C36.7326207,13.5081207 36.855,14.2471034 36.855,15.1131724 C36.855,15.9792414 36.7326207,16.7182241 36.4878621,17.3301207 C36.2431034,17.9420172 35.9018534,18.408 35.4641121,18.728069 C35.0263707,19.0481379 34.5203793,19.2081724 33.9461379,19.2081724 Z M41.0206034,22.7948276 L41.0206034,18.6574655 C41.3312586,19.137569 41.7289914,19.5023534 42.2138017,19.751819 C42.6986121,20.0012845 43.2422586,20.1260172 43.8447414,20.1260172 C44.5507759,20.1260172 45.1838534,19.9683362 45.7439741,19.6529741 C46.3040948,19.3376121 46.7441897,18.8928103 47.0642586,18.318569 C47.3843276,17.7443276 47.5443621,17.0853621 47.5443621,16.3416724 C47.5443621,15.6073966 47.3843276,14.9531379 47.0642586,14.3788966 C46.7441897,13.8046552 46.3017414,13.3598534 45.7369138,13.0444914 C45.1720862,12.7291293 44.5413621,12.5714483 43.8447414,12.5714483 C43.223431,12.5714483 42.6656638,12.7032414 42.1714397,12.9668276 C41.6772155,13.2304138 41.2794828,13.6069655 40.9782414,14.0964828 L40.9782414,14.0964828 L40.9782414,12.627931 L40.0180345,12.627931 L40.0180345,22.7948276 L41.0206034,22.7948276 Z M43.7741379,19.2364138 C43.2469655,19.2364138 42.7739224,19.1163879 42.3550086,18.8763362 C41.9360948,18.6362845 41.6066121,18.2950345 41.3665603,17.8525862 C41.1265086,17.4101379 41.0064828,16.9065 41.0064828,16.3416724 C41.0064828,15.7768448 41.1265086,15.2755603 41.3665603,14.837819 C41.6066121,14.4000776 41.9360948,14.0588276 42.3550086,13.814069 C42.7739224,13.5693103 43.2469655,13.446931 43.7741379,13.446931 C44.2918966,13.446931 44.7625862,13.5693103 45.1862069,13.814069 C45.6098276,14.0588276 45.9416638,14.4000776 46.1817155,14.837819 C46.4217672,15.2755603 46.5417931,15.7768448 46.5417931,16.3416724 C46.5417931,16.9065 46.4217672,17.4101379 46.1817155,17.8525862 C45.9416638,18.2950345 45.6098276,18.6362845 45.1862069,18.8763362 C44.7625862,19.1163879 44.2918966,19.2364138 43.7741379,19.2364138 Z M50.594431,22.7948276 L50.594431,18.6574655 C50.9050862,19.137569 51.302819,19.5023534 51.7876293,19.751819 C52.2724397,20.0012845 52.8160862,20.1260172 53.418569,20.1260172 C54.1246034,20.1260172 54.757681,19.9683362 55.3178017,19.6529741 C55.8779224,19.3376121 56.3180172,18.8928103 56.6380862,18.318569 C56.9581552,17.7443276 57.1181897,17.0853621 57.1181897,16.3416724 C57.1181897,15.6073966 56.9581552,14.9531379 56.6380862,14.3788966 C56.3180172,13.8046552 55.875569,13.3598534 55.3107414,13.0444914 C54.7459138,12.7291293 54.1151897,12.5714483 53.418569,12.5714483 C52.7972586,12.5714483 52.2394914,12.7032414 51.7452672,12.9668276 C51.2510431,13.2304138 50.8533103,13.6069655 50.552069,14.0964828 L50.552069,14.0964828 L50.552069,12.627931 L49.5918621,12.627931 L49.5918621,22.7948276 L50.594431,22.7948276 Z M53.3479655,19.2364138 C52.8207931,19.2364138 52.34775,19.1163879 51.9288362,18.8763362 C51.5099224,18.6362845 51.1804397,18.2950345 50.9403879,17.8525862 C50.7003362,17.4101379 50.5803103,16.9065 50.5803103,16.3416724 C50.5803103,15.7768448 50.7003362,15.2755603 50.9403879,14.837819 C51.1804397,14.4000776 51.5099224,14.0588276 51.9288362,13.814069 C52.34775,13.5693103 52.8207931,13.446931 53.3479655,13.446931 C53.8657241,13.446931 54.3364138,13.5693103 54.7600345,13.814069 C55.1836552,14.0588276 55.5154914,14.4000776 55.7555431,14.837819 C55.9955948,15.2755603 56.1156207,15.7768448 56.1156207,16.3416724 C56.1156207,16.9065 55.9955948,17.4101379 55.7555431,17.8525862 C55.5154914,18.2950345 55.1836552,18.6362845 54.7600345,18.8763362 C54.3364138,19.1163879 53.8657241,19.2364138 53.3479655,19.2364138 Z\",\"id\":\"+20pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"71.1347869\",\"height\":\"32.211979\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-10\",\"transform\":\"translate(278.856592, 177.165884)\",\"key\":13},[React.createElement(\"path\",{\"d\":\"M15.6195,18.1067586 L15.6195,15.5367931 L18.2459483,15.5367931 L18.2459483,14.7036724 L15.6195,14.7036724 L15.6195,12.1195862 L14.7298966,12.1195862 L14.7298966,14.7036724 L12.1034483,14.7036724 L12.1034483,15.5367931 L14.7298966,15.5367931 L14.7298966,18.1067586 L15.6195,18.1067586 Z M26.7183621,20.0554138 L26.7183621,19.1516897 L21.2818966,19.1516897 L24.6426207,15.8474483 C25.2733448,15.2355517 25.7016724,14.6942586 25.9276034,14.223569 C26.1535345,13.7528793 26.2665,13.2633621 26.2665,12.7550172 C26.2665,11.9266034 25.972319,11.2746983 25.3839569,10.7993017 C24.7955948,10.3239052 23.9977759,10.0862069 22.9905,10.0862069 C22.2373966,10.0862069 21.5619569,10.2085862 20.964181,10.4533448 C20.3664052,10.6981034 19.8745345,11.0464138 19.488569,11.4982759 L19.488569,11.4982759 L20.2087241,12.1195862 C20.8488621,11.3853103 21.7478793,11.0181724 22.9057759,11.0181724 C23.6494655,11.0181724 24.2213534,11.1805603 24.6214397,11.5053362 C25.0215259,11.8301121 25.221569,12.2843276 25.221569,12.8679828 C25.221569,13.2445345 25.1297845,13.6187328 24.9462155,13.9905776 C24.7626466,14.3624224 24.4119828,14.8025172 23.8942241,15.3108621 L23.8942241,15.3108621 L19.7851034,19.3352586 L19.7851034,20.0554138 L26.7183621,20.0554138 Z M31.9288966,20.1401379 C32.6914138,20.1401379 33.3715603,19.9377414 33.9693362,19.5329483 C34.5671121,19.1281552 35.0354483,18.5468534 35.3743448,17.7890431 C35.7132414,17.0312328 35.8826897,16.1392759 35.8826897,15.1131724 C35.8826897,14.087069 35.7132414,13.1951121 35.3743448,12.4373017 C35.0354483,11.6794914 34.5671121,11.0981897 33.9693362,10.6933966 C33.3715603,10.2886034 32.6914138,10.0862069 31.9288966,10.0862069 C31.1663793,10.0862069 30.4862328,10.2886034 29.8884569,10.6933966 C29.290681,11.0981897 28.8246983,11.6794914 28.4905086,12.4373017 C28.156319,13.1951121 27.9892241,14.087069 27.9892241,15.1131724 C27.9892241,16.1392759 28.156319,17.0312328 28.4905086,17.7890431 C28.8246983,18.5468534 29.290681,19.1281552 29.8884569,19.5329483 C30.4862328,19.9377414 31.1663793,20.1401379 31.9288966,20.1401379 Z M31.9288966,19.2081724 C31.3546552,19.2081724 30.8486638,19.0481379 30.4109224,18.728069 C29.973181,18.408 29.631931,17.9420172 29.3871724,17.3301207 C29.1424138,16.7182241 29.0200345,15.9792414 29.0200345,15.1131724 C29.0200345,14.2471034 29.1424138,13.5081207 29.3871724,12.8962241 C29.631931,12.2843276 29.973181,11.8183448 30.4109224,11.4982759 C30.8486638,11.1782069 31.3546552,11.0181724 31.9288966,11.0181724 C32.5031379,11.0181724 33.0091293,11.1782069 33.4468707,11.4982759 C33.8846121,11.8183448 34.2258621,12.2843276 34.4706207,12.8962241 C34.7153793,13.5081207 34.8377586,14.2471034 34.8377586,15.1131724 C34.8377586,15.9792414 34.7153793,16.7182241 34.4706207,17.3301207 C34.2258621,17.9420172 33.8846121,18.408 33.4468707,18.728069 C33.0091293,19.0481379 32.5031379,19.2081724 31.9288966,19.2081724 Z M39.0033621,22.7948276 L39.0033621,18.6574655 C39.3140172,19.137569 39.71175,19.5023534 40.1965603,19.751819 C40.6813707,20.0012845 41.2250172,20.1260172 41.8275,20.1260172 C42.5335345,20.1260172 43.1666121,19.9683362 43.7267328,19.6529741 C44.2868534,19.3376121 44.7269483,18.8928103 45.0470172,18.318569 C45.3670862,17.7443276 45.5271207,17.0853621 45.5271207,16.3416724 C45.5271207,15.6073966 45.3670862,14.9531379 45.0470172,14.3788966 C44.7269483,13.8046552 44.2845,13.3598534 43.7196724,13.0444914 C43.1548448,12.7291293 42.5241207,12.5714483 41.8275,12.5714483 C41.2061897,12.5714483 40.6484224,12.7032414 40.1541983,12.9668276 C39.6599741,13.2304138 39.2622414,13.6069655 38.961,14.0964828 L38.961,14.0964828 L38.961,12.627931 L38.0007931,12.627931 L38.0007931,22.7948276 L39.0033621,22.7948276 Z M41.7568966,19.2364138 C41.2297241,19.2364138 40.756681,19.1163879 40.3377672,18.8763362 C39.9188534,18.6362845 39.5893707,18.2950345 39.349319,17.8525862 C39.1092672,17.4101379 38.9892414,16.9065 38.9892414,16.3416724 C38.9892414,15.7768448 39.1092672,15.2755603 39.349319,14.837819 C39.5893707,14.4000776 39.9188534,14.0588276 40.3377672,13.814069 C40.756681,13.5693103 41.2297241,13.446931 41.7568966,13.446931 C42.2746552,13.446931 42.7453448,13.5693103 43.1689655,13.814069 C43.5925862,14.0588276 43.9244224,14.4000776 44.1644741,14.837819 C44.4045259,15.2755603 44.5245517,15.7768448 44.5245517,16.3416724 C44.5245517,16.9065 44.4045259,17.4101379 44.1644741,17.8525862 C43.9244224,18.2950345 43.5925862,18.6362845 43.1689655,18.8763362 C42.7453448,19.1163879 42.2746552,19.2364138 41.7568966,19.2364138 Z M48.5771897,22.7948276 L48.5771897,18.6574655 C48.8878448,19.137569 49.2855776,19.5023534 49.7703879,19.751819 C50.2551983,20.0012845 50.7988448,20.1260172 51.4013276,20.1260172 C52.1073621,20.1260172 52.7404397,19.9683362 53.3005603,19.6529741 C53.860681,19.3376121 54.3007759,18.8928103 54.6208448,18.318569 C54.9409138,17.7443276 55.1009483,17.0853621 55.1009483,16.3416724 C55.1009483,15.6073966 54.9409138,14.9531379 54.6208448,14.3788966 C54.3007759,13.8046552 53.8583276,13.3598534 53.2935,13.0444914 C52.7286724,12.7291293 52.0979483,12.5714483 51.4013276,12.5714483 C50.7800172,12.5714483 50.22225,12.7032414 49.7280259,12.9668276 C49.2338017,13.2304138 48.836069,13.6069655 48.5348276,14.0964828 L48.5348276,14.0964828 L48.5348276,12.627931 L47.5746207,12.627931 L47.5746207,22.7948276 L48.5771897,22.7948276 Z M51.3307241,19.2364138 C50.8035517,19.2364138 50.3305086,19.1163879 49.9115948,18.8763362 C49.492681,18.6362845 49.1631983,18.2950345 48.9231466,17.8525862 C48.6830948,17.4101379 48.563069,16.9065 48.563069,16.3416724 C48.563069,15.7768448 48.6830948,15.2755603 48.9231466,14.837819 C49.1631983,14.4000776 49.492681,14.0588276 49.9115948,13.814069 C50.3305086,13.5693103 50.8035517,13.446931 51.3307241,13.446931 C51.8484828,13.446931 52.3191724,13.5693103 52.7427931,13.814069 C53.1664138,14.0588276 53.49825,14.4000776 53.7383017,14.837819 C53.9783534,15.2755603 54.0983793,15.7768448 54.0983793,16.3416724 C54.0983793,16.9065 53.9783534,17.4101379 53.7383017,17.8525862 C53.49825,18.2950345 53.1664138,18.6362845 52.7427931,18.8763362 C52.3191724,19.1163879 51.8484828,19.2364138 51.3307241,19.2364138 Z\",\"id\":\"+20pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"67.1082895\",\"height\":\"32.211979\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-11\",\"transform\":\"translate(278.856592, 257.695832)\",\"key\":14},[React.createElement(\"path\",{\"d\":\"M17.6367414,18.1067586 L17.6367414,15.5367931 L20.2631897,15.5367931 L20.2631897,14.7036724 L17.6367414,14.7036724 L17.6367414,12.1195862 L16.7471379,12.1195862 L16.7471379,14.7036724 L14.1206897,14.7036724 L14.1206897,15.5367931 L16.7471379,15.5367931 L16.7471379,18.1067586 L17.6367414,18.1067586 Z M24.7253276,20.0554138 L24.7253276,10.170931 L21.3787241,10.170931 L21.3787241,11.0746552 L23.7086379,11.0746552 L23.7086379,20.0554138 L24.7253276,20.0554138 Z M29.6958103,20.1401379 C30.5995345,20.1401379 31.3902931,19.9448017 32.0680862,19.5541293 C32.7458793,19.1634569 33.2730517,18.5868621 33.6496034,17.8243448 C34.0261552,17.0618276 34.214431,16.1298621 34.214431,15.0284483 C34.214431,13.4563448 33.8661207,12.2396121 33.1695,11.37825 C32.4728793,10.5168879 31.4703103,10.0862069 30.1617931,10.0862069 C29.5216552,10.0862069 28.9450603,10.2109397 28.4320086,10.4604052 C27.9189569,10.7098707 27.5165172,11.0652414 27.2246897,11.5265172 C26.9328621,11.9877931 26.7869483,12.5196724 26.7869483,13.1221552 C26.7869483,13.7152241 26.9281552,14.2353362 27.210569,14.6824914 C27.4929828,15.1296466 27.8860086,15.4756034 28.3896466,15.7203621 C28.8932845,15.9651207 29.4698793,16.0875 30.119431,16.0875 C30.8160517,16.0875 31.4326552,15.9392328 31.9692414,15.6426983 C32.5058276,15.3461638 32.8965,14.9296034 33.1412586,14.3930172 C33.1695,14.6848448 33.1836207,14.9531379 33.1836207,15.1978966 C33.1836207,16.5158276 32.8729655,17.52075 32.2516552,18.2126638 C31.6303448,18.9045776 30.7736897,19.2505345 29.6816897,19.2505345 C28.8721034,19.2505345 28.2319655,19.0952069 27.7612759,18.7845517 L27.7612759,18.7845517 L27.3517759,19.6035517 C27.935431,19.9612759 28.7167759,20.1401379 29.6958103,20.1401379 Z M30.2747586,15.2261379 C29.5122414,15.2261379 28.9074052,15.0331552 28.46025,14.6471897 C28.0130948,14.2612241 27.7895172,13.7434655 27.7895172,13.0939138 C27.7895172,12.4443621 28.0130948,11.92425 28.46025,11.5335776 C28.9074052,11.1429052 29.4887069,10.947569 30.2041552,10.947569 C30.7501552,10.947569 31.2208448,11.0464138 31.6162241,11.2441034 C32.0116034,11.4417931 32.3104914,11.7006724 32.5128879,12.0207414 C32.7152845,12.3408103 32.8164828,12.6891207 32.8164828,13.0656724 C32.8164828,13.4704655 32.7082241,13.8376034 32.4917069,14.1670862 C32.2751897,14.496569 31.9763017,14.7554483 31.5950431,14.9437241 C31.2137845,15.132 30.7736897,15.2261379 30.2747586,15.2261379 Z M37.3492241,22.7948276 L37.3492241,18.6574655 C37.6598793,19.137569 38.0576121,19.5023534 38.5424224,19.751819 C39.0272328,20.0012845 39.5708793,20.1260172 40.1733621,20.1260172 C40.8793966,20.1260172 41.5124741,19.9683362 42.0725948,19.6529741 C42.6327155,19.3376121 43.0728103,18.8928103 43.3928793,18.318569 C43.7129483,17.7443276 43.8729828,17.0853621 43.8729828,16.3416724 C43.8729828,15.6073966 43.7129483,14.9531379 43.3928793,14.3788966 C43.0728103,13.8046552 42.6303621,13.3598534 42.0655345,13.0444914 C41.5007069,12.7291293 40.8699828,12.5714483 40.1733621,12.5714483 C39.5520517,12.5714483 38.9942845,12.7032414 38.5000603,12.9668276 C38.0058362,13.2304138 37.6081034,13.6069655 37.3068621,14.0964828 L37.3068621,14.0964828 L37.3068621,12.627931 L36.3466552,12.627931 L36.3466552,22.7948276 L37.3492241,22.7948276 Z M40.1027586,19.2364138 C39.5755862,19.2364138 39.1025431,19.1163879 38.6836293,18.8763362 C38.2647155,18.6362845 37.9352328,18.2950345 37.695181,17.8525862 C37.4551293,17.4101379 37.3351034,16.9065 37.3351034,16.3416724 C37.3351034,15.7768448 37.4551293,15.2755603 37.695181,14.837819 C37.9352328,14.4000776 38.2647155,14.0588276 38.6836293,13.814069 C39.1025431,13.5693103 39.5755862,13.446931 40.1027586,13.446931 C40.6205172,13.446931 41.0912069,13.5693103 41.5148276,13.814069 C41.9384483,14.0588276 42.2702845,14.4000776 42.5103362,14.837819 C42.7503879,15.2755603 42.8704138,15.7768448 42.8704138,16.3416724 C42.8704138,16.9065 42.7503879,17.4101379 42.5103362,17.8525862 C42.2702845,18.2950345 41.9384483,18.6362845 41.5148276,18.8763362 C41.0912069,19.1163879 40.6205172,19.2364138 40.1027586,19.2364138 Z M46.9230517,22.7948276 L46.9230517,18.6574655 C47.2337069,19.137569 47.6314397,19.5023534 48.11625,19.751819 C48.6010603,20.0012845 49.1447069,20.1260172 49.7471897,20.1260172 C50.4532241,20.1260172 51.0863017,19.9683362 51.6464224,19.6529741 C52.2065431,19.3376121 52.6466379,18.8928103 52.9667069,18.318569 C53.2867759,17.7443276 53.4468103,17.0853621 53.4468103,16.3416724 C53.4468103,15.6073966 53.2867759,14.9531379 52.9667069,14.3788966 C52.6466379,13.8046552 52.2041897,13.3598534 51.6393621,13.0444914 C51.0745345,12.7291293 50.4438103,12.5714483 49.7471897,12.5714483 C49.1258793,12.5714483 48.5681121,12.7032414 48.0738879,12.9668276 C47.5796638,13.2304138 47.181931,13.6069655 46.8806897,14.0964828 L46.8806897,14.0964828 L46.8806897,12.627931 L45.9204828,12.627931 L45.9204828,22.7948276 L46.9230517,22.7948276 Z M49.6765862,19.2364138 C49.1494138,19.2364138 48.6763707,19.1163879 48.2574569,18.8763362 C47.8385431,18.6362845 47.5090603,18.2950345 47.2690086,17.8525862 C47.0289569,17.4101379 46.908931,16.9065 46.908931,16.3416724 C46.908931,15.7768448 47.0289569,15.2755603 47.2690086,14.837819 C47.5090603,14.4000776 47.8385431,14.0588276 48.2574569,13.814069 C48.6763707,13.5693103 49.1494138,13.446931 49.6765862,13.446931 C50.1943448,13.446931 50.6650345,13.5693103 51.0886552,13.814069 C51.5122759,14.0588276 51.8441121,14.4000776 52.0841638,14.837819 C52.3242155,15.2755603 52.4442414,15.7768448 52.4442414,16.3416724 C52.4442414,16.9065 52.3242155,17.4101379 52.0841638,17.8525862 C51.8441121,18.2950345 51.5122759,18.6362845 51.0886552,18.8763362 C50.6650345,19.1163879 50.1943448,19.2364138 49.6765862,19.2364138 Z\",\"id\":\"+19pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"67.1082895\",\"height\":\"32.211979\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"path\",{\"d\":\"M206.77531,54.045931 C207.571448,54.045931 208.294966,53.8926207 208.945862,53.586 C209.596759,53.2793793 210.110483,52.8409655 210.487034,52.2707586 C210.863586,51.7005517 211.051862,51.0388966 211.051862,50.2857931 C211.051862,49.5864828 210.879724,48.9705517 210.535448,48.438 C210.191172,47.9054483 209.723172,47.493931 209.131448,47.2034483 C208.539724,46.9129655 207.883448,46.7677241 207.162621,46.7677241 C205.968414,46.7677241 205.037793,47.1012414 204.370759,47.7682759 C204.413793,46.7031724 204.715034,45.8908966 205.274483,45.3314483 C205.833931,44.772 206.592414,44.4922759 207.549931,44.4922759 C208.399862,44.4922759 209.104552,44.6805517 209.664,45.0571034 L209.664,45.0571034 L210.632276,43.1366897 C210.244966,42.8892414 209.774276,42.6982759 209.220207,42.5637931 C208.666138,42.4293103 208.087862,42.362069 207.485379,42.362069 C206.344966,42.362069 205.341724,42.5987586 204.475655,43.0721379 C203.609586,43.5455172 202.934483,44.2394483 202.450345,45.153931 C201.966207,46.0684138 201.724138,47.1657931 201.724138,48.446069 C201.724138,50.2427586 202.170621,51.6252414 203.063586,52.5935172 C203.956552,53.5617931 205.193793,54.045931 206.77531,54.045931 Z M206.630069,52.0932414 C206.016828,52.0932414 205.53269,51.9372414 205.177655,51.6252414 C204.822621,51.3132414 204.645103,50.9097931 204.645103,50.4148966 C204.645103,49.92 204.828,49.5138621 205.193793,49.1964828 C205.559586,48.8791034 206.027586,48.7204138 206.597793,48.7204138 C207.178759,48.7204138 207.644069,48.8737241 207.993724,49.1803448 C208.343379,49.4869655 208.518207,49.8984828 208.518207,50.4148966 C208.518207,50.9313103 208.343379,51.3401379 207.993724,51.6413793 C207.644069,51.9426207 207.189517,52.0932414 206.630069,52.0932414 Z M216.845379,54.045931 C217.781379,54.045931 218.615172,53.8146207 219.346759,53.352 C220.078345,52.8893793 220.651241,52.2196552 221.065448,51.3428276 C221.479655,50.466 221.686759,49.4197241 221.686759,48.204 C221.686759,46.9882759 221.479655,45.942 221.065448,45.0651724 C220.651241,44.1883448 220.078345,43.5186207 219.346759,43.056 C218.615172,42.5933793 217.781379,42.362069 216.845379,42.362069 C215.909379,42.362069 215.075586,42.5933793 214.344,43.056 C213.612414,43.5186207 213.039517,44.1883448 212.62531,45.0651724 C212.211103,45.942 212.004,46.9882759 212.004,48.204 C212.004,49.4197241 212.211103,50.466 212.62531,51.3428276 C213.039517,52.2196552 213.612414,52.8893793 214.344,53.352 C215.075586,53.8146207 215.909379,54.045931 216.845379,54.045931 Z M216.845379,51.8350345 C216.167586,51.8350345 215.632345,51.5391724 215.239655,50.9474483 C214.846966,50.3557241 214.650621,49.4412414 214.650621,48.204 C214.650621,46.9667586 214.846966,46.0522759 215.239655,45.4605517 C215.632345,44.8688276 216.167586,44.5729655 216.845379,44.5729655 C217.533931,44.5729655 218.074552,44.8688276 218.467241,45.4605517 C218.859931,46.0522759 219.056276,46.9667586 219.056276,48.204 C219.056276,49.4412414 218.859931,50.3557241 218.467241,50.9474483 C218.074552,51.5391724 217.533931,51.8350345 216.845379,51.8350345 Z M225.170534,49.3054138 C225.895397,49.3054138 226.483759,49.0583017 226.935621,48.5640776 C227.387483,48.0698534 227.613414,47.4085345 227.613414,46.5801207 C227.613414,45.7517069 227.387483,45.0903879 226.935621,44.5961638 C226.483759,44.1019397 225.895397,43.8548276 225.170534,43.8548276 C224.445672,43.8548276 223.854957,44.1019397 223.398388,44.5961638 C222.941819,45.0903879 222.713534,45.7517069 222.713534,46.5801207 C222.713534,47.4085345 222.941819,48.0698534 223.398388,48.5640776 C223.854957,49.0583017 224.445672,49.3054138 225.170534,49.3054138 Z M225.989534,53.8522759 L232.739224,43.9677931 L231.058862,43.9677931 L224.309172,53.8522759 L225.989534,53.8522759 Z M225.170534,48.1475172 C224.859879,48.1475172 224.610414,48.0133707 224.422138,47.7450776 C224.233862,47.4767845 224.139724,47.0884655 224.139724,46.5801207 C224.139724,46.0717759 224.233862,45.6834569 224.422138,45.4151638 C224.610414,45.1468707 224.859879,45.0127241 225.170534,45.0127241 C225.490603,45.0127241 225.742422,45.1445172 225.925991,45.4081034 C226.10956,45.6716897 226.201345,46.0623621 226.201345,46.5801207 C226.201345,47.0978793 226.10956,47.4885517 225.925991,47.7521379 C225.742422,48.0157241 225.490603,48.1475172 225.170534,48.1475172 Z M231.877862,53.9652414 C232.602724,53.9652414 233.19344,53.7181293 233.650009,53.2239052 C234.106578,52.729681 234.334862,52.0683621 234.334862,51.2399483 C234.334862,50.4115345 234.106578,49.7502155 233.650009,49.2559914 C233.19344,48.7617672 232.602724,48.5146552 231.877862,48.5146552 C231.407172,48.5146552 230.985905,48.6252672 230.61406,48.8464914 C230.242216,49.0677155 229.952741,49.385431 229.745638,49.7996379 C229.538534,50.2138448 229.434983,50.6939483 229.434983,51.2399483 C229.434983,51.7859483 229.538534,52.2660517 229.745638,52.6802586 C229.952741,53.0944655 230.242216,53.412181 230.61406,53.6334052 C230.985905,53.8546293 231.407172,53.9652414 231.877862,53.9652414 Z M231.877862,52.8073448 C231.567207,52.8073448 231.317741,52.6755517 231.129466,52.4119655 C230.94119,52.1483793 230.847052,51.7577069 230.847052,51.2399483 C230.847052,50.7221897 230.94119,50.3315172 231.129466,50.067931 C231.317741,49.8043448 231.567207,49.6725517 231.877862,49.6725517 C232.197931,49.6725517 232.44975,49.8066983 232.633319,50.0749914 C232.816888,50.3432845 232.908672,50.7316034 232.908672,51.2399483 C232.908672,51.7482931 232.816888,52.1366121 232.633319,52.4049052 C232.44975,52.6731983 232.197931,52.8073448 231.877862,52.8073448 Z\",\"id\":\"60%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":15}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy\",\"fill\":\"#F3F3F3\",\"x\":\"52.0305737\",\"y\":\"0\",\"width\":\"134.216579\",\"height\":\"306.0138\",\"key\":16}),React.createElement(\"g\",{\"id\":\"Group-26-Copy-2\",\"transform\":\"translate(52.448276, 0.000000)\",\"key\":17},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-50\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"52.3444658\",\"height\":\"32.211979\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-51\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32.2758621\",\"width\":\"80.5299475\",\"height\":\"32.211979\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-28-Copy-2\",\"transform\":\"translate(52.448276, 80.689655)\",\"key\":18},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-52\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"63.0817922\",\"height\":\"32.211979\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-53\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32.2758621\",\"width\":\"89.925108\",\"height\":\"32.211979\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-30-Copy-2\",\"transform\":\"translate(52.448276, 161.379310)\",\"key\":19},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-54\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"68.4504553\",\"height\":\"32.211979\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-55\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32.2758621\",\"width\":\"93.9516054\",\"height\":\"32.211979\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-31-Copy-2\",\"transform\":\"translate(52.448276, 242.068966)\",\"key\":20},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-56\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"68.4504553\",\"height\":\"32.211979\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-57\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32.2758621\",\"width\":\"95.2937712\",\"height\":\"32.211979\",\"key\":1})])])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph1Mobile.defaultProps = {\"width\":\"351px\",\"height\":\"308px\",\"viewBox\":\"0 0 351 308\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph1Mobile;\n\nSchoolYearsGapsInAttainmentGraph1Mobile.default = SchoolYearsGapsInAttainmentGraph1Mobile;\n","import FurtherReading from \"../../../../src/components/research/further-reading\";\nimport * as React from 'react';\nexport default {\n  FurtherReading,\n  React\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var React = require('react');\n\nfunction ApprenticeshipsTablet (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 12\"),React.createElement(\"g\",{\"id\":\"Home->-Issues-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Tablet/Timeline/School-years/Family-circumstances-Copy\",\"transform\":\"translate(-39.000000, -2157.000000)\"},React.createElement(\"g\",{\"id\":\"Group-27\",\"transform\":\"translate(37.000000, 2058.000000)\"},React.createElement(\"g\",{\"id\":\"Group-12\",\"transform\":\"translate(3.000000, 99.000000)\"},[React.createElement(\"path\",{\"d\":\"M36.48,14 L36.48,12.976 L30.32,12.976 L34.128,9.232 C34.8426667,8.53866667 35.328,7.92533333 35.584,7.392 C35.84,6.85866667 35.968,6.304 35.968,5.728 C35.968,4.78933333 35.6346667,4.05066667 34.968,3.512 C34.3013333,2.97333333 33.3973333,2.704 32.256,2.704 C31.4026667,2.704 30.6373333,2.84266667 29.96,3.12 C29.2826667,3.39733333 28.7253333,3.792 28.288,4.304 L28.288,4.304 L29.104,5.008 C29.8293333,4.176 30.848,3.76 32.16,3.76 C33.0026667,3.76 33.6506667,3.944 34.104,4.312 C34.5573333,4.68 34.784,5.19466667 34.784,5.856 C34.784,6.28266667 34.68,6.70666667 34.472,7.128 C34.264,7.54933333 33.8666667,8.048 33.28,8.624 L33.28,8.624 L28.624,13.184 L28.624,14 L36.48,14 Z M42.384,14.096 C43.248,14.096 44.0186667,13.8666667 44.696,13.408 C45.3733333,12.9493333 45.904,12.2906667 46.288,11.432 C46.672,10.5733333 46.864,9.56266667 46.864,8.4 C46.864,7.23733333 46.672,6.22666667 46.288,5.368 C45.904,4.50933333 45.3733333,3.85066667 44.696,3.392 C44.0186667,2.93333333 43.248,2.704 42.384,2.704 C41.52,2.704 40.7493333,2.93333333 40.072,3.392 C39.3946667,3.85066667 38.8666667,4.50933333 38.488,5.368 C38.1093333,6.22666667 37.92,7.23733333 37.92,8.4 C37.92,9.56266667 38.1093333,10.5733333 38.488,11.432 C38.8666667,12.2906667 39.3946667,12.9493333 40.072,13.408 C40.7493333,13.8666667 41.52,14.096 42.384,14.096 Z M42.384,13.04 C41.7333333,13.04 41.16,12.8586667 40.664,12.496 C40.168,12.1333333 39.7813333,11.6053333 39.504,10.912 C39.2266667,10.2186667 39.088,9.38133333 39.088,8.4 C39.088,7.41866667 39.2266667,6.58133333 39.504,5.888 C39.7813333,5.19466667 40.168,4.66666667 40.664,4.304 C41.16,3.94133333 41.7333333,3.76 42.384,3.76 C43.0346667,3.76 43.608,3.94133333 44.104,4.304 C44.6,4.66666667 44.9866667,5.19466667 45.264,5.888 C45.5413333,6.58133333 45.68,7.41866667 45.68,8.4 C45.68,9.38133333 45.5413333,10.2186667 45.264,10.912 C44.9866667,11.6053333 44.6,12.1333333 44.104,12.496 C43.608,12.8586667 43.0346667,13.04 42.384,13.04 Z M51.616,14 L51.616,2.8 L47.824,2.8 L47.824,3.824 L50.464,3.824 L50.464,14 L51.616,14 Z M57.824,14.096 C58.7093333,14.096 59.456,13.9493333 60.064,13.656 C60.672,13.3626667 61.128,12.96 61.432,12.448 C61.736,11.936 61.888,11.3546667 61.888,10.704 C61.888,9.65866667 61.5173333,8.84533333 60.776,8.264 C60.0346667,7.68266667 58.8533333,7.392 57.232,7.392 L57.232,7.392 L55.792,7.392 L56.176,3.824 L61.296,3.824 L61.296,2.8 L55.168,2.8 L54.592,8.416 L56.976,8.416 C58.3306667,8.416 59.2933333,8.61333333 59.864,9.008 C60.4346667,9.40266667 60.72,9.984 60.72,10.752 C60.72,11.4453333 60.4666667,12 59.96,12.416 C59.4533333,12.832 58.736,13.04 57.808,13.04 C57.104,13.04 56.448,12.92 55.84,12.68 C55.232,12.44 54.7413333,12.128 54.368,11.744 L54.368,11.744 L53.808,12.656 C54.2453333,13.0933333 54.824,13.4426667 55.544,13.704 C56.264,13.9653333 57.024,14.096 57.824,14.096 Z M63.152,15.6 L68.432,0.528 L67.392,0.528 L62.112,15.6 L63.152,15.6 Z M71.808,14 L71.808,2.8 L68.016,2.8 L68.016,3.824 L70.656,3.824 L70.656,14 L71.808,14 Z M79.072,14.096 C79.7973333,14.096 80.4506667,13.9546667 81.032,13.672 C81.6133333,13.3893333 82.0693333,12.9866667 82.4,12.464 C82.7306667,11.9413333 82.896,11.3386667 82.896,10.656 C82.896,9.984 82.736,9.39466667 82.416,8.888 C82.096,8.38133333 81.6506667,7.98933333 81.08,7.712 C80.5093333,7.43466667 79.856,7.296 79.12,7.296 C78.3306667,7.296 77.632,7.464 77.024,7.8 C76.416,8.136 75.9733333,8.608 75.696,9.216 C75.664,8.87466667 75.648,8.57066667 75.648,8.304 C75.648,6.81066667 76,5.672 76.704,4.888 C77.408,4.104 78.3786667,3.712 79.616,3.712 C80.5333333,3.712 81.2586667,3.888 81.792,4.24 L81.792,4.24 L82.256,3.312 C81.5946667,2.90666667 80.7093333,2.704 79.6,2.704 C78.576,2.704 77.68,2.92533333 76.912,3.368 C76.144,3.81066667 75.5466667,4.464 75.12,5.328 C74.6933333,6.192 74.48,7.248 74.48,8.496 C74.48,10.2773333 74.8746667,11.656 75.664,12.632 C76.4533333,13.608 77.5893333,14.096 79.072,14.096 Z M79.024,13.12 C78.4053333,13.12 77.872,13.008 77.424,12.784 C76.976,12.56 76.6373333,12.2666667 76.408,11.904 C76.1786667,11.5413333 76.064,11.1466667 76.064,10.72 C76.064,10.2613333 76.1866667,9.84533333 76.432,9.472 C76.6773333,9.09866667 77.016,8.80533333 77.448,8.592 C77.88,8.37866667 78.3786667,8.272 78.944,8.272 C79.808,8.272 80.4933333,8.49066667 81,8.928 C81.5066667,9.36533333 81.76,9.952 81.76,10.688 C81.76,11.424 81.5066667,12.0133333 81,12.456 C80.4933333,12.8986667 79.8346667,13.12 79.024,13.12 Z\",\"id\":\"2015/16\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"2\",\"y1\":\"8.19176831\",\"x2\":\"18\",\"y2\":\"8.19176831\",\"id\":\"Line-5\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M144.48,14 L144.48,12.976 L138.32,12.976 L142.128,9.232 C142.842667,8.53866667 143.328,7.92533333 143.584,7.392 C143.84,6.85866667 143.968,6.304 143.968,5.728 C143.968,4.78933333 143.634667,4.05066667 142.968,3.512 C142.301333,2.97333333 141.397333,2.704 140.256,2.704 C139.402667,2.704 138.637333,2.84266667 137.96,3.12 C137.282667,3.39733333 136.725333,3.792 136.288,4.304 L136.288,4.304 L137.104,5.008 C137.829333,4.176 138.848,3.76 140.16,3.76 C141.002667,3.76 141.650667,3.944 142.104,4.312 C142.557333,4.68 142.784,5.19466667 142.784,5.856 C142.784,6.28266667 142.68,6.70666667 142.472,7.128 C142.264,7.54933333 141.866667,8.048 141.28,8.624 L141.28,8.624 L136.624,13.184 L136.624,14 L144.48,14 Z M150.384,14.096 C151.248,14.096 152.018667,13.8666667 152.696,13.408 C153.373333,12.9493333 153.904,12.2906667 154.288,11.432 C154.672,10.5733333 154.864,9.56266667 154.864,8.4 C154.864,7.23733333 154.672,6.22666667 154.288,5.368 C153.904,4.50933333 153.373333,3.85066667 152.696,3.392 C152.018667,2.93333333 151.248,2.704 150.384,2.704 C149.52,2.704 148.749333,2.93333333 148.072,3.392 C147.394667,3.85066667 146.866667,4.50933333 146.488,5.368 C146.109333,6.22666667 145.92,7.23733333 145.92,8.4 C145.92,9.56266667 146.109333,10.5733333 146.488,11.432 C146.866667,12.2906667 147.394667,12.9493333 148.072,13.408 C148.749333,13.8666667 149.52,14.096 150.384,14.096 Z M150.384,13.04 C149.733333,13.04 149.16,12.8586667 148.664,12.496 C148.168,12.1333333 147.781333,11.6053333 147.504,10.912 C147.226667,10.2186667 147.088,9.38133333 147.088,8.4 C147.088,7.41866667 147.226667,6.58133333 147.504,5.888 C147.781333,5.19466667 148.168,4.66666667 148.664,4.304 C149.16,3.94133333 149.733333,3.76 150.384,3.76 C151.034667,3.76 151.608,3.94133333 152.104,4.304 C152.6,4.66666667 152.986667,5.19466667 153.264,5.888 C153.541333,6.58133333 153.68,7.41866667 153.68,8.4 C153.68,9.38133333 153.541333,10.2186667 153.264,10.912 C152.986667,11.6053333 152.6,12.1333333 152.104,12.496 C151.608,12.8586667 151.034667,13.04 150.384,13.04 Z M159.616,14 L159.616,2.8 L155.824,2.8 L155.824,3.824 L158.464,3.824 L158.464,14 L159.616,14 Z M166.88,14.096 C167.605333,14.096 168.258667,13.9546667 168.84,13.672 C169.421333,13.3893333 169.877333,12.9866667 170.208,12.464 C170.538667,11.9413333 170.704,11.3386667 170.704,10.656 C170.704,9.984 170.544,9.39466667 170.224,8.888 C169.904,8.38133333 169.458667,7.98933333 168.888,7.712 C168.317333,7.43466667 167.664,7.296 166.928,7.296 C166.138667,7.296 165.44,7.464 164.832,7.8 C164.224,8.136 163.781333,8.608 163.504,9.216 C163.472,8.87466667 163.456,8.57066667 163.456,8.304 C163.456,6.81066667 163.808,5.672 164.512,4.888 C165.216,4.104 166.186667,3.712 167.424,3.712 C168.341333,3.712 169.066667,3.888 169.6,4.24 L169.6,4.24 L170.064,3.312 C169.402667,2.90666667 168.517333,2.704 167.408,2.704 C166.384,2.704 165.488,2.92533333 164.72,3.368 C163.952,3.81066667 163.354667,4.464 162.928,5.328 C162.501333,6.192 162.288,7.248 162.288,8.496 C162.288,10.2773333 162.682667,11.656 163.472,12.632 C164.261333,13.608 165.397333,14.096 166.88,14.096 Z M166.832,13.12 C166.213333,13.12 165.68,13.008 165.232,12.784 C164.784,12.56 164.445333,12.2666667 164.216,11.904 C163.986667,11.5413333 163.872,11.1466667 163.872,10.72 C163.872,10.2613333 163.994667,9.84533333 164.24,9.472 C164.485333,9.09866667 164.824,8.80533333 165.256,8.592 C165.688,8.37866667 166.186667,8.272 166.752,8.272 C167.616,8.272 168.301333,8.49066667 168.808,8.928 C169.314667,9.36533333 169.568,9.952 169.568,10.688 C169.568,11.424 169.314667,12.0133333 168.808,12.456 C168.301333,12.8986667 167.642667,13.12 166.832,13.12 Z M171.84,15.6 L177.12,0.528 L176.08,0.528 L170.8,15.6 L171.84,15.6 Z M180.496,14 L180.496,2.8 L176.704,2.8 L176.704,3.824 L179.344,3.824 L179.344,14 L180.496,14 Z M186.384,14 L191.072,3.616 L191.072,2.8 L182.848,2.8 L182.848,5.92 L183.984,5.92 L183.984,3.824 L189.744,3.824 L185.136,14 L186.384,14 Z\",\"id\":\"2016/17\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"108\",\"y1\":\"8.19176831\",\"x2\":\"124\",\"y2\":\"8.19176831\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M252.48,14 L252.48,12.976 L246.32,12.976 L250.128,9.232 C250.842667,8.53866667 251.328,7.92533333 251.584,7.392 C251.84,6.85866667 251.968,6.304 251.968,5.728 C251.968,4.78933333 251.634667,4.05066667 250.968,3.512 C250.301333,2.97333333 249.397333,2.704 248.256,2.704 C247.402667,2.704 246.637333,2.84266667 245.96,3.12 C245.282667,3.39733333 244.725333,3.792 244.288,4.304 L244.288,4.304 L245.104,5.008 C245.829333,4.176 246.848,3.76 248.16,3.76 C249.002667,3.76 249.650667,3.944 250.104,4.312 C250.557333,4.68 250.784,5.19466667 250.784,5.856 C250.784,6.28266667 250.68,6.70666667 250.472,7.128 C250.264,7.54933333 249.866667,8.048 249.28,8.624 L249.28,8.624 L244.624,13.184 L244.624,14 L252.48,14 Z M258.384,14.096 C259.248,14.096 260.018667,13.8666667 260.696,13.408 C261.373333,12.9493333 261.904,12.2906667 262.288,11.432 C262.672,10.5733333 262.864,9.56266667 262.864,8.4 C262.864,7.23733333 262.672,6.22666667 262.288,5.368 C261.904,4.50933333 261.373333,3.85066667 260.696,3.392 C260.018667,2.93333333 259.248,2.704 258.384,2.704 C257.52,2.704 256.749333,2.93333333 256.072,3.392 C255.394667,3.85066667 254.866667,4.50933333 254.488,5.368 C254.109333,6.22666667 253.92,7.23733333 253.92,8.4 C253.92,9.56266667 254.109333,10.5733333 254.488,11.432 C254.866667,12.2906667 255.394667,12.9493333 256.072,13.408 C256.749333,13.8666667 257.52,14.096 258.384,14.096 Z M258.384,13.04 C257.733333,13.04 257.16,12.8586667 256.664,12.496 C256.168,12.1333333 255.781333,11.6053333 255.504,10.912 C255.226667,10.2186667 255.088,9.38133333 255.088,8.4 C255.088,7.41866667 255.226667,6.58133333 255.504,5.888 C255.781333,5.19466667 256.168,4.66666667 256.664,4.304 C257.16,3.94133333 257.733333,3.76 258.384,3.76 C259.034667,3.76 259.608,3.94133333 260.104,4.304 C260.6,4.66666667 260.986667,5.19466667 261.264,5.888 C261.541333,6.58133333 261.68,7.41866667 261.68,8.4 C261.68,9.38133333 261.541333,10.2186667 261.264,10.912 C260.986667,11.6053333 260.6,12.1333333 260.104,12.496 C259.608,12.8586667 259.034667,13.04 258.384,13.04 Z M267.616,14 L267.616,2.8 L263.824,2.8 L263.824,3.824 L266.464,3.824 L266.464,14 L267.616,14 Z M273.504,14 L278.192,3.616 L278.192,2.8 L269.968,2.8 L269.968,5.92 L271.104,5.92 L271.104,3.824 L276.864,3.824 L272.256,14 L273.504,14 Z M279.52,15.6 L284.8,0.528 L283.76,0.528 L278.48,15.6 L279.52,15.6 Z M288.176,14 L288.176,2.8 L284.384,2.8 L284.384,3.824 L287.024,3.824 L287.024,14 L288.176,14 Z M295.104,14.096 C295.989333,14.096 296.76,13.9653333 297.416,13.704 C298.072,13.4426667 298.576,13.0693333 298.928,12.584 C299.28,12.0986667 299.456,11.5306667 299.456,10.88 C299.456,10.2186667 299.266667,9.65333333 298.888,9.184 C298.509333,8.71466667 297.968,8.36266667 297.264,8.128 C297.84,7.904 298.282667,7.58133333 298.592,7.16 C298.901333,6.73866667 299.056,6.24 299.056,5.664 C299.056,5.06666667 298.890667,4.544 298.56,4.096 C298.229333,3.648 297.768,3.304 297.176,3.064 C296.584,2.824 295.893333,2.704 295.104,2.704 C293.909333,2.704 292.957333,2.97066667 292.248,3.504 C291.538667,4.03733333 291.184,4.75733333 291.184,5.664 C291.184,6.24 291.333333,6.73866667 291.632,7.16 C291.930667,7.58133333 292.368,7.904 292.944,8.128 C292.24,8.36266667 291.704,8.712 291.336,9.176 C290.968,9.64 290.784,10.208 290.784,10.88 C290.784,11.872 291.168,12.656 291.936,13.232 C292.704,13.808 293.76,14.096 295.104,14.096 Z M295.104,7.712 C294.24,7.712 293.562667,7.53066667 293.072,7.168 C292.581333,6.80533333 292.336,6.31466667 292.336,5.696 C292.336,5.07733333 292.584,4.58666667 293.08,4.224 C293.576,3.86133333 294.250667,3.68 295.104,3.68 C295.946667,3.68 296.621333,3.86133333 297.128,4.224 C297.634667,4.58666667 297.888,5.08266667 297.888,5.712 C297.888,6.32 297.64,6.80533333 297.144,7.168 C296.648,7.53066667 295.968,7.712 295.104,7.712 Z M295.104,13.12 C294.112,13.12 293.338667,12.92 292.784,12.52 C292.229333,12.12 291.952,11.568 291.952,10.864 C291.952,10.1706667 292.232,9.624 292.792,9.224 C293.352,8.824 294.122667,8.624 295.104,8.624 C296.096,8.624 296.872,8.824 297.432,9.224 C297.992,9.624 298.272,10.1706667 298.272,10.864 C298.272,11.5573333 297.992,12.1066667 297.432,12.512 C296.872,12.9173333 296.096,13.12 295.104,13.12 Z\",\"id\":\"2017/18\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"216\",\"y1\":\"8.19176831\",\"x2\":\"232\",\"y2\":\"8.19176831\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":5}),React.createElement(\"polygon\",{\"id\":\"Line-7\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"622.447957 285.129848 622.447957 286.129848 38.1566945 286.129848 38.1566945 285.129848\",\"key\":6}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"622.447957 66.0844107 622.447957 67.0844107 38.1566945 67.0844107 38.1566945 66.0844107\",\"key\":7}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy-2\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"622.447957 139.099556 622.447957 140.099556 38.1566945 140.099556 38.1566945 139.099556\",\"key\":8}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy-3\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"622.447957 212.114702 622.447957 213.114702 38.1566945 213.114702 38.1566945 212.114702\",\"key\":9}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"fill\":\"#2D3142\",\"x\":\"38\",\"y\":\"90.1551628\",\"width\":\"24\",\"height\":\"195.881078\",\"key\":10}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-61\",\"fill\":\"#2D3142\",\"x\":\"162\",\"y\":\"72.2739026\",\"width\":\"24\",\"height\":\"213.762338\",\"key\":11}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-64\",\"fill\":\"#2D3142\",\"x\":\"286\",\"y\":\"110.474777\",\"width\":\"24\",\"height\":\"175.561464\",\"key\":12}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-67\",\"fill\":\"#2D3142\",\"x\":\"410\",\"y\":\"127.543252\",\"width\":\"24\",\"height\":\"158.492988\",\"key\":13}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-70\",\"fill\":\"#2D3142\",\"x\":\"534\",\"y\":\"190.127663\",\"width\":\"24\",\"height\":\"95.9085774\",\"key\":14}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-59\",\"fill\":\"#3772FF\",\"x\":\"70\",\"y\":\"90\",\"width\":\"24\",\"height\":\"195.881078\",\"key\":15}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-62\",\"fill\":\"#3772FF\",\"x\":\"194\",\"y\":\"72.2739026\",\"width\":\"24\",\"height\":\"213.762338\",\"key\":16}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-65\",\"fill\":\"#3772FF\",\"x\":\"318\",\"y\":\"110.474777\",\"width\":\"24\",\"height\":\"175.561464\",\"key\":17}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-68\",\"fill\":\"#3772FF\",\"x\":\"442\",\"y\":\"127.543252\",\"width\":\"24\",\"height\":\"158.492988\",\"key\":18}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-71\",\"fill\":\"#3772FF\",\"x\":\"566\",\"y\":\"190.127663\",\"width\":\"24\",\"height\":\"95.9085774\",\"key\":19}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-60\",\"fill\":\"#FFBA08\",\"x\":\"102\",\"y\":\"116.977053\",\"width\":\"24\",\"height\":\"169.059187\",\"key\":20}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-63\",\"fill\":\"#FFBA08\",\"x\":\"226\",\"y\":\"90.1551628\",\"width\":\"24\",\"height\":\"195.881078\",\"key\":21}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-66\",\"fill\":\"#FFBA08\",\"x\":\"350\",\"y\":\"131.607175\",\"width\":\"24\",\"height\":\"154.429065\",\"key\":22}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-69\",\"fill\":\"#FFBA08\",\"x\":\"474\",\"y\":\"159.24185\",\"width\":\"24\",\"height\":\"126.79439\",\"key\":23}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-72\",\"fill\":\"#FFBA08\",\"x\":\"598\",\"y\":\"190.127663\",\"width\":\"24\",\"height\":\"95.9085774\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M70.200186,316.789655 L70.200186,306.613655 L74.136186,306.613655 L74.136186,305.589655 L65.080186,305.589655 L65.080186,306.613655 L69.016186,306.613655 L69.016186,316.789655 L70.200186,316.789655 Z M79.224186,316.869655 C80.0348527,316.869655 80.7655194,316.685655 81.416186,316.317655 C82.0668527,315.949655 82.576186,315.440322 82.944186,314.789655 C83.312186,314.138988 83.496186,313.402988 83.496186,312.581655 C83.496186,311.760322 83.312186,311.024322 82.944186,310.373655 C82.576186,309.722988 82.0668527,309.216322 81.416186,308.853655 C80.7655194,308.490988 80.0348527,308.309655 79.224186,308.309655 C78.4135194,308.309655 77.6828527,308.490988 77.032186,308.853655 C76.3815194,309.216322 75.8695194,309.722988 75.496186,310.373655 C75.1228527,311.024322 74.936186,311.760322 74.936186,312.581655 C74.936186,313.402988 75.1228527,314.138988 75.496186,314.789655 C75.8695194,315.440322 76.3815194,315.949655 77.032186,316.317655 C77.6828527,316.685655 78.4135194,316.869655 79.224186,316.869655 Z M79.224186,315.861655 C78.6268527,315.861655 78.0908527,315.725655 77.616186,315.453655 C77.1415194,315.181655 76.768186,314.794988 76.496186,314.293655 C76.224186,313.792322 76.088186,313.221655 76.088186,312.581655 C76.088186,311.941655 76.224186,311.370988 76.496186,310.869655 C76.768186,310.368322 77.1415194,309.981655 77.616186,309.709655 C78.0908527,309.437655 78.6268527,309.301655 79.224186,309.301655 C79.8215194,309.301655 80.3575194,309.437655 80.832186,309.709655 C81.3068527,309.981655 81.6775194,310.368322 81.944186,310.869655 C82.2108527,311.370988 82.344186,311.941655 82.344186,312.581655 C82.344186,313.221655 82.2108527,313.792322 81.944186,314.293655 C81.6775194,314.794988 81.3068527,315.181655 80.832186,315.453655 C80.3575194,315.725655 79.8215194,315.861655 79.224186,315.861655 Z M88.472186,316.869655 C88.8135194,316.869655 89.1415194,316.818988 89.456186,316.717655 C89.7708527,316.616322 90.0348527,316.469655 90.248186,316.277655 L90.248186,316.277655 L89.848186,315.461655 C89.688186,315.600322 89.4988527,315.706988 89.280186,315.781655 C89.0615194,315.856322 88.8348527,315.893655 88.600186,315.893655 C88.1308527,315.893655 87.7708527,315.762988 87.520186,315.501655 C87.2695194,315.240322 87.144186,314.858988 87.144186,314.357655 L87.144186,314.357655 L87.144186,309.333655 L89.704186,309.333655 L89.704186,308.373655 L87.144186,308.373655 L87.144186,306.533655 L86.008186,306.533655 L86.008186,308.373655 L84.504186,308.373655 L84.504186,309.333655 L86.008186,309.333655 L86.008186,314.421655 C86.008186,315.200322 86.2215194,315.802988 86.648186,316.229655 C87.0748527,316.656322 87.6828527,316.869655 88.472186,316.869655 Z M94.680186,316.869655 C95.3628527,316.869655 95.952186,316.746988 96.448186,316.501655 C96.944186,316.256322 97.320186,315.914988 97.576186,315.477655 L97.576186,315.477655 L97.576186,316.789655 L98.664186,316.789655 L98.664186,311.573655 C98.664186,310.496322 98.3708527,309.682988 97.784186,309.133655 C97.1975194,308.584322 96.3548527,308.309655 95.256186,308.309655 C94.5948527,308.309655 93.9655194,308.408322 93.368186,308.605655 C92.7708527,308.802988 92.2588527,309.082988 91.832186,309.445655 L91.832186,309.445655 L92.344186,310.293655 C92.696186,309.984322 93.1175194,309.741655 93.608186,309.565655 C94.0988527,309.389655 94.6108527,309.301655 95.144186,309.301655 C95.9228527,309.301655 96.5148527,309.490988 96.920186,309.869655 C97.3255194,310.248322 97.528186,310.800322 97.528186,311.525655 L97.528186,311.525655 L97.528186,312.037655 L94.856186,312.037655 C93.7255194,312.037655 92.9015194,312.256322 92.384186,312.693655 C91.8668527,313.130988 91.608186,313.706988 91.608186,314.421655 C91.608186,315.157655 91.8855194,315.749655 92.440186,316.197655 C92.9948527,316.645655 93.7415194,316.869655 94.680186,316.869655 Z M94.856186,315.973655 C94.184186,315.973655 93.6615194,315.832322 93.288186,315.549655 C92.9148527,315.266988 92.728186,314.880322 92.728186,314.389655 C92.728186,313.386988 93.448186,312.885655 94.888186,312.885655 L94.888186,312.885655 L97.528186,312.885655 L97.528186,314.261655 C97.304186,314.816322 96.9628527,315.240322 96.504186,315.533655 C96.0455194,315.826988 95.496186,315.973655 94.856186,315.973655 Z M102.888186,316.789655 L102.888186,304.917655 L101.752186,304.917655 L101.752186,316.789655 L102.888186,316.789655 Z M29.856186,346.869655 C30.560186,346.869655 31.192186,346.720322 31.752186,346.421655 C32.312186,346.122988 32.7628527,345.690988 33.104186,345.125655 L33.104186,345.125655 L33.104186,346.789655 L34.192186,346.789655 L34.192186,334.917655 L33.056186,334.917655 L33.056186,339.973655 C32.704186,339.429655 32.2535194,339.016322 31.704186,338.733655 C31.1548527,338.450988 30.5388527,338.309655 29.856186,338.309655 C29.0668527,338.309655 28.352186,338.488322 27.712186,338.845655 C27.072186,339.202988 26.5708527,339.706988 26.208186,340.357655 C25.8455194,341.008322 25.664186,341.749655 25.664186,342.581655 C25.664186,343.413655 25.8455194,344.154988 26.208186,344.805655 C26.5708527,345.456322 27.072186,345.962988 27.712186,346.325655 C28.352186,346.688322 29.0668527,346.869655 29.856186,346.869655 Z M29.952186,345.861655 C29.3548527,345.861655 28.8188527,345.725655 28.344186,345.453655 C27.8695194,345.181655 27.496186,344.794988 27.224186,344.293655 C26.952186,343.792322 26.816186,343.221655 26.816186,342.581655 C26.816186,341.941655 26.952186,341.370988 27.224186,340.869655 C27.496186,340.368322 27.8695194,339.981655 28.344186,339.709655 C28.8188527,339.437655 29.3548527,339.301655 29.952186,339.301655 C30.5388527,339.301655 31.0695194,339.437655 31.544186,339.709655 C32.0188527,339.981655 32.392186,340.368322 32.664186,340.869655 C32.936186,341.370988 33.072186,341.941655 33.072186,342.581655 C33.072186,343.221655 32.936186,343.792322 32.664186,344.293655 C32.392186,344.794988 32.0188527,345.181655 31.544186,345.453655 C31.0695194,345.725655 30.5388527,345.861655 29.952186,345.861655 Z M37.936186,336.533655 C38.1708527,336.533655 38.368186,336.453655 38.528186,336.293655 C38.688186,336.133655 38.768186,335.936322 38.768186,335.701655 C38.768186,335.488322 38.688186,335.304322 38.528186,335.149655 C38.368186,334.994988 38.1708527,334.917655 37.936186,334.917655 C37.7015194,334.917655 37.504186,334.997655 37.344186,335.157655 C37.184186,335.317655 37.104186,335.504322 37.104186,335.717655 C37.104186,335.941655 37.184186,336.133655 37.344186,336.293655 C37.504186,336.453655 37.7015194,336.533655 37.936186,336.533655 Z M38.496186,346.789655 L38.496186,338.373655 L37.360186,338.373655 L37.360186,346.789655 L38.496186,346.789655 Z M43.920186,346.869655 C45.008186,346.869655 45.8588527,346.653655 46.472186,346.221655 C47.0855194,345.789655 47.392186,345.205655 47.392186,344.469655 C47.392186,343.925655 47.248186,343.498988 46.960186,343.189655 C46.672186,342.880322 46.3255194,342.661655 45.920186,342.533655 C45.5148527,342.405655 44.976186,342.277655 44.304186,342.149655 C43.760186,342.053655 43.3335194,341.960322 43.024186,341.869655 C42.7148527,341.778988 42.456186,341.637655 42.248186,341.445655 C42.040186,341.253655 41.936186,340.997655 41.936186,340.677655 C41.936186,340.261655 42.120186,339.925655 42.488186,339.669655 C42.856186,339.413655 43.4028527,339.285655 44.128186,339.285655 C45.088186,339.285655 45.9148527,339.525655 46.608186,340.005655 L46.608186,340.005655 L47.104186,339.093655 C46.752186,338.858988 46.304186,338.669655 45.760186,338.525655 C45.216186,338.381655 44.672186,338.309655 44.128186,338.309655 C43.0828527,338.309655 42.2668527,338.533655 41.680186,338.981655 C41.0935194,339.429655 40.800186,340.005655 40.800186,340.709655 C40.800186,341.274988 40.9468527,341.717655 41.240186,342.037655 C41.5335194,342.357655 41.888186,342.584322 42.304186,342.717655 C42.720186,342.850988 43.2695194,342.981655 43.952186,343.109655 C44.464186,343.194988 44.8748527,343.282988 45.184186,343.373655 C45.4935194,343.464322 45.7495194,343.597655 45.952186,343.773655 C46.1548527,343.949655 46.256186,344.192322 46.256186,344.501655 C46.256186,344.938988 46.072186,345.277655 45.704186,345.517655 C45.336186,345.757655 44.768186,345.877655 44.000186,345.877655 C43.424186,345.877655 42.8695194,345.789655 42.336186,345.613655 C41.8028527,345.437655 41.360186,345.210988 41.008186,344.933655 L41.008186,344.933655 L40.496186,345.829655 C40.848186,346.128322 41.336186,346.376322 41.960186,346.573655 C42.584186,346.770988 43.2375194,346.869655 43.920186,346.869655 Z M51.856186,346.869655 C52.5388527,346.869655 53.128186,346.746988 53.624186,346.501655 C54.120186,346.256322 54.496186,345.914988 54.752186,345.477655 L54.752186,345.477655 L54.752186,346.789655 L55.840186,346.789655 L55.840186,341.573655 C55.840186,340.496322 55.5468527,339.682988 54.960186,339.133655 C54.3735194,338.584322 53.5308527,338.309655 52.432186,338.309655 C51.7708527,338.309655 51.1415194,338.408322 50.544186,338.605655 C49.9468527,338.802988 49.4348527,339.082988 49.008186,339.445655 L49.008186,339.445655 L49.520186,340.293655 C49.872186,339.984322 50.2935194,339.741655 50.784186,339.565655 C51.2748527,339.389655 51.7868527,339.301655 52.320186,339.301655 C53.0988527,339.301655 53.6908527,339.490988 54.096186,339.869655 C54.5015194,340.248322 54.704186,340.800322 54.704186,341.525655 L54.704186,341.525655 L54.704186,342.037655 L52.032186,342.037655 C50.9015194,342.037655 50.0775194,342.256322 49.560186,342.693655 C49.0428527,343.130988 48.784186,343.706988 48.784186,344.421655 C48.784186,345.157655 49.0615194,345.749655 49.616186,346.197655 C50.1708527,346.645655 50.9175194,346.869655 51.856186,346.869655 Z M52.032186,345.973655 C51.360186,345.973655 50.8375194,345.832322 50.464186,345.549655 C50.0908527,345.266988 49.904186,344.880322 49.904186,344.389655 C49.904186,343.386988 50.624186,342.885655 52.064186,342.885655 L52.064186,342.885655 L54.704186,342.885655 L54.704186,344.261655 C54.480186,344.816322 54.1388527,345.240322 53.680186,345.533655 C53.2215194,345.826988 52.672186,345.973655 52.032186,345.973655 Z M62.272186,346.869655 C62.976186,346.869655 63.608186,346.720322 64.168186,346.421655 C64.728186,346.122988 65.1788527,345.690988 65.520186,345.125655 L65.520186,345.125655 L65.520186,346.789655 L66.608186,346.789655 L66.608186,334.917655 L65.472186,334.917655 L65.472186,339.973655 C65.120186,339.429655 64.6695194,339.016322 64.120186,338.733655 C63.5708527,338.450988 62.9548527,338.309655 62.272186,338.309655 C61.4828527,338.309655 60.768186,338.488322 60.128186,338.845655 C59.488186,339.202988 58.9868527,339.706988 58.624186,340.357655 C58.2615194,341.008322 58.080186,341.749655 58.080186,342.581655 C58.080186,343.413655 58.2615194,344.154988 58.624186,344.805655 C58.9868527,345.456322 59.488186,345.962988 60.128186,346.325655 C60.768186,346.688322 61.4828527,346.869655 62.272186,346.869655 Z M62.368186,345.861655 C61.7708527,345.861655 61.2348527,345.725655 60.760186,345.453655 C60.2855194,345.181655 59.912186,344.794988 59.640186,344.293655 C59.368186,343.792322 59.232186,343.221655 59.232186,342.581655 C59.232186,341.941655 59.368186,341.370988 59.640186,340.869655 C59.912186,340.368322 60.2855194,339.981655 60.760186,339.709655 C61.2348527,339.437655 61.7708527,339.301655 62.368186,339.301655 C62.9548527,339.301655 63.4855194,339.437655 63.960186,339.709655 C64.4348527,339.981655 64.808186,340.368322 65.080186,340.869655 C65.352186,341.370988 65.488186,341.941655 65.488186,342.581655 C65.488186,343.221655 65.352186,343.792322 65.080186,344.293655 C64.808186,344.794988 64.4348527,345.181655 63.960186,345.453655 C63.4855194,345.725655 62.9548527,345.861655 62.368186,345.861655 Z M73.104186,346.789655 L76.848186,338.373655 L75.728186,338.373655 L72.544186,345.541655 L69.392186,338.373655 L68.208186,338.373655 L71.936186,346.789655 L73.104186,346.789655 Z M80.816186,346.869655 C81.4988527,346.869655 82.088186,346.746988 82.584186,346.501655 C83.080186,346.256322 83.456186,345.914988 83.712186,345.477655 L83.712186,345.477655 L83.712186,346.789655 L84.800186,346.789655 L84.800186,341.573655 C84.800186,340.496322 84.5068527,339.682988 83.920186,339.133655 C83.3335194,338.584322 82.4908527,338.309655 81.392186,338.309655 C80.7308527,338.309655 80.1015194,338.408322 79.504186,338.605655 C78.9068527,338.802988 78.3948527,339.082988 77.968186,339.445655 L77.968186,339.445655 L78.480186,340.293655 C78.832186,339.984322 79.2535194,339.741655 79.744186,339.565655 C80.2348527,339.389655 80.7468527,339.301655 81.280186,339.301655 C82.0588527,339.301655 82.6508527,339.490988 83.056186,339.869655 C83.4615194,340.248322 83.664186,340.800322 83.664186,341.525655 L83.664186,341.525655 L83.664186,342.037655 L80.992186,342.037655 C79.8615194,342.037655 79.0375194,342.256322 78.520186,342.693655 C78.0028527,343.130988 77.744186,343.706988 77.744186,344.421655 C77.744186,345.157655 78.0215194,345.749655 78.576186,346.197655 C79.1308527,346.645655 79.8775194,346.869655 80.816186,346.869655 Z M80.992186,345.973655 C80.320186,345.973655 79.7975194,345.832322 79.424186,345.549655 C79.0508527,345.266988 78.864186,344.880322 78.864186,344.389655 C78.864186,343.386988 79.584186,342.885655 81.024186,342.885655 L81.024186,342.885655 L83.664186,342.885655 L83.664186,344.261655 C83.440186,344.816322 83.0988527,345.240322 82.640186,345.533655 C82.1815194,345.826988 81.632186,345.973655 80.992186,345.973655 Z M89.024186,346.789655 L89.024186,342.373655 C89.024186,341.424322 89.288186,340.680322 89.816186,340.141655 C90.344186,339.602988 91.0615194,339.333655 91.968186,339.333655 C92.7788527,339.333655 93.4028527,339.562988 93.840186,340.021655 C94.2775194,340.480322 94.496186,341.146988 94.496186,342.021655 L94.496186,342.021655 L94.496186,346.789655 L95.632186,346.789655 L95.632186,341.909655 C95.632186,340.736322 95.320186,339.842988 94.696186,339.229655 C94.072186,338.616322 93.232186,338.309655 92.176186,338.309655 C91.4508527,338.309655 90.8135194,338.450988 90.264186,338.733655 C89.7148527,339.016322 89.2855194,339.413655 88.976186,339.925655 L88.976186,339.925655 L88.976186,338.373655 L87.888186,338.373655 L87.888186,346.789655 L89.024186,346.789655 Z M101.376186,346.869655 C101.717519,346.869655 102.045519,346.818988 102.360186,346.717655 C102.674853,346.616322 102.938853,346.469655 103.152186,346.277655 L103.152186,346.277655 L102.752186,345.461655 C102.592186,345.600322 102.402853,345.706988 102.184186,345.781655 C101.965519,345.856322 101.738853,345.893655 101.504186,345.893655 C101.034853,345.893655 100.674853,345.762988 100.424186,345.501655 C100.173519,345.240322 100.048186,344.858988 100.048186,344.357655 L100.048186,344.357655 L100.048186,339.333655 L102.608186,339.333655 L102.608186,338.373655 L100.048186,338.373655 L100.048186,336.533655 L98.912186,336.533655 L98.912186,338.373655 L97.408186,338.373655 L97.408186,339.333655 L98.912186,339.333655 L98.912186,344.421655 C98.912186,345.200322 99.1255194,345.802988 99.552186,346.229655 C99.9788527,346.656322 100.586853,346.869655 101.376186,346.869655 Z M107.584186,346.869655 C108.266853,346.869655 108.856186,346.746988 109.352186,346.501655 C109.848186,346.256322 110.224186,345.914988 110.480186,345.477655 L110.480186,345.477655 L110.480186,346.789655 L111.568186,346.789655 L111.568186,341.573655 C111.568186,340.496322 111.274853,339.682988 110.688186,339.133655 C110.101519,338.584322 109.258853,338.309655 108.160186,338.309655 C107.498853,338.309655 106.869519,338.408322 106.272186,338.605655 C105.674853,338.802988 105.162853,339.082988 104.736186,339.445655 L104.736186,339.445655 L105.248186,340.293655 C105.600186,339.984322 106.021519,339.741655 106.512186,339.565655 C107.002853,339.389655 107.514853,339.301655 108.048186,339.301655 C108.826853,339.301655 109.418853,339.490988 109.824186,339.869655 C110.229519,340.248322 110.432186,340.800322 110.432186,341.525655 L110.432186,341.525655 L110.432186,342.037655 L107.760186,342.037655 C106.629519,342.037655 105.805519,342.256322 105.288186,342.693655 C104.770853,343.130988 104.512186,343.706988 104.512186,344.421655 C104.512186,345.157655 104.789519,345.749655 105.344186,346.197655 C105.898853,346.645655 106.645519,346.869655 107.584186,346.869655 Z M107.760186,345.973655 C107.088186,345.973655 106.565519,345.832322 106.192186,345.549655 C105.818853,345.266988 105.632186,344.880322 105.632186,344.389655 C105.632186,343.386988 106.352186,342.885655 107.792186,342.885655 L107.792186,342.885655 L110.432186,342.885655 L110.432186,344.261655 C110.208186,344.816322 109.866853,345.240322 109.408186,345.533655 C108.949519,345.826988 108.400186,345.973655 107.760186,345.973655 Z M118.240186,349.973655 C119.648186,349.973655 120.701519,349.629655 121.400186,348.941655 C122.098853,348.253655 122.448186,347.194988 122.448186,345.765655 L122.448186,345.765655 L122.448186,338.373655 L121.360186,338.373655 L121.360186,339.989655 C121.008186,339.445655 120.544186,339.029655 119.968186,338.741655 C119.392186,338.453655 118.746853,338.309655 118.032186,338.309655 C117.232186,338.309655 116.512186,338.480322 115.872186,338.821655 C115.232186,339.162988 114.728186,339.642988 114.360186,340.261655 C113.992186,340.880322 113.808186,341.584322 113.808186,342.373655 C113.808186,343.162988 113.992186,343.869655 114.360186,344.493655 C114.728186,345.117655 115.234853,345.602988 115.880186,345.949655 C116.525519,346.296322 117.242853,346.469655 118.032186,346.469655 C118.725519,346.469655 119.357519,346.330988 119.928186,346.053655 C120.498853,345.776322 120.960186,345.370988 121.312186,344.837655 L121.312186,344.837655 L121.312186,345.909655 C121.312186,346.954988 121.061519,347.725655 120.560186,348.221655 C120.058853,348.717655 119.274853,348.965655 118.208186,348.965655 C117.568186,348.965655 116.957519,348.864322 116.376186,348.661655 C115.794853,348.458988 115.301519,348.176322 114.896186,347.813655 L114.896186,347.813655 L114.320186,348.677655 C114.757519,349.082988 115.325519,349.400322 116.024186,349.629655 C116.722853,349.858988 117.461519,349.973655 118.240186,349.973655 Z M118.144186,345.461655 C117.536186,345.461655 116.989519,345.330988 116.504186,345.069655 C116.018853,344.808322 115.640186,344.442988 115.368186,343.973655 C115.096186,343.504322 114.960186,342.970988 114.960186,342.373655 C114.960186,341.776322 115.096186,341.242988 115.368186,340.773655 C115.640186,340.304322 116.018853,339.941655 116.504186,339.685655 C116.989519,339.429655 117.536186,339.301655 118.144186,339.301655 C118.762853,339.301655 119.314853,339.432322 119.800186,339.693655 C120.285519,339.954988 120.664186,340.317655 120.936186,340.781655 C121.208186,341.245655 121.344186,341.776322 121.344186,342.373655 C121.344186,342.970988 121.208186,343.504322 120.936186,343.973655 C120.664186,344.442988 120.282853,344.808322 119.792186,345.069655 C119.301519,345.330988 118.752186,345.461655 118.144186,345.461655 Z M129.200186,346.869655 C129.872186,346.869655 130.488186,346.752322 131.048186,346.517655 C131.608186,346.282988 132.074853,345.941655 132.448186,345.493655 L132.448186,345.493655 L131.808186,344.757655 C131.488186,345.120322 131.109519,345.394988 130.672186,345.581655 C130.234853,345.768322 129.754853,345.861655 129.232186,345.861655 C128.304186,345.861655 127.536186,345.592322 126.928186,345.053655 C126.320186,344.514988 125.984186,343.808322 125.920186,342.933655 L125.920186,342.933655 L132.960186,342.933655 L132.976186,342.581655 C132.976186,341.749655 132.800186,341.010988 132.448186,340.365655 C132.096186,339.720322 131.610853,339.216322 130.992186,338.853655 C130.373519,338.490988 129.674853,338.309655 128.896186,338.309655 C128.117519,338.309655 127.416186,338.490988 126.792186,338.853655 C126.168186,339.216322 125.677519,339.722988 125.320186,340.373655 C124.962853,341.024322 124.784186,341.760322 124.784186,342.581655 C124.784186,343.402988 124.970853,344.138988 125.344186,344.789655 C125.717519,345.440322 126.237519,345.949655 126.904186,346.317655 C127.570853,346.685655 128.336186,346.869655 129.200186,346.869655 Z M131.888186,342.085655 L125.920186,342.085655 C125.994853,341.253655 126.306853,340.578988 126.856186,340.061655 C127.405519,339.544322 128.085519,339.285655 128.896186,339.285655 C129.717519,339.285655 130.402853,339.544322 130.952186,340.061655 C131.501519,340.578988 131.813519,341.253655 131.888186,342.085655 L131.888186,342.085655 Z M138.640186,346.869655 C139.344186,346.869655 139.976186,346.720322 140.536186,346.421655 C141.096186,346.122988 141.546853,345.690988 141.888186,345.125655 L141.888186,345.125655 L141.888186,346.789655 L142.976186,346.789655 L142.976186,334.917655 L141.840186,334.917655 L141.840186,339.973655 C141.488186,339.429655 141.037519,339.016322 140.488186,338.733655 C139.938853,338.450988 139.322853,338.309655 138.640186,338.309655 C137.850853,338.309655 137.136186,338.488322 136.496186,338.845655 C135.856186,339.202988 135.354853,339.706988 134.992186,340.357655 C134.629519,341.008322 134.448186,341.749655 134.448186,342.581655 C134.448186,343.413655 134.629519,344.154988 134.992186,344.805655 C135.354853,345.456322 135.856186,345.962988 136.496186,346.325655 C137.136186,346.688322 137.850853,346.869655 138.640186,346.869655 Z M138.736186,345.861655 C138.138853,345.861655 137.602853,345.725655 137.128186,345.453655 C136.653519,345.181655 136.280186,344.794988 136.008186,344.293655 C135.736186,343.792322 135.600186,343.221655 135.600186,342.581655 C135.600186,341.941655 135.736186,341.370988 136.008186,340.869655 C136.280186,340.368322 136.653519,339.981655 137.128186,339.709655 C137.602853,339.437655 138.138853,339.301655 138.736186,339.301655 C139.322853,339.301655 139.853519,339.437655 140.328186,339.709655 C140.802853,339.981655 141.176186,340.368322 141.448186,340.869655 C141.720186,341.370988 141.856186,341.941655 141.856186,342.581655 C141.856186,343.221655 141.720186,343.792322 141.448186,344.293655 C141.176186,344.794988 140.802853,345.181655 140.328186,345.453655 C139.853519,345.725655 139.322853,345.861655 138.736186,345.861655 Z M37.320186,376.789655 L38.664186,373.797655 L44.904186,373.797655 L46.248186,376.789655 L47.496186,376.789655 L42.376186,365.589655 L41.208186,365.589655 L36.088186,376.789655 L37.320186,376.789655 Z M44.472186,372.837655 L39.096186,372.837655 L41.784186,366.821655 L44.472186,372.837655 Z M50.248186,379.893655 L50.248186,375.205655 C50.600186,375.749655 51.0508527,376.162988 51.600186,376.445655 C52.1495194,376.728322 52.7655194,376.869655 53.448186,376.869655 C54.248186,376.869655 54.9655194,376.690988 55.600186,376.333655 C56.2348527,375.976322 56.7335194,375.472322 57.096186,374.821655 C57.4588527,374.170988 57.640186,373.424322 57.640186,372.581655 C57.640186,371.749655 57.4588527,371.008322 57.096186,370.357655 C56.7335194,369.706988 56.232186,369.202988 55.592186,368.845655 C54.952186,368.488322 54.2375194,368.309655 53.448186,368.309655 C52.744186,368.309655 52.112186,368.458988 51.552186,368.757655 C50.992186,369.056322 50.5415194,369.482988 50.200186,370.037655 L50.200186,370.037655 L50.200186,368.373655 L49.112186,368.373655 L49.112186,379.893655 L50.248186,379.893655 Z M53.368186,375.861655 C52.7708527,375.861655 52.2348527,375.725655 51.760186,375.453655 C51.2855194,375.181655 50.912186,374.794988 50.640186,374.293655 C50.368186,373.792322 50.232186,373.221655 50.232186,372.581655 C50.232186,371.941655 50.368186,371.373655 50.640186,370.877655 C50.912186,370.381655 51.2855194,369.994988 51.760186,369.717655 C52.2348527,369.440322 52.7708527,369.301655 53.368186,369.301655 C53.9548527,369.301655 54.488186,369.440322 54.968186,369.717655 C55.448186,369.994988 55.824186,370.381655 56.096186,370.877655 C56.368186,371.373655 56.504186,371.941655 56.504186,372.581655 C56.504186,373.221655 56.368186,373.792322 56.096186,374.293655 C55.824186,374.794988 55.448186,375.181655 54.968186,375.453655 C54.488186,375.725655 53.9548527,375.861655 53.368186,375.861655 Z M61.096186,379.893655 L61.096186,375.205655 C61.448186,375.749655 61.8988527,376.162988 62.448186,376.445655 C62.9975194,376.728322 63.6135194,376.869655 64.296186,376.869655 C65.096186,376.869655 65.8135194,376.690988 66.448186,376.333655 C67.0828527,375.976322 67.5815194,375.472322 67.944186,374.821655 C68.3068527,374.170988 68.488186,373.424322 68.488186,372.581655 C68.488186,371.749655 68.3068527,371.008322 67.944186,370.357655 C67.5815194,369.706988 67.080186,369.202988 66.440186,368.845655 C65.800186,368.488322 65.0855194,368.309655 64.296186,368.309655 C63.592186,368.309655 62.960186,368.458988 62.400186,368.757655 C61.840186,369.056322 61.3895194,369.482988 61.048186,370.037655 L61.048186,370.037655 L61.048186,368.373655 L59.960186,368.373655 L59.960186,379.893655 L61.096186,379.893655 Z M64.216186,375.861655 C63.6188527,375.861655 63.0828527,375.725655 62.608186,375.453655 C62.1335194,375.181655 61.760186,374.794988 61.488186,374.293655 C61.216186,373.792322 61.080186,373.221655 61.080186,372.581655 C61.080186,371.941655 61.216186,371.373655 61.488186,370.877655 C61.760186,370.381655 62.1335194,369.994988 62.608186,369.717655 C63.0828527,369.440322 63.6188527,369.301655 64.216186,369.301655 C64.8028527,369.301655 65.336186,369.440322 65.816186,369.717655 C66.296186,369.994988 66.672186,370.381655 66.944186,370.877655 C67.216186,371.373655 67.352186,371.941655 67.352186,372.581655 C67.352186,373.221655 67.216186,373.792322 66.944186,374.293655 C66.672186,374.794988 66.296186,375.181655 65.816186,375.453655 C65.336186,375.725655 64.8028527,375.861655 64.216186,375.861655 Z M71.944186,376.789655 L71.944186,372.501655 C71.944186,371.520322 72.1948527,370.757655 72.696186,370.213655 C73.1975194,369.669655 73.8908527,369.397655 74.776186,369.397655 L74.776186,369.397655 L75.048186,369.413655 L75.048186,368.309655 C74.2695194,368.309655 73.616186,368.453655 73.088186,368.741655 C72.560186,369.029655 72.1628527,369.456322 71.896186,370.021655 L71.896186,370.021655 L71.896186,368.373655 L70.808186,368.373655 L70.808186,376.789655 L71.944186,376.789655 Z M80.792186,376.869655 C81.464186,376.869655 82.080186,376.752322 82.640186,376.517655 C83.200186,376.282988 83.6668527,375.941655 84.040186,375.493655 L84.040186,375.493655 L83.400186,374.757655 C83.080186,375.120322 82.7015194,375.394988 82.264186,375.581655 C81.8268527,375.768322 81.3468527,375.861655 80.824186,375.861655 C79.896186,375.861655 79.128186,375.592322 78.520186,375.053655 C77.912186,374.514988 77.576186,373.808322 77.512186,372.933655 L77.512186,372.933655 L84.552186,372.933655 L84.568186,372.581655 C84.568186,371.749655 84.392186,371.010988 84.040186,370.365655 C83.688186,369.720322 83.2028527,369.216322 82.584186,368.853655 C81.9655194,368.490988 81.2668527,368.309655 80.488186,368.309655 C79.7095194,368.309655 79.008186,368.490988 78.384186,368.853655 C77.760186,369.216322 77.2695194,369.722988 76.912186,370.373655 C76.5548527,371.024322 76.376186,371.760322 76.376186,372.581655 C76.376186,373.402988 76.5628527,374.138988 76.936186,374.789655 C77.3095194,375.440322 77.8295194,375.949655 78.496186,376.317655 C79.1628527,376.685655 79.928186,376.869655 80.792186,376.869655 Z M83.480186,372.085655 L77.512186,372.085655 C77.5868527,371.253655 77.8988527,370.578988 78.448186,370.061655 C78.9975194,369.544322 79.6775194,369.285655 80.488186,369.285655 C81.3095194,369.285655 81.9948527,369.544322 82.544186,370.061655 C83.0935194,370.578988 83.4055194,371.253655 83.480186,372.085655 L83.480186,372.085655 Z M88.024186,376.789655 L88.024186,372.373655 C88.024186,371.424322 88.288186,370.680322 88.816186,370.141655 C89.344186,369.602988 90.0615194,369.333655 90.968186,369.333655 C91.7788527,369.333655 92.4028527,369.562988 92.840186,370.021655 C93.2775194,370.480322 93.496186,371.146988 93.496186,372.021655 L93.496186,372.021655 L93.496186,376.789655 L94.632186,376.789655 L94.632186,371.909655 C94.632186,370.736322 94.320186,369.842988 93.696186,369.229655 C93.072186,368.616322 92.232186,368.309655 91.176186,368.309655 C90.4508527,368.309655 89.8135194,368.450988 89.264186,368.733655 C88.7148527,369.016322 88.2855194,369.413655 87.976186,369.925655 L87.976186,369.925655 L87.976186,368.373655 L86.888186,368.373655 L86.888186,376.789655 L88.024186,376.789655 Z M100.376186,376.869655 C100.717519,376.869655 101.045519,376.818988 101.360186,376.717655 C101.674853,376.616322 101.938853,376.469655 102.152186,376.277655 L102.152186,376.277655 L101.752186,375.461655 C101.592186,375.600322 101.402853,375.706988 101.184186,375.781655 C100.965519,375.856322 100.738853,375.893655 100.504186,375.893655 C100.034853,375.893655 99.6748527,375.762988 99.424186,375.501655 C99.1735194,375.240322 99.048186,374.858988 99.048186,374.357655 L99.048186,374.357655 L99.048186,369.333655 L101.608186,369.333655 L101.608186,368.373655 L99.048186,368.373655 L99.048186,366.533655 L97.912186,366.533655 L97.912186,368.373655 L96.408186,368.373655 L96.408186,369.333655 L97.912186,369.333655 L97.912186,374.421655 C97.912186,375.200322 98.1255194,375.802988 98.552186,376.229655 C98.9788527,376.656322 99.5868527,376.869655 100.376186,376.869655 Z M104.792186,366.533655 C105.026853,366.533655 105.224186,366.453655 105.384186,366.293655 C105.544186,366.133655 105.624186,365.936322 105.624186,365.701655 C105.624186,365.488322 105.544186,365.304322 105.384186,365.149655 C105.224186,364.994988 105.026853,364.917655 104.792186,364.917655 C104.557519,364.917655 104.360186,364.997655 104.200186,365.157655 C104.040186,365.317655 103.960186,365.504322 103.960186,365.717655 C103.960186,365.941655 104.040186,366.133655 104.200186,366.293655 C104.360186,366.453655 104.557519,366.533655 104.792186,366.533655 Z M105.352186,376.789655 L105.352186,368.373655 L104.216186,368.373655 L104.216186,376.789655 L105.352186,376.789655 Z M112.008186,376.869655 C112.722853,376.869655 113.368186,376.728322 113.944186,376.445655 C114.520186,376.162988 114.973519,375.749655 115.304186,375.205655 L115.304186,375.205655 L114.456186,374.629655 C114.178853,375.045655 113.826853,375.354988 113.400186,375.557655 C112.973519,375.760322 112.509519,375.861655 112.008186,375.861655 C111.400186,375.861655 110.853519,375.725655 110.368186,375.453655 C109.882853,375.181655 109.504186,374.797655 109.232186,374.301655 C108.960186,373.805655 108.824186,373.232322 108.824186,372.581655 C108.824186,371.941655 108.960186,371.370988 109.232186,370.869655 C109.504186,370.368322 109.882853,369.981655 110.368186,369.709655 C110.853519,369.437655 111.400186,369.301655 112.008186,369.301655 C112.509519,369.301655 112.973519,369.405655 113.400186,369.613655 C113.826853,369.821655 114.178853,370.133655 114.456186,370.549655 L114.456186,370.549655 L115.304186,369.973655 C114.973519,369.429655 114.522853,369.016322 113.952186,368.733655 C113.381519,368.450988 112.733519,368.309655 112.008186,368.309655 C111.176186,368.309655 110.432186,368.490988 109.776186,368.853655 C109.120186,369.216322 108.605519,369.722988 108.232186,370.373655 C107.858853,371.024322 107.672186,371.760322 107.672186,372.581655 C107.672186,373.402988 107.858853,374.141655 108.232186,374.797655 C108.605519,375.453655 109.120186,375.962988 109.776186,376.325655 C110.432186,376.688322 111.176186,376.869655 112.008186,376.869655 Z M121.096186,376.869655 C121.768186,376.869655 122.384186,376.752322 122.944186,376.517655 C123.504186,376.282988 123.970853,375.941655 124.344186,375.493655 L124.344186,375.493655 L123.704186,374.757655 C123.384186,375.120322 123.005519,375.394988 122.568186,375.581655 C122.130853,375.768322 121.650853,375.861655 121.128186,375.861655 C120.200186,375.861655 119.432186,375.592322 118.824186,375.053655 C118.216186,374.514988 117.880186,373.808322 117.816186,372.933655 L117.816186,372.933655 L124.856186,372.933655 L124.872186,372.581655 C124.872186,371.749655 124.696186,371.010988 124.344186,370.365655 C123.992186,369.720322 123.506853,369.216322 122.888186,368.853655 C122.269519,368.490988 121.570853,368.309655 120.792186,368.309655 C120.013519,368.309655 119.312186,368.490988 118.688186,368.853655 C118.064186,369.216322 117.573519,369.722988 117.216186,370.373655 C116.858853,371.024322 116.680186,371.760322 116.680186,372.581655 C116.680186,373.402988 116.866853,374.138988 117.240186,374.789655 C117.613519,375.440322 118.133519,375.949655 118.800186,376.317655 C119.466853,376.685655 120.232186,376.869655 121.096186,376.869655 Z M123.784186,372.085655 L117.816186,372.085655 C117.890853,371.253655 118.202853,370.578988 118.752186,370.061655 C119.301519,369.544322 119.981519,369.285655 120.792186,369.285655 C121.613519,369.285655 122.298853,369.544322 122.848186,370.061655 C123.397519,370.578988 123.709519,371.253655 123.784186,372.085655 L123.784186,372.085655 Z M129.448186,376.869655 C130.536186,376.869655 131.386853,376.653655 132.000186,376.221655 C132.613519,375.789655 132.920186,375.205655 132.920186,374.469655 C132.920186,373.925655 132.776186,373.498988 132.488186,373.189655 C132.200186,372.880322 131.853519,372.661655 131.448186,372.533655 C131.042853,372.405655 130.504186,372.277655 129.832186,372.149655 C129.288186,372.053655 128.861519,371.960322 128.552186,371.869655 C128.242853,371.778988 127.984186,371.637655 127.776186,371.445655 C127.568186,371.253655 127.464186,370.997655 127.464186,370.677655 C127.464186,370.261655 127.648186,369.925655 128.016186,369.669655 C128.384186,369.413655 128.930853,369.285655 129.656186,369.285655 C130.616186,369.285655 131.442853,369.525655 132.136186,370.005655 L132.136186,370.005655 L132.632186,369.093655 C132.280186,368.858988 131.832186,368.669655 131.288186,368.525655 C130.744186,368.381655 130.200186,368.309655 129.656186,368.309655 C128.610853,368.309655 127.794853,368.533655 127.208186,368.981655 C126.621519,369.429655 126.328186,370.005655 126.328186,370.709655 C126.328186,371.274988 126.474853,371.717655 126.768186,372.037655 C127.061519,372.357655 127.416186,372.584322 127.832186,372.717655 C128.248186,372.850988 128.797519,372.981655 129.480186,373.109655 C129.992186,373.194988 130.402853,373.282988 130.712186,373.373655 C131.021519,373.464322 131.277519,373.597655 131.480186,373.773655 C131.682853,373.949655 131.784186,374.192322 131.784186,374.501655 C131.784186,374.938988 131.600186,375.277655 131.232186,375.517655 C130.864186,375.757655 130.296186,375.877655 129.528186,375.877655 C128.952186,375.877655 128.397519,375.789655 127.864186,375.613655 C127.330853,375.437655 126.888186,375.210988 126.536186,374.933655 L126.536186,374.933655 L126.024186,375.829655 C126.376186,376.128322 126.864186,376.376322 127.488186,376.573655 C128.112186,376.770988 128.765519,376.869655 129.448186,376.869655 Z\",\"id\":\"TotaldisadvantagedApprentices\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M45.761,84 L45.761,82.976 L39.601,82.976 L43.409,79.232 C44.1236667,78.5386667 44.609,77.9253333 44.865,77.392 C45.121,76.8586667 45.249,76.304 45.249,75.728 C45.249,74.7893333 44.9156667,74.0506667 44.249,73.512 C43.5823333,72.9733333 42.6783333,72.704 41.537,72.704 C40.6836667,72.704 39.9183333,72.8426667 39.241,73.12 C38.5636667,73.3973333 38.0063333,73.792 37.569,74.304 L37.569,74.304 L38.385,75.008 C39.1103333,74.176 40.129,73.76 41.441,73.76 C42.2836667,73.76 42.9316667,73.944 43.385,74.312 C43.8383333,74.68 44.065,75.1946667 44.065,75.856 C44.065,76.2826667 43.961,76.7066667 43.753,77.128 C43.545,77.5493333 43.1476667,78.048 42.561,78.624 L42.561,78.624 L37.905,83.184 L37.905,84 L45.761,84 Z M51.793,84.096 C52.5183333,84.096 53.1716667,83.9546667 53.753,83.672 C54.3343333,83.3893333 54.7903333,82.9866667 55.121,82.464 C55.4516667,81.9413333 55.617,81.3386667 55.617,80.656 C55.617,79.984 55.457,79.3946667 55.137,78.888 C54.817,78.3813333 54.3716667,77.9893333 53.801,77.712 C53.2303333,77.4346667 52.577,77.296 51.841,77.296 C51.0516667,77.296 50.353,77.464 49.745,77.8 C49.137,78.136 48.6943333,78.608 48.417,79.216 C48.385,78.8746667 48.369,78.5706667 48.369,78.304 C48.369,76.8106667 48.721,75.672 49.425,74.888 C50.129,74.104 51.0996667,73.712 52.337,73.712 C53.2543333,73.712 53.9796667,73.888 54.513,74.24 L54.513,74.24 L54.977,73.312 C54.3156667,72.9066667 53.4303333,72.704 52.321,72.704 C51.297,72.704 50.401,72.9253333 49.633,73.368 C48.865,73.8106667 48.2676667,74.464 47.841,75.328 C47.4143333,76.192 47.201,77.248 47.201,78.496 C47.201,80.2773333 47.5956667,81.656 48.385,82.632 C49.1743333,83.608 50.3103333,84.096 51.793,84.096 Z M51.745,83.12 C51.1263333,83.12 50.593,83.008 50.145,82.784 C49.697,82.56 49.3583333,82.2666667 49.129,81.904 C48.8996667,81.5413333 48.785,81.1466667 48.785,80.72 C48.785,80.2613333 48.9076667,79.8453333 49.153,79.472 C49.3983333,79.0986667 49.737,78.8053333 50.169,78.592 C50.601,78.3786667 51.0996667,78.272 51.665,78.272 C52.529,78.272 53.2143333,78.4906667 53.721,78.928 C54.2276667,79.3653333 54.481,79.952 54.481,80.688 C54.481,81.424 54.2276667,82.0133333 53.721,82.456 C53.2143333,82.8986667 52.5556667,83.12 51.745,83.12 Z M58.913,79.45 C59.5663333,79.45 60.0983333,79.2073333 60.509,78.722 C60.9196667,78.2366667 61.125,77.5926667 61.125,76.79 C61.125,75.9873333 60.9196667,75.3433333 60.509,74.858 C60.0983333,74.3726667 59.5663333,74.13 58.913,74.13 C58.2503333,74.13 57.716,74.375 57.31,74.865 C56.904,75.355 56.701,75.9966667 56.701,76.79 C56.701,77.5833333 56.904,78.225 57.31,78.715 C57.716,79.205 58.2503333,79.45 58.913,79.45 Z M58.983,84 L65.675,74.2 L64.849,74.2 L58.157,84 L58.983,84 Z M58.913,78.82 C58.4463333,78.82 58.0776667,78.638 57.807,78.274 C57.5363333,77.91 57.401,77.4153333 57.401,76.79 C57.401,76.1646667 57.5363333,75.67 57.807,75.306 C58.0776667,74.942 58.4463333,74.76 58.913,74.76 C59.3703333,74.76 59.7366667,74.9396667 60.012,75.299 C60.2873333,75.6583333 60.425,76.1553333 60.425,76.79 C60.425,77.4246667 60.2873333,77.9216667 60.012,78.281 C59.7366667,78.6403333 59.3703333,78.82 58.913,78.82 Z M64.919,84.07 C65.5816667,84.07 66.116,83.825 66.522,83.335 C66.928,82.845 67.131,82.2033333 67.131,81.41 C67.131,80.6166667 66.928,79.975 66.522,79.485 C66.116,78.995 65.5816667,78.75 64.919,78.75 C64.2656667,78.75 63.7336667,78.995 63.323,79.485 C62.9123333,79.975 62.707,80.6166667 62.707,81.41 C62.707,82.2033333 62.9123333,82.845 63.323,83.335 C63.7336667,83.825 64.2656667,84.07 64.919,84.07 Z M64.919,83.44 C64.4616667,83.44 64.0953333,83.2603333 63.82,82.901 C63.5446667,82.5416667 63.407,82.0446667 63.407,81.41 C63.407,80.7753333 63.5446667,80.2783333 63.82,79.919 C64.0953333,79.5596667 64.4616667,79.38 64.919,79.38 C65.3856667,79.38 65.7543333,79.562 66.025,79.926 C66.2956667,80.29 66.431,80.7846667 66.431,81.41 C66.431,82.0353333 66.2956667,82.53 66.025,82.894 C65.7543333,83.258 65.3856667,83.44 64.919,83.44 Z\",\"id\":\"26%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M4.065,67.096 C4.93966667,67.096 5.681,66.952 6.289,66.664 C6.897,66.376 7.35566667,65.984 7.665,65.488 C7.97433333,64.992 8.129,64.424 8.129,63.784 C8.129,62.8666667 7.82233333,62.1226667 7.209,61.552 C6.59566667,60.9813333 5.70233333,60.664 4.529,60.6 L4.529,60.6 L7.697,56.616 L7.697,55.8 L0.497,55.8 L0.497,56.824 L6.225,56.824 L3.121,60.712 L3.121,61.56 L3.921,61.56 C4.93433333,61.56 5.69166667,61.7573333 6.193,62.152 C6.69433333,62.5466667 6.945,63.0906667 6.945,63.784 C6.945,64.488 6.69433333,65.04 6.193,65.44 C5.69166667,65.84 4.98233333,66.04 4.065,66.04 C3.361,66.04 2.69966667,65.92 2.081,65.68 C1.46233333,65.44 0.966333333,65.128 0.593,64.744 L0.593,64.744 L0.033,65.656 C0.470333333,66.0933333 1.049,66.4426667 1.769,66.704 C2.489,66.9653333 3.25433333,67.096 4.065,67.096 Z M14.209,67.096 C15.073,67.096 15.8436667,66.8666667 16.521,66.408 C17.1983333,65.9493333 17.729,65.2906667 18.113,64.432 C18.497,63.5733333 18.689,62.5626667 18.689,61.4 C18.689,60.2373333 18.497,59.2266667 18.113,58.368 C17.729,57.5093333 17.1983333,56.8506667 16.521,56.392 C15.8436667,55.9333333 15.073,55.704 14.209,55.704 C13.345,55.704 12.5743333,55.9333333 11.897,56.392 C11.2196667,56.8506667 10.6916667,57.5093333 10.313,58.368 C9.93433333,59.2266667 9.745,60.2373333 9.745,61.4 C9.745,62.5626667 9.93433333,63.5733333 10.313,64.432 C10.6916667,65.2906667 11.2196667,65.9493333 11.897,66.408 C12.5743333,66.8666667 13.345,67.096 14.209,67.096 Z M14.209,66.04 C13.5583333,66.04 12.985,65.8586667 12.489,65.496 C11.993,65.1333333 11.6063333,64.6053333 11.329,63.912 C11.0516667,63.2186667 10.913,62.3813333 10.913,61.4 C10.913,60.4186667 11.0516667,59.5813333 11.329,58.888 C11.6063333,58.1946667 11.993,57.6666667 12.489,57.304 C12.985,56.9413333 13.5583333,56.76 14.209,56.76 C14.8596667,56.76 15.433,56.9413333 15.929,57.304 C16.425,57.6666667 16.8116667,58.1946667 17.089,58.888 C17.3663333,59.5813333 17.505,60.4186667 17.505,61.4 C17.505,62.3813333 17.3663333,63.2186667 17.089,63.912 C16.8116667,64.6053333 16.425,65.1333333 15.929,65.496 C15.433,65.8586667 14.8596667,66.04 14.209,66.04 Z M22.305,62.45 C22.9583333,62.45 23.4903333,62.2073333 23.901,61.722 C24.3116667,61.2366667 24.517,60.5926667 24.517,59.79 C24.517,58.9873333 24.3116667,58.3433333 23.901,57.858 C23.4903333,57.3726667 22.9583333,57.13 22.305,57.13 C21.6423333,57.13 21.108,57.375 20.702,57.865 C20.296,58.355 20.093,58.9966667 20.093,59.79 C20.093,60.5833333 20.296,61.225 20.702,61.715 C21.108,62.205 21.6423333,62.45 22.305,62.45 Z M22.375,67 L29.067,57.2 L28.241,57.2 L21.549,67 L22.375,67 Z M22.305,61.82 C21.8383333,61.82 21.4696667,61.638 21.199,61.274 C20.9283333,60.91 20.793,60.4153333 20.793,59.79 C20.793,59.1646667 20.9283333,58.67 21.199,58.306 C21.4696667,57.942 21.8383333,57.76 22.305,57.76 C22.7623333,57.76 23.1286667,57.9396667 23.404,58.299 C23.6793333,58.6583333 23.817,59.1553333 23.817,59.79 C23.817,60.4246667 23.6793333,60.9216667 23.404,61.281 C23.1286667,61.6403333 22.7623333,61.82 22.305,61.82 Z M28.311,67.07 C28.9736667,67.07 29.508,66.825 29.914,66.335 C30.32,65.845 30.523,65.2033333 30.523,64.41 C30.523,63.6166667 30.32,62.975 29.914,62.485 C29.508,61.995 28.9736667,61.75 28.311,61.75 C27.6576667,61.75 27.1256667,61.995 26.715,62.485 C26.3043333,62.975 26.099,63.6166667 26.099,64.41 C26.099,65.2033333 26.3043333,65.845 26.715,66.335 C27.1256667,66.825 27.6576667,67.07 28.311,67.07 Z M28.311,66.44 C27.8536667,66.44 27.4873333,66.2603333 27.212,65.901 C26.9366667,65.5416667 26.799,65.0446667 26.799,64.41 C26.799,63.7753333 26.9366667,63.2783333 27.212,62.919 C27.4873333,62.5596667 27.8536667,62.38 28.311,62.38 C28.7776667,62.38 29.1463333,62.562 29.417,62.926 C29.6876667,63.29 29.823,63.7846667 29.823,64.41 C29.823,65.0353333 29.6876667,65.53 29.417,65.894 C29.1463333,66.258 28.7776667,66.44 28.311,66.44 Z\",\"id\":\"30%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":27}),React.createElement(\"path\",{\"d\":\"M8.337,140 L8.337,138.976 L2.177,138.976 L5.985,135.232 C6.69966667,134.538667 7.185,133.925333 7.441,133.392 C7.697,132.858667 7.825,132.304 7.825,131.728 C7.825,130.789333 7.49166667,130.050667 6.825,129.512 C6.15833333,128.973333 5.25433333,128.704 4.113,128.704 C3.25966667,128.704 2.49433333,128.842667 1.817,129.12 C1.13966667,129.397333 0.582333333,129.792 0.145,130.304 L0.145,130.304 L0.961,131.008 C1.68633333,130.176 2.705,129.76 4.017,129.76 C4.85966667,129.76 5.50766667,129.944 5.961,130.312 C6.41433333,130.68 6.641,131.194667 6.641,131.856 C6.641,132.282667 6.537,132.706667 6.329,133.128 C6.121,133.549333 5.72366667,134.048 5.137,134.624 L5.137,134.624 L0.481,139.184 L0.481,140 L8.337,140 Z M14.241,140.096 C15.105,140.096 15.8756667,139.866667 16.553,139.408 C17.2303333,138.949333 17.761,138.290667 18.145,137.432 C18.529,136.573333 18.721,135.562667 18.721,134.4 C18.721,133.237333 18.529,132.226667 18.145,131.368 C17.761,130.509333 17.2303333,129.850667 16.553,129.392 C15.8756667,128.933333 15.105,128.704 14.241,128.704 C13.377,128.704 12.6063333,128.933333 11.929,129.392 C11.2516667,129.850667 10.7236667,130.509333 10.345,131.368 C9.96633333,132.226667 9.777,133.237333 9.777,134.4 C9.777,135.562667 9.96633333,136.573333 10.345,137.432 C10.7236667,138.290667 11.2516667,138.949333 11.929,139.408 C12.6063333,139.866667 13.377,140.096 14.241,140.096 Z M14.241,139.04 C13.5903333,139.04 13.017,138.858667 12.521,138.496 C12.025,138.133333 11.6383333,137.605333 11.361,136.912 C11.0836667,136.218667 10.945,135.381333 10.945,134.4 C10.945,133.418667 11.0836667,132.581333 11.361,131.888 C11.6383333,131.194667 12.025,130.666667 12.521,130.304 C13.017,129.941333 13.5903333,129.76 14.241,129.76 C14.8916667,129.76 15.465,129.941333 15.961,130.304 C16.457,130.666667 16.8436667,131.194667 17.121,131.888 C17.3983333,132.581333 17.537,133.418667 17.537,134.4 C17.537,135.381333 17.3983333,136.218667 17.121,136.912 C16.8436667,137.605333 16.457,138.133333 15.961,138.496 C15.465,138.858667 14.8916667,139.04 14.241,139.04 Z M22.337,135.45 C22.9903333,135.45 23.5223333,135.207333 23.933,134.722 C24.3436667,134.236667 24.549,133.592667 24.549,132.79 C24.549,131.987333 24.3436667,131.343333 23.933,130.858 C23.5223333,130.372667 22.9903333,130.13 22.337,130.13 C21.6743333,130.13 21.14,130.375 20.734,130.865 C20.328,131.355 20.125,131.996667 20.125,132.79 C20.125,133.583333 20.328,134.225 20.734,134.715 C21.14,135.205 21.6743333,135.45 22.337,135.45 Z M22.407,140 L29.099,130.2 L28.273,130.2 L21.581,140 L22.407,140 Z M22.337,134.82 C21.8703333,134.82 21.5016667,134.638 21.231,134.274 C20.9603333,133.91 20.825,133.415333 20.825,132.79 C20.825,132.164667 20.9603333,131.67 21.231,131.306 C21.5016667,130.942 21.8703333,130.76 22.337,130.76 C22.7943333,130.76 23.1606667,130.939667 23.436,131.299 C23.7113333,131.658333 23.849,132.155333 23.849,132.79 C23.849,133.424667 23.7113333,133.921667 23.436,134.281 C23.1606667,134.640333 22.7943333,134.82 22.337,134.82 Z M28.343,140.07 C29.0056667,140.07 29.54,139.825 29.946,139.335 C30.352,138.845 30.555,138.203333 30.555,137.41 C30.555,136.616667 30.352,135.975 29.946,135.485 C29.54,134.995 29.0056667,134.75 28.343,134.75 C27.6896667,134.75 27.1576667,134.995 26.747,135.485 C26.3363333,135.975 26.131,136.616667 26.131,137.41 C26.131,138.203333 26.3363333,138.845 26.747,139.335 C27.1576667,139.825 27.6896667,140.07 28.343,140.07 Z M28.343,139.44 C27.8856667,139.44 27.5193333,139.260333 27.244,138.901 C26.9686667,138.541667 26.831,138.044667 26.831,137.41 C26.831,136.775333 26.9686667,136.278333 27.244,135.919 C27.5193333,135.559667 27.8856667,135.38 28.343,135.38 C28.8096667,135.38 29.1783333,135.562 29.449,135.926 C29.7196667,136.29 29.855,136.784667 29.855,137.41 C29.855,138.035333 29.7196667,138.53 29.449,138.894 C29.1783333,139.258 28.8096667,139.44 28.343,139.44 Z\",\"id\":\"20%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":28}),React.createElement(\"path\",{\"d\":\"M5.449,213 L5.449,201.8 L1.657,201.8 L1.657,202.824 L4.297,202.824 L4.297,213 L5.449,213 Z M12.585,213.096 C13.449,213.096 14.2196667,212.866667 14.897,212.408 C15.5743333,211.949333 16.105,211.290667 16.489,210.432 C16.873,209.573333 17.065,208.562667 17.065,207.4 C17.065,206.237333 16.873,205.226667 16.489,204.368 C16.105,203.509333 15.5743333,202.850667 14.897,202.392 C14.2196667,201.933333 13.449,201.704 12.585,201.704 C11.721,201.704 10.9503333,201.933333 10.273,202.392 C9.59566667,202.850667 9.06766667,203.509333 8.689,204.368 C8.31033333,205.226667 8.121,206.237333 8.121,207.4 C8.121,208.562667 8.31033333,209.573333 8.689,210.432 C9.06766667,211.290667 9.59566667,211.949333 10.273,212.408 C10.9503333,212.866667 11.721,213.096 12.585,213.096 Z M12.585,212.04 C11.9343333,212.04 11.361,211.858667 10.865,211.496 C10.369,211.133333 9.98233333,210.605333 9.705,209.912 C9.42766667,209.218667 9.289,208.381333 9.289,207.4 C9.289,206.418667 9.42766667,205.581333 9.705,204.888 C9.98233333,204.194667 10.369,203.666667 10.865,203.304 C11.361,202.941333 11.9343333,202.76 12.585,202.76 C13.2356667,202.76 13.809,202.941333 14.305,203.304 C14.801,203.666667 15.1876667,204.194667 15.465,204.888 C15.7423333,205.581333 15.881,206.418667 15.881,207.4 C15.881,208.381333 15.7423333,209.218667 15.465,209.912 C15.1876667,210.605333 14.801,211.133333 14.305,211.496 C13.809,211.858667 13.2356667,212.04 12.585,212.04 Z M20.681,208.45 C21.3343333,208.45 21.8663333,208.207333 22.277,207.722 C22.6876667,207.236667 22.893,206.592667 22.893,205.79 C22.893,204.987333 22.6876667,204.343333 22.277,203.858 C21.8663333,203.372667 21.3343333,203.13 20.681,203.13 C20.0183333,203.13 19.484,203.375 19.078,203.865 C18.672,204.355 18.469,204.996667 18.469,205.79 C18.469,206.583333 18.672,207.225 19.078,207.715 C19.484,208.205 20.0183333,208.45 20.681,208.45 Z M20.751,213 L27.443,203.2 L26.617,203.2 L19.925,213 L20.751,213 Z M20.681,207.82 C20.2143333,207.82 19.8456667,207.638 19.575,207.274 C19.3043333,206.91 19.169,206.415333 19.169,205.79 C19.169,205.164667 19.3043333,204.67 19.575,204.306 C19.8456667,203.942 20.2143333,203.76 20.681,203.76 C21.1383333,203.76 21.5046667,203.939667 21.78,204.299 C22.0553333,204.658333 22.193,205.155333 22.193,205.79 C22.193,206.424667 22.0553333,206.921667 21.78,207.281 C21.5046667,207.640333 21.1383333,207.82 20.681,207.82 Z M26.687,213.07 C27.3496667,213.07 27.884,212.825 28.29,212.335 C28.696,211.845 28.899,211.203333 28.899,210.41 C28.899,209.616667 28.696,208.975 28.29,208.485 C27.884,207.995 27.3496667,207.75 26.687,207.75 C26.0336667,207.75 25.5016667,207.995 25.091,208.485 C24.6803333,208.975 24.475,209.616667 24.475,210.41 C24.475,211.203333 24.6803333,211.845 25.091,212.335 C25.5016667,212.825 26.0336667,213.07 26.687,213.07 Z M26.687,212.44 C26.2296667,212.44 25.8633333,212.260333 25.588,211.901 C25.3126667,211.541667 25.175,211.044667 25.175,210.41 C25.175,209.775333 25.3126667,209.278333 25.588,208.919 C25.8633333,208.559667 26.2296667,208.38 26.687,208.38 C27.1536667,208.38 27.5223333,208.562 27.793,208.926 C28.0636667,209.29 28.199,209.784667 28.199,210.41 C28.199,211.035333 28.0636667,211.53 27.793,211.894 C27.5223333,212.258 27.1536667,212.44 26.687,212.44 Z\",\"id\":\"10%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":29}),React.createElement(\"path\",{\"d\":\"M7.84816279,286.096 C8.71216279,286.096 9.48282946,285.866667 10.1601628,285.408 C10.8374961,284.949333 11.3681628,284.290667 11.7521628,283.432 C12.1361628,282.573333 12.3281628,281.562667 12.3281628,280.4 C12.3281628,279.237333 12.1361628,278.226667 11.7521628,277.368 C11.3681628,276.509333 10.8374961,275.850667 10.1601628,275.392 C9.48282946,274.933333 8.71216279,274.704 7.84816279,274.704 C6.98416279,274.704 6.21349612,274.933333 5.53616279,275.392 C4.85882946,275.850667 4.33082946,276.509333 3.95216279,277.368 C3.57349612,278.226667 3.38416279,279.237333 3.38416279,280.4 C3.38416279,281.562667 3.57349612,282.573333 3.95216279,283.432 C4.33082946,284.290667 4.85882946,284.949333 5.53616279,285.408 C6.21349612,285.866667 6.98416279,286.096 7.84816279,286.096 Z M7.84816279,285.04 C7.19749612,285.04 6.62416279,284.858667 6.12816279,284.496 C5.63216279,284.133333 5.24549612,283.605333 4.96816279,282.912 C4.69082946,282.218667 4.55216279,281.381333 4.55216279,280.4 C4.55216279,279.418667 4.69082946,278.581333 4.96816279,277.888 C5.24549612,277.194667 5.63216279,276.666667 6.12816279,276.304 C6.62416279,275.941333 7.19749612,275.76 7.84816279,275.76 C8.49882946,275.76 9.07216279,275.941333 9.56816279,276.304 C10.0641628,276.666667 10.4508295,277.194667 10.7281628,277.888 C11.0054961,278.581333 11.1441628,279.418667 11.1441628,280.4 C11.1441628,281.381333 11.0054961,282.218667 10.7281628,282.912 C10.4508295,283.605333 10.0641628,284.133333 9.56816279,284.496 C9.07216279,284.858667 8.49882946,285.04 7.84816279,285.04 Z M15.9441628,281.45 C16.5974961,281.45 17.1294961,281.207333 17.5401628,280.722 C17.9508295,280.236667 18.1561628,279.592667 18.1561628,278.79 C18.1561628,277.987333 17.9508295,277.343333 17.5401628,276.858 C17.1294961,276.372667 16.5974961,276.13 15.9441628,276.13 C15.2814961,276.13 14.7471628,276.375 14.3411628,276.865 C13.9351628,277.355 13.7321628,277.996667 13.7321628,278.79 C13.7321628,279.583333 13.9351628,280.225 14.3411628,280.715 C14.7471628,281.205 15.2814961,281.45 15.9441628,281.45 Z M16.0141628,286 L22.7061628,276.2 L21.8801628,276.2 L15.1881628,286 L16.0141628,286 Z M15.9441628,280.82 C15.4774961,280.82 15.1088295,280.638 14.8381628,280.274 C14.5674961,279.91 14.4321628,279.415333 14.4321628,278.79 C14.4321628,278.164667 14.5674961,277.67 14.8381628,277.306 C15.1088295,276.942 15.4774961,276.76 15.9441628,276.76 C16.4014961,276.76 16.7678295,276.939667 17.0431628,277.299 C17.3184961,277.658333 17.4561628,278.155333 17.4561628,278.79 C17.4561628,279.424667 17.3184961,279.921667 17.0431628,280.281 C16.7678295,280.640333 16.4014961,280.82 15.9441628,280.82 Z M21.9501628,286.07 C22.6128295,286.07 23.1471628,285.825 23.5531628,285.335 C23.9591628,284.845 24.1621628,284.203333 24.1621628,283.41 C24.1621628,282.616667 23.9591628,281.975 23.5531628,281.485 C23.1471628,280.995 22.6128295,280.75 21.9501628,280.75 C21.2968295,280.75 20.7648295,280.995 20.3541628,281.485 C19.9434961,281.975 19.7381628,282.616667 19.7381628,283.41 C19.7381628,284.203333 19.9434961,284.845 20.3541628,285.335 C20.7648295,285.825 21.2968295,286.07 21.9501628,286.07 Z M21.9501628,285.44 C21.4928295,285.44 21.1264961,285.260333 20.8511628,284.901 C20.5758295,284.541667 20.4381628,284.044667 20.4381628,283.41 C20.4381628,282.775333 20.5758295,282.278333 20.8511628,281.919 C21.1264961,281.559667 21.4928295,281.38 21.9501628,281.38 C22.4168295,281.38 22.7854961,281.562 23.0561628,281.926 C23.3268295,282.29 23.4621628,282.784667 23.4621628,283.41 C23.4621628,284.035333 23.3268295,284.53 23.0561628,284.894 C22.7854961,285.258 22.4168295,285.44 21.9501628,285.44 Z\",\"id\":\"0%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":30}),React.createElement(\"path\",{\"d\":\"M75.261,84 L75.261,82.976 L69.101,82.976 L72.909,79.232 C73.6236667,78.5386667 74.109,77.9253333 74.365,77.392 C74.621,76.8586667 74.749,76.304 74.749,75.728 C74.749,74.7893333 74.4156667,74.0506667 73.749,73.512 C73.0823333,72.9733333 72.1783333,72.704 71.037,72.704 C70.1836667,72.704 69.4183333,72.8426667 68.741,73.12 C68.0636667,73.3973333 67.5063333,73.792 67.069,74.304 L67.069,74.304 L67.885,75.008 C68.6103333,74.176 69.629,73.76 70.941,73.76 C71.7836667,73.76 72.4316667,73.944 72.885,74.312 C73.3383333,74.68 73.565,75.1946667 73.565,75.856 C73.565,76.2826667 73.461,76.7066667 73.253,77.128 C73.045,77.5493333 72.6476667,78.048 72.061,78.624 L72.061,78.624 L67.405,83.184 L67.405,84 L75.261,84 Z M81.293,84.096 C82.0183333,84.096 82.6716667,83.9546667 83.253,83.672 C83.8343333,83.3893333 84.2903333,82.9866667 84.621,82.464 C84.9516667,81.9413333 85.117,81.3386667 85.117,80.656 C85.117,79.984 84.957,79.3946667 84.637,78.888 C84.317,78.3813333 83.8716667,77.9893333 83.301,77.712 C82.7303333,77.4346667 82.077,77.296 81.341,77.296 C80.5516667,77.296 79.853,77.464 79.245,77.8 C78.637,78.136 78.1943333,78.608 77.917,79.216 C77.885,78.8746667 77.869,78.5706667 77.869,78.304 C77.869,76.8106667 78.221,75.672 78.925,74.888 C79.629,74.104 80.5996667,73.712 81.837,73.712 C82.7543333,73.712 83.4796667,73.888 84.013,74.24 L84.013,74.24 L84.477,73.312 C83.8156667,72.9066667 82.9303333,72.704 81.821,72.704 C80.797,72.704 79.901,72.9253333 79.133,73.368 C78.365,73.8106667 77.7676667,74.464 77.341,75.328 C76.9143333,76.192 76.701,77.248 76.701,78.496 C76.701,80.2773333 77.0956667,81.656 77.885,82.632 C78.6743333,83.608 79.8103333,84.096 81.293,84.096 Z M81.245,83.12 C80.6263333,83.12 80.093,83.008 79.645,82.784 C79.197,82.56 78.8583333,82.2666667 78.629,81.904 C78.3996667,81.5413333 78.285,81.1466667 78.285,80.72 C78.285,80.2613333 78.4076667,79.8453333 78.653,79.472 C78.8983333,79.0986667 79.237,78.8053333 79.669,78.592 C80.101,78.3786667 80.5996667,78.272 81.165,78.272 C82.029,78.272 82.7143333,78.4906667 83.221,78.928 C83.7276667,79.3653333 83.981,79.952 83.981,80.688 C83.981,81.424 83.7276667,82.0133333 83.221,82.456 C82.7143333,82.8986667 82.0556667,83.12 81.245,83.12 Z M88.413,79.45 C89.0663333,79.45 89.5983333,79.2073333 90.009,78.722 C90.4196667,78.2366667 90.625,77.5926667 90.625,76.79 C90.625,75.9873333 90.4196667,75.3433333 90.009,74.858 C89.5983333,74.3726667 89.0663333,74.13 88.413,74.13 C87.7503333,74.13 87.216,74.375 86.81,74.865 C86.404,75.355 86.201,75.9966667 86.201,76.79 C86.201,77.5833333 86.404,78.225 86.81,78.715 C87.216,79.205 87.7503333,79.45 88.413,79.45 Z M88.483,84 L95.175,74.2 L94.349,74.2 L87.657,84 L88.483,84 Z M88.413,78.82 C87.9463333,78.82 87.5776667,78.638 87.307,78.274 C87.0363333,77.91 86.901,77.4153333 86.901,76.79 C86.901,76.1646667 87.0363333,75.67 87.307,75.306 C87.5776667,74.942 87.9463333,74.76 88.413,74.76 C88.8703333,74.76 89.2366667,74.9396667 89.512,75.299 C89.7873333,75.6583333 89.925,76.1553333 89.925,76.79 C89.925,77.4246667 89.7873333,77.9216667 89.512,78.281 C89.2366667,78.6403333 88.8703333,78.82 88.413,78.82 Z M94.419,84.07 C95.0816667,84.07 95.616,83.825 96.022,83.335 C96.428,82.845 96.631,82.2033333 96.631,81.41 C96.631,80.6166667 96.428,79.975 96.022,79.485 C95.616,78.995 95.0816667,78.75 94.419,78.75 C93.7656667,78.75 93.2336667,78.995 92.823,79.485 C92.4123333,79.975 92.207,80.6166667 92.207,81.41 C92.207,82.2033333 92.4123333,82.845 92.823,83.335 C93.2336667,83.825 93.7656667,84.07 94.419,84.07 Z M94.419,83.44 C93.9616667,83.44 93.5953333,83.2603333 93.32,82.901 C93.0446667,82.5416667 92.907,82.0446667 92.907,81.41 C92.907,80.7753333 93.0446667,80.2783333 93.32,79.919 C93.5953333,79.5596667 93.9616667,79.38 94.419,79.38 C94.8856667,79.38 95.2543333,79.562 95.525,79.926 C95.7956667,80.29 95.931,80.7846667 95.931,81.41 C95.931,82.0353333 95.7956667,82.53 95.525,82.894 C95.2543333,83.258 94.8856667,83.44 94.419,83.44 Z\",\"id\":\"26%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":31}),React.createElement(\"path\",{\"d\":\"M231.261,84 L231.261,82.976 L225.101,82.976 L228.909,79.232 C229.623667,78.5386667 230.109,77.9253333 230.365,77.392 C230.621,76.8586667 230.749,76.304 230.749,75.728 C230.749,74.7893333 230.415667,74.0506667 229.749,73.512 C229.082333,72.9733333 228.178333,72.704 227.037,72.704 C226.183667,72.704 225.418333,72.8426667 224.741,73.12 C224.063667,73.3973333 223.506333,73.792 223.069,74.304 L223.069,74.304 L223.885,75.008 C224.610333,74.176 225.629,73.76 226.941,73.76 C227.783667,73.76 228.431667,73.944 228.885,74.312 C229.338333,74.68 229.565,75.1946667 229.565,75.856 C229.565,76.2826667 229.461,76.7066667 229.253,77.128 C229.045,77.5493333 228.647667,78.048 228.061,78.624 L228.061,78.624 L223.405,83.184 L223.405,84 L231.261,84 Z M237.293,84.096 C238.018333,84.096 238.671667,83.9546667 239.253,83.672 C239.834333,83.3893333 240.290333,82.9866667 240.621,82.464 C240.951667,81.9413333 241.117,81.3386667 241.117,80.656 C241.117,79.984 240.957,79.3946667 240.637,78.888 C240.317,78.3813333 239.871667,77.9893333 239.301,77.712 C238.730333,77.4346667 238.077,77.296 237.341,77.296 C236.551667,77.296 235.853,77.464 235.245,77.8 C234.637,78.136 234.194333,78.608 233.917,79.216 C233.885,78.8746667 233.869,78.5706667 233.869,78.304 C233.869,76.8106667 234.221,75.672 234.925,74.888 C235.629,74.104 236.599667,73.712 237.837,73.712 C238.754333,73.712 239.479667,73.888 240.013,74.24 L240.013,74.24 L240.477,73.312 C239.815667,72.9066667 238.930333,72.704 237.821,72.704 C236.797,72.704 235.901,72.9253333 235.133,73.368 C234.365,73.8106667 233.767667,74.464 233.341,75.328 C232.914333,76.192 232.701,77.248 232.701,78.496 C232.701,80.2773333 233.095667,81.656 233.885,82.632 C234.674333,83.608 235.810333,84.096 237.293,84.096 Z M237.245,83.12 C236.626333,83.12 236.093,83.008 235.645,82.784 C235.197,82.56 234.858333,82.2666667 234.629,81.904 C234.399667,81.5413333 234.285,81.1466667 234.285,80.72 C234.285,80.2613333 234.407667,79.8453333 234.653,79.472 C234.898333,79.0986667 235.237,78.8053333 235.669,78.592 C236.101,78.3786667 236.599667,78.272 237.165,78.272 C238.029,78.272 238.714333,78.4906667 239.221,78.928 C239.727667,79.3653333 239.981,79.952 239.981,80.688 C239.981,81.424 239.727667,82.0133333 239.221,82.456 C238.714333,82.8986667 238.055667,83.12 237.245,83.12 Z M244.413,79.45 C245.066333,79.45 245.598333,79.2073333 246.009,78.722 C246.419667,78.2366667 246.625,77.5926667 246.625,76.79 C246.625,75.9873333 246.419667,75.3433333 246.009,74.858 C245.598333,74.3726667 245.066333,74.13 244.413,74.13 C243.750333,74.13 243.216,74.375 242.81,74.865 C242.404,75.355 242.201,75.9966667 242.201,76.79 C242.201,77.5833333 242.404,78.225 242.81,78.715 C243.216,79.205 243.750333,79.45 244.413,79.45 Z M244.483,84 L251.175,74.2 L250.349,74.2 L243.657,84 L244.483,84 Z M244.413,78.82 C243.946333,78.82 243.577667,78.638 243.307,78.274 C243.036333,77.91 242.901,77.4153333 242.901,76.79 C242.901,76.1646667 243.036333,75.67 243.307,75.306 C243.577667,74.942 243.946333,74.76 244.413,74.76 C244.870333,74.76 245.236667,74.9396667 245.512,75.299 C245.787333,75.6583333 245.925,76.1553333 245.925,76.79 C245.925,77.4246667 245.787333,77.9216667 245.512,78.281 C245.236667,78.6403333 244.870333,78.82 244.413,78.82 Z M250.419,84.07 C251.081667,84.07 251.616,83.825 252.022,83.335 C252.428,82.845 252.631,82.2033333 252.631,81.41 C252.631,80.6166667 252.428,79.975 252.022,79.485 C251.616,78.995 251.081667,78.75 250.419,78.75 C249.765667,78.75 249.233667,78.995 248.823,79.485 C248.412333,79.975 248.207,80.6166667 248.207,81.41 C248.207,82.2033333 248.412333,82.845 248.823,83.335 C249.233667,83.825 249.765667,84.07 250.419,84.07 Z M250.419,83.44 C249.961667,83.44 249.595333,83.2603333 249.32,82.901 C249.044667,82.5416667 248.907,82.0446667 248.907,81.41 C248.907,80.7753333 249.044667,80.2783333 249.32,79.919 C249.595333,79.5596667 249.961667,79.38 250.419,79.38 C250.885667,79.38 251.254333,79.562 251.525,79.926 C251.795667,80.29 251.931,80.7846667 251.931,81.41 C251.931,82.0353333 251.795667,82.53 251.525,82.894 C251.254333,83.258 250.885667,83.44 250.419,83.44 Z\",\"id\":\"26%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":32}),React.createElement(\"path\",{\"d\":\"M106.792,111 L106.792,109.976 L100.632,109.976 L104.44,106.232 C105.154667,105.538667 105.64,104.925333 105.896,104.392 C106.152,103.858667 106.28,103.304 106.28,102.728 C106.28,101.789333 105.946667,101.050667 105.28,100.512 C104.613333,99.9733333 103.709333,99.704 102.568,99.704 C101.714667,99.704 100.949333,99.8426667 100.272,100.12 C99.5946667,100.397333 99.0373333,100.792 98.6,101.304 L98.6,101.304 L99.416,102.008 C100.141333,101.176 101.16,100.76 102.472,100.76 C103.314667,100.76 103.962667,100.944 104.416,101.312 C104.869333,101.68 105.096,102.194667 105.096,102.856 C105.096,103.282667 104.992,103.706667 104.784,104.128 C104.576,104.549333 104.178667,105.048 103.592,105.624 L103.592,105.624 L98.936,110.184 L98.936,111 L106.792,111 Z M111.576,111.096 C112.450667,111.096 113.192,110.952 113.8,110.664 C114.408,110.376 114.866667,109.984 115.176,109.488 C115.485333,108.992 115.64,108.424 115.64,107.784 C115.64,106.866667 115.333333,106.122667 114.72,105.552 C114.106667,104.981333 113.213333,104.664 112.04,104.6 L112.04,104.6 L115.208,100.616 L115.208,99.8 L108.008,99.8 L108.008,100.824 L113.736,100.824 L110.632,104.712 L110.632,105.56 L111.432,105.56 C112.445333,105.56 113.202667,105.757333 113.704,106.152 C114.205333,106.546667 114.456,107.090667 114.456,107.784 C114.456,108.488 114.205333,109.04 113.704,109.44 C113.202667,109.84 112.493333,110.04 111.576,110.04 C110.872,110.04 110.210667,109.92 109.592,109.68 C108.973333,109.44 108.477333,109.128 108.104,108.744 L108.104,108.744 L107.544,109.656 C107.981333,110.093333 108.56,110.442667 109.28,110.704 C110,110.965333 110.765333,111.096 111.576,111.096 Z M119.624,105.8 C120.370667,105.8 120.978667,105.522667 121.448,104.968 C121.917333,104.413333 122.152,103.677333 122.152,102.76 C122.152,101.842667 121.917333,101.106667 121.448,100.552 C120.978667,99.9973333 120.370667,99.72 119.624,99.72 C118.866667,99.72 118.256,100 117.792,100.56 C117.328,101.12 117.096,101.853333 117.096,102.76 C117.096,103.666667 117.328,104.4 117.792,104.96 C118.256,105.52 118.866667,105.8 119.624,105.8 Z M119.704,111 L127.352,99.8 L126.408,99.8 L118.76,111 L119.704,111 Z M119.624,105.08 C119.090667,105.08 118.669333,104.872 118.36,104.456 C118.050667,104.04 117.896,103.474667 117.896,102.76 C117.896,102.045333 118.050667,101.48 118.36,101.064 C118.669333,100.648 119.090667,100.44 119.624,100.44 C120.146667,100.44 120.565333,100.645333 120.88,101.056 C121.194667,101.466667 121.352,102.034667 121.352,102.76 C121.352,103.485333 121.194667,104.053333 120.88,104.464 C120.565333,104.874667 120.146667,105.08 119.624,105.08 Z M126.488,111.08 C127.245333,111.08 127.856,110.8 128.32,110.24 C128.784,109.68 129.016,108.946667 129.016,108.04 C129.016,107.133333 128.784,106.4 128.32,105.84 C127.856,105.28 127.245333,105 126.488,105 C125.741333,105 125.133333,105.28 124.664,105.84 C124.194667,106.4 123.96,107.133333 123.96,108.04 C123.96,108.946667 124.194667,109.68 124.664,110.24 C125.133333,110.8 125.741333,111.08 126.488,111.08 Z M126.488,110.36 C125.965333,110.36 125.546667,110.154667 125.232,109.744 C124.917333,109.333333 124.76,108.765333 124.76,108.04 C124.76,107.314667 124.917333,106.746667 125.232,106.336 C125.546667,105.925333 125.965333,105.72 126.488,105.72 C127.021333,105.72 127.442667,105.928 127.752,106.344 C128.061333,106.76 128.216,107.325333 128.216,108.04 C128.216,108.754667 128.061333,109.32 127.752,109.736 C127.442667,110.152 127.021333,110.36 126.488,110.36 Z\",\"id\":\"23%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":33}),React.createElement(\"path\",{\"d\":\"M167.261,67 L167.261,65.976 L161.101,65.976 L164.909,62.232 C165.623667,61.5386667 166.109,60.9253333 166.365,60.392 C166.621,59.8586667 166.749,59.304 166.749,58.728 C166.749,57.7893333 166.415667,57.0506667 165.749,56.512 C165.082333,55.9733333 164.178333,55.704 163.037,55.704 C162.183667,55.704 161.418333,55.8426667 160.741,56.12 C160.063667,56.3973333 159.506333,56.792 159.069,57.304 L159.069,57.304 L159.885,58.008 C160.610333,57.176 161.629,56.76 162.941,56.76 C163.783667,56.76 164.431667,56.944 164.885,57.312 C165.338333,57.68 165.565,58.1946667 165.565,58.856 C165.565,59.2826667 165.461,59.7066667 165.253,60.128 C165.045,60.5493333 164.647667,61.048 164.061,61.624 L164.061,61.624 L159.405,66.184 L159.405,67 L167.261,67 Z M171.661,67.096 C172.685,67.096 173.581,66.8746667 174.349,66.432 C175.117,65.9893333 175.714333,65.336 176.141,64.472 C176.567667,63.608 176.781,62.552 176.781,61.304 C176.781,59.5226667 176.386333,58.144 175.597,57.168 C174.807667,56.192 173.671667,55.704 172.189,55.704 C171.463667,55.704 170.810333,55.8453333 170.229,56.128 C169.647667,56.4106667 169.191667,56.8133333 168.861,57.336 C168.530333,57.8586667 168.365,58.4613333 168.365,59.144 C168.365,59.816 168.525,60.4053333 168.845,60.912 C169.165,61.4186667 169.610333,61.8106667 170.181,62.088 C170.751667,62.3653333 171.405,62.504 172.141,62.504 C172.930333,62.504 173.629,62.336 174.237,62 C174.845,61.664 175.287667,61.192 175.565,60.584 C175.597,60.9146667 175.613,61.2186667 175.613,61.496 C175.613,62.9893333 175.261,64.128 174.557,64.912 C173.853,65.696 172.882333,66.088 171.645,66.088 C170.727667,66.088 170.002333,65.912 169.469,65.56 L169.469,65.56 L169.005,66.488 C169.666333,66.8933333 170.551667,67.096 171.661,67.096 Z M172.317,61.528 C171.453,61.528 170.767667,61.3093333 170.261,60.872 C169.754333,60.4346667 169.501,59.848 169.501,59.112 C169.501,58.376 169.754333,57.7866667 170.261,57.344 C170.767667,56.9013333 171.426333,56.68 172.237,56.68 C172.855667,56.68 173.389,56.792 173.837,57.016 C174.285,57.24 174.623667,57.5333333 174.853,57.896 C175.082333,58.2586667 175.197,58.6533333 175.197,59.08 C175.197,59.5386667 175.074333,59.9546667 174.829,60.328 C174.583667,60.7013333 174.245,60.9946667 173.813,61.208 C173.381,61.4213333 172.882333,61.528 172.317,61.528 Z M180.413,62.45 C181.066333,62.45 181.598333,62.2073333 182.009,61.722 C182.419667,61.2366667 182.625,60.5926667 182.625,59.79 C182.625,58.9873333 182.419667,58.3433333 182.009,57.858 C181.598333,57.3726667 181.066333,57.13 180.413,57.13 C179.750333,57.13 179.216,57.375 178.81,57.865 C178.404,58.355 178.201,58.9966667 178.201,59.79 C178.201,60.5833333 178.404,61.225 178.81,61.715 C179.216,62.205 179.750333,62.45 180.413,62.45 Z M180.483,67 L187.175,57.2 L186.349,57.2 L179.657,67 L180.483,67 Z M180.413,61.82 C179.946333,61.82 179.577667,61.638 179.307,61.274 C179.036333,60.91 178.901,60.4153333 178.901,59.79 C178.901,59.1646667 179.036333,58.67 179.307,58.306 C179.577667,57.942 179.946333,57.76 180.413,57.76 C180.870333,57.76 181.236667,57.9396667 181.512,58.299 C181.787333,58.6583333 181.925,59.1553333 181.925,59.79 C181.925,60.4246667 181.787333,60.9216667 181.512,61.281 C181.236667,61.6403333 180.870333,61.82 180.413,61.82 Z M186.419,67.07 C187.081667,67.07 187.616,66.825 188.022,66.335 C188.428,65.845 188.631,65.2033333 188.631,64.41 C188.631,63.6166667 188.428,62.975 188.022,62.485 C187.616,61.995 187.081667,61.75 186.419,61.75 C185.765667,61.75 185.233667,61.995 184.823,62.485 C184.412333,62.975 184.207,63.6166667 184.207,64.41 C184.207,65.2033333 184.412333,65.845 184.823,66.335 C185.233667,66.825 185.765667,67.07 186.419,67.07 Z M186.419,66.44 C185.961667,66.44 185.595333,66.2603333 185.32,65.901 C185.044667,65.5416667 184.907,65.0446667 184.907,64.41 C184.907,63.7753333 185.044667,63.2783333 185.32,62.919 C185.595333,62.5596667 185.961667,62.38 186.419,62.38 C186.885667,62.38 187.254333,62.562 187.525,62.926 C187.795667,63.29 187.931,63.7846667 187.931,64.41 C187.931,65.0353333 187.795667,65.53 187.525,65.894 C187.254333,66.258 186.885667,66.44 186.419,66.44 Z\",\"id\":\"29%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":34}),React.createElement(\"path\",{\"d\":\"M199.261,67 L199.261,65.976 L193.101,65.976 L196.909,62.232 C197.623667,61.5386667 198.109,60.9253333 198.365,60.392 C198.621,59.8586667 198.749,59.304 198.749,58.728 C198.749,57.7893333 198.415667,57.0506667 197.749,56.512 C197.082333,55.9733333 196.178333,55.704 195.037,55.704 C194.183667,55.704 193.418333,55.8426667 192.741,56.12 C192.063667,56.3973333 191.506333,56.792 191.069,57.304 L191.069,57.304 L191.885,58.008 C192.610333,57.176 193.629,56.76 194.941,56.76 C195.783667,56.76 196.431667,56.944 196.885,57.312 C197.338333,57.68 197.565,58.1946667 197.565,58.856 C197.565,59.2826667 197.461,59.7066667 197.253,60.128 C197.045,60.5493333 196.647667,61.048 196.061,61.624 L196.061,61.624 L191.405,66.184 L191.405,67 L199.261,67 Z M203.661,67.096 C204.685,67.096 205.581,66.8746667 206.349,66.432 C207.117,65.9893333 207.714333,65.336 208.141,64.472 C208.567667,63.608 208.781,62.552 208.781,61.304 C208.781,59.5226667 208.386333,58.144 207.597,57.168 C206.807667,56.192 205.671667,55.704 204.189,55.704 C203.463667,55.704 202.810333,55.8453333 202.229,56.128 C201.647667,56.4106667 201.191667,56.8133333 200.861,57.336 C200.530333,57.8586667 200.365,58.4613333 200.365,59.144 C200.365,59.816 200.525,60.4053333 200.845,60.912 C201.165,61.4186667 201.610333,61.8106667 202.181,62.088 C202.751667,62.3653333 203.405,62.504 204.141,62.504 C204.930333,62.504 205.629,62.336 206.237,62 C206.845,61.664 207.287667,61.192 207.565,60.584 C207.597,60.9146667 207.613,61.2186667 207.613,61.496 C207.613,62.9893333 207.261,64.128 206.557,64.912 C205.853,65.696 204.882333,66.088 203.645,66.088 C202.727667,66.088 202.002333,65.912 201.469,65.56 L201.469,65.56 L201.005,66.488 C201.666333,66.8933333 202.551667,67.096 203.661,67.096 Z M204.317,61.528 C203.453,61.528 202.767667,61.3093333 202.261,60.872 C201.754333,60.4346667 201.501,59.848 201.501,59.112 C201.501,58.376 201.754333,57.7866667 202.261,57.344 C202.767667,56.9013333 203.426333,56.68 204.237,56.68 C204.855667,56.68 205.389,56.792 205.837,57.016 C206.285,57.24 206.623667,57.5333333 206.853,57.896 C207.082333,58.2586667 207.197,58.6533333 207.197,59.08 C207.197,59.5386667 207.074333,59.9546667 206.829,60.328 C206.583667,60.7013333 206.245,60.9946667 205.813,61.208 C205.381,61.4213333 204.882333,61.528 204.317,61.528 Z M212.413,62.45 C213.066333,62.45 213.598333,62.2073333 214.009,61.722 C214.419667,61.2366667 214.625,60.5926667 214.625,59.79 C214.625,58.9873333 214.419667,58.3433333 214.009,57.858 C213.598333,57.3726667 213.066333,57.13 212.413,57.13 C211.750333,57.13 211.216,57.375 210.81,57.865 C210.404,58.355 210.201,58.9966667 210.201,59.79 C210.201,60.5833333 210.404,61.225 210.81,61.715 C211.216,62.205 211.750333,62.45 212.413,62.45 Z M212.483,67 L219.175,57.2 L218.349,57.2 L211.657,67 L212.483,67 Z M212.413,61.82 C211.946333,61.82 211.577667,61.638 211.307,61.274 C211.036333,60.91 210.901,60.4153333 210.901,59.79 C210.901,59.1646667 211.036333,58.67 211.307,58.306 C211.577667,57.942 211.946333,57.76 212.413,57.76 C212.870333,57.76 213.236667,57.9396667 213.512,58.299 C213.787333,58.6583333 213.925,59.1553333 213.925,59.79 C213.925,60.4246667 213.787333,60.9216667 213.512,61.281 C213.236667,61.6403333 212.870333,61.82 212.413,61.82 Z M218.419,67.07 C219.081667,67.07 219.616,66.825 220.022,66.335 C220.428,65.845 220.631,65.2033333 220.631,64.41 C220.631,63.6166667 220.428,62.975 220.022,62.485 C219.616,61.995 219.081667,61.75 218.419,61.75 C217.765667,61.75 217.233667,61.995 216.823,62.485 C216.412333,62.975 216.207,63.6166667 216.207,64.41 C216.207,65.2033333 216.412333,65.845 216.823,66.335 C217.233667,66.825 217.765667,67.07 218.419,67.07 Z M218.419,66.44 C217.961667,66.44 217.595333,66.2603333 217.32,65.901 C217.044667,65.5416667 216.907,65.0446667 216.907,64.41 C216.907,63.7753333 217.044667,63.2783333 217.32,62.919 C217.595333,62.5596667 217.961667,62.38 218.419,62.38 C218.885667,62.38 219.254333,62.562 219.525,62.926 C219.795667,63.29 219.931,63.7846667 219.931,64.41 C219.931,65.0353333 219.795667,65.53 219.525,65.894 C219.254333,66.258 218.885667,66.44 218.419,66.44 Z\",\"id\":\"29%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":35}),React.createElement(\"path\",{\"d\":\"M290.845,105 L290.845,103.976 L284.685,103.976 L288.493,100.232 C289.207667,99.5386667 289.693,98.9253333 289.949,98.392 C290.205,97.8586667 290.333,97.304 290.333,96.728 C290.333,95.7893333 289.999667,95.0506667 289.333,94.512 C288.666333,93.9733333 287.762333,93.704 286.621,93.704 C285.767667,93.704 285.002333,93.8426667 284.325,94.12 C283.647667,94.3973333 283.090333,94.792 282.653,95.304 L282.653,95.304 L283.469,96.008 C284.194333,95.176 285.213,94.76 286.525,94.76 C287.367667,94.76 288.015667,94.944 288.469,95.312 C288.922333,95.68 289.149,96.1946667 289.149,96.856 C289.149,97.2826667 289.045,97.7066667 288.837,98.128 C288.629,98.5493333 288.231667,99.048 287.645,99.624 L287.645,99.624 L282.989,104.184 L282.989,105 L290.845,105 Z M299.565,105 L299.565,102.056 L301.805,102.056 L301.805,101.032 L299.565,101.032 L299.565,98.44 L298.445,98.44 L298.445,101.032 L293.581,101.032 L299.309,93.8 L298.029,93.8 L292.093,101.224 L292.093,102.056 L298.413,102.056 L298.413,105 L299.565,105 Z M304.829,100.45 C305.482333,100.45 306.014333,100.207333 306.425,99.722 C306.835667,99.2366667 307.041,98.5926667 307.041,97.79 C307.041,96.9873333 306.835667,96.3433333 306.425,95.858 C306.014333,95.3726667 305.482333,95.13 304.829,95.13 C304.166333,95.13 303.632,95.375 303.226,95.865 C302.82,96.355 302.617,96.9966667 302.617,97.79 C302.617,98.5833333 302.82,99.225 303.226,99.715 C303.632,100.205 304.166333,100.45 304.829,100.45 Z M304.899,105 L311.591,95.2 L310.765,95.2 L304.073,105 L304.899,105 Z M304.829,99.82 C304.362333,99.82 303.993667,99.638 303.723,99.274 C303.452333,98.91 303.317,98.4153333 303.317,97.79 C303.317,97.1646667 303.452333,96.67 303.723,96.306 C303.993667,95.942 304.362333,95.76 304.829,95.76 C305.286333,95.76 305.652667,95.9396667 305.928,96.299 C306.203333,96.6583333 306.341,97.1553333 306.341,97.79 C306.341,98.4246667 306.203333,98.9216667 305.928,99.281 C305.652667,99.6403333 305.286333,99.82 304.829,99.82 Z M310.835,105.07 C311.497667,105.07 312.032,104.825 312.438,104.335 C312.844,103.845 313.047,103.203333 313.047,102.41 C313.047,101.616667 312.844,100.975 312.438,100.485 C312.032,99.995 311.497667,99.75 310.835,99.75 C310.181667,99.75 309.649667,99.995 309.239,100.485 C308.828333,100.975 308.623,101.616667 308.623,102.41 C308.623,103.203333 308.828333,103.845 309.239,104.335 C309.649667,104.825 310.181667,105.07 310.835,105.07 Z M310.835,104.44 C310.377667,104.44 310.011333,104.260333 309.736,103.901 C309.460667,103.541667 309.323,103.044667 309.323,102.41 C309.323,101.775333 309.460667,101.278333 309.736,100.919 C310.011333,100.559667 310.377667,100.38 310.835,100.38 C311.301667,100.38 311.670333,100.562 311.941,100.926 C312.211667,101.29 312.347,101.784667 312.347,102.41 C312.347,103.035333 312.211667,103.53 311.941,103.894 C311.670333,104.258 311.301667,104.44 310.835,104.44 Z\",\"id\":\"24%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":36}),React.createElement(\"path\",{\"d\":\"M324.845,105 L324.845,103.976 L318.685,103.976 L322.493,100.232 C323.207667,99.5386667 323.693,98.9253333 323.949,98.392 C324.205,97.8586667 324.333,97.304 324.333,96.728 C324.333,95.7893333 323.999667,95.0506667 323.333,94.512 C322.666333,93.9733333 321.762333,93.704 320.621,93.704 C319.767667,93.704 319.002333,93.8426667 318.325,94.12 C317.647667,94.3973333 317.090333,94.792 316.653,95.304 L316.653,95.304 L317.469,96.008 C318.194333,95.176 319.213,94.76 320.525,94.76 C321.367667,94.76 322.015667,94.944 322.469,95.312 C322.922333,95.68 323.149,96.1946667 323.149,96.856 C323.149,97.2826667 323.045,97.7066667 322.837,98.128 C322.629,98.5493333 322.231667,99.048 321.645,99.624 L321.645,99.624 L316.989,104.184 L316.989,105 L324.845,105 Z M333.565,105 L333.565,102.056 L335.805,102.056 L335.805,101.032 L333.565,101.032 L333.565,98.44 L332.445,98.44 L332.445,101.032 L327.581,101.032 L333.309,93.8 L332.029,93.8 L326.093,101.224 L326.093,102.056 L332.413,102.056 L332.413,105 L333.565,105 Z M338.829,100.45 C339.482333,100.45 340.014333,100.207333 340.425,99.722 C340.835667,99.2366667 341.041,98.5926667 341.041,97.79 C341.041,96.9873333 340.835667,96.3433333 340.425,95.858 C340.014333,95.3726667 339.482333,95.13 338.829,95.13 C338.166333,95.13 337.632,95.375 337.226,95.865 C336.82,96.355 336.617,96.9966667 336.617,97.79 C336.617,98.5833333 336.82,99.225 337.226,99.715 C337.632,100.205 338.166333,100.45 338.829,100.45 Z M338.899,105 L345.591,95.2 L344.765,95.2 L338.073,105 L338.899,105 Z M338.829,99.82 C338.362333,99.82 337.993667,99.638 337.723,99.274 C337.452333,98.91 337.317,98.4153333 337.317,97.79 C337.317,97.1646667 337.452333,96.67 337.723,96.306 C337.993667,95.942 338.362333,95.76 338.829,95.76 C339.286333,95.76 339.652667,95.9396667 339.928,96.299 C340.203333,96.6583333 340.341,97.1553333 340.341,97.79 C340.341,98.4246667 340.203333,98.9216667 339.928,99.281 C339.652667,99.6403333 339.286333,99.82 338.829,99.82 Z M344.835,105.07 C345.497667,105.07 346.032,104.825 346.438,104.335 C346.844,103.845 347.047,103.203333 347.047,102.41 C347.047,101.616667 346.844,100.975 346.438,100.485 C346.032,99.995 345.497667,99.75 344.835,99.75 C344.181667,99.75 343.649667,99.995 343.239,100.485 C342.828333,100.975 342.623,101.616667 342.623,102.41 C342.623,103.203333 342.828333,103.845 343.239,104.335 C343.649667,104.825 344.181667,105.07 344.835,105.07 Z M344.835,104.44 C344.377667,104.44 344.011333,104.260333 343.736,103.901 C343.460667,103.541667 343.323,103.044667 343.323,102.41 C343.323,101.775333 343.460667,101.278333 343.736,100.919 C344.011333,100.559667 344.377667,100.38 344.835,100.38 C345.301667,100.38 345.670333,100.562 345.941,100.926 C346.211667,101.29 346.347,101.784667 346.347,102.41 C346.347,103.035333 346.211667,103.53 345.941,103.894 C345.670333,104.258 345.301667,104.44 344.835,104.44 Z\",\"id\":\"24%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":37}),React.createElement(\"path\",{\"d\":\"M356.896163,126 L356.896163,124.976 L350.736163,124.976 L354.544163,121.232 C355.258829,120.538667 355.744163,119.925333 356.000163,119.392 C356.256163,118.858667 356.384163,118.304 356.384163,117.728 C356.384163,116.789333 356.050829,116.050667 355.384163,115.512 C354.717496,114.973333 353.813496,114.704 352.672163,114.704 C351.818829,114.704 351.053496,114.842667 350.376163,115.12 C349.698829,115.397333 349.141496,115.792 348.704163,116.304 L348.704163,116.304 L349.520163,117.008 C350.245496,116.176 351.264163,115.76 352.576163,115.76 C353.418829,115.76 354.066829,115.944 354.520163,116.312 C354.973496,116.68 355.200163,117.194667 355.200163,117.856 C355.200163,118.282667 355.096163,118.706667 354.888163,119.128 C354.680163,119.549333 354.282829,120.048 353.696163,120.624 L353.696163,120.624 L349.040163,125.184 L349.040163,126 L356.896163,126 Z M361.440163,126 L361.440163,114.8 L357.648163,114.8 L357.648163,115.824 L360.288163,115.824 L360.288163,126 L361.440163,126 Z M366.080163,121.45 C366.733496,121.45 367.265496,121.207333 367.676163,120.722 C368.086829,120.236667 368.292163,119.592667 368.292163,118.79 C368.292163,117.987333 368.086829,117.343333 367.676163,116.858 C367.265496,116.372667 366.733496,116.13 366.080163,116.13 C365.417496,116.13 364.883163,116.375 364.477163,116.865 C364.071163,117.355 363.868163,117.996667 363.868163,118.79 C363.868163,119.583333 364.071163,120.225 364.477163,120.715 C364.883163,121.205 365.417496,121.45 366.080163,121.45 Z M366.150163,126 L372.842163,116.2 L372.016163,116.2 L365.324163,126 L366.150163,126 Z M366.080163,120.82 C365.613496,120.82 365.244829,120.638 364.974163,120.274 C364.703496,119.91 364.568163,119.415333 364.568163,118.79 C364.568163,118.164667 364.703496,117.67 364.974163,117.306 C365.244829,116.942 365.613496,116.76 366.080163,116.76 C366.537496,116.76 366.903829,116.939667 367.179163,117.299 C367.454496,117.658333 367.592163,118.155333 367.592163,118.79 C367.592163,119.424667 367.454496,119.921667 367.179163,120.281 C366.903829,120.640333 366.537496,120.82 366.080163,120.82 Z M372.086163,126.07 C372.748829,126.07 373.283163,125.825 373.689163,125.335 C374.095163,124.845 374.298163,124.203333 374.298163,123.41 C374.298163,122.616667 374.095163,121.975 373.689163,121.485 C373.283163,120.995 372.748829,120.75 372.086163,120.75 C371.432829,120.75 370.900829,120.995 370.490163,121.485 C370.079496,121.975 369.874163,122.616667 369.874163,123.41 C369.874163,124.203333 370.079496,124.845 370.490163,125.335 C370.900829,125.825 371.432829,126.07 372.086163,126.07 Z M372.086163,125.44 C371.628829,125.44 371.262496,125.260333 370.987163,124.901 C370.711829,124.541667 370.574163,124.044667 370.574163,123.41 C370.574163,122.775333 370.711829,122.278333 370.987163,121.919 C371.262496,121.559667 371.628829,121.38 372.086163,121.38 C372.552829,121.38 372.921496,121.562 373.192163,121.926 C373.462829,122.29 373.598163,122.784667 373.598163,123.41 C373.598163,124.035333 373.462829,124.53 373.192163,124.894 C372.921496,125.258 372.552829,125.44 372.086163,125.44 Z\",\"id\":\"21%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":38}),React.createElement(\"path\",{\"d\":\"M414.589,119.283008 L414.589,118.259008 L408.429,118.259008 L412.237,114.515008 C412.951667,113.821675 413.437,113.208342 413.693,112.675008 C413.949,112.141675 414.077,111.587008 414.077,111.011008 C414.077,110.072342 413.743667,109.333675 413.077,108.795008 C412.410333,108.256342 411.506333,107.987008 410.365,107.987008 C409.511667,107.987008 408.746333,108.125675 408.069,108.403008 C407.391667,108.680342 406.834333,109.075008 406.397,109.587008 L406.397,109.587008 L407.213,110.291008 C407.938333,109.459008 408.957,109.043008 410.269,109.043008 C411.111667,109.043008 411.759667,109.227008 412.213,109.595008 C412.666333,109.963008 412.893,110.477675 412.893,111.139008 C412.893,111.565675 412.789,111.989675 412.581,112.411008 C412.373,112.832342 411.975667,113.331008 411.389,113.907008 L411.389,113.907008 L406.733,118.467008 L406.733,119.283008 L414.589,119.283008 Z M423.677,119.283008 L423.677,118.259008 L417.517,118.259008 L421.325,114.515008 C422.039667,113.821675 422.525,113.208342 422.781,112.675008 C423.037,112.141675 423.165,111.587008 423.165,111.011008 C423.165,110.072342 422.831667,109.333675 422.165,108.795008 C421.498333,108.256342 420.594333,107.987008 419.453,107.987008 C418.599667,107.987008 417.834333,108.125675 417.157,108.403008 C416.479667,108.680342 415.922333,109.075008 415.485,109.587008 L415.485,109.587008 L416.301,110.291008 C417.026333,109.459008 418.045,109.043008 419.357,109.043008 C420.199667,109.043008 420.847667,109.227008 421.301,109.595008 C421.754333,109.963008 421.981,110.477675 421.981,111.139008 C421.981,111.565675 421.877,111.989675 421.669,112.411008 C421.461,112.832342 421.063667,113.331008 420.477,113.907008 L420.477,113.907008 L415.821,118.467008 L415.821,119.283008 L423.677,119.283008 Z M427.085,114.733008 C427.738333,114.733008 428.270333,114.490342 428.681,114.005008 C429.091667,113.519675 429.297,112.875675 429.297,112.073008 C429.297,111.270342 429.091667,110.626342 428.681,110.141008 C428.270333,109.655675 427.738333,109.413008 427.085,109.413008 C426.422333,109.413008 425.888,109.658008 425.482,110.148008 C425.076,110.638008 424.873,111.279675 424.873,112.073008 C424.873,112.866342 425.076,113.508008 425.482,113.998008 C425.888,114.488008 426.422333,114.733008 427.085,114.733008 Z M427.155,119.283008 L433.847,109.483008 L433.021,109.483008 L426.329,119.283008 L427.155,119.283008 Z M427.085,114.103008 C426.618333,114.103008 426.249667,113.921008 425.979,113.557008 C425.708333,113.193008 425.573,112.698342 425.573,112.073008 C425.573,111.447675 425.708333,110.953008 425.979,110.589008 C426.249667,110.225008 426.618333,110.043008 427.085,110.043008 C427.542333,110.043008 427.908667,110.222675 428.184,110.582008 C428.459333,110.941342 428.597,111.438342 428.597,112.073008 C428.597,112.707675 428.459333,113.204675 428.184,113.564008 C427.908667,113.923342 427.542333,114.103008 427.085,114.103008 Z M433.091,119.353008 C433.753667,119.353008 434.288,119.108008 434.694,118.618008 C435.1,118.128008 435.303,117.486342 435.303,116.693008 C435.303,115.899675 435.1,115.258008 434.694,114.768008 C434.288,114.278008 433.753667,114.033008 433.091,114.033008 C432.437667,114.033008 431.905667,114.278008 431.495,114.768008 C431.084333,115.258008 430.879,115.899675 430.879,116.693008 C430.879,117.486342 431.084333,118.128008 431.495,118.618008 C431.905667,119.108008 432.437667,119.353008 433.091,119.353008 Z M433.091,118.723008 C432.633667,118.723008 432.267333,118.543342 431.992,118.184008 C431.716667,117.824675 431.579,117.327675 431.579,116.693008 C431.579,116.058342 431.716667,115.561342 431.992,115.202008 C432.267333,114.842675 432.633667,114.663008 433.091,114.663008 C433.557667,114.663008 433.926333,114.845008 434.197,115.209008 C434.467667,115.573008 434.603,116.067675 434.603,116.693008 C434.603,117.318342 434.467667,117.813008 434.197,118.177008 C433.926333,118.541008 433.557667,118.723008 433.091,118.723008 Z\",\"id\":\"22%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":39}),React.createElement(\"path\",{\"d\":\"M447.589,119.283008 L447.589,118.259008 L441.429,118.259008 L445.237,114.515008 C445.951667,113.821675 446.437,113.208342 446.693,112.675008 C446.949,112.141675 447.077,111.587008 447.077,111.011008 C447.077,110.072342 446.743667,109.333675 446.077,108.795008 C445.410333,108.256342 444.506333,107.987008 443.365,107.987008 C442.511667,107.987008 441.746333,108.125675 441.069,108.403008 C440.391667,108.680342 439.834333,109.075008 439.397,109.587008 L439.397,109.587008 L440.213,110.291008 C440.938333,109.459008 441.957,109.043008 443.269,109.043008 C444.111667,109.043008 444.759667,109.227008 445.213,109.595008 C445.666333,109.963008 445.893,110.477675 445.893,111.139008 C445.893,111.565675 445.789,111.989675 445.581,112.411008 C445.373,112.832342 444.975667,113.331008 444.389,113.907008 L444.389,113.907008 L439.733,118.467008 L439.733,119.283008 L447.589,119.283008 Z M456.677,119.283008 L456.677,118.259008 L450.517,118.259008 L454.325,114.515008 C455.039667,113.821675 455.525,113.208342 455.781,112.675008 C456.037,112.141675 456.165,111.587008 456.165,111.011008 C456.165,110.072342 455.831667,109.333675 455.165,108.795008 C454.498333,108.256342 453.594333,107.987008 452.453,107.987008 C451.599667,107.987008 450.834333,108.125675 450.157,108.403008 C449.479667,108.680342 448.922333,109.075008 448.485,109.587008 L448.485,109.587008 L449.301,110.291008 C450.026333,109.459008 451.045,109.043008 452.357,109.043008 C453.199667,109.043008 453.847667,109.227008 454.301,109.595008 C454.754333,109.963008 454.981,110.477675 454.981,111.139008 C454.981,111.565675 454.877,111.989675 454.669,112.411008 C454.461,112.832342 454.063667,113.331008 453.477,113.907008 L453.477,113.907008 L448.821,118.467008 L448.821,119.283008 L456.677,119.283008 Z M460.085,114.733008 C460.738333,114.733008 461.270333,114.490342 461.681,114.005008 C462.091667,113.519675 462.297,112.875675 462.297,112.073008 C462.297,111.270342 462.091667,110.626342 461.681,110.141008 C461.270333,109.655675 460.738333,109.413008 460.085,109.413008 C459.422333,109.413008 458.888,109.658008 458.482,110.148008 C458.076,110.638008 457.873,111.279675 457.873,112.073008 C457.873,112.866342 458.076,113.508008 458.482,113.998008 C458.888,114.488008 459.422333,114.733008 460.085,114.733008 Z M460.155,119.283008 L466.847,109.483008 L466.021,109.483008 L459.329,119.283008 L460.155,119.283008 Z M460.085,114.103008 C459.618333,114.103008 459.249667,113.921008 458.979,113.557008 C458.708333,113.193008 458.573,112.698342 458.573,112.073008 C458.573,111.447675 458.708333,110.953008 458.979,110.589008 C459.249667,110.225008 459.618333,110.043008 460.085,110.043008 C460.542333,110.043008 460.908667,110.222675 461.184,110.582008 C461.459333,110.941342 461.597,111.438342 461.597,112.073008 C461.597,112.707675 461.459333,113.204675 461.184,113.564008 C460.908667,113.923342 460.542333,114.103008 460.085,114.103008 Z M466.091,119.353008 C466.753667,119.353008 467.288,119.108008 467.694,118.618008 C468.1,118.128008 468.303,117.486342 468.303,116.693008 C468.303,115.899675 468.1,115.258008 467.694,114.768008 C467.288,114.278008 466.753667,114.033008 466.091,114.033008 C465.437667,114.033008 464.905667,114.278008 464.495,114.768008 C464.084333,115.258008 463.879,115.899675 463.879,116.693008 C463.879,117.486342 464.084333,118.128008 464.495,118.618008 C464.905667,119.108008 465.437667,119.353008 466.091,119.353008 Z M466.091,118.723008 C465.633667,118.723008 465.267333,118.543342 464.992,118.184008 C464.716667,117.824675 464.579,117.327675 464.579,116.693008 C464.579,116.058342 464.716667,115.561342 464.992,115.202008 C465.267333,114.842675 465.633667,114.663008 466.091,114.663008 C466.557667,114.663008 466.926333,114.845008 467.197,115.209008 C467.467667,115.573008 467.603,116.067675 467.603,116.693008 C467.603,117.318342 467.467667,117.813008 467.197,118.177008 C466.926333,118.541008 466.557667,118.723008 466.091,118.723008 Z\",\"id\":\"22%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":40}),React.createElement(\"path\",{\"d\":\"M477.184163,155.858313 L477.184163,144.658313 L473.392163,144.658313 L473.392163,145.682313 L476.032163,145.682313 L476.032163,155.858313 L477.184163,155.858313 Z M483.072163,155.858313 L487.760163,145.474313 L487.760163,144.658313 L479.536163,144.658313 L479.536163,147.778313 L480.672163,147.778313 L480.672163,145.682313 L486.432163,145.682313 L481.824163,155.858313 L483.072163,155.858313 Z M491.248163,151.308313 C491.901496,151.308313 492.433496,151.065647 492.844163,150.580313 C493.254829,150.09498 493.460163,149.45098 493.460163,148.648313 C493.460163,147.845647 493.254829,147.201647 492.844163,146.716313 C492.433496,146.23098 491.901496,145.988313 491.248163,145.988313 C490.585496,145.988313 490.051163,146.233313 489.645163,146.723313 C489.239163,147.213313 489.036163,147.85498 489.036163,148.648313 C489.036163,149.441647 489.239163,150.083313 489.645163,150.573313 C490.051163,151.063313 490.585496,151.308313 491.248163,151.308313 Z M491.318163,155.858313 L498.010163,146.058313 L497.184163,146.058313 L490.492163,155.858313 L491.318163,155.858313 Z M491.248163,150.678313 C490.781496,150.678313 490.412829,150.496313 490.142163,150.132313 C489.871496,149.768313 489.736163,149.273647 489.736163,148.648313 C489.736163,148.02298 489.871496,147.528313 490.142163,147.164313 C490.412829,146.800313 490.781496,146.618313 491.248163,146.618313 C491.705496,146.618313 492.071829,146.79798 492.347163,147.157313 C492.622496,147.516647 492.760163,148.013647 492.760163,148.648313 C492.760163,149.28298 492.622496,149.77998 492.347163,150.139313 C492.071829,150.498647 491.705496,150.678313 491.248163,150.678313 Z M497.254163,155.928313 C497.916829,155.928313 498.451163,155.683313 498.857163,155.193313 C499.263163,154.703313 499.466163,154.061647 499.466163,153.268313 C499.466163,152.47498 499.263163,151.833313 498.857163,151.343313 C498.451163,150.853313 497.916829,150.608313 497.254163,150.608313 C496.600829,150.608313 496.068829,150.853313 495.658163,151.343313 C495.247496,151.833313 495.042163,152.47498 495.042163,153.268313 C495.042163,154.061647 495.247496,154.703313 495.658163,155.193313 C496.068829,155.683313 496.600829,155.928313 497.254163,155.928313 Z M497.254163,155.298313 C496.796829,155.298313 496.430496,155.118647 496.155163,154.759313 C495.879829,154.39998 495.742163,153.90298 495.742163,153.268313 C495.742163,152.633647 495.879829,152.136647 496.155163,151.777313 C496.430496,151.41798 496.796829,151.238313 497.254163,151.238313 C497.720829,151.238313 498.089496,151.420313 498.360163,151.784313 C498.630829,152.148313 498.766163,152.64298 498.766163,153.268313 C498.766163,153.893647 498.630829,154.388313 498.360163,154.752313 C498.089496,155.116313 497.720829,155.298313 497.254163,155.298313 Z\",\"id\":\"17%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":41}),React.createElement(\"path\",{\"d\":\"M536.384163,186.744126 L536.384163,175.544126 L532.592163,175.544126 L532.592163,176.568126 L535.232163,176.568126 L535.232163,186.744126 L536.384163,186.744126 Z M542.400163,186.840126 C543.274829,186.840126 544.016163,186.696126 544.624163,186.408126 C545.232163,186.120126 545.690829,185.728126 546.000163,185.232126 C546.309496,184.736126 546.464163,184.168126 546.464163,183.528126 C546.464163,182.610793 546.157496,181.866793 545.544163,181.296126 C544.930829,180.72546 544.037496,180.408126 542.864163,180.344126 L542.864163,180.344126 L546.032163,176.360126 L546.032163,175.544126 L538.832163,175.544126 L538.832163,176.568126 L544.560163,176.568126 L541.456163,180.456126 L541.456163,181.304126 L542.256163,181.304126 C543.269496,181.304126 544.026829,181.50146 544.528163,181.896126 C545.029496,182.290793 545.280163,182.834793 545.280163,183.528126 C545.280163,184.232126 545.029496,184.784126 544.528163,185.184126 C544.026829,185.584126 543.317496,185.784126 542.400163,185.784126 C541.696163,185.784126 541.034829,185.664126 540.416163,185.424126 C539.797496,185.184126 539.301496,184.872126 538.928163,184.488126 L538.928163,184.488126 L538.368163,185.400126 C538.805496,185.83746 539.384163,186.186793 540.104163,186.448126 C540.824163,186.70946 541.589496,186.840126 542.400163,186.840126 Z M550.048163,182.194126 C550.701496,182.194126 551.233496,181.95146 551.644163,181.466126 C552.054829,180.980793 552.260163,180.336793 552.260163,179.534126 C552.260163,178.73146 552.054829,178.08746 551.644163,177.602126 C551.233496,177.116793 550.701496,176.874126 550.048163,176.874126 C549.385496,176.874126 548.851163,177.119126 548.445163,177.609126 C548.039163,178.099126 547.836163,178.740793 547.836163,179.534126 C547.836163,180.32746 548.039163,180.969126 548.445163,181.459126 C548.851163,181.949126 549.385496,182.194126 550.048163,182.194126 Z M550.118163,186.744126 L556.810163,176.944126 L555.984163,176.944126 L549.292163,186.744126 L550.118163,186.744126 Z M550.048163,181.564126 C549.581496,181.564126 549.212829,181.382126 548.942163,181.018126 C548.671496,180.654126 548.536163,180.15946 548.536163,179.534126 C548.536163,178.908793 548.671496,178.414126 548.942163,178.050126 C549.212829,177.686126 549.581496,177.504126 550.048163,177.504126 C550.505496,177.504126 550.871829,177.683793 551.147163,178.043126 C551.422496,178.40246 551.560163,178.89946 551.560163,179.534126 C551.560163,180.168793 551.422496,180.665793 551.147163,181.025126 C550.871829,181.38446 550.505496,181.564126 550.048163,181.564126 Z M556.054163,186.814126 C556.716829,186.814126 557.251163,186.569126 557.657163,186.079126 C558.063163,185.589126 558.266163,184.94746 558.266163,184.154126 C558.266163,183.360793 558.063163,182.719126 557.657163,182.229126 C557.251163,181.739126 556.716829,181.494126 556.054163,181.494126 C555.400829,181.494126 554.868829,181.739126 554.458163,182.229126 C554.047496,182.719126 553.842163,183.360793 553.842163,184.154126 C553.842163,184.94746 554.047496,185.589126 554.458163,186.079126 C554.868829,186.569126 555.400829,186.814126 556.054163,186.814126 Z M556.054163,186.184126 C555.596829,186.184126 555.230496,186.00446 554.955163,185.645126 C554.679829,185.285793 554.542163,184.788793 554.542163,184.154126 C554.542163,183.51946 554.679829,183.02246 554.955163,182.663126 C555.230496,182.303793 555.596829,182.124126 556.054163,182.124126 C556.520829,182.124126 556.889496,182.306126 557.160163,182.670126 C557.430829,183.034126 557.566163,183.528793 557.566163,184.154126 C557.566163,184.77946 557.430829,185.274126 557.160163,185.638126 C556.889496,186.002126 556.520829,186.184126 556.054163,186.184126 Z\",\"id\":\"13%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":42}),React.createElement(\"path\",{\"d\":\"M568.384163,186.744126 L568.384163,175.544126 L564.592163,175.544126 L564.592163,176.568126 L567.232163,176.568126 L567.232163,186.744126 L568.384163,186.744126 Z M574.400163,186.840126 C575.274829,186.840126 576.016163,186.696126 576.624163,186.408126 C577.232163,186.120126 577.690829,185.728126 578.000163,185.232126 C578.309496,184.736126 578.464163,184.168126 578.464163,183.528126 C578.464163,182.610793 578.157496,181.866793 577.544163,181.296126 C576.930829,180.72546 576.037496,180.408126 574.864163,180.344126 L574.864163,180.344126 L578.032163,176.360126 L578.032163,175.544126 L570.832163,175.544126 L570.832163,176.568126 L576.560163,176.568126 L573.456163,180.456126 L573.456163,181.304126 L574.256163,181.304126 C575.269496,181.304126 576.026829,181.50146 576.528163,181.896126 C577.029496,182.290793 577.280163,182.834793 577.280163,183.528126 C577.280163,184.232126 577.029496,184.784126 576.528163,185.184126 C576.026829,185.584126 575.317496,185.784126 574.400163,185.784126 C573.696163,185.784126 573.034829,185.664126 572.416163,185.424126 C571.797496,185.184126 571.301496,184.872126 570.928163,184.488126 L570.928163,184.488126 L570.368163,185.400126 C570.805496,185.83746 571.384163,186.186793 572.104163,186.448126 C572.824163,186.70946 573.589496,186.840126 574.400163,186.840126 Z M582.048163,182.194126 C582.701496,182.194126 583.233496,181.95146 583.644163,181.466126 C584.054829,180.980793 584.260163,180.336793 584.260163,179.534126 C584.260163,178.73146 584.054829,178.08746 583.644163,177.602126 C583.233496,177.116793 582.701496,176.874126 582.048163,176.874126 C581.385496,176.874126 580.851163,177.119126 580.445163,177.609126 C580.039163,178.099126 579.836163,178.740793 579.836163,179.534126 C579.836163,180.32746 580.039163,180.969126 580.445163,181.459126 C580.851163,181.949126 581.385496,182.194126 582.048163,182.194126 Z M582.118163,186.744126 L588.810163,176.944126 L587.984163,176.944126 L581.292163,186.744126 L582.118163,186.744126 Z M582.048163,181.564126 C581.581496,181.564126 581.212829,181.382126 580.942163,181.018126 C580.671496,180.654126 580.536163,180.15946 580.536163,179.534126 C580.536163,178.908793 580.671496,178.414126 580.942163,178.050126 C581.212829,177.686126 581.581496,177.504126 582.048163,177.504126 C582.505496,177.504126 582.871829,177.683793 583.147163,178.043126 C583.422496,178.40246 583.560163,178.89946 583.560163,179.534126 C583.560163,180.168793 583.422496,180.665793 583.147163,181.025126 C582.871829,181.38446 582.505496,181.564126 582.048163,181.564126 Z M588.054163,186.814126 C588.716829,186.814126 589.251163,186.569126 589.657163,186.079126 C590.063163,185.589126 590.266163,184.94746 590.266163,184.154126 C590.266163,183.360793 590.063163,182.719126 589.657163,182.229126 C589.251163,181.739126 588.716829,181.494126 588.054163,181.494126 C587.400829,181.494126 586.868829,181.739126 586.458163,182.229126 C586.047496,182.719126 585.842163,183.360793 585.842163,184.154126 C585.842163,184.94746 586.047496,185.589126 586.458163,186.079126 C586.868829,186.569126 587.400829,186.814126 588.054163,186.814126 Z M588.054163,186.184126 C587.596829,186.184126 587.230496,186.00446 586.955163,185.645126 C586.679829,185.285793 586.542163,184.788793 586.542163,184.154126 C586.542163,183.51946 586.679829,183.02246 586.955163,182.663126 C587.230496,182.303793 587.596829,182.124126 588.054163,182.124126 C588.520829,182.124126 588.889496,182.306126 589.160163,182.670126 C589.430829,183.034126 589.566163,183.528793 589.566163,184.154126 C589.566163,184.77946 589.430829,185.274126 589.160163,185.638126 C588.889496,186.002126 588.520829,186.184126 588.054163,186.184126 Z\",\"id\":\"13%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":43}),React.createElement(\"path\",{\"d\":\"M600.384163,186.744126 L600.384163,175.544126 L596.592163,175.544126 L596.592163,176.568126 L599.232163,176.568126 L599.232163,186.744126 L600.384163,186.744126 Z M606.400163,186.840126 C607.274829,186.840126 608.016163,186.696126 608.624163,186.408126 C609.232163,186.120126 609.690829,185.728126 610.000163,185.232126 C610.309496,184.736126 610.464163,184.168126 610.464163,183.528126 C610.464163,182.610793 610.157496,181.866793 609.544163,181.296126 C608.930829,180.72546 608.037496,180.408126 606.864163,180.344126 L606.864163,180.344126 L610.032163,176.360126 L610.032163,175.544126 L602.832163,175.544126 L602.832163,176.568126 L608.560163,176.568126 L605.456163,180.456126 L605.456163,181.304126 L606.256163,181.304126 C607.269496,181.304126 608.026829,181.50146 608.528163,181.896126 C609.029496,182.290793 609.280163,182.834793 609.280163,183.528126 C609.280163,184.232126 609.029496,184.784126 608.528163,185.184126 C608.026829,185.584126 607.317496,185.784126 606.400163,185.784126 C605.696163,185.784126 605.034829,185.664126 604.416163,185.424126 C603.797496,185.184126 603.301496,184.872126 602.928163,184.488126 L602.928163,184.488126 L602.368163,185.400126 C602.805496,185.83746 603.384163,186.186793 604.104163,186.448126 C604.824163,186.70946 605.589496,186.840126 606.400163,186.840126 Z M614.048163,182.194126 C614.701496,182.194126 615.233496,181.95146 615.644163,181.466126 C616.054829,180.980793 616.260163,180.336793 616.260163,179.534126 C616.260163,178.73146 616.054829,178.08746 615.644163,177.602126 C615.233496,177.116793 614.701496,176.874126 614.048163,176.874126 C613.385496,176.874126 612.851163,177.119126 612.445163,177.609126 C612.039163,178.099126 611.836163,178.740793 611.836163,179.534126 C611.836163,180.32746 612.039163,180.969126 612.445163,181.459126 C612.851163,181.949126 613.385496,182.194126 614.048163,182.194126 Z M614.118163,186.744126 L620.810163,176.944126 L619.984163,176.944126 L613.292163,186.744126 L614.118163,186.744126 Z M614.048163,181.564126 C613.581496,181.564126 613.212829,181.382126 612.942163,181.018126 C612.671496,180.654126 612.536163,180.15946 612.536163,179.534126 C612.536163,178.908793 612.671496,178.414126 612.942163,178.050126 C613.212829,177.686126 613.581496,177.504126 614.048163,177.504126 C614.505496,177.504126 614.871829,177.683793 615.147163,178.043126 C615.422496,178.40246 615.560163,178.89946 615.560163,179.534126 C615.560163,180.168793 615.422496,180.665793 615.147163,181.025126 C614.871829,181.38446 614.505496,181.564126 614.048163,181.564126 Z M620.054163,186.814126 C620.716829,186.814126 621.251163,186.569126 621.657163,186.079126 C622.063163,185.589126 622.266163,184.94746 622.266163,184.154126 C622.266163,183.360793 622.063163,182.719126 621.657163,182.229126 C621.251163,181.739126 620.716829,181.494126 620.054163,181.494126 C619.400829,181.494126 618.868829,181.739126 618.458163,182.229126 C618.047496,182.719126 617.842163,183.360793 617.842163,184.154126 C617.842163,184.94746 618.047496,185.589126 618.458163,186.079126 C618.868829,186.569126 619.400829,186.814126 620.054163,186.814126 Z M620.054163,186.184126 C619.596829,186.184126 619.230496,186.00446 618.955163,185.645126 C618.679829,185.285793 618.542163,184.788793 618.542163,184.154126 C618.542163,183.51946 618.679829,183.02246 618.955163,182.663126 C619.230496,182.303793 619.596829,182.124126 620.054163,182.124126 C620.520829,182.124126 620.889496,182.306126 621.160163,182.670126 C621.430829,183.034126 621.566163,183.528793 621.566163,184.154126 C621.566163,184.77946 621.430829,185.274126 621.160163,185.638126 C620.889496,186.002126 620.520829,186.184126 620.054163,186.184126 Z\",\"id\":\"13%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":44}),React.createElement(\"path\",{\"d\":\"M187.776,316.789655 L187.776,315.765655 L181.504,315.765655 L181.504,305.589655 L180.32,305.589655 L180.32,316.789655 L187.776,316.789655 Z M193.072,316.869655 C193.744,316.869655 194.36,316.752322 194.92,316.517655 C195.48,316.282988 195.946667,315.941655 196.32,315.493655 L196.32,315.493655 L195.68,314.757655 C195.36,315.120322 194.981333,315.394988 194.544,315.581655 C194.106667,315.768322 193.626667,315.861655 193.104,315.861655 C192.176,315.861655 191.408,315.592322 190.8,315.053655 C190.192,314.514988 189.856,313.808322 189.792,312.933655 L189.792,312.933655 L196.832,312.933655 L196.848,312.581655 C196.848,311.749655 196.672,311.010988 196.32,310.365655 C195.968,309.720322 195.482667,309.216322 194.864,308.853655 C194.245333,308.490988 193.546667,308.309655 192.768,308.309655 C191.989333,308.309655 191.288,308.490988 190.664,308.853655 C190.04,309.216322 189.549333,309.722988 189.192,310.373655 C188.834667,311.024322 188.656,311.760322 188.656,312.581655 C188.656,313.402988 188.842667,314.138988 189.216,314.789655 C189.589333,315.440322 190.109333,315.949655 190.776,316.317655 C191.442667,316.685655 192.208,316.869655 193.072,316.869655 Z M195.76,312.085655 L189.792,312.085655 C189.866667,311.253655 190.178667,310.578988 190.728,310.061655 C191.277333,309.544322 191.957333,309.285655 192.768,309.285655 C193.589333,309.285655 194.274667,309.544322 194.824,310.061655 C195.373333,310.578988 195.685333,311.253655 195.76,312.085655 L195.76,312.085655 Z M202.496,316.789655 L206.24,308.373655 L205.12,308.373655 L201.936,315.541655 L198.784,308.373655 L197.6,308.373655 L201.328,316.789655 L202.496,316.789655 Z M211.408,316.869655 C212.08,316.869655 212.696,316.752322 213.256,316.517655 C213.816,316.282988 214.282667,315.941655 214.656,315.493655 L214.656,315.493655 L214.016,314.757655 C213.696,315.120322 213.317333,315.394988 212.88,315.581655 C212.442667,315.768322 211.962667,315.861655 211.44,315.861655 C210.512,315.861655 209.744,315.592322 209.136,315.053655 C208.528,314.514988 208.192,313.808322 208.128,312.933655 L208.128,312.933655 L215.168,312.933655 L215.184,312.581655 C215.184,311.749655 215.008,311.010988 214.656,310.365655 C214.304,309.720322 213.818667,309.216322 213.2,308.853655 C212.581333,308.490988 211.882667,308.309655 211.104,308.309655 C210.325333,308.309655 209.624,308.490988 209,308.853655 C208.376,309.216322 207.885333,309.722988 207.528,310.373655 C207.170667,311.024322 206.992,311.760322 206.992,312.581655 C206.992,313.402988 207.178667,314.138988 207.552,314.789655 C207.925333,315.440322 208.445333,315.949655 209.112,316.317655 C209.778667,316.685655 210.544,316.869655 211.408,316.869655 Z M214.096,312.085655 L208.128,312.085655 C208.202667,311.253655 208.514667,310.578988 209.064,310.061655 C209.613333,309.544322 210.293333,309.285655 211.104,309.285655 C211.925333,309.285655 212.610667,309.544322 213.16,310.061655 C213.709333,310.578988 214.021333,311.253655 214.096,312.085655 L214.096,312.085655 Z M218.64,316.789655 L218.64,304.917655 L217.504,304.917655 L217.504,316.789655 L218.64,316.789655 Z M232.896,316.789655 L232.896,315.765655 L226.736,315.765655 L230.544,312.021655 C231.258667,311.328322 231.744,310.714988 232,310.181655 C232.256,309.648322 232.384,309.093655 232.384,308.517655 C232.384,307.578988 232.050667,306.840322 231.384,306.301655 C230.717333,305.762988 229.813333,305.493655 228.672,305.493655 C227.818667,305.493655 227.053333,305.632322 226.376,305.909655 C225.698667,306.186988 225.141333,306.581655 224.704,307.093655 L224.704,307.093655 L225.52,307.797655 C226.245333,306.965655 227.264,306.549655 228.576,306.549655 C229.418667,306.549655 230.066667,306.733655 230.52,307.101655 C230.973333,307.469655 231.2,307.984322 231.2,308.645655 C231.2,309.072322 231.096,309.496322 230.888,309.917655 C230.68,310.338988 230.282667,310.837655 229.696,311.413655 L229.696,311.413655 L225.04,315.973655 L225.04,316.789655 L232.896,316.789655 Z\",\"id\":\"Level2\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":45}),React.createElement(\"path\",{\"d\":\"M311.808,316.789655 L311.808,315.765655 L305.536,315.765655 L305.536,305.589655 L304.352,305.589655 L304.352,316.789655 L311.808,316.789655 Z M317.104,316.869655 C317.776,316.869655 318.392,316.752322 318.952,316.517655 C319.512,316.282988 319.978667,315.941655 320.352,315.493655 L320.352,315.493655 L319.712,314.757655 C319.392,315.120322 319.013333,315.394988 318.576,315.581655 C318.138667,315.768322 317.658667,315.861655 317.136,315.861655 C316.208,315.861655 315.44,315.592322 314.832,315.053655 C314.224,314.514988 313.888,313.808322 313.824,312.933655 L313.824,312.933655 L320.864,312.933655 L320.88,312.581655 C320.88,311.749655 320.704,311.010988 320.352,310.365655 C320,309.720322 319.514667,309.216322 318.896,308.853655 C318.277333,308.490988 317.578667,308.309655 316.8,308.309655 C316.021333,308.309655 315.32,308.490988 314.696,308.853655 C314.072,309.216322 313.581333,309.722988 313.224,310.373655 C312.866667,311.024322 312.688,311.760322 312.688,312.581655 C312.688,313.402988 312.874667,314.138988 313.248,314.789655 C313.621333,315.440322 314.141333,315.949655 314.808,316.317655 C315.474667,316.685655 316.24,316.869655 317.104,316.869655 Z M319.792,312.085655 L313.824,312.085655 C313.898667,311.253655 314.210667,310.578988 314.76,310.061655 C315.309333,309.544322 315.989333,309.285655 316.8,309.285655 C317.621333,309.285655 318.306667,309.544322 318.856,310.061655 C319.405333,310.578988 319.717333,311.253655 319.792,312.085655 L319.792,312.085655 Z M326.528,316.789655 L330.272,308.373655 L329.152,308.373655 L325.968,315.541655 L322.816,308.373655 L321.632,308.373655 L325.36,316.789655 L326.528,316.789655 Z M335.44,316.869655 C336.112,316.869655 336.728,316.752322 337.288,316.517655 C337.848,316.282988 338.314667,315.941655 338.688,315.493655 L338.688,315.493655 L338.048,314.757655 C337.728,315.120322 337.349333,315.394988 336.912,315.581655 C336.474667,315.768322 335.994667,315.861655 335.472,315.861655 C334.544,315.861655 333.776,315.592322 333.168,315.053655 C332.56,314.514988 332.224,313.808322 332.16,312.933655 L332.16,312.933655 L339.2,312.933655 L339.216,312.581655 C339.216,311.749655 339.04,311.010988 338.688,310.365655 C338.336,309.720322 337.850667,309.216322 337.232,308.853655 C336.613333,308.490988 335.914667,308.309655 335.136,308.309655 C334.357333,308.309655 333.656,308.490988 333.032,308.853655 C332.408,309.216322 331.917333,309.722988 331.56,310.373655 C331.202667,311.024322 331.024,311.760322 331.024,312.581655 C331.024,313.402988 331.210667,314.138988 331.584,314.789655 C331.957333,315.440322 332.477333,315.949655 333.144,316.317655 C333.810667,316.685655 334.576,316.869655 335.44,316.869655 Z M338.128,312.085655 L332.16,312.085655 C332.234667,311.253655 332.546667,310.578988 333.096,310.061655 C333.645333,309.544322 334.325333,309.285655 335.136,309.285655 C335.957333,309.285655 336.642667,309.544322 337.192,310.061655 C337.741333,310.578988 338.053333,311.253655 338.128,312.085655 L338.128,312.085655 Z M342.672,316.789655 L342.672,304.917655 L341.536,304.917655 L341.536,316.789655 L342.672,316.789655 Z M352.624,316.885655 C353.498667,316.885655 354.24,316.741655 354.848,316.453655 C355.456,316.165655 355.914667,315.773655 356.224,315.277655 C356.533333,314.781655 356.688,314.213655 356.688,313.573655 C356.688,312.656322 356.381333,311.912322 355.768,311.341655 C355.154667,310.770988 354.261333,310.453655 353.088,310.389655 L353.088,310.389655 L356.256,306.405655 L356.256,305.589655 L349.056,305.589655 L349.056,306.613655 L354.784,306.613655 L351.68,310.501655 L351.68,311.349655 L352.48,311.349655 C353.493333,311.349655 354.250667,311.546988 354.752,311.941655 C355.253333,312.336322 355.504,312.880322 355.504,313.573655 C355.504,314.277655 355.253333,314.829655 354.752,315.229655 C354.250667,315.629655 353.541333,315.829655 352.624,315.829655 C351.92,315.829655 351.258667,315.709655 350.64,315.469655 C350.021333,315.229655 349.525333,314.917655 349.152,314.533655 L349.152,314.533655 L348.592,315.445655 C349.029333,315.882988 349.608,316.232322 350.328,316.493655 C351.048,316.754988 351.813333,316.885655 352.624,316.885655 Z\",\"id\":\"Level3\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":46}),React.createElement(\"path\",{\"d\":\"M427.448,316.789655 L427.448,315.765655 L421.176,315.765655 L421.176,305.589655 L419.992,305.589655 L419.992,316.789655 L427.448,316.789655 Z M432.744,316.869655 C433.416,316.869655 434.032,316.752322 434.592,316.517655 C435.152,316.282988 435.618667,315.941655 435.992,315.493655 L435.992,315.493655 L435.352,314.757655 C435.032,315.120322 434.653333,315.394988 434.216,315.581655 C433.778667,315.768322 433.298667,315.861655 432.776,315.861655 C431.848,315.861655 431.08,315.592322 430.472,315.053655 C429.864,314.514988 429.528,313.808322 429.464,312.933655 L429.464,312.933655 L436.504,312.933655 L436.52,312.581655 C436.52,311.749655 436.344,311.010988 435.992,310.365655 C435.64,309.720322 435.154667,309.216322 434.536,308.853655 C433.917333,308.490988 433.218667,308.309655 432.44,308.309655 C431.661333,308.309655 430.96,308.490988 430.336,308.853655 C429.712,309.216322 429.221333,309.722988 428.864,310.373655 C428.506667,311.024322 428.328,311.760322 428.328,312.581655 C428.328,313.402988 428.514667,314.138988 428.888,314.789655 C429.261333,315.440322 429.781333,315.949655 430.448,316.317655 C431.114667,316.685655 431.88,316.869655 432.744,316.869655 Z M435.432,312.085655 L429.464,312.085655 C429.538667,311.253655 429.850667,310.578988 430.4,310.061655 C430.949333,309.544322 431.629333,309.285655 432.44,309.285655 C433.261333,309.285655 433.946667,309.544322 434.496,310.061655 C435.045333,310.578988 435.357333,311.253655 435.432,312.085655 L435.432,312.085655 Z M442.168,316.789655 L445.912,308.373655 L444.792,308.373655 L441.608,315.541655 L438.456,308.373655 L437.272,308.373655 L441,316.789655 L442.168,316.789655 Z M451.08,316.869655 C451.752,316.869655 452.368,316.752322 452.928,316.517655 C453.488,316.282988 453.954667,315.941655 454.328,315.493655 L454.328,315.493655 L453.688,314.757655 C453.368,315.120322 452.989333,315.394988 452.552,315.581655 C452.114667,315.768322 451.634667,315.861655 451.112,315.861655 C450.184,315.861655 449.416,315.592322 448.808,315.053655 C448.2,314.514988 447.864,313.808322 447.8,312.933655 L447.8,312.933655 L454.84,312.933655 L454.856,312.581655 C454.856,311.749655 454.68,311.010988 454.328,310.365655 C453.976,309.720322 453.490667,309.216322 452.872,308.853655 C452.253333,308.490988 451.554667,308.309655 450.776,308.309655 C449.997333,308.309655 449.296,308.490988 448.672,308.853655 C448.048,309.216322 447.557333,309.722988 447.2,310.373655 C446.842667,311.024322 446.664,311.760322 446.664,312.581655 C446.664,313.402988 446.850667,314.138988 447.224,314.789655 C447.597333,315.440322 448.117333,315.949655 448.784,316.317655 C449.450667,316.685655 450.216,316.869655 451.08,316.869655 Z M453.768,312.085655 L447.8,312.085655 C447.874667,311.253655 448.186667,310.578988 448.736,310.061655 C449.285333,309.544322 449.965333,309.285655 450.776,309.285655 C451.597333,309.285655 452.282667,309.544322 452.832,310.061655 C453.381333,310.578988 453.693333,311.253655 453.768,312.085655 L453.768,312.085655 Z M458.312,316.789655 L458.312,304.917655 L457.176,304.917655 L457.176,316.789655 L458.312,316.789655 Z M472.2,316.789655 L472.2,313.845655 L474.44,313.845655 L474.44,312.821655 L472.2,312.821655 L472.2,310.229655 L471.08,310.229655 L471.08,312.821655 L466.216,312.821655 L471.944,305.589655 L470.664,305.589655 L464.728,313.013655 L464.728,313.845655 L471.048,313.845655 L471.048,316.789655 L472.2,316.789655 Z M479.816,312.949655 L479.816,311.957655 L475.624,311.957655 L475.624,312.949655 L479.816,312.949655 Z M485.144,316.885655 C486.029333,316.885655 486.776,316.738988 487.384,316.445655 C487.992,316.152322 488.448,315.749655 488.752,315.237655 C489.056,314.725655 489.208,314.144322 489.208,313.493655 C489.208,312.448322 488.837333,311.634988 488.096,311.053655 C487.354667,310.472322 486.173333,310.181655 484.552,310.181655 L484.552,310.181655 L483.112,310.181655 L483.496,306.613655 L488.616,306.613655 L488.616,305.589655 L482.488,305.589655 L481.912,311.205655 L484.296,311.205655 C485.650667,311.205655 486.613333,311.402988 487.184,311.797655 C487.754667,312.192322 488.04,312.773655 488.04,313.541655 C488.04,314.234988 487.786667,314.789655 487.28,315.205655 C486.773333,315.621655 486.056,315.829655 485.128,315.829655 C484.424,315.829655 483.768,315.709655 483.16,315.469655 C482.552,315.229655 482.061333,314.917655 481.688,314.533655 L481.688,314.533655 L481.128,315.445655 C481.565333,315.882988 482.144,316.232322 482.864,316.493655 C483.584,316.754988 484.344,316.885655 485.144,316.885655 Z\",\"id\":\"Level4-5\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":47}),React.createElement(\"path\",{\"d\":\"M555.029395,316.789655 L555.029395,315.765655 L548.757395,315.765655 L548.757395,305.589655 L547.573395,305.589655 L547.573395,316.789655 L555.029395,316.789655 Z M560.325395,316.869655 C560.997395,316.869655 561.613395,316.752322 562.173395,316.517655 C562.733395,316.282988 563.200062,315.941655 563.573395,315.493655 L563.573395,315.493655 L562.933395,314.757655 C562.613395,315.120322 562.234729,315.394988 561.797395,315.581655 C561.360062,315.768322 560.880062,315.861655 560.357395,315.861655 C559.429395,315.861655 558.661395,315.592322 558.053395,315.053655 C557.445395,314.514988 557.109395,313.808322 557.045395,312.933655 L557.045395,312.933655 L564.085395,312.933655 L564.101395,312.581655 C564.101395,311.749655 563.925395,311.010988 563.573395,310.365655 C563.221395,309.720322 562.736062,309.216322 562.117395,308.853655 C561.498729,308.490988 560.800062,308.309655 560.021395,308.309655 C559.242729,308.309655 558.541395,308.490988 557.917395,308.853655 C557.293395,309.216322 556.802729,309.722988 556.445395,310.373655 C556.088062,311.024322 555.909395,311.760322 555.909395,312.581655 C555.909395,313.402988 556.096062,314.138988 556.469395,314.789655 C556.842729,315.440322 557.362729,315.949655 558.029395,316.317655 C558.696062,316.685655 559.461395,316.869655 560.325395,316.869655 Z M563.013395,312.085655 L557.045395,312.085655 C557.120062,311.253655 557.432062,310.578988 557.981395,310.061655 C558.530729,309.544322 559.210729,309.285655 560.021395,309.285655 C560.842729,309.285655 561.528062,309.544322 562.077395,310.061655 C562.626729,310.578988 562.938729,311.253655 563.013395,312.085655 L563.013395,312.085655 Z M569.749395,316.789655 L573.493395,308.373655 L572.373395,308.373655 L569.189395,315.541655 L566.037395,308.373655 L564.853395,308.373655 L568.581395,316.789655 L569.749395,316.789655 Z M578.661395,316.869655 C579.333395,316.869655 579.949395,316.752322 580.509395,316.517655 C581.069395,316.282988 581.536062,315.941655 581.909395,315.493655 L581.909395,315.493655 L581.269395,314.757655 C580.949395,315.120322 580.570729,315.394988 580.133395,315.581655 C579.696062,315.768322 579.216062,315.861655 578.693395,315.861655 C577.765395,315.861655 576.997395,315.592322 576.389395,315.053655 C575.781395,314.514988 575.445395,313.808322 575.381395,312.933655 L575.381395,312.933655 L582.421395,312.933655 L582.437395,312.581655 C582.437395,311.749655 582.261395,311.010988 581.909395,310.365655 C581.557395,309.720322 581.072062,309.216322 580.453395,308.853655 C579.834729,308.490988 579.136062,308.309655 578.357395,308.309655 C577.578729,308.309655 576.877395,308.490988 576.253395,308.853655 C575.629395,309.216322 575.138729,309.722988 574.781395,310.373655 C574.424062,311.024322 574.245395,311.760322 574.245395,312.581655 C574.245395,313.402988 574.432062,314.138988 574.805395,314.789655 C575.178729,315.440322 575.698729,315.949655 576.365395,316.317655 C577.032062,316.685655 577.797395,316.869655 578.661395,316.869655 Z M581.349395,312.085655 L575.381395,312.085655 C575.456062,311.253655 575.768062,310.578988 576.317395,310.061655 C576.866729,309.544322 577.546729,309.285655 578.357395,309.285655 C579.178729,309.285655 579.864062,309.544322 580.413395,310.061655 C580.962729,310.578988 581.274729,311.253655 581.349395,312.085655 L581.349395,312.085655 Z M585.893395,316.789655 L585.893395,304.917655 L584.757395,304.917655 L584.757395,316.789655 L585.893395,316.789655 Z M597.093395,316.885655 C597.818729,316.885655 598.472062,316.744322 599.053395,316.461655 C599.634729,316.178988 600.090729,315.776322 600.421395,315.253655 C600.752062,314.730988 600.917395,314.128322 600.917395,313.445655 C600.917395,312.773655 600.757395,312.184322 600.437395,311.677655 C600.117395,311.170988 599.672062,310.778988 599.101395,310.501655 C598.530729,310.224322 597.877395,310.085655 597.141395,310.085655 C596.352062,310.085655 595.653395,310.253655 595.045395,310.589655 C594.437395,310.925655 593.994729,311.397655 593.717395,312.005655 C593.685395,311.664322 593.669395,311.360322 593.669395,311.093655 C593.669395,309.600322 594.021395,308.461655 594.725395,307.677655 C595.429395,306.893655 596.400062,306.501655 597.637395,306.501655 C598.554729,306.501655 599.280062,306.677655 599.813395,307.029655 L599.813395,307.029655 L600.277395,306.101655 C599.616062,305.696322 598.730729,305.493655 597.621395,305.493655 C596.597395,305.493655 595.701395,305.714988 594.933395,306.157655 C594.165395,306.600322 593.568062,307.253655 593.141395,308.117655 C592.714729,308.981655 592.501395,310.037655 592.501395,311.285655 C592.501395,313.066988 592.896062,314.445655 593.685395,315.421655 C594.474729,316.397655 595.610729,316.885655 597.093395,316.885655 Z M597.045395,315.909655 C596.426729,315.909655 595.893395,315.797655 595.445395,315.573655 C594.997395,315.349655 594.658729,315.056322 594.429395,314.693655 C594.200062,314.330988 594.085395,313.936322 594.085395,313.509655 C594.085395,313.050988 594.208062,312.634988 594.453395,312.261655 C594.698729,311.888322 595.037395,311.594988 595.469395,311.381655 C595.901395,311.168322 596.400062,311.061655 596.965395,311.061655 C597.829395,311.061655 598.514729,311.280322 599.021395,311.717655 C599.528062,312.154988 599.781395,312.741655 599.781395,313.477655 C599.781395,314.213655 599.528062,314.802988 599.021395,315.245655 C598.514729,315.688322 597.856062,315.909655 597.045395,315.909655 Z\",\"id\":\"Level6\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":48})]))))]);\n}\n\nApprenticeshipsTablet.defaultProps = {\"width\":\"624px\",\"height\":\"380px\",\"viewBox\":\"0 0 624 380\",\"version\":\"1.1\"};\n\nmodule.exports = ApprenticeshipsTablet;\n\nApprenticeshipsTablet.default = ApprenticeshipsTablet;\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default function stripPrefix(str, prefix = ``) {\n  if (!prefix) {\n    return str\n  }\n\n  if (str === prefix) {\n    return `/`\n  }\n\n  if (str.startsWith(`${prefix}/`)) {\n    return str.slice(prefix.length)\n  }\n\n  return str\n}\n","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph2Mobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 33\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Mobile/Timeline/School-years/Early-years-foundation-stage-Copy\",\"transform\":\"translate(-13.000000, -2187.000000)\"},React.createElement(\"g\",{\"id\":\"Group-33\",\"transform\":\"translate(13.000000, 2187.000000)\"},[React.createElement(\"path\",{\"d\":\"M209.768897,21.392 L209.768897,19.28 L204.911379,19.28 L207.509586,16.848 C208.251931,16.1653333 208.752207,15.5573333 209.010414,15.024 C209.268621,14.4906667 209.397724,13.92 209.397724,13.312 C209.397724,12.64 209.222897,12.056 208.873241,11.56 C208.523586,11.064 208.034069,10.68 207.40469,10.408 C206.77531,10.136 206.041034,10 205.201862,10 C204.20131,10 203.313724,10.184 202.539103,10.552 C201.764483,10.92 201.156621,11.4293333 200.715517,12.08 L200.715517,12.08 L202.619793,13.296 C202.888759,12.9226667 203.222276,12.6426667 203.620345,12.456 C204.018414,12.2693333 204.464897,12.176 204.959793,12.176 C205.551517,12.176 206.00069,12.296 206.30731,12.536 C206.613931,12.776 206.767241,13.12 206.767241,13.568 C206.767241,13.8773333 206.686552,14.1893333 206.525172,14.504 C206.363793,14.8186667 206.051793,15.1946667 205.589172,15.632 L205.589172,15.632 L201.231931,19.712 L201.231931,21.392 L209.768897,21.392 Z M213.059017,16.884 C213.783879,16.884 214.372241,16.639 214.824103,16.149 C215.275966,15.659 215.501897,15.0033333 215.501897,14.182 C215.501897,13.3606667 215.275966,12.705 214.824103,12.215 C214.372241,11.725 213.783879,11.48 213.059017,11.48 C212.334155,11.48 211.74344,11.725 211.286871,12.215 C210.830302,12.705 210.602017,13.3606667 210.602017,14.182 C210.602017,15.0033333 210.830302,15.659 211.286871,16.149 C211.74344,16.639 212.334155,16.884 213.059017,16.884 Z M213.878017,21.392 L220.627707,11.592 L218.947345,11.592 L212.197655,21.392 L213.878017,21.392 Z M213.059017,15.736 C212.748362,15.736 212.498897,15.603 212.310621,15.337 C212.122345,15.071 212.028207,14.686 212.028207,14.182 C212.028207,13.678 212.122345,13.293 212.310621,13.027 C212.498897,12.761 212.748362,12.628 213.059017,12.628 C213.379086,12.628 213.630905,12.7586667 213.814474,13.02 C213.998043,13.2813333 214.089828,13.6686667 214.089828,14.182 C214.089828,14.6953333 213.998043,15.0826667 213.814474,15.344 C213.630905,15.6053333 213.379086,15.736 213.059017,15.736 Z M219.766345,21.504 C220.491207,21.504 221.081922,21.259 221.538491,20.769 C221.99506,20.279 222.223345,19.6233333 222.223345,18.802 C222.223345,17.9806667 221.99506,17.325 221.538491,16.835 C221.081922,16.345 220.491207,16.1 219.766345,16.1 C219.295655,16.1 218.874388,16.2096667 218.502543,16.429 C218.130698,16.6483333 217.841224,16.9633333 217.634121,17.374 C217.427017,17.7846667 217.323466,18.2606667 217.323466,18.802 C217.323466,19.3433333 217.427017,19.8193333 217.634121,20.23 C217.841224,20.6406667 218.130698,20.9556667 218.502543,21.175 C218.874388,21.3943333 219.295655,21.504 219.766345,21.504 Z M219.766345,20.356 C219.45569,20.356 219.206224,20.2253333 219.017948,19.964 C218.829672,19.7026667 218.735534,19.3153333 218.735534,18.802 C218.735534,18.2886667 218.829672,17.9013333 219.017948,17.64 C219.206224,17.3786667 219.45569,17.248 219.766345,17.248 C220.086414,17.248 220.338233,17.381 220.521802,17.647 C220.705371,17.913 220.797155,18.298 220.797155,18.802 C220.797155,19.306 220.705371,19.691 220.521802,19.957 C220.338233,20.223 220.086414,20.356 219.766345,20.356 Z\",\"id\":\"2%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M9.27124138,37.296 L9.27124138,36.272 L3.05813793,36.272 L6.89896552,32.528 C7.6197931,31.8346667 8.10931034,31.2213333 8.36751724,30.688 C8.62572414,30.1546667 8.75482759,29.6 8.75482759,29.024 C8.75482759,28.0853333 8.41862069,27.3466667 7.7462069,26.808 C7.0737931,26.2693333 6.162,26 5.01082759,26 C4.15013793,26 3.3782069,26.1386667 2.69503448,26.416 C2.01186207,26.6933333 1.44972414,27.088 1.00862069,27.6 L1.00862069,27.6 L1.83165517,28.304 C2.56324138,27.472 3.59068966,27.056 4.914,27.056 C5.76393103,27.056 6.41751724,27.24 6.87475862,27.608 C7.332,27.976 7.56062069,28.4906667 7.56062069,29.152 C7.56062069,29.5786667 7.45572414,30.0026667 7.24593103,30.424 C7.03613793,30.8453333 6.63537931,31.344 6.04365517,31.92 L6.04365517,31.92 L1.34751724,36.48 L1.34751724,37.296 L9.27124138,37.296 Z M15.2261379,37.392 C16.0975862,37.392 16.8748966,37.1626667 17.558069,36.704 C18.2412414,36.2453333 18.7764828,35.5866667 19.1637931,34.728 C19.5511034,33.8693333 19.7447586,32.8586667 19.7447586,31.696 C19.7447586,30.5333333 19.5511034,29.5226667 19.1637931,28.664 C18.7764828,27.8053333 18.2412414,27.1466667 17.558069,26.688 C16.8748966,26.2293333 16.0975862,26 15.2261379,26 C14.3546897,26 13.5773793,26.2293333 12.8942069,26.688 C12.2110345,27.1466667 11.6784828,27.8053333 11.2965517,28.664 C10.9146207,29.5226667 10.7236552,30.5333333 10.7236552,31.696 C10.7236552,32.8586667 10.9146207,33.8693333 11.2965517,34.728 C11.6784828,35.5866667 12.2110345,36.2453333 12.8942069,36.704 C13.5773793,37.1626667 14.3546897,37.392 15.2261379,37.392 Z M15.2261379,36.336 C14.5698621,36.336 13.9915862,36.1546667 13.4913103,35.792 C12.9910345,35.4293333 12.6010345,34.9013333 12.3213103,34.208 C12.0415862,33.5146667 11.9017241,32.6773333 11.9017241,31.696 C11.9017241,30.7146667 12.0415862,29.8773333 12.3213103,29.184 C12.6010345,28.4906667 12.9910345,27.9626667 13.4913103,27.6 C13.9915862,27.2373333 14.5698621,27.056 15.2261379,27.056 C15.8824138,27.056 16.4606897,27.2373333 16.9609655,27.6 C17.4612414,27.9626667 17.8512414,28.4906667 18.1309655,29.184 C18.4106897,29.8773333 18.5505517,30.7146667 18.5505517,31.696 C18.5505517,32.6773333 18.4106897,33.5146667 18.1309655,34.208 C17.8512414,34.9013333 17.4612414,35.4293333 16.9609655,35.792 C16.4606897,36.1546667 15.8824138,36.336 15.2261379,36.336 Z M24.5377241,37.296 L24.5377241,26.096 L20.7130345,26.096 L20.7130345,27.12 L23.3757931,27.12 L23.3757931,37.296 L24.5377241,37.296 Z M31.8643448,37.392 C32.595931,37.392 33.2548966,37.2506667 33.8412414,36.968 C34.4275862,36.6853333 34.8875172,36.2826667 35.2210345,35.76 C35.5545517,35.2373333 35.7213103,34.6346667 35.7213103,33.952 C35.7213103,33.28 35.559931,32.6906667 35.2371724,32.184 C34.9144138,31.6773333 34.4652414,31.2853333 33.8896552,31.008 C33.314069,30.7306667 32.6551034,30.592 31.9127586,30.592 C31.1166207,30.592 30.411931,30.76 29.7986897,31.096 C29.1854483,31.432 28.7389655,31.904 28.4592414,32.512 C28.4269655,32.1706667 28.4108276,31.8666667 28.4108276,31.6 C28.4108276,30.1066667 28.7658621,28.968 29.475931,28.184 C30.186,27.4 31.1650345,27.008 32.4130345,27.008 C33.3382759,27.008 34.0698621,27.184 34.6077931,27.536 L34.6077931,27.536 L35.0757931,26.608 C34.4087586,26.2026667 33.5157931,26 32.3968966,26 C31.364069,26 30.4603448,26.2213333 29.6857241,26.664 C28.9111034,27.1066667 28.3086207,27.76 27.8782759,28.624 C27.447931,29.488 27.2327586,30.544 27.2327586,31.792 C27.2327586,33.5733333 27.6308276,34.952 28.4269655,35.928 C29.2231034,36.904 30.3688966,37.392 31.8643448,37.392 Z M31.815931,36.416 C31.191931,36.416 30.654,36.304 30.2021379,36.08 C29.7502759,35.856 29.4086897,35.5626667 29.1773793,35.2 C28.946069,34.8373333 28.8304138,34.4426667 28.8304138,34.016 C28.8304138,33.5573333 28.9541379,33.1413333 29.2015862,32.768 C29.4490345,32.3946667 29.7906207,32.1013333 30.2263448,31.888 C30.662069,31.6746667 31.1650345,31.568 31.7352414,31.568 C32.6066897,31.568 33.297931,31.7866667 33.8089655,32.224 C34.32,32.6613333 34.5755172,33.248 34.5755172,33.984 C34.5755172,34.72 34.32,35.3093333 33.8089655,35.752 C33.297931,36.1946667 32.6335862,36.416 31.815931,36.416 Z\",\"id\":\"2016\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M9.27124138,117.296 L9.27124138,116.272 L3.05813793,116.272 L6.89896552,112.528 C7.6197931,111.834667 8.10931034,111.221333 8.36751724,110.688 C8.62572414,110.154667 8.75482759,109.6 8.75482759,109.024 C8.75482759,108.085333 8.41862069,107.346667 7.7462069,106.808 C7.0737931,106.269333 6.162,106 5.01082759,106 C4.15013793,106 3.3782069,106.138667 2.69503448,106.416 C2.01186207,106.693333 1.44972414,107.088 1.00862069,107.6 L1.00862069,107.6 L1.83165517,108.304 C2.56324138,107.472 3.59068966,107.056 4.914,107.056 C5.76393103,107.056 6.41751724,107.24 6.87475862,107.608 C7.332,107.976 7.56062069,108.490667 7.56062069,109.152 C7.56062069,109.578667 7.45572414,110.002667 7.24593103,110.424 C7.03613793,110.845333 6.63537931,111.344 6.04365517,111.92 L6.04365517,111.92 L1.34751724,116.48 L1.34751724,117.296 L9.27124138,117.296 Z M15.2261379,117.392 C16.0975862,117.392 16.8748966,117.162667 17.558069,116.704 C18.2412414,116.245333 18.7764828,115.586667 19.1637931,114.728 C19.5511034,113.869333 19.7447586,112.858667 19.7447586,111.696 C19.7447586,110.533333 19.5511034,109.522667 19.1637931,108.664 C18.7764828,107.805333 18.2412414,107.146667 17.558069,106.688 C16.8748966,106.229333 16.0975862,106 15.2261379,106 C14.3546897,106 13.5773793,106.229333 12.8942069,106.688 C12.2110345,107.146667 11.6784828,107.805333 11.2965517,108.664 C10.9146207,109.522667 10.7236552,110.533333 10.7236552,111.696 C10.7236552,112.858667 10.9146207,113.869333 11.2965517,114.728 C11.6784828,115.586667 12.2110345,116.245333 12.8942069,116.704 C13.5773793,117.162667 14.3546897,117.392 15.2261379,117.392 Z M15.2261379,116.336 C14.5698621,116.336 13.9915862,116.154667 13.4913103,115.792 C12.9910345,115.429333 12.6010345,114.901333 12.3213103,114.208 C12.0415862,113.514667 11.9017241,112.677333 11.9017241,111.696 C11.9017241,110.714667 12.0415862,109.877333 12.3213103,109.184 C12.6010345,108.490667 12.9910345,107.962667 13.4913103,107.6 C13.9915862,107.237333 14.5698621,107.056 15.2261379,107.056 C15.8824138,107.056 16.4606897,107.237333 16.9609655,107.6 C17.4612414,107.962667 17.8512414,108.490667 18.1309655,109.184 C18.4106897,109.877333 18.5505517,110.714667 18.5505517,111.696 C18.5505517,112.677333 18.4106897,113.514667 18.1309655,114.208 C17.8512414,114.901333 17.4612414,115.429333 16.9609655,115.792 C16.4606897,116.154667 15.8824138,116.336 15.2261379,116.336 Z M24.5377241,117.296 L24.5377241,106.096 L20.7130345,106.096 L20.7130345,107.12 L23.3757931,107.12 L23.3757931,117.296 L24.5377241,117.296 Z M30.4764828,117.296 L35.2048966,106.912 L35.2048966,106.096 L26.91,106.096 L26.91,109.216 L28.0557931,109.216 L28.0557931,107.12 L33.8654483,107.12 L29.2177241,117.296 L30.4764828,117.296 Z\",\"id\":\"2017\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M8.26262069,197.296 L8.26262069,196.272 L2.04951724,196.272 L5.89034483,192.528 C6.61117241,191.834667 7.10068966,191.221333 7.35889655,190.688 C7.61710345,190.154667 7.7462069,189.6 7.7462069,189.024 C7.7462069,188.085333 7.41,187.346667 6.73758621,186.808 C6.06517241,186.269333 5.15337931,186 4.0022069,186 C3.14151724,186 2.36958621,186.138667 1.68641379,186.416 C1.00324138,186.693333 0.441103448,187.088 9.17335173e-13,187.6 L9.17335173e-13,187.6 L0.823034483,188.304 C1.55462069,187.472 2.58206897,187.056 3.90537931,187.056 C4.75531034,187.056 5.40889655,187.24 5.86613793,187.608 C6.32337931,187.976 6.552,188.490667 6.552,189.152 C6.552,189.578667 6.44710345,190.002667 6.23731034,190.424 C6.02751724,190.845333 5.62675862,191.344 5.03503448,191.92 L5.03503448,191.92 L0.338896552,196.48 L0.338896552,197.296 L8.26262069,197.296 Z M14.2175172,197.392 C15.0889655,197.392 15.8662759,197.162667 16.5494483,196.704 C17.2326207,196.245333 17.7678621,195.586667 18.1551724,194.728 C18.5424828,193.869333 18.7361379,192.858667 18.7361379,191.696 C18.7361379,190.533333 18.5424828,189.522667 18.1551724,188.664 C17.7678621,187.805333 17.2326207,187.146667 16.5494483,186.688 C15.8662759,186.229333 15.0889655,186 14.2175172,186 C13.346069,186 12.5687586,186.229333 11.8855862,186.688 C11.2024138,187.146667 10.6698621,187.805333 10.287931,188.664 C9.906,189.522667 9.71503448,190.533333 9.71503448,191.696 C9.71503448,192.858667 9.906,193.869333 10.287931,194.728 C10.6698621,195.586667 11.2024138,196.245333 11.8855862,196.704 C12.5687586,197.162667 13.346069,197.392 14.2175172,197.392 Z M14.2175172,196.336 C13.5612414,196.336 12.9829655,196.154667 12.4826897,195.792 C11.9824138,195.429333 11.5924138,194.901333 11.3126897,194.208 C11.0329655,193.514667 10.8931034,192.677333 10.8931034,191.696 C10.8931034,190.714667 11.0329655,189.877333 11.3126897,189.184 C11.5924138,188.490667 11.9824138,187.962667 12.4826897,187.6 C12.9829655,187.237333 13.5612414,187.056 14.2175172,187.056 C14.8737931,187.056 15.452069,187.237333 15.9523448,187.6 C16.4526207,187.962667 16.8426207,188.490667 17.1223448,189.184 C17.402069,189.877333 17.541931,190.714667 17.541931,191.696 C17.541931,192.677333 17.402069,193.514667 17.1223448,194.208 C16.8426207,194.901333 16.4526207,195.429333 15.9523448,195.792 C15.452069,196.154667 14.8737931,196.336 14.2175172,196.336 Z M23.5291034,197.296 L23.5291034,186.096 L19.7044138,186.096 L19.7044138,187.12 L22.3671724,187.12 L22.3671724,197.296 L23.5291034,197.296 Z M30.5168276,197.392 C31.4097931,197.392 32.1871034,197.261333 32.8487586,197 C33.5104138,196.738667 34.0187586,196.365333 34.3737931,195.88 C34.7288276,195.394667 34.9063448,194.826667 34.9063448,194.176 C34.9063448,193.514667 34.7153793,192.949333 34.3334483,192.48 C33.9515172,192.010667 33.4055172,191.658667 32.6954483,191.424 C33.2764138,191.2 33.7228966,190.877333 34.0348966,190.456 C34.3468966,190.034667 34.5028966,189.536 34.5028966,188.96 C34.5028966,188.362667 34.3361379,187.84 34.0026207,187.392 C33.6691034,186.944 33.2037931,186.6 32.6066897,186.36 C32.0095862,186.12 31.3129655,186 30.5168276,186 C29.3118621,186 28.3516552,186.266667 27.6362069,186.8 C26.9207586,187.333333 26.5630345,188.053333 26.5630345,188.96 C26.5630345,189.536 26.7136552,190.034667 27.0148966,190.456 C27.3161379,190.877333 27.7572414,191.2 28.3382069,191.424 C27.6281379,191.658667 27.0875172,192.008 26.7163448,192.472 C26.3451724,192.936 26.1595862,193.504 26.1595862,194.176 C26.1595862,195.168 26.5468966,195.952 27.3215172,196.528 C28.0961379,197.104 29.1612414,197.392 30.5168276,197.392 Z M30.5168276,191.008 C29.6453793,191.008 28.9622069,190.826667 28.4673103,190.464 C27.9724138,190.101333 27.7249655,189.610667 27.7249655,188.992 C27.7249655,188.373333 27.9751034,187.882667 28.4753793,187.52 C28.9756552,187.157333 29.6561379,186.976 30.5168276,186.976 C31.3667586,186.976 32.0472414,187.157333 32.5582759,187.52 C33.0693103,187.882667 33.3248276,188.378667 33.3248276,189.008 C33.3248276,189.616 33.0746897,190.101333 32.5744138,190.464 C32.0741379,190.826667 31.3882759,191.008 30.5168276,191.008 Z M30.5168276,196.416 C29.5162759,196.416 28.7362759,196.216 28.1768276,195.816 C27.6173793,195.416 27.3376552,194.864 27.3376552,194.16 C27.3376552,193.466667 27.620069,192.92 28.1848966,192.52 C28.7497241,192.12 29.5270345,191.92 30.5168276,191.92 C31.5173793,191.92 32.300069,192.12 32.8648966,192.52 C33.4297241,192.92 33.7121379,193.466667 33.7121379,194.16 C33.7121379,194.853333 33.4297241,195.402667 32.8648966,195.808 C32.300069,196.213333 31.5173793,196.416 30.5168276,196.416 Z\",\"id\":\"2018\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M9.27124138,277.296 L9.27124138,276.272 L3.05813793,276.272 L6.89896552,272.528 C7.6197931,271.834667 8.10931034,271.221333 8.36751724,270.688 C8.62572414,270.154667 8.75482759,269.6 8.75482759,269.024 C8.75482759,268.085333 8.41862069,267.346667 7.7462069,266.808 C7.0737931,266.269333 6.162,266 5.01082759,266 C4.15013793,266 3.3782069,266.138667 2.69503448,266.416 C2.01186207,266.693333 1.44972414,267.088 1.00862069,267.6 L1.00862069,267.6 L1.83165517,268.304 C2.56324138,267.472 3.59068966,267.056 4.914,267.056 C5.76393103,267.056 6.41751724,267.24 6.87475862,267.608 C7.332,267.976 7.56062069,268.490667 7.56062069,269.152 C7.56062069,269.578667 7.45572414,270.002667 7.24593103,270.424 C7.03613793,270.845333 6.63537931,271.344 6.04365517,271.92 L6.04365517,271.92 L1.34751724,276.48 L1.34751724,277.296 L9.27124138,277.296 Z M15.2261379,277.392 C16.0975862,277.392 16.8748966,277.162667 17.558069,276.704 C18.2412414,276.245333 18.7764828,275.586667 19.1637931,274.728 C19.5511034,273.869333 19.7447586,272.858667 19.7447586,271.696 C19.7447586,270.533333 19.5511034,269.522667 19.1637931,268.664 C18.7764828,267.805333 18.2412414,267.146667 17.558069,266.688 C16.8748966,266.229333 16.0975862,266 15.2261379,266 C14.3546897,266 13.5773793,266.229333 12.8942069,266.688 C12.2110345,267.146667 11.6784828,267.805333 11.2965517,268.664 C10.9146207,269.522667 10.7236552,270.533333 10.7236552,271.696 C10.7236552,272.858667 10.9146207,273.869333 11.2965517,274.728 C11.6784828,275.586667 12.2110345,276.245333 12.8942069,276.704 C13.5773793,277.162667 14.3546897,277.392 15.2261379,277.392 Z M15.2261379,276.336 C14.5698621,276.336 13.9915862,276.154667 13.4913103,275.792 C12.9910345,275.429333 12.6010345,274.901333 12.3213103,274.208 C12.0415862,273.514667 11.9017241,272.677333 11.9017241,271.696 C11.9017241,270.714667 12.0415862,269.877333 12.3213103,269.184 C12.6010345,268.490667 12.9910345,267.962667 13.4913103,267.6 C13.9915862,267.237333 14.5698621,267.056 15.2261379,267.056 C15.8824138,267.056 16.4606897,267.237333 16.9609655,267.6 C17.4612414,267.962667 17.8512414,268.490667 18.1309655,269.184 C18.4106897,269.877333 18.5505517,270.714667 18.5505517,271.696 C18.5505517,272.677333 18.4106897,273.514667 18.1309655,274.208 C17.8512414,274.901333 17.4612414,275.429333 16.9609655,275.792 C16.4606897,276.154667 15.8824138,276.336 15.2261379,276.336 Z M24.5377241,277.296 L24.5377241,266.096 L20.7130345,266.096 L20.7130345,267.12 L23.3757931,267.12 L23.3757931,277.296 L24.5377241,277.296 Z M30.2182759,277.392 C31.2511034,277.392 32.1548276,277.170667 32.9294483,276.728 C33.704069,276.285333 34.3065517,275.632 34.7368966,274.768 C35.1672414,273.904 35.3824138,272.848 35.3824138,271.6 C35.3824138,269.818667 34.9843448,268.44 34.1882069,267.464 C33.392069,266.488 32.2462759,266 30.7508276,266 C30.0192414,266 29.3602759,266.141333 28.773931,266.424 C28.1875862,266.706667 27.7276552,267.109333 27.3941379,267.632 C27.0606207,268.154667 26.8938621,268.757333 26.8938621,269.44 C26.8938621,270.112 27.0552414,270.701333 27.378,271.208 C27.7007586,271.714667 28.149931,272.106667 28.7255172,272.384 C29.3011034,272.661333 29.960069,272.8 30.7024138,272.8 C31.4985517,272.8 32.2032414,272.632 32.8164828,272.296 C33.4297241,271.96 33.8762069,271.488 34.155931,270.88 C34.1882069,271.210667 34.2043448,271.514667 34.2043448,271.792 C34.2043448,273.285333 33.8493103,274.424 33.1392414,275.208 C32.4291724,275.992 31.4501379,276.384 30.2021379,276.384 C29.2768966,276.384 28.5453103,276.208 28.0073793,275.856 L28.0073793,275.856 L27.5393793,276.784 C28.2064138,277.189333 29.0993793,277.392 30.2182759,277.392 Z M30.879931,271.824 C30.0084828,271.824 29.3172414,271.605333 28.8062069,271.168 C28.2951724,270.730667 28.0396552,270.144 28.0396552,269.408 C28.0396552,268.672 28.2951724,268.082667 28.8062069,267.64 C29.3172414,267.197333 29.9815862,266.976 30.7992414,266.976 C31.4232414,266.976 31.9611724,267.088 32.4130345,267.312 C32.8648966,267.536 33.2064828,267.829333 33.4377931,268.192 C33.6691034,268.554667 33.7847586,268.949333 33.7847586,269.376 C33.7847586,269.834667 33.6610345,270.250667 33.4135862,270.624 C33.1661379,270.997333 32.8245517,271.290667 32.3888276,271.504 C31.9531034,271.717333 31.4501379,271.824 30.879931,271.824 Z\",\"id\":\"2019\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M210.357931,101.2 L210.357931,98.848 L212.197655,98.848 L212.197655,96.736 L210.357931,96.736 L210.357931,94.64 L207.888828,94.64 L207.888828,96.736 L204.854897,96.736 L209.793103,90 L207.049655,90 L201.724138,97.104 L201.724138,98.848 L207.808138,98.848 L207.808138,101.2 L210.357931,101.2 Z M215.181155,96.692 C215.906017,96.692 216.494379,96.447 216.946241,95.957 C217.398103,95.467 217.624034,94.8113333 217.624034,93.99 C217.624034,93.1686667 217.398103,92.513 216.946241,92.023 C216.494379,91.533 215.906017,91.288 215.181155,91.288 C214.456293,91.288 213.865578,91.533 213.409009,92.023 C212.95244,92.513 212.724155,93.1686667 212.724155,93.99 C212.724155,94.8113333 212.95244,95.467 213.409009,95.957 C213.865578,96.447 214.456293,96.692 215.181155,96.692 Z M216.000155,101.2 L222.749845,91.4 L221.069483,91.4 L214.319793,101.2 L216.000155,101.2 Z M215.181155,95.544 C214.8705,95.544 214.621034,95.411 214.432759,95.145 C214.244483,94.879 214.150345,94.494 214.150345,93.99 C214.150345,93.486 214.244483,93.101 214.432759,92.835 C214.621034,92.569 214.8705,92.436 215.181155,92.436 C215.501224,92.436 215.753043,92.5666667 215.936612,92.828 C216.120181,93.0893333 216.211966,93.4766667 216.211966,93.99 C216.211966,94.5033333 216.120181,94.8906667 215.936612,95.152 C215.753043,95.4133333 215.501224,95.544 215.181155,95.544 Z M221.888483,101.312 C222.613345,101.312 223.20406,101.067 223.660629,100.577 C224.117198,100.087 224.345483,99.4313333 224.345483,98.61 C224.345483,97.7886667 224.117198,97.133 223.660629,96.643 C223.20406,96.153 222.613345,95.908 221.888483,95.908 C221.417793,95.908 220.996526,96.0176667 220.624681,96.237 C220.252836,96.4563333 219.963362,96.7713333 219.756259,97.182 C219.549155,97.5926667 219.445603,98.0686667 219.445603,98.61 C219.445603,99.1513333 219.549155,99.6273333 219.756259,100.038 C219.963362,100.448667 220.252836,100.763667 220.624681,100.983 C220.996526,101.202333 221.417793,101.312 221.888483,101.312 Z M221.888483,100.164 C221.577828,100.164 221.328362,100.033333 221.140086,99.772 C220.95181,99.5106667 220.857672,99.1233333 220.857672,98.61 C220.857672,98.0966667 220.95181,97.7093333 221.140086,97.448 C221.328362,97.1866667 221.577828,97.056 221.888483,97.056 C222.208552,97.056 222.460371,97.189 222.64394,97.455 C222.827509,97.721 222.919293,98.106 222.919293,98.61 C222.919293,99.114 222.827509,99.499 222.64394,99.765 C222.460371,100.031 222.208552,100.164 221.888483,100.164 Z\",\"id\":\"4%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M210.357931,181.2 L210.357931,178.848 L212.197655,178.848 L212.197655,176.736 L210.357931,176.736 L210.357931,174.64 L207.888828,174.64 L207.888828,176.736 L204.854897,176.736 L209.793103,170 L207.049655,170 L201.724138,177.104 L201.724138,178.848 L207.808138,178.848 L207.808138,181.2 L210.357931,181.2 Z M215.181155,176.692 C215.906017,176.692 216.494379,176.447 216.946241,175.957 C217.398103,175.467 217.624034,174.811333 217.624034,173.99 C217.624034,173.168667 217.398103,172.513 216.946241,172.023 C216.494379,171.533 215.906017,171.288 215.181155,171.288 C214.456293,171.288 213.865578,171.533 213.409009,172.023 C212.95244,172.513 212.724155,173.168667 212.724155,173.99 C212.724155,174.811333 212.95244,175.467 213.409009,175.957 C213.865578,176.447 214.456293,176.692 215.181155,176.692 Z M216.000155,181.2 L222.749845,171.4 L221.069483,171.4 L214.319793,181.2 L216.000155,181.2 Z M215.181155,175.544 C214.8705,175.544 214.621034,175.411 214.432759,175.145 C214.244483,174.879 214.150345,174.494 214.150345,173.99 C214.150345,173.486 214.244483,173.101 214.432759,172.835 C214.621034,172.569 214.8705,172.436 215.181155,172.436 C215.501224,172.436 215.753043,172.566667 215.936612,172.828 C216.120181,173.089333 216.211966,173.476667 216.211966,173.99 C216.211966,174.503333 216.120181,174.890667 215.936612,175.152 C215.753043,175.413333 215.501224,175.544 215.181155,175.544 Z M221.888483,181.312 C222.613345,181.312 223.20406,181.067 223.660629,180.577 C224.117198,180.087 224.345483,179.431333 224.345483,178.61 C224.345483,177.788667 224.117198,177.133 223.660629,176.643 C223.20406,176.153 222.613345,175.908 221.888483,175.908 C221.417793,175.908 220.996526,176.017667 220.624681,176.237 C220.252836,176.456333 219.963362,176.771333 219.756259,177.182 C219.549155,177.592667 219.445603,178.068667 219.445603,178.61 C219.445603,179.151333 219.549155,179.627333 219.756259,180.038 C219.963362,180.448667 220.252836,180.763667 220.624681,180.983 C220.996526,181.202333 221.417793,181.312 221.888483,181.312 Z M221.888483,180.164 C221.577828,180.164 221.328362,180.033333 221.140086,179.772 C220.95181,179.510667 220.857672,179.123333 220.857672,178.61 C220.857672,178.096667 220.95181,177.709333 221.140086,177.448 C221.328362,177.186667 221.577828,177.056 221.888483,177.056 C222.208552,177.056 222.460371,177.189 222.64394,177.455 C222.827509,177.721 222.919293,178.106 222.919293,178.61 C222.919293,179.114 222.827509,179.499 222.64394,179.765 C222.460371,180.031 222.208552,180.164 221.888483,180.164 Z\",\"id\":\"4%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M205.024345,261.392 C206.057172,261.392 206.925931,261.224 207.630621,260.888 C208.33531,260.552 208.859793,260.104 209.204069,259.544 C209.548345,258.984 209.720483,258.362667 209.720483,257.68 C209.720483,256.624 209.341241,255.781333 208.582759,255.152 C207.824276,254.522667 206.648897,254.208 205.056621,254.208 L205.056621,254.208 L204.136759,254.208 L204.314276,252.08 L209.026552,252.08 L209.026552,250 L202.135655,250 L201.55469,256.304 L204.443379,256.304 C205.411655,256.304 206.092138,256.426667 206.484828,256.672 C206.877517,256.917333 207.073862,257.28 207.073862,257.76 C207.073862,258.218667 206.885586,258.576 206.509034,258.832 C206.132483,259.088 205.616069,259.216 204.959793,259.216 C204.368069,259.216 203.792483,259.128 203.233034,258.952 C202.673586,258.776 202.17869,258.528 201.748345,258.208 L201.748345,258.208 L200.715517,260.192 C201.253448,260.576 201.907034,260.872 202.676276,261.08 C203.445517,261.288 204.228207,261.392 205.024345,261.392 Z M212.994466,256.692 C213.719328,256.692 214.30769,256.447 214.759552,255.957 C215.211414,255.467 215.437345,254.811333 215.437345,253.99 C215.437345,253.168667 215.211414,252.513 214.759552,252.023 C214.30769,251.533 213.719328,251.288 212.994466,251.288 C212.269603,251.288 211.678888,251.533 211.222319,252.023 C210.76575,252.513 210.537466,253.168667 210.537466,253.99 C210.537466,254.811333 210.76575,255.467 211.222319,255.957 C211.678888,256.447 212.269603,256.692 212.994466,256.692 Z M213.813466,261.2 L220.563155,251.4 L218.882793,251.4 L212.133103,261.2 L213.813466,261.2 Z M212.994466,255.544 C212.68381,255.544 212.434345,255.411 212.246069,255.145 C212.057793,254.879 211.963655,254.494 211.963655,253.99 C211.963655,253.486 212.057793,253.101 212.246069,252.835 C212.434345,252.569 212.68381,252.436 212.994466,252.436 C213.314534,252.436 213.566353,252.566667 213.749922,252.828 C213.933491,253.089333 214.025276,253.476667 214.025276,253.99 C214.025276,254.503333 213.933491,254.890667 213.749922,255.152 C213.566353,255.413333 213.314534,255.544 212.994466,255.544 Z M219.701793,261.312 C220.426655,261.312 221.017371,261.067 221.47394,260.577 C221.930509,260.087 222.158793,259.431333 222.158793,258.61 C222.158793,257.788667 221.930509,257.133 221.47394,256.643 C221.017371,256.153 220.426655,255.908 219.701793,255.908 C219.231103,255.908 218.809836,256.017667 218.437991,256.237 C218.066147,256.456333 217.776672,256.771333 217.569569,257.182 C217.362466,257.592667 217.258914,258.068667 217.258914,258.61 C217.258914,259.151333 217.362466,259.627333 217.569569,260.038 C217.776672,260.448667 218.066147,260.763667 218.437991,260.983 C218.809836,261.202333 219.231103,261.312 219.701793,261.312 Z M219.701793,260.164 C219.391138,260.164 219.141672,260.033333 218.953397,259.772 C218.765121,259.510667 218.670983,259.123333 218.670983,258.61 C218.670983,258.096667 218.765121,257.709333 218.953397,257.448 C219.141672,257.186667 219.391138,257.056 219.701793,257.056 C220.021862,257.056 220.273681,257.189 220.45725,257.455 C220.640819,257.721 220.732603,258.106 220.732603,258.61 C220.732603,259.114 220.640819,259.499 220.45725,259.765 C220.273681,260.031 220.021862,260.164 219.701793,260.164 Z\",\"id\":\"5%\",\"fill\":\"#FFBA08\",\"fillRule\":\"nonzero\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M205.589172,133.2 L205.589172,122 L200.715517,122 L200.715517,124.08 L202.974828,124.08 L202.974828,133.2 L205.589172,133.2 Z M211.915241,133.2 L211.915241,122 L207.041586,122 L207.041586,124.08 L209.300897,124.08 L209.300897,133.2 L211.915241,133.2 Z M216.092948,128.692 C216.81781,128.692 217.406172,128.447 217.858034,127.957 C218.309897,127.467 218.535828,126.811333 218.535828,125.99 C218.535828,125.168667 218.309897,124.513 217.858034,124.023 C217.406172,123.533 216.81781,123.288 216.092948,123.288 C215.368086,123.288 214.777371,123.533 214.320802,124.023 C213.864233,124.513 213.635948,125.168667 213.635948,125.99 C213.635948,126.811333 213.864233,127.467 214.320802,127.957 C214.777371,128.447 215.368086,128.692 216.092948,128.692 Z M216.911948,133.2 L223.661638,123.4 L221.981276,123.4 L215.231586,133.2 L216.911948,133.2 Z M216.092948,127.544 C215.782293,127.544 215.532828,127.411 215.344552,127.145 C215.156276,126.879 215.062138,126.494 215.062138,125.99 C215.062138,125.486 215.156276,125.101 215.344552,124.835 C215.532828,124.569 215.782293,124.436 216.092948,124.436 C216.413017,124.436 216.664836,124.566667 216.848405,124.828 C217.031974,125.089333 217.123759,125.476667 217.123759,125.99 C217.123759,126.503333 217.031974,126.890667 216.848405,127.152 C216.664836,127.413333 216.413017,127.544 216.092948,127.544 Z M222.800276,133.312 C223.525138,133.312 224.115853,133.067 224.572422,132.577 C225.028991,132.087 225.257276,131.431333 225.257276,130.61 C225.257276,129.788667 225.028991,129.133 224.572422,128.643 C224.115853,128.153 223.525138,127.908 222.800276,127.908 C222.329586,127.908 221.908319,128.017667 221.536474,128.237 C221.164629,128.456333 220.875155,128.771333 220.668052,129.182 C220.460948,129.592667 220.357397,130.068667 220.357397,130.61 C220.357397,131.151333 220.460948,131.627333 220.668052,132.038 C220.875155,132.448667 221.164629,132.763667 221.536474,132.983 C221.908319,133.202333 222.329586,133.312 222.800276,133.312 Z M222.800276,132.164 C222.489621,132.164 222.240155,132.033333 222.051879,131.772 C221.863603,131.510667 221.769466,131.123333 221.769466,130.61 C221.769466,130.096667 221.863603,129.709333 222.051879,129.448 C222.240155,129.186667 222.489621,129.056 222.800276,129.056 C223.120345,129.056 223.372164,129.189 223.555733,129.455 C223.739302,129.721 223.831086,130.106 223.831086,130.61 C223.831086,131.114 223.739302,131.499 223.555733,131.765 C223.372164,132.031 223.120345,132.164 222.800276,132.164 Z\",\"id\":\"11%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M205.589172,213.392 L205.589172,202.192 L200.715517,202.192 L200.715517,204.272 L202.974828,204.272 L202.974828,213.392 L205.589172,213.392 Z M215.998138,213.392 L215.998138,211.28 L211.140621,211.28 L213.738828,208.848 C214.481172,208.165333 214.981448,207.557333 215.239655,207.024 C215.497862,206.490667 215.626966,205.92 215.626966,205.312 C215.626966,204.64 215.452138,204.056 215.102483,203.56 C214.752828,203.064 214.26331,202.68 213.633931,202.408 C213.004552,202.136 212.270276,202 211.431103,202 C210.430552,202 209.542966,202.184 208.768345,202.552 C207.993724,202.92 207.385862,203.429333 206.944759,204.08 L206.944759,204.08 L208.849034,205.296 C209.118,204.922667 209.451517,204.642667 209.849586,204.456 C210.247655,204.269333 210.694138,204.176 211.189034,204.176 C211.780759,204.176 212.229931,204.296 212.536552,204.536 C212.843172,204.776 212.996483,205.12 212.996483,205.568 C212.996483,205.877333 212.915793,206.189333 212.754414,206.504 C212.593034,206.818667 212.281034,207.194667 211.818414,207.632 L211.818414,207.632 L207.461172,211.712 L207.461172,213.392 L215.998138,213.392 Z M219.288259,208.884 C220.013121,208.884 220.601483,208.639 221.053345,208.149 C221.505207,207.659 221.731138,207.003333 221.731138,206.182 C221.731138,205.360667 221.505207,204.705 221.053345,204.215 C220.601483,203.725 220.013121,203.48 219.288259,203.48 C218.563397,203.48 217.972681,203.725 217.516112,204.215 C217.059543,204.705 216.831259,205.360667 216.831259,206.182 C216.831259,207.003333 217.059543,207.659 217.516112,208.149 C217.972681,208.639 218.563397,208.884 219.288259,208.884 Z M220.107259,213.392 L226.856948,203.592 L225.176586,203.592 L218.426897,213.392 L220.107259,213.392 Z M219.288259,207.736 C218.977603,207.736 218.728138,207.603 218.539862,207.337 C218.351586,207.071 218.257448,206.686 218.257448,206.182 C218.257448,205.678 218.351586,205.293 218.539862,205.027 C218.728138,204.761 218.977603,204.628 219.288259,204.628 C219.608328,204.628 219.860147,204.758667 220.043716,205.02 C220.227284,205.281333 220.319069,205.668667 220.319069,206.182 C220.319069,206.695333 220.227284,207.082667 220.043716,207.344 C219.860147,207.605333 219.608328,207.736 219.288259,207.736 Z M225.995586,213.504 C226.720448,213.504 227.311164,213.259 227.767733,212.769 C228.224302,212.279 228.452586,211.623333 228.452586,210.802 C228.452586,209.980667 228.224302,209.325 227.767733,208.835 C227.311164,208.345 226.720448,208.1 225.995586,208.1 C225.524897,208.1 225.103629,208.209667 224.731784,208.429 C224.35994,208.648333 224.070466,208.963333 223.863362,209.374 C223.656259,209.784667 223.552707,210.260667 223.552707,210.802 C223.552707,211.343333 223.656259,211.819333 223.863362,212.23 C224.070466,212.640667 224.35994,212.955667 224.731784,213.175 C225.103629,213.394333 225.524897,213.504 225.995586,213.504 Z M225.995586,212.356 C225.684931,212.356 225.435466,212.225333 225.24719,211.964 C225.058914,211.702667 224.964776,211.315333 224.964776,210.802 C224.964776,210.288667 225.058914,209.901333 225.24719,209.64 C225.435466,209.378667 225.684931,209.248 225.995586,209.248 C226.315655,209.248 226.567474,209.381 226.751043,209.647 C226.934612,209.913 227.026397,210.298 227.026397,210.802 C227.026397,211.306 226.934612,211.691 226.751043,211.957 C226.567474,212.223 226.315655,212.356 225.995586,212.356 Z\",\"id\":\"12%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M205.589172,293.2 L205.589172,282 L200.715517,282 L200.715517,284.08 L202.974828,284.08 L202.974828,293.2 L205.589172,293.2 Z M211.22131,293.392 C212.243379,293.392 213.106759,293.226667 213.811448,292.896 C214.516138,292.565333 215.040621,292.125333 215.384897,291.576 C215.729172,291.026667 215.90131,290.426667 215.90131,289.776 C215.90131,288.933333 215.637724,288.226667 215.110552,287.656 C214.583379,287.085333 213.824897,286.72 212.835103,286.56 L212.835103,286.56 L215.384897,283.68 L215.384897,282 L207.47731,282 L207.47731,284.08 L212.286414,284.08 L209.962552,286.688 L209.962552,288.4 L211.156759,288.4 C212.566138,288.4 213.270828,288.858667 213.270828,289.776 C213.270828,290.234667 213.082552,290.589333 212.706,290.84 C212.329448,291.090667 211.813034,291.216 211.156759,291.216 C210.565034,291.216 209.986759,291.128 209.421931,290.952 C208.857103,290.776 208.359517,290.528 207.929172,290.208 L207.929172,290.208 L206.912483,292.192 C207.450414,292.576 208.104,292.872 208.873241,293.08 C209.642483,293.288 210.425172,293.392 211.22131,293.392 Z M219.320534,288.692 C220.045397,288.692 220.633759,288.447 221.085621,287.957 C221.537483,287.467 221.763414,286.811333 221.763414,285.99 C221.763414,285.168667 221.537483,284.513 221.085621,284.023 C220.633759,283.533 220.045397,283.288 219.320534,283.288 C218.595672,283.288 218.004957,283.533 217.548388,284.023 C217.091819,284.513 216.863534,285.168667 216.863534,285.99 C216.863534,286.811333 217.091819,287.467 217.548388,287.957 C218.004957,288.447 218.595672,288.692 219.320534,288.692 Z M220.139534,293.2 L226.889224,283.4 L225.208862,283.4 L218.459172,293.2 L220.139534,293.2 Z M219.320534,287.544 C219.009879,287.544 218.760414,287.411 218.572138,287.145 C218.383862,286.879 218.289724,286.494 218.289724,285.99 C218.289724,285.486 218.383862,285.101 218.572138,284.835 C218.760414,284.569 219.009879,284.436 219.320534,284.436 C219.640603,284.436 219.892422,284.566667 220.075991,284.828 C220.25956,285.089333 220.351345,285.476667 220.351345,285.99 C220.351345,286.503333 220.25956,286.890667 220.075991,287.152 C219.892422,287.413333 219.640603,287.544 219.320534,287.544 Z M226.027862,293.312 C226.752724,293.312 227.34344,293.067 227.800009,292.577 C228.256578,292.087 228.484862,291.431333 228.484862,290.61 C228.484862,289.788667 228.256578,289.133 227.800009,288.643 C227.34344,288.153 226.752724,287.908 226.027862,287.908 C225.557172,287.908 225.135905,288.017667 224.76406,288.237 C224.392216,288.456333 224.102741,288.771333 223.895638,289.182 C223.688534,289.592667 223.584983,290.068667 223.584983,290.61 C223.584983,291.151333 223.688534,291.627333 223.895638,292.038 C224.102741,292.448667 224.392216,292.763667 224.76406,292.983 C225.135905,293.202333 225.557172,293.312 226.027862,293.312 Z M226.027862,292.164 C225.717207,292.164 225.467741,292.033333 225.279466,291.772 C225.09119,291.510667 224.997052,291.123333 224.997052,290.61 C224.997052,290.096667 225.09119,289.709333 225.279466,289.448 C225.467741,289.186667 225.717207,289.056 226.027862,289.056 C226.347931,289.056 226.59975,289.189 226.783319,289.455 C226.966888,289.721 227.058672,290.106 227.058672,290.61 C227.058672,291.114 226.966888,291.499 226.783319,291.765 C226.59975,292.031 226.347931,292.164 226.027862,292.164 Z\",\"id\":\"13%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":10}),React.createElement(\"g\",{\"id\":\"Group-25-Copy-4\",\"transform\":\"translate(278.856592, 15.968331)\",\"key\":11},[React.createElement(\"path\",{\"d\":\"M22.6798448,17.868 L22.6798448,15.32 L25.3062931,15.32 L25.3062931,14.494 L22.6798448,14.494 L22.6798448,11.932 L21.7902414,11.932 L21.7902414,14.494 L19.1637931,14.494 L19.1637931,15.32 L21.7902414,15.32 L21.7902414,17.868 L22.6798448,17.868 Z M30.1496897,19.884 C30.9310345,19.884 31.59,19.7556667 32.1265862,19.499 C32.6631724,19.2423333 33.0656121,18.89 33.3339052,18.442 C33.6021983,17.994 33.7363448,17.4853333 33.7363448,16.916 C33.7363448,16.0013333 33.4092155,15.2896667 32.7549569,14.781 C32.1006983,14.2723333 31.0581207,14.018 29.6272241,14.018 L29.6272241,14.018 L28.3563621,14.018 L28.6952586,10.896 L33.2138793,10.896 L33.2138793,10 L27.8056552,10 L27.2973103,14.914 L29.4012931,14.914 C30.5968448,14.914 31.4464397,15.0866667 31.9500776,15.432 C32.4537155,15.7773333 32.7055345,16.286 32.7055345,16.958 C32.7055345,17.5646667 32.4819569,18.05 32.0348017,18.414 C31.5876466,18.778 30.954569,18.96 30.135569,18.96 C29.5142586,18.96 28.9353103,18.855 28.3987241,18.645 C27.8621379,18.435 27.4291034,18.162 27.0996207,17.826 L27.0996207,17.826 L26.6053966,18.624 C26.9913621,19.0066667 27.5020603,19.3123333 28.1374914,19.541 C28.7729224,19.7696667 29.4436552,19.884 30.1496897,19.884 Z M36.687569,22.516 L36.687569,18.414 C36.9982241,18.89 37.3959569,19.2516667 37.8807672,19.499 C38.3655776,19.7463333 38.9092241,19.87 39.5117069,19.87 C40.2177414,19.87 40.850819,19.7136667 41.4109397,19.401 C41.9710603,19.0883333 42.4111552,18.6473333 42.7312241,18.078 C43.0512931,17.5086667 43.2113276,16.8553333 43.2113276,16.118 C43.2113276,15.39 43.0512931,14.7413333 42.7312241,14.172 C42.4111552,13.6026667 41.9687069,13.1616667 41.4038793,12.849 C40.8390517,12.5363333 40.2083276,12.38 39.5117069,12.38 C38.8903966,12.38 38.3326293,12.5106667 37.8384052,12.772 C37.344181,13.0333333 36.9464483,13.4066667 36.6452069,13.892 L36.6452069,13.892 L36.6452069,12.436 L35.685,12.436 L35.685,22.516 L36.687569,22.516 Z M39.4411034,18.988 C38.913931,18.988 38.4408879,18.869 38.0219741,18.631 C37.6030603,18.393 37.2735776,18.0546667 37.0335259,17.616 C36.7934741,17.1773333 36.6734483,16.678 36.6734483,16.118 C36.6734483,15.558 36.7934741,15.061 37.0335259,14.627 C37.2735776,14.193 37.6030603,13.8546667 38.0219741,13.612 C38.4408879,13.3693333 38.913931,13.248 39.4411034,13.248 C39.9588621,13.248 40.4295517,13.3693333 40.8531724,13.612 C41.2767931,13.8546667 41.6086293,14.193 41.848681,14.627 C42.0887328,15.061 42.2087586,15.558 42.2087586,16.118 C42.2087586,16.678 42.0887328,17.1773333 41.848681,17.616 C41.6086293,18.0546667 41.2767931,18.393 40.8531724,18.631 C40.4295517,18.869 39.9588621,18.988 39.4411034,18.988 Z M46.2613966,22.516 L46.2613966,18.414 C46.5720517,18.89 46.9697845,19.2516667 47.4545948,19.499 C47.9394052,19.7463333 48.4830517,19.87 49.0855345,19.87 C49.791569,19.87 50.4246466,19.7136667 50.9847672,19.401 C51.5448879,19.0883333 51.9849828,18.6473333 52.3050517,18.078 C52.6251207,17.5086667 52.7851552,16.8553333 52.7851552,16.118 C52.7851552,15.39 52.6251207,14.7413333 52.3050517,14.172 C51.9849828,13.6026667 51.5425345,13.1616667 50.9777069,12.849 C50.4128793,12.5363333 49.7821552,12.38 49.0855345,12.38 C48.4642241,12.38 47.9064569,12.5106667 47.4122328,12.772 C46.9180086,13.0333333 46.5202759,13.4066667 46.2190345,13.892 L46.2190345,13.892 L46.2190345,12.436 L45.2588276,12.436 L45.2588276,22.516 L46.2613966,22.516 Z M49.014931,18.988 C48.4877586,18.988 48.0147155,18.869 47.5958017,18.631 C47.1768879,18.393 46.8474052,18.0546667 46.6073534,17.616 C46.3673017,17.1773333 46.2472759,16.678 46.2472759,16.118 C46.2472759,15.558 46.3673017,15.061 46.6073534,14.627 C46.8474052,14.193 47.1768879,13.8546667 47.5958017,13.612 C48.0147155,13.3693333 48.4877586,13.248 49.014931,13.248 C49.5326897,13.248 50.0033793,13.3693333 50.427,13.612 C50.8506207,13.8546667 51.1824569,14.193 51.4225086,14.627 C51.6625603,15.061 51.7825862,15.558 51.7825862,16.118 C51.7825862,16.678 51.6625603,17.1773333 51.4225086,17.616 C51.1824569,18.0546667 50.8506207,18.393 50.427,18.631 C50.0033793,18.869 49.5326897,18.988 49.014931,18.988 Z\",\"id\":\"+5pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"71.1347869\",\"height\":\"31.9366629\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-5\",\"transform\":\"translate(278.856592, 97.140683)\",\"key\":12},[React.createElement(\"path\",{\"d\":\"M21.6712241,17.868 L21.6712241,15.32 L24.2976724,15.32 L24.2976724,14.494 L21.6712241,14.494 L21.6712241,11.932 L20.7816207,11.932 L20.7816207,14.494 L18.1551724,14.494 L18.1551724,15.32 L20.7816207,15.32 L20.7816207,17.868 L21.6712241,17.868 Z M28.8586552,19.8 L32.9960172,10.714 L32.9960172,10 L25.7379828,10 L25.7379828,12.73 L26.7405517,12.73 L26.7405517,10.896 L31.824,10.896 L27.7572414,19.8 L28.8586552,19.8 Z M36.0037241,22.516 L36.0037241,18.414 C36.3143793,18.89 36.7121121,19.2516667 37.1969224,19.499 C37.6817328,19.7463333 38.2253793,19.87 38.8278621,19.87 C39.5338966,19.87 40.1669741,19.7136667 40.7270948,19.401 C41.2872155,19.0883333 41.7273103,18.6473333 42.0473793,18.078 C42.3674483,17.5086667 42.5274828,16.8553333 42.5274828,16.118 C42.5274828,15.39 42.3674483,14.7413333 42.0473793,14.172 C41.7273103,13.6026667 41.2848621,13.1616667 40.7200345,12.849 C40.1552069,12.5363333 39.5244828,12.38 38.8278621,12.38 C38.2065517,12.38 37.6487845,12.5106667 37.1545603,12.772 C36.6603362,13.0333333 36.2626034,13.4066667 35.9613621,13.892 L35.9613621,13.892 L35.9613621,12.436 L35.0011552,12.436 L35.0011552,22.516 L36.0037241,22.516 Z M38.7572586,18.988 C38.2300862,18.988 37.7570431,18.869 37.3381293,18.631 C36.9192155,18.393 36.5897328,18.0546667 36.349681,17.616 C36.1096293,17.1773333 35.9896034,16.678 35.9896034,16.118 C35.9896034,15.558 36.1096293,15.061 36.349681,14.627 C36.5897328,14.193 36.9192155,13.8546667 37.3381293,13.612 C37.7570431,13.3693333 38.2300862,13.248 38.7572586,13.248 C39.2750172,13.248 39.7457069,13.3693333 40.1693276,13.612 C40.5929483,13.8546667 40.9247845,14.193 41.1648362,14.627 C41.4048879,15.061 41.5249138,15.558 41.5249138,16.118 C41.5249138,16.678 41.4048879,17.1773333 41.1648362,17.616 C40.9247845,18.0546667 40.5929483,18.393 40.1693276,18.631 C39.7457069,18.869 39.2750172,18.988 38.7572586,18.988 Z M45.5775517,22.516 L45.5775517,18.414 C45.8882069,18.89 46.2859397,19.2516667 46.77075,19.499 C47.2555603,19.7463333 47.7992069,19.87 48.4016897,19.87 C49.1077241,19.87 49.7408017,19.7136667 50.3009224,19.401 C50.8610431,19.0883333 51.3011379,18.6473333 51.6212069,18.078 C51.9412759,17.5086667 52.1013103,16.8553333 52.1013103,16.118 C52.1013103,15.39 51.9412759,14.7413333 51.6212069,14.172 C51.3011379,13.6026667 50.8586897,13.1616667 50.2938621,12.849 C49.7290345,12.5363333 49.0983103,12.38 48.4016897,12.38 C47.7803793,12.38 47.2226121,12.5106667 46.7283879,12.772 C46.2341638,13.0333333 45.836431,13.4066667 45.5351897,13.892 L45.5351897,13.892 L45.5351897,12.436 L44.5749828,12.436 L44.5749828,22.516 L45.5775517,22.516 Z M48.3310862,18.988 C47.8039138,18.988 47.3308707,18.869 46.9119569,18.631 C46.4930431,18.393 46.1635603,18.0546667 45.9235086,17.616 C45.6834569,17.1773333 45.563431,16.678 45.563431,16.118 C45.563431,15.558 45.6834569,15.061 45.9235086,14.627 C46.1635603,14.193 46.4930431,13.8546667 46.9119569,13.612 C47.3308707,13.3693333 47.8039138,13.248 48.3310862,13.248 C48.8488448,13.248 49.3195345,13.3693333 49.7431552,13.612 C50.1667759,13.8546667 50.4986121,14.193 50.7386638,14.627 C50.9787155,15.061 51.0987414,15.558 51.0987414,16.118 C51.0987414,16.678 50.9787155,17.1773333 50.7386638,17.616 C50.4986121,18.0546667 50.1667759,18.393 49.7431552,18.631 C49.3195345,18.869 48.8488448,18.988 48.3310862,18.988 Z\",\"id\":\"+7pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"71.1347869\",\"height\":\"31.9366629\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-6\",\"transform\":\"translate(278.856592, 175.651646)\",\"key\":13},[React.createElement(\"path\",{\"d\":\"M19.6539828,17.952 L19.6539828,15.404 L22.280431,15.404 L22.280431,14.578 L19.6539828,14.578 L19.6539828,12.016 L18.7643793,12.016 L18.7643793,14.578 L16.137931,14.578 L16.137931,15.404 L18.7643793,15.404 L18.7643793,17.952 L19.6539828,17.952 Z M27.7592586,19.968 C28.5406034,19.968 29.22075,19.8536667 29.7996983,19.625 C30.3786466,19.3963333 30.8234483,19.0696667 31.1341034,18.645 C31.4447586,18.2203333 31.6000862,17.7233333 31.6000862,17.154 C31.6000862,16.5753333 31.4329914,16.0806667 31.0988017,15.67 C30.7646121,15.2593333 30.2868621,14.9513333 29.6655517,14.746 C30.1738966,14.55 30.564569,14.2676667 30.837569,13.899 C31.110569,13.5303333 31.247069,13.094 31.247069,12.59 C31.247069,12.0673333 31.1011552,11.61 30.8093276,11.218 C30.5175,10.826 30.1103534,10.525 29.5878879,10.315 C29.0654224,10.105 28.4558793,10 27.7592586,10 C26.7049138,10 25.8647328,10.2333333 25.2387155,10.7 C24.6126983,11.1666667 24.2996897,11.7966667 24.2996897,12.59 C24.2996897,13.094 24.4314828,13.5303333 24.695069,13.899 C24.9586552,14.2676667 25.3446207,14.55 25.8529655,14.746 C25.2316552,14.9513333 24.7586121,15.257 24.4338362,15.663 C24.1090603,16.069 23.9466724,16.566 23.9466724,17.154 C23.9466724,18.022 24.285569,18.708 24.9633621,19.212 C25.6411552,19.716 26.5731207,19.968 27.7592586,19.968 Z M27.7592586,14.382 C26.9967414,14.382 26.3989655,14.2233333 25.965931,13.906 C25.5328966,13.5886667 25.3163793,13.1593333 25.3163793,12.618 C25.3163793,12.0766667 25.53525,11.6473333 25.9729914,11.33 C26.4107328,11.0126667 27.0061552,10.854 27.7592586,10.854 C28.5029483,10.854 29.0983707,11.0126667 29.5455259,11.33 C29.992681,11.6473333 30.2162586,12.0813333 30.2162586,12.632 C30.2162586,13.164 29.9973879,13.5886667 29.5596466,13.906 C29.1219052,14.2233333 28.5217759,14.382 27.7592586,14.382 Z M27.7592586,19.114 C26.8837759,19.114 26.2012759,18.939 25.7117586,18.589 C25.2222414,18.239 24.9774828,17.756 24.9774828,17.14 C24.9774828,16.5333333 25.2245948,16.055 25.718819,15.705 C26.2130431,15.355 26.8931897,15.18 27.7592586,15.18 C28.6347414,15.18 29.3195948,15.355 29.813819,15.705 C30.3080431,16.055 30.5551552,16.5333333 30.5551552,17.14 C30.5551552,17.7466667 30.3080431,18.2273333 29.813819,18.582 C29.3195948,18.9366667 28.6347414,19.114 27.7592586,19.114 Z M34.6783966,22.6 L34.6783966,18.498 C34.9890517,18.974 35.3867845,19.3356667 35.8715948,19.583 C36.3564052,19.8303333 36.9000517,19.954 37.5025345,19.954 C38.208569,19.954 38.8416466,19.7976667 39.4017672,19.485 C39.9618879,19.1723333 40.4019828,18.7313333 40.7220517,18.162 C41.0421207,17.5926667 41.2021552,16.9393333 41.2021552,16.202 C41.2021552,15.474 41.0421207,14.8253333 40.7220517,14.256 C40.4019828,13.6866667 39.9595345,13.2456667 39.3947069,12.933 C38.8298793,12.6203333 38.1991552,12.464 37.5025345,12.464 C36.8812241,12.464 36.3234569,12.5946667 35.8292328,12.856 C35.3350086,13.1173333 34.9372759,13.4906667 34.6360345,13.976 L34.6360345,13.976 L34.6360345,12.52 L33.6758276,12.52 L33.6758276,22.6 L34.6783966,22.6 Z M37.431931,19.072 C36.9047586,19.072 36.4317155,18.953 36.0128017,18.715 C35.5938879,18.477 35.2644052,18.1386667 35.0243534,17.7 C34.7843017,17.2613333 34.6642759,16.762 34.6642759,16.202 C34.6642759,15.642 34.7843017,15.145 35.0243534,14.711 C35.2644052,14.277 35.5938879,13.9386667 36.0128017,13.696 C36.4317155,13.4533333 36.9047586,13.332 37.431931,13.332 C37.9496897,13.332 38.4203793,13.4533333 38.844,13.696 C39.2676207,13.9386667 39.5994569,14.277 39.8395086,14.711 C40.0795603,15.145 40.1995862,15.642 40.1995862,16.202 C40.1995862,16.762 40.0795603,17.2613333 39.8395086,17.7 C39.5994569,18.1386667 39.2676207,18.477 38.844,18.715 C38.4203793,18.953 37.9496897,19.072 37.431931,19.072 Z M44.2522241,22.6 L44.2522241,18.498 C44.5628793,18.974 44.9606121,19.3356667 45.4454224,19.583 C45.9302328,19.8303333 46.4738793,19.954 47.0763621,19.954 C47.7823966,19.954 48.4154741,19.7976667 48.9755948,19.485 C49.5357155,19.1723333 49.9758103,18.7313333 50.2958793,18.162 C50.6159483,17.5926667 50.7759828,16.9393333 50.7759828,16.202 C50.7759828,15.474 50.6159483,14.8253333 50.2958793,14.256 C49.9758103,13.6866667 49.5333621,13.2456667 48.9685345,12.933 C48.4037069,12.6203333 47.7729828,12.464 47.0763621,12.464 C46.4550517,12.464 45.8972845,12.5946667 45.4030603,12.856 C44.9088362,13.1173333 44.5111034,13.4906667 44.2098621,13.976 L44.2098621,13.976 L44.2098621,12.52 L43.2496552,12.52 L43.2496552,22.6 L44.2522241,22.6 Z M47.0057586,19.072 C46.4785862,19.072 46.0055431,18.953 45.5866293,18.715 C45.1677155,18.477 44.8382328,18.1386667 44.598181,17.7 C44.3581293,17.2613333 44.2381034,16.762 44.2381034,16.202 C44.2381034,15.642 44.3581293,15.145 44.598181,14.711 C44.8382328,14.277 45.1677155,13.9386667 45.5866293,13.696 C46.0055431,13.4533333 46.4785862,13.332 47.0057586,13.332 C47.5235172,13.332 47.9942069,13.4533333 48.4178276,13.696 C48.8414483,13.9386667 49.1732845,14.277 49.4133362,14.711 C49.6533879,15.145 49.7734138,15.642 49.7734138,16.202 C49.7734138,16.762 49.6533879,17.2613333 49.4133362,17.7 C49.1732845,18.1386667 48.8414483,18.477 48.4178276,18.715 C47.9942069,18.953 47.5235172,19.072 47.0057586,19.072 Z\",\"id\":\"+8pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"67.1082895\",\"height\":\"31.9366629\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-7\",\"transform\":\"translate(278.856592, 255.493303)\",\"key\":14},[React.createElement(\"path\",{\"d\":\"M19.6539828,17.952 L19.6539828,15.404 L22.280431,15.404 L22.280431,14.578 L19.6539828,14.578 L19.6539828,12.016 L18.7643793,12.016 L18.7643793,14.578 L16.137931,14.578 L16.137931,15.404 L18.7643793,15.404 L18.7643793,17.952 L19.6539828,17.952 Z M27.7592586,19.968 C28.5406034,19.968 29.22075,19.8536667 29.7996983,19.625 C30.3786466,19.3963333 30.8234483,19.0696667 31.1341034,18.645 C31.4447586,18.2203333 31.6000862,17.7233333 31.6000862,17.154 C31.6000862,16.5753333 31.4329914,16.0806667 31.0988017,15.67 C30.7646121,15.2593333 30.2868621,14.9513333 29.6655517,14.746 C30.1738966,14.55 30.564569,14.2676667 30.837569,13.899 C31.110569,13.5303333 31.247069,13.094 31.247069,12.59 C31.247069,12.0673333 31.1011552,11.61 30.8093276,11.218 C30.5175,10.826 30.1103534,10.525 29.5878879,10.315 C29.0654224,10.105 28.4558793,10 27.7592586,10 C26.7049138,10 25.8647328,10.2333333 25.2387155,10.7 C24.6126983,11.1666667 24.2996897,11.7966667 24.2996897,12.59 C24.2996897,13.094 24.4314828,13.5303333 24.695069,13.899 C24.9586552,14.2676667 25.3446207,14.55 25.8529655,14.746 C25.2316552,14.9513333 24.7586121,15.257 24.4338362,15.663 C24.1090603,16.069 23.9466724,16.566 23.9466724,17.154 C23.9466724,18.022 24.285569,18.708 24.9633621,19.212 C25.6411552,19.716 26.5731207,19.968 27.7592586,19.968 Z M27.7592586,14.382 C26.9967414,14.382 26.3989655,14.2233333 25.965931,13.906 C25.5328966,13.5886667 25.3163793,13.1593333 25.3163793,12.618 C25.3163793,12.0766667 25.53525,11.6473333 25.9729914,11.33 C26.4107328,11.0126667 27.0061552,10.854 27.7592586,10.854 C28.5029483,10.854 29.0983707,11.0126667 29.5455259,11.33 C29.992681,11.6473333 30.2162586,12.0813333 30.2162586,12.632 C30.2162586,13.164 29.9973879,13.5886667 29.5596466,13.906 C29.1219052,14.2233333 28.5217759,14.382 27.7592586,14.382 Z M27.7592586,19.114 C26.8837759,19.114 26.2012759,18.939 25.7117586,18.589 C25.2222414,18.239 24.9774828,17.756 24.9774828,17.14 C24.9774828,16.5333333 25.2245948,16.055 25.718819,15.705 C26.2130431,15.355 26.8931897,15.18 27.7592586,15.18 C28.6347414,15.18 29.3195948,15.355 29.813819,15.705 C30.3080431,16.055 30.5551552,16.5333333 30.5551552,17.14 C30.5551552,17.7466667 30.3080431,18.2273333 29.813819,18.582 C29.3195948,18.9366667 28.6347414,19.114 27.7592586,19.114 Z M34.6783966,22.6 L34.6783966,18.498 C34.9890517,18.974 35.3867845,19.3356667 35.8715948,19.583 C36.3564052,19.8303333 36.9000517,19.954 37.5025345,19.954 C38.208569,19.954 38.8416466,19.7976667 39.4017672,19.485 C39.9618879,19.1723333 40.4019828,18.7313333 40.7220517,18.162 C41.0421207,17.5926667 41.2021552,16.9393333 41.2021552,16.202 C41.2021552,15.474 41.0421207,14.8253333 40.7220517,14.256 C40.4019828,13.6866667 39.9595345,13.2456667 39.3947069,12.933 C38.8298793,12.6203333 38.1991552,12.464 37.5025345,12.464 C36.8812241,12.464 36.3234569,12.5946667 35.8292328,12.856 C35.3350086,13.1173333 34.9372759,13.4906667 34.6360345,13.976 L34.6360345,13.976 L34.6360345,12.52 L33.6758276,12.52 L33.6758276,22.6 L34.6783966,22.6 Z M37.431931,19.072 C36.9047586,19.072 36.4317155,18.953 36.0128017,18.715 C35.5938879,18.477 35.2644052,18.1386667 35.0243534,17.7 C34.7843017,17.2613333 34.6642759,16.762 34.6642759,16.202 C34.6642759,15.642 34.7843017,15.145 35.0243534,14.711 C35.2644052,14.277 35.5938879,13.9386667 36.0128017,13.696 C36.4317155,13.4533333 36.9047586,13.332 37.431931,13.332 C37.9496897,13.332 38.4203793,13.4533333 38.844,13.696 C39.2676207,13.9386667 39.5994569,14.277 39.8395086,14.711 C40.0795603,15.145 40.1995862,15.642 40.1995862,16.202 C40.1995862,16.762 40.0795603,17.2613333 39.8395086,17.7 C39.5994569,18.1386667 39.2676207,18.477 38.844,18.715 C38.4203793,18.953 37.9496897,19.072 37.431931,19.072 Z M44.2522241,22.6 L44.2522241,18.498 C44.5628793,18.974 44.9606121,19.3356667 45.4454224,19.583 C45.9302328,19.8303333 46.4738793,19.954 47.0763621,19.954 C47.7823966,19.954 48.4154741,19.7976667 48.9755948,19.485 C49.5357155,19.1723333 49.9758103,18.7313333 50.2958793,18.162 C50.6159483,17.5926667 50.7759828,16.9393333 50.7759828,16.202 C50.7759828,15.474 50.6159483,14.8253333 50.2958793,14.256 C49.9758103,13.6866667 49.5333621,13.2456667 48.9685345,12.933 C48.4037069,12.6203333 47.7729828,12.464 47.0763621,12.464 C46.4550517,12.464 45.8972845,12.5946667 45.4030603,12.856 C44.9088362,13.1173333 44.5111034,13.4906667 44.2098621,13.976 L44.2098621,13.976 L44.2098621,12.52 L43.2496552,12.52 L43.2496552,22.6 L44.2522241,22.6 Z M47.0057586,19.072 C46.4785862,19.072 46.0055431,18.953 45.5866293,18.715 C45.1677155,18.477 44.8382328,18.1386667 44.598181,17.7 C44.3581293,17.2613333 44.2381034,16.762 44.2381034,16.202 C44.2381034,15.642 44.3581293,15.145 44.598181,14.711 C44.8382328,14.277 45.1677155,13.9386667 45.5866293,13.696 C46.0055431,13.4533333 46.4785862,13.332 47.0057586,13.332 C47.5235172,13.332 47.9942069,13.4533333 48.4178276,13.696 C48.8414483,13.9386667 49.1732845,14.277 49.4133362,14.711 C49.6533879,15.145 49.7734138,15.642 49.7734138,16.202 C49.7734138,16.762 49.6533879,17.2613333 49.4133362,17.7 C49.1732845,18.1386667 48.8414483,18.477 48.4178276,18.715 C47.9942069,18.953 47.5235172,19.072 47.0057586,19.072 Z\",\"id\":\"+8pp\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"67.1082895\",\"height\":\"31.9366629\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"path\",{\"d\":\"M206.581655,53.2 L210.777517,43.68 L210.777517,42 L201.724138,42 L201.724138,45.936 L204.048,45.936 L204.048,44.112 L207.792,44.112 L203.741379,53.2 L206.581655,53.2 Z M214.148328,48.692 C214.87319,48.692 215.461552,48.447 215.913414,47.957 C216.365276,47.467 216.591207,46.8113333 216.591207,45.99 C216.591207,45.1686667 216.365276,44.513 215.913414,44.023 C215.461552,43.533 214.87319,43.288 214.148328,43.288 C213.423466,43.288 212.83275,43.533 212.376181,44.023 C211.919612,44.513 211.691328,45.1686667 211.691328,45.99 C211.691328,46.8113333 211.919612,47.467 212.376181,47.957 C212.83275,48.447 213.423466,48.692 214.148328,48.692 Z M214.967328,53.2 L221.717017,43.4 L220.036655,43.4 L213.286966,53.2 L214.967328,53.2 Z M214.148328,47.544 C213.837672,47.544 213.588207,47.411 213.399931,47.145 C213.211655,46.879 213.117517,46.494 213.117517,45.99 C213.117517,45.486 213.211655,45.101 213.399931,44.835 C213.588207,44.569 213.837672,44.436 214.148328,44.436 C214.468397,44.436 214.720216,44.5666667 214.903784,44.828 C215.087353,45.0893333 215.179138,45.4766667 215.179138,45.99 C215.179138,46.5033333 215.087353,46.8906667 214.903784,47.152 C214.720216,47.4133333 214.468397,47.544 214.148328,47.544 Z M220.855655,53.312 C221.580517,53.312 222.171233,53.067 222.627802,52.577 C223.084371,52.087 223.312655,51.4313333 223.312655,50.61 C223.312655,49.7886667 223.084371,49.133 222.627802,48.643 C222.171233,48.153 221.580517,47.908 220.855655,47.908 C220.384966,47.908 219.963698,48.0176667 219.591853,48.237 C219.220009,48.4563333 218.930534,48.7713333 218.723431,49.182 C218.516328,49.5926667 218.412776,50.0686667 218.412776,50.61 C218.412776,51.1513333 218.516328,51.6273333 218.723431,52.038 C218.930534,52.4486667 219.220009,52.7636667 219.591853,52.983 C219.963698,53.2023333 220.384966,53.312 220.855655,53.312 Z M220.855655,52.164 C220.545,52.164 220.295534,52.0333333 220.107259,51.772 C219.918983,51.5106667 219.824845,51.1233333 219.824845,50.61 C219.824845,50.0966667 219.918983,49.7093333 220.107259,49.448 C220.295534,49.1866667 220.545,49.056 220.855655,49.056 C221.175724,49.056 221.427543,49.189 221.611112,49.455 C221.794681,49.721 221.886466,50.106 221.886466,50.61 C221.886466,51.114 221.794681,51.499 221.611112,51.765 C221.427543,52.031 221.175724,52.164 220.855655,52.164 Z\",\"id\":\"7%\",\"fill\":\"#3772FF\",\"fillRule\":\"nonzero\",\"key\":15}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-58\",\"fill\":\"#F3F3F3\",\"x\":\"52.0305737\",\"y\":\"1.70530257e-13\",\"width\":\"134.216579\",\"height\":\"303.398298\",\"key\":16}),React.createElement(\"g\",{\"id\":\"Group-26-Copy\",\"transform\":\"translate(52.448276, 0.000000)\",\"key\":17},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-50\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"2.68433158\",\"height\":\"31.9366629\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-51\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32\",\"width\":\"9.39516054\",\"height\":\"31.9366629\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-28-Copy\",\"transform\":\"translate(52.448276, 80.000000)\",\"key\":18},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-52\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"5.36866316\",\"height\":\"31.9366629\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-53\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32\",\"width\":\"14.7638237\",\"height\":\"31.9366629\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-30-Copy\",\"transform\":\"translate(52.448276, 160.000000)\",\"key\":19},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-54\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"5.36866316\",\"height\":\"31.9366629\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-55\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32\",\"width\":\"16.1059895\",\"height\":\"31.9366629\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-31-Copy\",\"transform\":\"translate(52.448276, 240.000000)\",\"key\":20},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-56\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"6.71082895\",\"height\":\"31.9366629\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-57\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"32\",\"width\":\"17.4481553\",\"height\":\"31.9366629\",\"key\":1})])])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph2Mobile.defaultProps = {\"width\":\"351px\",\"height\":\"304px\",\"viewBox\":\"0 0 351 304\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph2Mobile;\n\nSchoolYearsGapsInAttainmentGraph2Mobile.default = SchoolYearsGapsInAttainmentGraph2Mobile;\n","\"use strict\";\n\nexports.__esModule = true;\nexports.parsePath = parsePath;\n\nfunction parsePath(path) {\n  var pathname = path || \"/\";\n  var search = \"\";\n  var hash = \"\";\n  var hashIndex = pathname.indexOf(\"#\");\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf(\"?\");\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === \"?\" ? \"\" : search,\n    hash: hash === \"#\" ? \"\" : hash\n  };\n}","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","const support = function (feature) {\n  if (typeof document === `undefined`) {\n    return false\n  }\n  const fakeLink = document.createElement(`link`)\n  try {\n    if (fakeLink.relList && typeof fakeLink.relList.supports === `function`) {\n      return fakeLink.relList.supports(feature)\n    }\n  } catch (err) {\n    return false\n  }\n  return false\n}\n\nconst linkPrefetchStrategy = function (url, options) {\n  return new Promise((resolve, reject) => {\n    if (typeof document === `undefined`) {\n      reject()\n      return\n    }\n\n    const link = document.createElement(`link`)\n    link.setAttribute(`rel`, `prefetch`)\n    link.setAttribute(`href`, url)\n\n    Object.keys(options).forEach(key => {\n      link.setAttribute(key, options[key])\n    })\n\n    link.onload = resolve\n    link.onerror = reject\n\n    const parentElement =\n      document.getElementsByTagName(`head`)[0] ||\n      document.getElementsByName(`script`)[0].parentNode\n    parentElement.appendChild(link)\n  })\n}\n\nconst xhrPrefetchStrategy = function (url) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n    req.open(`GET`, url, true)\n\n    req.onload = () => {\n      if (req.status === 200) {\n        resolve()\n      } else {\n        reject()\n      }\n    }\n\n    req.send(null)\n  })\n}\n\nconst supportedPrefetchStrategy = support(`prefetch`)\n  ? linkPrefetchStrategy\n  : xhrPrefetchStrategy\n\nconst preFetched = {}\n\nconst prefetch = function (url, options) {\n  return new Promise(resolve => {\n    if (preFetched[url]) {\n      resolve()\n      return\n    }\n\n    supportedPrefetchStrategy(url, options)\n      .then(() => {\n        resolve()\n        preFetched[url] = true\n      })\n      .catch(() => {}) // 404s are logged to the console anyway\n  })\n}\n\nexport default prefetch\n","import prefetchHelper from \"./prefetch\"\nimport emitter from \"./emitter\"\nimport { setMatchPaths, findPath, findMatchPath } from \"./find-path\"\n\n/**\n * Available resource loading statuses\n */\nexport const PageResourceStatus = {\n  /**\n   * At least one of critical resources failed to load\n   */\n  Error: `error`,\n  /**\n   * Resources loaded successfully\n   */\n  Success: `success`,\n}\n\nconst preferDefault = m => (m && m.default) || m\n\nconst stripSurroundingSlashes = s => {\n  s = s[0] === `/` ? s.slice(1) : s\n  s = s.endsWith(`/`) ? s.slice(0, -1) : s\n  return s\n}\n\nconst createPageDataUrl = path => {\n  const fixedPath = path === `/` ? `index` : stripSurroundingSlashes(path)\n  return `${__PATH_PREFIX__}/page-data/${fixedPath}/page-data.json`\n}\n\nfunction doFetch(url, method = `GET`) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n    req.open(method, url, true)\n    req.onreadystatechange = () => {\n      if (req.readyState == 4) {\n        resolve(req)\n      }\n    }\n    req.send(null)\n  })\n}\n\nconst doesConnectionSupportPrefetch = () => {\n  if (\n    `connection` in navigator &&\n    typeof navigator.connection !== `undefined`\n  ) {\n    if ((navigator.connection.effectiveType || ``).includes(`2g`)) {\n      return false\n    }\n    if (navigator.connection.saveData) {\n      return false\n    }\n  }\n  return true\n}\n\nconst toPageResources = (pageData, component = null) => {\n  const page = {\n    componentChunkName: pageData.componentChunkName,\n    path: pageData.path,\n    webpackCompilationHash: pageData.webpackCompilationHash,\n    matchPath: pageData.matchPath,\n    staticQueryHashes: pageData.staticQueryHashes,\n  }\n\n  return {\n    component,\n    json: pageData.result,\n    page,\n  }\n}\n\nexport class BaseLoader {\n  constructor(loadComponent, matchPaths) {\n    // Map of pagePath -> Page. Where Page is an object with: {\n    //   status: PageResourceStatus.Success || PageResourceStatus.Error,\n    //   payload: PageResources, // undefined if PageResourceStatus.Error\n    // }\n    // PageResources is {\n    //   component,\n    //   json: pageData.result,\n    //   page: {\n    //     componentChunkName,\n    //     path,\n    //     webpackCompilationHash,\n    //     staticQueryHashes\n    //   },\n    //   staticQueryResults\n    // }\n    this.pageDb = new Map()\n    this.inFlightDb = new Map()\n    this.staticQueryDb = {}\n    this.pageDataDb = new Map()\n    this.prefetchTriggered = new Set()\n    this.prefetchCompleted = new Set()\n    this.loadComponent = loadComponent\n    setMatchPaths(matchPaths)\n  }\n\n  inFlightNetworkRequests = new Map()\n\n  memoizedGet(url) {\n    let inFlightPromise = this.inFlightNetworkRequests.get(url)\n\n    if (!inFlightPromise) {\n      inFlightPromise = doFetch(url, `GET`)\n      this.inFlightNetworkRequests.set(url, inFlightPromise)\n    }\n\n    // Prefer duplication with then + catch over .finally to prevent problems in ie11 + firefox\n    return inFlightPromise\n      .then(response => {\n        this.inFlightNetworkRequests.delete(url)\n        return response\n      })\n      .catch(err => {\n        this.inFlightNetworkRequests.delete(url)\n        throw err\n      })\n  }\n\n  setApiRunner(apiRunner) {\n    this.apiRunner = apiRunner\n    this.prefetchDisabled = apiRunner(`disableCorePrefetching`).some(a => a)\n  }\n\n  fetchPageDataJson(loadObj) {\n    const { pagePath, retries = 0 } = loadObj\n    const url = createPageDataUrl(pagePath)\n    return this.memoizedGet(url).then(req => {\n      const { status, responseText } = req\n\n      // Handle 200\n      if (status === 200) {\n        try {\n          const jsonPayload = JSON.parse(responseText)\n          if (jsonPayload.path === undefined) {\n            throw new Error(`not a valid pageData response`)\n          }\n\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Success,\n            payload: jsonPayload,\n          })\n        } catch (err) {\n          // continue regardless of error\n        }\n      }\n\n      // Handle 404\n      if (status === 404 || status === 200) {\n        // If the request was for a 404 page and it doesn't exist, we're done\n        if (pagePath === `/404.html`) {\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Error,\n          })\n        }\n\n        // Need some code here to cache the 404 request. In case\n        // multiple loadPageDataJsons result in 404s\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, { pagePath: `/404.html`, notFound: true })\n        )\n      }\n\n      // handle 500 response (Unrecoverable)\n      if (status === 500) {\n        return Object.assign(loadObj, {\n          status: PageResourceStatus.Error,\n        })\n      }\n\n      // Handle everything else, including status === 0, and 503s. Should retry\n      if (retries < 3) {\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, { retries: retries + 1 })\n        )\n      }\n\n      // Retried 3 times already, result is an error.\n      return Object.assign(loadObj, {\n        status: PageResourceStatus.Error,\n      })\n    })\n  }\n\n  loadPageDataJson(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDataDb.has(pagePath)) {\n      return Promise.resolve(this.pageDataDb.get(pagePath))\n    }\n\n    return this.fetchPageDataJson({ pagePath }).then(pageData => {\n      this.pageDataDb.set(pagePath, pageData)\n\n      return pageData\n    })\n  }\n\n  findMatchPath(rawPath) {\n    return findMatchPath(rawPath)\n  }\n\n  // TODO check all uses of this and whether they use undefined for page resources not exist\n  loadPage(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDb.has(pagePath)) {\n      const page = this.pageDb.get(pagePath)\n      return Promise.resolve(page.payload)\n    }\n\n    if (this.inFlightDb.has(pagePath)) {\n      return this.inFlightDb.get(pagePath)\n    }\n\n    const inFlightPromise = Promise.all([\n      this.loadAppData(),\n      this.loadPageDataJson(pagePath),\n    ]).then(allData => {\n      const result = allData[1]\n      if (result.status === PageResourceStatus.Error) {\n        return {\n          status: PageResourceStatus.Error,\n        }\n      }\n\n      let pageData = result.payload\n      const { componentChunkName, staticQueryHashes = [] } = pageData\n\n      const finalResult = {}\n\n      const componentChunkPromise = this.loadComponent(componentChunkName).then(\n        component => {\n          finalResult.createdAt = new Date()\n          let pageResources\n          if (!component) {\n            finalResult.status = PageResourceStatus.Error\n          } else {\n            finalResult.status = PageResourceStatus.Success\n            if (result.notFound === true) {\n              finalResult.notFound = true\n            }\n            pageData = Object.assign(pageData, {\n              webpackCompilationHash: allData[0]\n                ? allData[0].webpackCompilationHash\n                : ``,\n            })\n            pageResources = toPageResources(pageData, component)\n          }\n          // undefined if final result is an error\n          return pageResources\n        }\n      )\n\n      const staticQueryBatchPromise = Promise.all(\n        staticQueryHashes.map(staticQueryHash => {\n          // Check for cache in case this static query result has already been loaded\n          if (this.staticQueryDb[staticQueryHash]) {\n            const jsonPayload = this.staticQueryDb[staticQueryHash]\n            return { staticQueryHash, jsonPayload }\n          }\n\n          return this.memoizedGet(\n            `${__PATH_PREFIX__}/page-data/sq/d/${staticQueryHash}.json`\n          ).then(req => {\n            const jsonPayload = JSON.parse(req.responseText)\n            return { staticQueryHash, jsonPayload }\n          })\n        })\n      ).then(staticQueryResults => {\n        const staticQueryResultsMap = {}\n\n        staticQueryResults.forEach(({ staticQueryHash, jsonPayload }) => {\n          staticQueryResultsMap[staticQueryHash] = jsonPayload\n          this.staticQueryDb[staticQueryHash] = jsonPayload\n        })\n\n        return staticQueryResultsMap\n      })\n\n      return Promise.all([componentChunkPromise, staticQueryBatchPromise]).then(\n        ([pageResources, staticQueryResults]) => {\n          let payload\n          if (pageResources) {\n            payload = { ...pageResources, staticQueryResults }\n            finalResult.payload = payload\n            emitter.emit(`onPostLoadPageResources`, {\n              page: payload,\n              pageResources: payload,\n            })\n          }\n\n          this.pageDb.set(pagePath, finalResult)\n\n          return payload\n        }\n      )\n    })\n\n    inFlightPromise\n      .then(response => {\n        this.inFlightDb.delete(pagePath)\n      })\n      .catch(error => {\n        this.inFlightDb.delete(pagePath)\n        throw error\n      })\n\n    this.inFlightDb.set(pagePath, inFlightPromise)\n\n    return inFlightPromise\n  }\n\n  // returns undefined if loading page ran into errors\n  loadPageSync(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDb.has(pagePath)) {\n      const pageData = this.pageDb.get(pagePath).payload\n      return pageData\n    }\n    return undefined\n  }\n\n  shouldPrefetch(pagePath) {\n    // Skip prefetching if we know user is on slow or constrained connection\n    if (!doesConnectionSupportPrefetch()) {\n      return false\n    }\n\n    // Check if the page exists.\n    if (this.pageDb.has(pagePath)) {\n      return false\n    }\n\n    return true\n  }\n\n  prefetch(pagePath) {\n    if (!this.shouldPrefetch(pagePath)) {\n      return false\n    }\n\n    // Tell plugins with custom prefetching logic that they should start\n    // prefetching this path.\n    if (!this.prefetchTriggered.has(pagePath)) {\n      this.apiRunner(`onPrefetchPathname`, { pathname: pagePath })\n      this.prefetchTriggered.add(pagePath)\n    }\n\n    // If a plugin has disabled core prefetching, stop now.\n    if (this.prefetchDisabled) {\n      return false\n    }\n\n    const realPath = findPath(pagePath)\n    // Todo make doPrefetch logic cacheable\n    // eslint-disable-next-line consistent-return\n    this.doPrefetch(realPath).then(() => {\n      if (!this.prefetchCompleted.has(pagePath)) {\n        this.apiRunner(`onPostPrefetchPathname`, { pathname: pagePath })\n        this.prefetchCompleted.add(pagePath)\n      }\n    })\n\n    return true\n  }\n\n  doPrefetch(pagePath) {\n    throw new Error(`doPrefetch not implemented`)\n  }\n\n  hovering(rawPath) {\n    this.loadPage(rawPath)\n  }\n\n  getResourceURLsForPathname(rawPath) {\n    const pagePath = findPath(rawPath)\n    const page = this.pageDataDb.get(pagePath)\n    if (page) {\n      const pageResources = toPageResources(page.payload)\n\n      return [\n        ...createComponentUrls(pageResources.page.componentChunkName),\n        createPageDataUrl(pagePath),\n      ]\n    } else {\n      return null\n    }\n  }\n\n  isPageNotFound(rawPath) {\n    const pagePath = findPath(rawPath)\n    const page = this.pageDb.get(pagePath)\n    return page && page.notFound === true\n  }\n\n  loadAppData(retries = 0) {\n    return this.memoizedGet(`${__PATH_PREFIX__}/page-data/app-data.json`).then(\n      req => {\n        const { status, responseText } = req\n\n        let appData\n\n        if (status !== 200 && retries < 3) {\n          // Retry 3 times incase of non-200 responses\n          return this.loadAppData(retries + 1)\n        }\n\n        // Handle 200\n        if (status === 200) {\n          try {\n            const jsonPayload = JSON.parse(responseText)\n            if (jsonPayload.webpackCompilationHash === undefined) {\n              throw new Error(`not a valid app-data response`)\n            }\n\n            appData = jsonPayload\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        return appData\n      }\n    )\n  }\n}\n\nconst createComponentUrls = componentChunkName =>\n  (window.___chunkMapping[componentChunkName] || []).map(\n    chunk => __PATH_PREFIX__ + chunk\n  )\n\nexport class ProdLoader extends BaseLoader {\n  constructor(asyncRequires, matchPaths) {\n    const loadComponent = chunkName =>\n      asyncRequires.components[chunkName]\n        ? asyncRequires.components[chunkName]()\n            .then(preferDefault)\n            // loader will handle the case when component is null\n            .catch(() => null)\n        : Promise.resolve()\n\n    super(loadComponent, matchPaths)\n  }\n\n  doPrefetch(pagePath) {\n    const pageDataUrl = createPageDataUrl(pagePath)\n    return prefetchHelper(pageDataUrl, {\n      crossOrigin: `anonymous`,\n      as: `fetch`,\n    })\n      .then(() =>\n        // This was just prefetched, so will return a response from\n        // the cache instead of making another request to the server\n        this.loadPageDataJson(pagePath)\n      )\n      .then(result => {\n        if (result.status !== PageResourceStatus.Success) {\n          return Promise.resolve()\n        }\n        const pageData = result.payload\n        const chunkName = pageData.componentChunkName\n        const componentUrls = createComponentUrls(chunkName)\n        return Promise.all(componentUrls.map(prefetchHelper)).then(\n          () => pageData\n        )\n      })\n  }\n\n  loadPageDataJson(rawPath) {\n    return super.loadPageDataJson(rawPath).then(data => {\n      if (data.notFound) {\n        // check if html file exist using HEAD request:\n        // if it does we should navigate to it instead of showing 404\n        return doFetch(rawPath, `HEAD`).then(req => {\n          if (req.status === 200) {\n            // page (.html file) actually exist (or we asked for 404 )\n            // returning page resources status as errored to trigger\n            // regular browser navigation to given page\n            return {\n              status: PageResourceStatus.Error,\n            }\n          }\n\n          // if HEAD request wasn't 200, return notFound result\n          // and show 404 page\n          return data\n        })\n      }\n      return data\n    })\n  }\n}\n\nlet instance\n\nexport const setLoader = _loader => {\n  instance = _loader\n}\n\nexport const publicLoader = {\n  // Deprecated methods. As far as we're aware, these are only used by\n  // core gatsby and the offline plugin, however there's a very small\n  // chance they're called by others.\n  getResourcesForPathname: rawPath => {\n    console.warn(\n      `Warning: getResourcesForPathname is deprecated. Use loadPage instead`\n    )\n    return instance.i.loadPage(rawPath)\n  },\n  getResourcesForPathnameSync: rawPath => {\n    console.warn(\n      `Warning: getResourcesForPathnameSync is deprecated. Use loadPageSync instead`\n    )\n    return instance.i.loadPageSync(rawPath)\n  },\n  enqueue: rawPath => instance.prefetch(rawPath),\n\n  // Real methods\n  getResourceURLsForPathname: rawPath =>\n    instance.getResourceURLsForPathname(rawPath),\n  loadPage: rawPath => instance.loadPage(rawPath),\n  loadPageSync: rawPath => instance.loadPageSync(rawPath),\n  prefetch: rawPath => instance.prefetch(rawPath),\n  isPageNotFound: rawPath => instance.isPageNotFound(rawPath),\n  hovering: rawPath => instance.hovering(rawPath),\n  loadAppData: () => instance.loadAppData(),\n}\n\nexport default publicLoader\n\nexport function getStaticQueryResults() {\n  return instance.staticQueryDb\n}\n","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport GapsInAttainmentExpectedStandardDesktop from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-1-desktop.svg\";\nimport GapsInAttainmentExpectedStandardMobile from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-1-mobile.svg\";\nimport GapsInAttainmentHigherStandardDesktop from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-2-desktop.svg\";\nimport GapsInAttainmentHigherStandardMobile from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-2-mobile.svg\";\nimport GapsInAttainmentMarginalReturnsDesktop from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-3-desktop.svg\";\nimport GapsInAttainmentMarginalReturnsMobile from \"../../../../src/content/school-years/svg/school-years-gaps-in-attainment-graph-3-mobile.svg\";\nimport ResizableGraph from \"../../../../src/components/research/resizable-graph\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  GapsInAttainmentExpectedStandardDesktop,\n  GapsInAttainmentExpectedStandardMobile,\n  GapsInAttainmentHigherStandardDesktop,\n  GapsInAttainmentHigherStandardMobile,\n  GapsInAttainmentMarginalReturnsDesktop,\n  GapsInAttainmentMarginalReturnsMobile,\n  ResizableGraph,\n  React\n};","var scope_0 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/0e349365bd363f31f2a1c9aa041b1ae0.js').default;\nvar scope_1 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/22ab73544f79b3cf8f18563241de4721.js').default;\nvar scope_2 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/25c245c1b20933e1b650708f21aeb114.js').default;\nvar scope_3 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/2aee96ade916d3e63008cf2702274c40.js').default;\nvar scope_4 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/5125b0f2af394d48a8a9b4e6ef21c0c8.js').default;\nvar scope_5 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/79f14b9479292b7d10aea0aeb8e9f89c.js').default;\nvar scope_6 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/7c89f80585d992fa5a88bbe0f14e3ab8.js').default;\nvar scope_7 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/8b7c7aec4f65ad9fe66ec189d282a08b.js').default;\nvar scope_8 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/9a5998c393fef1db65f1596110ddf461.js').default;\nvar scope_9 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/c8a41e13395a6fcbf4fab349f7b47bdb.js').default;\nvar scope_10 = require('/home/runner/work/esma-website/esma-website/.cache/caches/gatsby-plugin-mdx/mdx-scopes-dir/e92f8988d65cf25c087d226e6c0ef06f.js').default;export default\n        Object.assign({}, scope_0,\nscope_1,\nscope_2,\nscope_3,\nscope_4,\nscope_5,\nscope_6,\nscope_7,\nscope_8,\nscope_9,\nscope_10 )\n    ","import React from \"react\"\nimport { MDXProvider, withMDXComponents } from \"@mdx-js/react\"\nimport { MDXScopeProvider } from \"./context\"\n\n/**\n * so, this import is weird right?\n *\n * # What it looks like:\n * we're importing a webpack loader directly into our runtime bundle\n *\n * # What it's actually doing:\n * We configure the `mdx-components` loader in gatsby-node's\n * `onCreateWebpackConfig`. The configuration sets the loader to handle its\n * own file, so if we import `./loaders/mdx-components`, the `mdx-components`\n * loader handles loading itself.\n *\n * # Why does this work?\n * The loader doesn't use the file argument to itself and instead returns\n * a generated file that includes the `gatsby-config` mdxPlugins wrapped in\n * require() statements. This results in the `mdxPlugins` being required\n * and available to the code after this import.\n *\n * # Have a better solution to this?\n * Submit a PR\n */\nimport { plugins as mdxPlugins } from \"./loaders/mdx-components\"\nimport scopeContexts from \"./loaders/mdx-scopes\"\n\nconst componentsAndGuards = {}\n\nconst componentFromGuards = arr =>\n  function GatsbyMDXComponentFinder(props) {\n    const { Component } = arr.find(({ guard }) => (guard ? guard(props) : true))\n    return <Component {...props} />\n  }\n\nmdxPlugins.forEach(({ guards = {}, components }) => {\n  Object.entries(components).forEach(([componentName, Component]) => {\n    if (componentsAndGuards[componentName]) {\n      componentsAndGuards.push({ guard: guards[componentName], Component })\n    } else {\n      componentsAndGuards[componentName] = [\n        { guard: guards[componentName], Component },\n      ]\n    }\n  })\n})\n\nconst components = Object.entries(componentsAndGuards)\n  .map(([name, arr]) => {\n    return {\n      [name]: componentFromGuards(\n        arr.concat({ guard: undefined, Component: name })\n      ),\n    }\n  })\n  .reduce((acc, obj) => {\n    return { ...acc, ...obj }\n  }, {})\n\n// merge any components in wrapRootElement above this wrapRoot\nconst MDXConsumer = withMDXComponents(\n  ({ components: componentsFromContext, children }) => (\n    <MDXScopeProvider __mdxScope={scopeContexts}>\n      <MDXProvider components={{ ...componentsFromContext, ...components }}>\n        {children}\n      </MDXProvider>\n    </MDXScopeProvider>\n  )\n)\n\nconst WrapRootElement = ({ element }) => <MDXConsumer>{element}</MDXConsumer>\n\nexport default WrapRootElement\n","import wrap from \"./wrap-root-element\"\nexport const wrapRootElement = wrap\n","module.exports = {plugins: []}","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport EarlyYearsProvisionSVG from \"../../../../src/content/early-years/svg/early-years-graph-2.svg\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  EarlyYearsProvisionSVG,\n  React\n};","var React = require('react');\n\nfunction EarlyYearsGraph1 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 22\"),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"transform\":\"translate(-826.000000, -653.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(826.000000, 654.000000)\"},[React.createElement(\"g\",{\"transform\":\"translate(170.500000, 0.000000)\",\"key\":0},[React.createElement(\"path\",{\"d\":\"M25.516,72 L25.516,38.4 L11.02,38.4 L11.02,44.64 L17.74,44.64 L17.74,72 L25.516,72 Z M44.332,72 L44.332,38.4 L29.836,38.4 L29.836,44.64 L36.556,44.64 L36.556,72 L44.332,72 Z\",\"id\":\"11\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M61.72,46 L61.72,41.584 C61.72,40.6346667 61.9733333,39.8906667 62.48,39.352 C62.9866667,38.8133333 63.672,38.544 64.536,38.544 C65.3146667,38.544 65.9146667,38.7733333 66.336,39.232 C66.7573333,39.6906667 66.968,40.3573333 66.968,41.232 L66.968,41.232 L66.968,46 L68.104,46 L68.104,41.584 C68.104,40.6346667 68.3546667,39.8906667 68.856,39.352 C69.3573333,38.8133333 70.0453333,38.544 70.92,38.544 C71.688,38.544 72.2826667,38.7733333 72.704,39.232 C73.1253333,39.6906667 73.336,40.3573333 73.336,41.232 L73.336,41.232 L73.336,46 L74.472,46 L74.472,41.12 C74.472,39.936 74.1706667,39.04 73.568,38.432 C72.9653333,37.824 72.136,37.52 71.08,37.52 C70.3333333,37.52 69.6693333,37.6773333 69.088,37.992 C68.5066667,38.3066667 68.0613333,38.7413333 67.752,39.296 C67.496,38.7093333 67.1093333,38.2666667 66.592,37.968 C66.0746667,37.6693333 65.464,37.52 64.76,37.52 C64.0666667,37.52 63.4533333,37.6586667 62.92,37.936 C62.3866667,38.2133333 61.9706667,38.608 61.672,39.12 L61.672,39.12 L61.672,37.584 L60.584,37.584 L60.584,46 L61.72,46 Z M81,46.08 C81.8106667,46.08 82.5413333,45.896 83.192,45.528 C83.8426667,45.16 84.352,44.6506667 84.72,44 C85.088,43.3493333 85.272,42.6133333 85.272,41.792 C85.272,40.9706667 85.088,40.2346667 84.72,39.584 C84.352,38.9333333 83.8426667,38.4266667 83.192,38.064 C82.5413333,37.7013333 81.8106667,37.52 81,37.52 C80.1893333,37.52 79.4586667,37.7013333 78.808,38.064 C78.1573333,38.4266667 77.6453333,38.9333333 77.272,39.584 C76.8986667,40.2346667 76.712,40.9706667 76.712,41.792 C76.712,42.6133333 76.8986667,43.3493333 77.272,44 C77.6453333,44.6506667 78.1573333,45.16 78.808,45.528 C79.4586667,45.896 80.1893333,46.08 81,46.08 Z M81,45.072 C80.4026667,45.072 79.8666667,44.936 79.392,44.664 C78.9173333,44.392 78.544,44.0053333 78.272,43.504 C78,43.0026667 77.864,42.432 77.864,41.792 C77.864,41.152 78,40.5813333 78.272,40.08 C78.544,39.5786667 78.9173333,39.192 79.392,38.92 C79.8666667,38.648 80.4026667,38.512 81,38.512 C81.5973333,38.512 82.1333333,38.648 82.608,38.92 C83.0826667,39.192 83.4533333,39.5786667 83.72,40.08 C83.9866667,40.5813333 84.12,41.152 84.12,41.792 C84.12,42.432 83.9866667,43.0026667 83.72,43.504 C83.4533333,44.0053333 83.0826667,44.392 82.608,44.664 C82.1333333,44.936 81.5973333,45.072 81,45.072 Z M88.728,46 L88.728,41.584 C88.728,40.6346667 88.992,39.8906667 89.52,39.352 C90.048,38.8133333 90.7653333,38.544 91.672,38.544 C92.4826667,38.544 93.1066667,38.7733333 93.544,39.232 C93.9813333,39.6906667 94.2,40.3573333 94.2,41.232 L94.2,41.232 L94.2,46 L95.336,46 L95.336,41.12 C95.336,39.9466667 95.024,39.0533333 94.4,38.44 C93.776,37.8266667 92.936,37.52 91.88,37.52 C91.1546667,37.52 90.5173333,37.6613333 89.968,37.944 C89.4186667,38.2266667 88.9893333,38.624 88.68,39.136 L88.68,39.136 L88.68,37.584 L87.592,37.584 L87.592,46 L88.728,46 Z M101.08,46.08 C101.421333,46.08 101.749333,46.0293333 102.064,45.928 C102.378667,45.8266667 102.642667,45.68 102.856,45.488 L102.856,45.488 L102.456,44.672 C102.296,44.8106667 102.106667,44.9173333 101.888,44.992 C101.669333,45.0666667 101.442667,45.104 101.208,45.104 C100.738667,45.104 100.378667,44.9733333 100.128,44.712 C99.8773333,44.4506667 99.752,44.0693333 99.752,43.568 L99.752,43.568 L99.752,38.544 L102.312,38.544 L102.312,37.584 L99.752,37.584 L99.752,35.744 L98.616,35.744 L98.616,37.584 L97.112,37.584 L97.112,38.544 L98.616,38.544 L98.616,43.632 C98.616,44.4106667 98.8293333,45.0133333 99.256,45.44 C99.6826667,45.8666667 100.290667,46.08 101.08,46.08 Z M106.056,46 L106.056,41.584 C106.056,40.6346667 106.32,39.8906667 106.848,39.352 C107.376,38.8133333 108.093333,38.544 109,38.544 C109.810667,38.544 110.434667,38.7733333 110.872,39.232 C111.309333,39.6906667 111.528,40.3573333 111.528,41.232 L111.528,41.232 L111.528,46 L112.664,46 L112.664,41.12 C112.664,39.9466667 112.352,39.0533333 111.728,38.44 C111.104,37.8266667 110.264,37.52 109.208,37.52 C108.504,37.52 107.88,37.6533333 107.336,37.92 C106.792,38.1866667 106.365333,38.5653333 106.056,39.056 L106.056,39.056 L106.056,34.128 L104.92,34.128 L104.92,46 L106.056,46 Z M118.008,46.08 C119.096,46.08 119.946667,45.864 120.56,45.432 C121.173333,45 121.48,44.416 121.48,43.68 C121.48,43.136 121.336,42.7093333 121.048,42.4 C120.76,42.0906667 120.413333,41.872 120.008,41.744 C119.602667,41.616 119.064,41.488 118.392,41.36 C117.848,41.264 117.421333,41.1706667 117.112,41.08 C116.802667,40.9893333 116.544,40.848 116.336,40.656 C116.128,40.464 116.024,40.208 116.024,39.888 C116.024,39.472 116.208,39.136 116.576,38.88 C116.944,38.624 117.490667,38.496 118.216,38.496 C119.176,38.496 120.002667,38.736 120.696,39.216 L120.696,39.216 L121.192,38.304 C120.84,38.0693333 120.392,37.88 119.848,37.736 C119.304,37.592 118.76,37.52 118.216,37.52 C117.170667,37.52 116.354667,37.744 115.768,38.192 C115.181333,38.64 114.888,39.216 114.888,39.92 C114.888,40.4853333 115.034667,40.928 115.328,41.248 C115.621333,41.568 115.976,41.7946667 116.392,41.928 C116.808,42.0613333 117.357333,42.192 118.04,42.32 C118.552,42.4053333 118.962667,42.4933333 119.272,42.584 C119.581333,42.6746667 119.837333,42.808 120.04,42.984 C120.242667,43.16 120.344,43.4026667 120.344,43.712 C120.344,44.1493333 120.16,44.488 119.792,44.728 C119.424,44.968 118.856,45.088 118.088,45.088 C117.512,45.088 116.957333,45 116.424,44.824 C115.890667,44.648 115.448,44.4213333 115.096,44.144 L115.096,44.144 L114.584,45.04 C114.936,45.3386667 115.424,45.5866667 116.048,45.784 C116.672,45.9813333 117.325333,46.08 118.008,46.08 Z M64.92,76.08 C65.7093333,76.08 66.424,75.8986667 67.064,75.536 C67.704,75.1733333 68.2053333,74.6666667 68.568,74.016 C68.9306667,73.3653333 69.112,72.624 69.112,71.792 C69.112,70.96 68.9306667,70.2186667 68.568,69.568 C68.2053333,68.9173333 67.704,68.4133333 67.064,68.056 C66.424,67.6986667 65.7093333,67.52 64.92,67.52 C64.2373333,67.52 63.6213333,67.6613333 63.072,67.944 C62.5226667,68.2266667 62.072,68.64 61.72,69.184 L61.72,69.184 L61.72,64.128 L60.584,64.128 L60.584,76 L61.672,76 L61.672,74.336 C62.0133333,74.9013333 62.464,75.3333333 63.024,75.632 C63.584,75.9306667 64.216,76.08 64.92,76.08 Z M64.84,75.072 C64.2426667,75.072 63.7066667,74.936 63.232,74.664 C62.7573333,74.392 62.384,74.0053333 62.112,73.504 C61.84,73.0026667 61.704,72.432 61.704,71.792 C61.704,71.152 61.84,70.5813333 62.112,70.08 C62.384,69.5786667 62.7573333,69.192 63.232,68.92 C63.7066667,68.648 64.2426667,68.512 64.84,68.512 C65.4266667,68.512 65.96,68.648 66.44,68.92 C66.92,69.192 67.296,69.5786667 67.568,70.08 C67.84,70.5813333 67.976,71.152 67.976,71.792 C67.976,72.432 67.84,73.0026667 67.568,73.504 C67.296,74.0053333 66.92,74.392 66.44,74.664 C65.96,74.936 65.4266667,75.072 64.84,75.072 Z M75,76.08 C75.672,76.08 76.288,75.9626667 76.848,75.728 C77.408,75.4933333 77.8746667,75.152 78.248,74.704 L78.248,74.704 L77.608,73.968 C77.288,74.3306667 76.9093333,74.6053333 76.472,74.792 C76.0346667,74.9786667 75.5546667,75.072 75.032,75.072 C74.104,75.072 73.336,74.8026667 72.728,74.264 C72.12,73.7253333 71.784,73.0186667 71.72,72.144 L71.72,72.144 L78.76,72.144 L78.776,71.792 C78.776,70.96 78.6,70.2213333 78.248,69.576 C77.896,68.9306667 77.4106667,68.4266667 76.792,68.064 C76.1733333,67.7013333 75.4746667,67.52 74.696,67.52 C73.9173333,67.52 73.216,67.7013333 72.592,68.064 C71.968,68.4266667 71.4773333,68.9333333 71.12,69.584 C70.7626667,70.2346667 70.584,70.9706667 70.584,71.792 C70.584,72.6133333 70.7706667,73.3493333 71.144,74 C71.5173333,74.6506667 72.0373333,75.16 72.704,75.528 C73.3706667,75.896 74.136,76.08 75,76.08 Z M77.688,71.296 L71.72,71.296 C71.7946667,70.464 72.1066667,69.7893333 72.656,69.272 C73.2053333,68.7546667 73.8853333,68.496 74.696,68.496 C75.5173333,68.496 76.2026667,68.7546667 76.752,69.272 C77.3013333,69.7893333 77.6133333,70.464 77.688,71.296 L77.688,71.296 Z M82.232,76 L82.232,71.584 C82.232,70.6346667 82.496,69.8906667 83.024,69.352 C83.552,68.8133333 84.2693333,68.544 85.176,68.544 C85.9866667,68.544 86.6106667,68.7733333 87.048,69.232 C87.4853333,69.6906667 87.704,70.3573333 87.704,71.232 L87.704,71.232 L87.704,76 L88.84,76 L88.84,71.12 C88.84,69.9466667 88.528,69.0533333 87.904,68.44 C87.28,67.8266667 86.44,67.52 85.384,67.52 C84.68,67.52 84.056,67.6533333 83.512,67.92 C82.968,68.1866667 82.5413333,68.5653333 82.232,69.056 L82.232,69.056 L82.232,64.128 L81.096,64.128 L81.096,76 L82.232,76 Z M92.504,65.744 C92.7386667,65.744 92.936,65.664 93.096,65.504 C93.256,65.344 93.336,65.1466667 93.336,64.912 C93.336,64.6986667 93.256,64.5146667 93.096,64.36 C92.936,64.2053333 92.7386667,64.128 92.504,64.128 C92.2693333,64.128 92.072,64.208 91.912,64.368 C91.752,64.528 91.672,64.7146667 91.672,64.928 C91.672,65.152 91.752,65.344 91.912,65.504 C92.072,65.664 92.2693333,65.744 92.504,65.744 Z M93.064,76 L93.064,67.584 L91.928,67.584 L91.928,76 L93.064,76 Z M97.368,76 L97.368,71.584 C97.368,70.6346667 97.632,69.8906667 98.16,69.352 C98.688,68.8133333 99.4053333,68.544 100.312,68.544 C101.122667,68.544 101.746667,68.7733333 102.184,69.232 C102.621333,69.6906667 102.84,70.3573333 102.84,71.232 L102.84,71.232 L102.84,76 L103.976,76 L103.976,71.12 C103.976,69.9466667 103.664,69.0533333 103.04,68.44 C102.416,67.8266667 101.576,67.52 100.52,67.52 C99.7946667,67.52 99.1573333,67.6613333 98.608,67.944 C98.0586667,68.2266667 97.6293333,68.624 97.32,69.136 L97.32,69.136 L97.32,67.584 L96.232,67.584 L96.232,76 L97.368,76 Z M110.408,76.08 C111.112,76.08 111.744,75.9306667 112.304,75.632 C112.864,75.3333333 113.314667,74.9013333 113.656,74.336 L113.656,74.336 L113.656,76 L114.744,76 L114.744,64.128 L113.608,64.128 L113.608,69.184 C113.256,68.64 112.805333,68.2266667 112.256,67.944 C111.706667,67.6613333 111.090667,67.52 110.408,67.52 C109.618667,67.52 108.904,67.6986667 108.264,68.056 C107.624,68.4133333 107.122667,68.9173333 106.76,69.568 C106.397333,70.2186667 106.216,70.96 106.216,71.792 C106.216,72.624 106.397333,73.3653333 106.76,74.016 C107.122667,74.6666667 107.624,75.1733333 108.264,75.536 C108.904,75.8986667 109.618667,76.08 110.408,76.08 Z M110.504,75.072 C109.906667,75.072 109.370667,74.936 108.896,74.664 C108.421333,74.392 108.048,74.0053333 107.776,73.504 C107.504,73.0026667 107.368,72.432 107.368,71.792 C107.368,71.152 107.504,70.5813333 107.776,70.08 C108.048,69.5786667 108.421333,69.192 108.896,68.92 C109.370667,68.648 109.906667,68.512 110.504,68.512 C111.090667,68.512 111.621333,68.648 112.096,68.92 C112.570667,69.192 112.944,69.5786667 113.216,70.08 C113.488,70.5813333 113.624,71.152 113.624,71.792 C113.624,72.432 113.488,73.0026667 113.216,73.504 C112.944,74.0053333 112.570667,74.392 112.096,74.664 C111.621333,74.936 111.090667,75.072 110.504,75.072 Z\",\"id\":\"monthsbehind\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"1.5\",\"strokeLinejoin\":\"round\",\"x\":\"0\",\"y\":\"5\",\"width\":\"130\",\"height\":\"87.5\",\"key\":2}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"1.5\",\"fill\":\"#FFFFFF\",\"strokeLinejoin\":\"round\",\"x\":\"8\",\"y\":\"0\",\"width\":\"8\",\"height\":\"11\",\"key\":3}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-2\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"1.5\",\"fill\":\"#FFFFFF\",\"strokeLinejoin\":\"round\",\"x\":\"114\",\"y\":\"0\",\"width\":\"8\",\"height\":\"11\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"0\",\"y1\":\"16.5\",\"x2\":\"129.5\",\"y2\":\"16.5\",\"id\":\"Line-4\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"1.5\",\"strokeLinecap\":\"square\",\"key\":5})]),React.createElement(\"path\",{\"d\":\"M40.268,86 L40.268,84.976 L33.996,84.976 L33.996,74.8 L32.812,74.8 L32.812,86 L40.268,86 Z M45.436,86.08 C46.2466667,86.08 46.9773333,85.896 47.628,85.528 C48.2786667,85.16 48.788,84.6506667 49.156,84 C49.524,83.3493333 49.708,82.6133333 49.708,81.792 C49.708,80.9706667 49.524,80.2346667 49.156,79.584 C48.788,78.9333333 48.2786667,78.4266667 47.628,78.064 C46.9773333,77.7013333 46.2466667,77.52 45.436,77.52 C44.6253333,77.52 43.8946667,77.7013333 43.244,78.064 C42.5933333,78.4266667 42.0813333,78.9333333 41.708,79.584 C41.3346667,80.2346667 41.148,80.9706667 41.148,81.792 C41.148,82.6133333 41.3346667,83.3493333 41.708,84 C42.0813333,84.6506667 42.5933333,85.16 43.244,85.528 C43.8946667,85.896 44.6253333,86.08 45.436,86.08 Z M45.436,85.072 C44.8386667,85.072 44.3026667,84.936 43.828,84.664 C43.3533333,84.392 42.98,84.0053333 42.708,83.504 C42.436,83.0026667 42.3,82.432 42.3,81.792 C42.3,81.152 42.436,80.5813333 42.708,80.08 C42.98,79.5786667 43.3533333,79.192 43.828,78.92 C44.3026667,78.648 44.8386667,78.512 45.436,78.512 C46.0333333,78.512 46.5693333,78.648 47.044,78.92 C47.5186667,79.192 47.8893333,79.5786667 48.156,80.08 C48.4226667,80.5813333 48.556,81.152 48.556,81.792 C48.556,82.432 48.4226667,83.0026667 48.156,83.504 C47.8893333,84.0053333 47.5186667,84.392 47.044,84.664 C46.5693333,84.936 46.0333333,85.072 45.436,85.072 Z M54.812,86 L57.468,79.104 L60.124,86 L61.196,86 L64.38,77.584 L63.34,77.584 L60.668,84.736 L57.98,77.584 L57.004,77.584 L54.3,84.736 L51.66,77.584 L50.572,77.584 L53.74,86 L54.812,86 Z M72.54,86.08 C73.628,86.08 74.4786667,85.864 75.092,85.432 C75.7053333,85 76.012,84.416 76.012,83.68 C76.012,83.136 75.868,82.7093333 75.58,82.4 C75.292,82.0906667 74.9453333,81.872 74.54,81.744 C74.1346667,81.616 73.596,81.488 72.924,81.36 C72.38,81.264 71.9533333,81.1706667 71.644,81.08 C71.3346667,80.9893333 71.076,80.848 70.868,80.656 C70.66,80.464 70.556,80.208 70.556,79.888 C70.556,79.472 70.74,79.136 71.108,78.88 C71.476,78.624 72.0226667,78.496 72.748,78.496 C73.708,78.496 74.5346667,78.736 75.228,79.216 L75.228,79.216 L75.724,78.304 C75.372,78.0693333 74.924,77.88 74.38,77.736 C73.836,77.592 73.292,77.52 72.748,77.52 C71.7026667,77.52 70.8866667,77.744 70.3,78.192 C69.7133333,78.64 69.42,79.216 69.42,79.92 C69.42,80.4853333 69.5666667,80.928 69.86,81.248 C70.1533333,81.568 70.508,81.7946667 70.924,81.928 C71.34,82.0613333 71.8893333,82.192 72.572,82.32 C73.084,82.4053333 73.4946667,82.4933333 73.804,82.584 C74.1133333,82.6746667 74.3693333,82.808 74.572,82.984 C74.7746667,83.16 74.876,83.4026667 74.876,83.712 C74.876,84.1493333 74.692,84.488 74.324,84.728 C73.956,84.968 73.388,85.088 72.62,85.088 C72.044,85.088 71.4893333,85 70.956,84.824 C70.4226667,84.648 69.98,84.4213333 69.628,84.144 L69.628,84.144 L69.116,85.04 C69.468,85.3386667 69.956,85.5866667 70.58,85.784 C71.204,85.9813333 71.8573333,86.08 72.54,86.08 Z M81.548,86.08 C82.3586667,86.08 83.0893333,85.896 83.74,85.528 C84.3906667,85.16 84.9,84.6506667 85.268,84 C85.636,83.3493333 85.82,82.6133333 85.82,81.792 C85.82,80.9706667 85.636,80.2346667 85.268,79.584 C84.9,78.9333333 84.3906667,78.4266667 83.74,78.064 C83.0893333,77.7013333 82.3586667,77.52 81.548,77.52 C80.7373333,77.52 80.0066667,77.7013333 79.356,78.064 C78.7053333,78.4266667 78.1933333,78.9333333 77.82,79.584 C77.4466667,80.2346667 77.26,80.9706667 77.26,81.792 C77.26,82.6133333 77.4466667,83.3493333 77.82,84 C78.1933333,84.6506667 78.7053333,85.16 79.356,85.528 C80.0066667,85.896 80.7373333,86.08 81.548,86.08 Z M81.548,85.072 C80.9506667,85.072 80.4146667,84.936 79.94,84.664 C79.4653333,84.392 79.092,84.0053333 78.82,83.504 C78.548,83.0026667 78.412,82.432 78.412,81.792 C78.412,81.152 78.548,80.5813333 78.82,80.08 C79.092,79.5786667 79.4653333,79.192 79.94,78.92 C80.4146667,78.648 80.9506667,78.512 81.548,78.512 C82.1453333,78.512 82.6813333,78.648 83.156,78.92 C83.6306667,79.192 84.0013333,79.5786667 84.268,80.08 C84.5346667,80.5813333 84.668,81.152 84.668,81.792 C84.668,82.432 84.5346667,83.0026667 84.268,83.504 C84.0013333,84.0053333 83.6306667,84.392 83.156,84.664 C82.6813333,84.936 82.1453333,85.072 81.548,85.072 Z M91.628,86.08 C92.3426667,86.08 92.988,85.9386667 93.564,85.656 C94.14,85.3733333 94.5933333,84.96 94.924,84.416 L94.924,84.416 L94.076,83.84 C93.7986667,84.256 93.4466667,84.5653333 93.02,84.768 C92.5933333,84.9706667 92.1293333,85.072 91.628,85.072 C91.02,85.072 90.4733333,84.936 89.988,84.664 C89.5026667,84.392 89.124,84.008 88.852,83.512 C88.58,83.016 88.444,82.4426667 88.444,81.792 C88.444,81.152 88.58,80.5813333 88.852,80.08 C89.124,79.5786667 89.5026667,79.192 89.988,78.92 C90.4733333,78.648 91.02,78.512 91.628,78.512 C92.1293333,78.512 92.5933333,78.616 93.02,78.824 C93.4466667,79.032 93.7986667,79.344 94.076,79.76 L94.076,79.76 L94.924,79.184 C94.5933333,78.64 94.1426667,78.2266667 93.572,77.944 C93.0013333,77.6613333 92.3533333,77.52 91.628,77.52 C90.796,77.52 90.052,77.7013333 89.396,78.064 C88.74,78.4266667 88.2253333,78.9333333 87.852,79.584 C87.4786667,80.2346667 87.292,80.9706667 87.292,81.792 C87.292,82.6133333 87.4786667,83.352 87.852,84.008 C88.2253333,84.664 88.74,85.1733333 89.396,85.536 C90.052,85.8986667 90.796,86.08 91.628,86.08 Z M97.724,75.744 C97.9586667,75.744 98.156,75.664 98.316,75.504 C98.476,75.344 98.556,75.1466667 98.556,74.912 C98.556,74.6986667 98.476,74.5146667 98.316,74.36 C98.156,74.2053333 97.9586667,74.128 97.724,74.128 C97.4893333,74.128 97.292,74.208 97.132,74.368 C96.972,74.528 96.892,74.7146667 96.892,74.928 C96.892,75.152 96.972,75.344 97.132,75.504 C97.292,75.664 97.4893333,75.744 97.724,75.744 Z M98.284,86 L98.284,77.584 L97.148,77.584 L97.148,86 L98.284,86 Z M104.892,86.08 C105.702667,86.08 106.433333,85.896 107.084,85.528 C107.734667,85.16 108.244,84.6506667 108.612,84 C108.98,83.3493333 109.164,82.6133333 109.164,81.792 C109.164,80.9706667 108.98,80.2346667 108.612,79.584 C108.244,78.9333333 107.734667,78.4266667 107.084,78.064 C106.433333,77.7013333 105.702667,77.52 104.892,77.52 C104.081333,77.52 103.350667,77.7013333 102.7,78.064 C102.049333,78.4266667 101.537333,78.9333333 101.164,79.584 C100.790667,80.2346667 100.604,80.9706667 100.604,81.792 C100.604,82.6133333 100.790667,83.3493333 101.164,84 C101.537333,84.6506667 102.049333,85.16 102.7,85.528 C103.350667,85.896 104.081333,86.08 104.892,86.08 Z M104.892,85.072 C104.294667,85.072 103.758667,84.936 103.284,84.664 C102.809333,84.392 102.436,84.0053333 102.164,83.504 C101.892,83.0026667 101.756,82.432 101.756,81.792 C101.756,81.152 101.892,80.5813333 102.164,80.08 C102.436,79.5786667 102.809333,79.192 103.284,78.92 C103.758667,78.648 104.294667,78.512 104.892,78.512 C105.489333,78.512 106.025333,78.648 106.5,78.92 C106.974667,79.192 107.345333,79.5786667 107.612,80.08 C107.878667,80.5813333 108.012,81.152 108.012,81.792 C108.012,82.432 107.878667,83.0026667 107.612,83.504 C107.345333,84.0053333 106.974667,84.392 106.5,84.664 C106.025333,84.936 105.489333,85.072 104.892,85.072 Z M115.052,82.16 L115.052,81.168 L110.86,81.168 L110.86,82.16 L115.052,82.16 Z M5.508,116.08 C6.18,116.08 6.796,115.962667 7.356,115.728 C7.916,115.493333 8.38266667,115.152 8.756,114.704 L8.756,114.704 L8.116,113.968 C7.796,114.330667 7.41733333,114.605333 6.98,114.792 C6.54266667,114.978667 6.06266667,115.072 5.54,115.072 C4.612,115.072 3.844,114.802667 3.236,114.264 C2.628,113.725333 2.292,113.018667 2.228,112.144 L2.228,112.144 L9.268,112.144 L9.284,111.792 C9.284,110.96 9.108,110.221333 8.756,109.576 C8.404,108.930667 7.91866667,108.426667 7.3,108.064 C6.68133333,107.701333 5.98266667,107.52 5.204,107.52 C4.42533333,107.52 3.724,107.701333 3.1,108.064 C2.476,108.426667 1.98533333,108.933333 1.628,109.584 C1.27066667,110.234667 1.092,110.970667 1.092,111.792 C1.092,112.613333 1.27866667,113.349333 1.652,114 C2.02533333,114.650667 2.54533333,115.16 3.212,115.528 C3.87866667,115.896 4.644,116.08 5.508,116.08 Z M8.196,111.296 L2.228,111.296 C2.30266667,110.464 2.61466667,109.789333 3.164,109.272 C3.71333333,108.754667 4.39333333,108.496 5.204,108.496 C6.02533333,108.496 6.71066667,108.754667 7.26,109.272 C7.80933333,109.789333 8.12133333,110.464 8.196,111.296 L8.196,111.296 Z M15.092,116.08 C15.8066667,116.08 16.452,115.938667 17.028,115.656 C17.604,115.373333 18.0573333,114.96 18.388,114.416 L18.388,114.416 L17.54,113.84 C17.2626667,114.256 16.9106667,114.565333 16.484,114.768 C16.0573333,114.970667 15.5933333,115.072 15.092,115.072 C14.484,115.072 13.9373333,114.936 13.452,114.664 C12.9666667,114.392 12.588,114.008 12.316,113.512 C12.044,113.016 11.908,112.442667 11.908,111.792 C11.908,111.152 12.044,110.581333 12.316,110.08 C12.588,109.578667 12.9666667,109.192 13.452,108.92 C13.9373333,108.648 14.484,108.512 15.092,108.512 C15.5933333,108.512 16.0573333,108.616 16.484,108.824 C16.9106667,109.032 17.2626667,109.344 17.54,109.76 L17.54,109.76 L18.388,109.184 C18.0573333,108.64 17.6066667,108.226667 17.036,107.944 C16.4653333,107.661333 15.8173333,107.52 15.092,107.52 C14.26,107.52 13.516,107.701333 12.86,108.064 C12.204,108.426667 11.6893333,108.933333 11.316,109.584 C10.9426667,110.234667 10.756,110.970667 10.756,111.792 C10.756,112.613333 10.9426667,113.352 11.316,114.008 C11.6893333,114.664 12.204,115.173333 12.86,115.536 C13.516,115.898667 14.26,116.08 15.092,116.08 Z M24.052,116.08 C24.8626667,116.08 25.5933333,115.896 26.244,115.528 C26.8946667,115.16 27.404,114.650667 27.772,114 C28.14,113.349333 28.324,112.613333 28.324,111.792 C28.324,110.970667 28.14,110.234667 27.772,109.584 C27.404,108.933333 26.8946667,108.426667 26.244,108.064 C25.5933333,107.701333 24.8626667,107.52 24.052,107.52 C23.2413333,107.52 22.5106667,107.701333 21.86,108.064 C21.2093333,108.426667 20.6973333,108.933333 20.324,109.584 C19.9506667,110.234667 19.764,110.970667 19.764,111.792 C19.764,112.613333 19.9506667,113.349333 20.324,114 C20.6973333,114.650667 21.2093333,115.16 21.86,115.528 C22.5106667,115.896 23.2413333,116.08 24.052,116.08 Z M24.052,115.072 C23.4546667,115.072 22.9186667,114.936 22.444,114.664 C21.9693333,114.392 21.596,114.005333 21.324,113.504 C21.052,113.002667 20.916,112.432 20.916,111.792 C20.916,111.152 21.052,110.581333 21.324,110.08 C21.596,109.578667 21.9693333,109.192 22.444,108.92 C22.9186667,108.648 23.4546667,108.512 24.052,108.512 C24.6493333,108.512 25.1853333,108.648 25.66,108.92 C26.1346667,109.192 26.5053333,109.578667 26.772,110.08 C27.0386667,110.581333 27.172,111.152 27.172,111.792 C27.172,112.432 27.0386667,113.002667 26.772,113.504 C26.5053333,114.005333 26.1346667,114.392 25.66,114.664 C25.1853333,114.936 24.6493333,115.072 24.052,115.072 Z M31.78,116 L31.78,111.584 C31.78,110.634667 32.044,109.890667 32.572,109.352 C33.1,108.813333 33.8173333,108.544 34.724,108.544 C35.5346667,108.544 36.1586667,108.773333 36.596,109.232 C37.0333333,109.690667 37.252,110.357333 37.252,111.232 L37.252,111.232 L37.252,116 L38.388,116 L38.388,111.12 C38.388,109.946667 38.076,109.053333 37.452,108.44 C36.828,107.826667 35.988,107.52 34.932,107.52 C34.2066667,107.52 33.5693333,107.661333 33.02,107.944 C32.4706667,108.226667 32.0413333,108.624 31.732,109.136 L31.732,109.136 L31.732,107.584 L30.644,107.584 L30.644,116 L31.78,116 Z M44.916,116.08 C45.7266667,116.08 46.4573333,115.896 47.108,115.528 C47.7586667,115.16 48.268,114.650667 48.636,114 C49.004,113.349333 49.188,112.613333 49.188,111.792 C49.188,110.970667 49.004,110.234667 48.636,109.584 C48.268,108.933333 47.7586667,108.426667 47.108,108.064 C46.4573333,107.701333 45.7266667,107.52 44.916,107.52 C44.1053333,107.52 43.3746667,107.701333 42.724,108.064 C42.0733333,108.426667 41.5613333,108.933333 41.188,109.584 C40.8146667,110.234667 40.628,110.970667 40.628,111.792 C40.628,112.613333 40.8146667,113.349333 41.188,114 C41.5613333,114.650667 42.0733333,115.16 42.724,115.528 C43.3746667,115.896 44.1053333,116.08 44.916,116.08 Z M44.916,115.072 C44.3186667,115.072 43.7826667,114.936 43.308,114.664 C42.8333333,114.392 42.46,114.005333 42.188,113.504 C41.916,113.002667 41.78,112.432 41.78,111.792 C41.78,111.152 41.916,110.581333 42.188,110.08 C42.46,109.578667 42.8333333,109.192 43.308,108.92 C43.7826667,108.648 44.3186667,108.512 44.916,108.512 C45.5133333,108.512 46.0493333,108.648 46.524,108.92 C46.9986667,109.192 47.3693333,109.578667 47.636,110.08 C47.9026667,110.581333 48.036,111.152 48.036,111.792 C48.036,112.432 47.9026667,113.002667 47.636,113.504 C47.3693333,114.005333 46.9986667,114.392 46.524,114.664 C46.0493333,114.936 45.5133333,115.072 44.916,115.072 Z M52.644,116 L52.644,111.584 C52.644,110.634667 52.8973333,109.890667 53.404,109.352 C53.9106667,108.813333 54.596,108.544 55.46,108.544 C56.2386667,108.544 56.8386667,108.773333 57.26,109.232 C57.6813333,109.690667 57.892,110.357333 57.892,111.232 L57.892,111.232 L57.892,116 L59.028,116 L59.028,111.584 C59.028,110.634667 59.2786667,109.890667 59.78,109.352 C60.2813333,108.813333 60.9693333,108.544 61.844,108.544 C62.612,108.544 63.2066667,108.773333 63.628,109.232 C64.0493333,109.690667 64.26,110.357333 64.26,111.232 L64.26,111.232 L64.26,116 L65.396,116 L65.396,111.12 C65.396,109.936 65.0946667,109.04 64.492,108.432 C63.8893333,107.824 63.06,107.52 62.004,107.52 C61.2573333,107.52 60.5933333,107.677333 60.012,107.992 C59.4306667,108.306667 58.9853333,108.741333 58.676,109.296 C58.42,108.709333 58.0333333,108.266667 57.516,107.968 C56.9986667,107.669333 56.388,107.52 55.684,107.52 C54.9906667,107.52 54.3773333,107.658667 53.844,107.936 C53.3106667,108.213333 52.8946667,108.608 52.596,109.12 L52.596,109.12 L52.596,107.584 L51.508,107.584 L51.508,116 L52.644,116 Z M69.06,105.744 C69.2946667,105.744 69.492,105.664 69.652,105.504 C69.812,105.344 69.892,105.146667 69.892,104.912 C69.892,104.698667 69.812,104.514667 69.652,104.36 C69.492,104.205333 69.2946667,104.128 69.06,104.128 C68.8253333,104.128 68.628,104.208 68.468,104.368 C68.308,104.528 68.228,104.714667 68.228,104.928 C68.228,105.152 68.308,105.344 68.468,105.504 C68.628,105.664 68.8253333,105.744 69.06,105.744 Z M69.62,116 L69.62,107.584 L68.484,107.584 L68.484,116 L69.62,116 Z M76.276,116.08 C76.9906667,116.08 77.636,115.938667 78.212,115.656 C78.788,115.373333 79.2413333,114.96 79.572,114.416 L79.572,114.416 L78.724,113.84 C78.4466667,114.256 78.0946667,114.565333 77.668,114.768 C77.2413333,114.970667 76.7773333,115.072 76.276,115.072 C75.668,115.072 75.1213333,114.936 74.636,114.664 C74.1506667,114.392 73.772,114.008 73.5,113.512 C73.228,113.016 73.092,112.442667 73.092,111.792 C73.092,111.152 73.228,110.581333 73.5,110.08 C73.772,109.578667 74.1506667,109.192 74.636,108.92 C75.1213333,108.648 75.668,108.512 76.276,108.512 C76.7773333,108.512 77.2413333,108.616 77.668,108.824 C78.0946667,109.032 78.4466667,109.344 78.724,109.76 L78.724,109.76 L79.572,109.184 C79.2413333,108.64 78.7906667,108.226667 78.22,107.944 C77.6493333,107.661333 77.0013333,107.52 76.276,107.52 C75.444,107.52 74.7,107.701333 74.044,108.064 C73.388,108.426667 72.8733333,108.933333 72.5,109.584 C72.1266667,110.234667 71.94,110.970667 71.94,111.792 C71.94,112.613333 72.1266667,113.352 72.5,114.008 C72.8733333,114.664 73.388,115.173333 74.044,115.536 C74.7,115.898667 75.444,116.08 76.276,116.08 Z M87.316,116 L87.316,108.544 L89.876,108.544 L89.876,107.584 L87.284,107.584 L87.284,106.592 C87.284,106.069333 87.4093333,105.674667 87.66,105.408 C87.9106667,105.141333 88.2813333,105.008 88.772,105.008 C89.2733333,105.008 89.6893333,105.146667 90.02,105.424 L90.02,105.424 L90.404,104.576 C90.2013333,104.405333 89.9506667,104.274667 89.652,104.184 C89.3533333,104.093333 89.044,104.048 88.724,104.048 C87.9133333,104.048 87.2866667,104.272 86.844,104.72 C86.4013333,105.168 86.18,105.776 86.18,106.544 L86.18,106.544 L86.18,107.584 L84.676,107.584 L84.676,108.544 L86.18,108.544 L86.18,116 L87.316,116 Z M93.78,116.08 C94.4626667,116.08 95.052,115.957333 95.548,115.712 C96.044,115.466667 96.42,115.125333 96.676,114.688 L96.676,114.688 L96.676,116 L97.764,116 L97.764,110.784 C97.764,109.706667 97.4706667,108.893333 96.884,108.344 C96.2973333,107.794667 95.4546667,107.52 94.356,107.52 C93.6946667,107.52 93.0653333,107.618667 92.468,107.816 C91.8706667,108.013333 91.3586667,108.293333 90.932,108.656 L90.932,108.656 L91.444,109.504 C91.796,109.194667 92.2173333,108.952 92.708,108.776 C93.1986667,108.6 93.7106667,108.512 94.244,108.512 C95.0226667,108.512 95.6146667,108.701333 96.02,109.08 C96.4253333,109.458667 96.628,110.010667 96.628,110.736 L96.628,110.736 L96.628,111.248 L93.956,111.248 C92.8253333,111.248 92.0013333,111.466667 91.484,111.904 C90.9666667,112.341333 90.708,112.917333 90.708,113.632 C90.708,114.368 90.9853333,114.96 91.54,115.408 C92.0946667,115.856 92.8413333,116.08 93.78,116.08 Z M93.956,115.184 C93.284,115.184 92.7613333,115.042667 92.388,114.76 C92.0146667,114.477333 91.828,114.090667 91.828,113.6 C91.828,112.597333 92.548,112.096 93.988,112.096 L93.988,112.096 L96.628,112.096 L96.628,113.472 C96.404,114.026667 96.0626667,114.450667 95.604,114.744 C95.1453333,115.037333 94.596,115.184 93.956,115.184 Z M101.988,116 L101.988,111.584 C101.988,110.634667 102.241333,109.890667 102.748,109.352 C103.254667,108.813333 103.94,108.544 104.804,108.544 C105.582667,108.544 106.182667,108.773333 106.604,109.232 C107.025333,109.690667 107.236,110.357333 107.236,111.232 L107.236,111.232 L107.236,116 L108.372,116 L108.372,111.584 C108.372,110.634667 108.622667,109.890667 109.124,109.352 C109.625333,108.813333 110.313333,108.544 111.188,108.544 C111.956,108.544 112.550667,108.773333 112.972,109.232 C113.393333,109.690667 113.604,110.357333 113.604,111.232 L113.604,111.232 L113.604,116 L114.74,116 L114.74,111.12 C114.74,109.936 114.438667,109.04 113.836,108.432 C113.233333,107.824 112.404,107.52 111.348,107.52 C110.601333,107.52 109.937333,107.677333 109.356,107.992 C108.774667,108.306667 108.329333,108.741333 108.02,109.296 C107.764,108.709333 107.377333,108.266667 106.86,107.968 C106.342667,107.669333 105.732,107.52 105.028,107.52 C104.334667,107.52 103.721333,107.658667 103.188,107.936 C102.654667,108.213333 102.238667,108.608 101.94,109.12 L101.94,109.12 L101.94,107.584 L100.852,107.584 L100.852,116 L101.988,116 Z M118.404,105.744 C118.638667,105.744 118.836,105.664 118.996,105.504 C119.156,105.344 119.236,105.146667 119.236,104.912 C119.236,104.698667 119.156,104.514667 118.996,104.36 C118.836,104.205333 118.638667,104.128 118.404,104.128 C118.169333,104.128 117.972,104.208 117.812,104.368 C117.652,104.528 117.572,104.714667 117.572,104.928 C117.572,105.152 117.652,105.344 117.812,105.504 C117.972,105.664 118.169333,105.744 118.404,105.744 Z M118.964,116 L118.964,107.584 L117.828,107.584 L117.828,116 L118.964,116 Z M123.268,116 L123.268,104.128 L122.132,104.128 L122.132,116 L123.268,116 Z M127.012,105.744 C127.246667,105.744 127.444,105.664 127.604,105.504 C127.764,105.344 127.844,105.146667 127.844,104.912 C127.844,104.698667 127.764,104.514667 127.604,104.36 C127.444,104.205333 127.246667,104.128 127.012,104.128 C126.777333,104.128 126.58,104.208 126.42,104.368 C126.26,104.528 126.18,104.714667 126.18,104.928 C126.18,105.152 126.26,105.344 126.42,105.504 C126.58,105.664 126.777333,105.744 127.012,105.744 Z M127.572,116 L127.572,107.584 L126.436,107.584 L126.436,116 L127.572,116 Z M134.308,116.08 C134.98,116.08 135.596,115.962667 136.156,115.728 C136.716,115.493333 137.182667,115.152 137.556,114.704 L137.556,114.704 L136.916,113.968 C136.596,114.330667 136.217333,114.605333 135.78,114.792 C135.342667,114.978667 134.862667,115.072 134.34,115.072 C133.412,115.072 132.644,114.802667 132.036,114.264 C131.428,113.725333 131.092,113.018667 131.028,112.144 L131.028,112.144 L138.068,112.144 L138.084,111.792 C138.084,110.96 137.908,110.221333 137.556,109.576 C137.204,108.930667 136.718667,108.426667 136.1,108.064 C135.481333,107.701333 134.782667,107.52 134.004,107.52 C133.225333,107.52 132.524,107.701333 131.9,108.064 C131.276,108.426667 130.785333,108.933333 130.428,109.584 C130.070667,110.234667 129.892,110.970667 129.892,111.792 C129.892,112.613333 130.078667,113.349333 130.452,114 C130.825333,114.650667 131.345333,115.16 132.012,115.528 C132.678667,115.896 133.444,116.08 134.308,116.08 Z M136.996,111.296 L131.028,111.296 C131.102667,110.464 131.414667,109.789333 131.964,109.272 C132.513333,108.754667 133.193333,108.496 134.004,108.496 C134.825333,108.496 135.510667,108.754667 136.06,109.272 C136.609333,109.789333 136.921333,110.464 136.996,111.296 L136.996,111.296 Z M142.66,116.08 C143.748,116.08 144.598667,115.864 145.212,115.432 C145.825333,115 146.132,114.416 146.132,113.68 C146.132,113.136 145.988,112.709333 145.7,112.4 C145.412,112.090667 145.065333,111.872 144.66,111.744 C144.254667,111.616 143.716,111.488 143.044,111.36 C142.5,111.264 142.073333,111.170667 141.764,111.08 C141.454667,110.989333 141.196,110.848 140.988,110.656 C140.78,110.464 140.676,110.208 140.676,109.888 C140.676,109.472 140.86,109.136 141.228,108.88 C141.596,108.624 142.142667,108.496 142.868,108.496 C143.828,108.496 144.654667,108.736 145.348,109.216 L145.348,109.216 L145.844,108.304 C145.492,108.069333 145.044,107.88 144.5,107.736 C143.956,107.592 143.412,107.52 142.868,107.52 C141.822667,107.52 141.006667,107.744 140.42,108.192 C139.833333,108.64 139.54,109.216 139.54,109.92 C139.54,110.485333 139.686667,110.928 139.98,111.248 C140.273333,111.568 140.628,111.794667 141.044,111.928 C141.46,112.061333 142.009333,112.192 142.692,112.32 C143.204,112.405333 143.614667,112.493333 143.924,112.584 C144.233333,112.674667 144.489333,112.808 144.692,112.984 C144.894667,113.16 144.996,113.402667 144.996,113.712 C144.996,114.149333 144.812,114.488 144.444,114.728 C144.076,114.968 143.508,115.088 142.74,115.088 C142.164,115.088 141.609333,115 141.076,114.824 C140.542667,114.648 140.1,114.421333 139.748,114.144 L139.748,114.144 L139.236,115.04 C139.588,115.338667 140.076,115.586667 140.7,115.784 C141.324,115.981333 141.977333,116.08 142.66,116.08 Z\",\"id\":\"Lowsocio-economicfamilies\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M327.332,86 L327.332,77.088 L331.732,84.576 L332.292,84.576 L336.692,77.04 L336.692,86 L337.828,86 L337.828,74.8 L336.852,74.8 L332.036,83.104 L327.172,74.8 L326.196,74.8 L326.196,86 L327.332,86 Z M341.812,75.744 C342.046667,75.744 342.244,75.664 342.404,75.504 C342.564,75.344 342.644,75.1466667 342.644,74.912 C342.644,74.6986667 342.564,74.5146667 342.404,74.36 C342.244,74.2053333 342.046667,74.128 341.812,74.128 C341.577333,74.128 341.38,74.208 341.22,74.368 C341.06,74.528 340.98,74.7146667 340.98,74.928 C340.98,75.152 341.06,75.344 341.22,75.504 C341.38,75.664 341.577333,75.744 341.812,75.744 Z M342.372,86 L342.372,77.584 L341.236,77.584 L341.236,86 L342.372,86 Z M348.884,86.08 C349.588,86.08 350.22,85.9306667 350.78,85.632 C351.34,85.3333333 351.790667,84.9013333 352.132,84.336 L352.132,84.336 L352.132,86 L353.22,86 L353.22,74.128 L352.084,74.128 L352.084,79.184 C351.732,78.64 351.281333,78.2266667 350.732,77.944 C350.182667,77.6613333 349.566667,77.52 348.884,77.52 C348.094667,77.52 347.38,77.6986667 346.74,78.056 C346.1,78.4133333 345.598667,78.9173333 345.236,79.568 C344.873333,80.2186667 344.692,80.96 344.692,81.792 C344.692,82.624 344.873333,83.3653333 345.236,84.016 C345.598667,84.6666667 346.1,85.1733333 346.74,85.536 C347.38,85.8986667 348.094667,86.08 348.884,86.08 Z M348.98,85.072 C348.382667,85.072 347.846667,84.936 347.372,84.664 C346.897333,84.392 346.524,84.0053333 346.252,83.504 C345.98,83.0026667 345.844,82.432 345.844,81.792 C345.844,81.152 345.98,80.5813333 346.252,80.08 C346.524,79.5786667 346.897333,79.192 347.372,78.92 C347.846667,78.648 348.382667,78.512 348.98,78.512 C349.566667,78.512 350.097333,78.648 350.572,78.92 C351.046667,79.192 351.42,79.5786667 351.692,80.08 C351.964,80.5813333 352.1,81.152 352.1,81.792 C352.1,82.432 351.964,83.0026667 351.692,83.504 C351.42,84.0053333 351.046667,84.392 350.572,84.664 C350.097333,84.936 349.566667,85.072 348.98,85.072 Z M359.732,86.08 C360.436,86.08 361.068,85.9306667 361.628,85.632 C362.188,85.3333333 362.638667,84.9013333 362.98,84.336 L362.98,84.336 L362.98,86 L364.068,86 L364.068,74.128 L362.932,74.128 L362.932,79.184 C362.58,78.64 362.129333,78.2266667 361.58,77.944 C361.030667,77.6613333 360.414667,77.52 359.732,77.52 C358.942667,77.52 358.228,77.6986667 357.588,78.056 C356.948,78.4133333 356.446667,78.9173333 356.084,79.568 C355.721333,80.2186667 355.54,80.96 355.54,81.792 C355.54,82.624 355.721333,83.3653333 356.084,84.016 C356.446667,84.6666667 356.948,85.1733333 357.588,85.536 C358.228,85.8986667 358.942667,86.08 359.732,86.08 Z M359.828,85.072 C359.230667,85.072 358.694667,84.936 358.22,84.664 C357.745333,84.392 357.372,84.0053333 357.1,83.504 C356.828,83.0026667 356.692,82.432 356.692,81.792 C356.692,81.152 356.828,80.5813333 357.1,80.08 C357.372,79.5786667 357.745333,79.192 358.22,78.92 C358.694667,78.648 359.230667,78.512 359.828,78.512 C360.414667,78.512 360.945333,78.648 361.42,78.92 C361.894667,79.192 362.268,79.5786667 362.54,80.08 C362.812,80.5813333 362.948,81.152 362.948,81.792 C362.948,82.432 362.812,83.0026667 362.54,83.504 C362.268,84.0053333 361.894667,84.392 361.42,84.664 C360.945333,84.936 360.414667,85.072 359.828,85.072 Z M368.372,86 L368.372,74.128 L367.236,74.128 L367.236,86 L368.372,86 Z M375.108,86.08 C375.78,86.08 376.396,85.9626667 376.956,85.728 C377.516,85.4933333 377.982667,85.152 378.356,84.704 L378.356,84.704 L377.716,83.968 C377.396,84.3306667 377.017333,84.6053333 376.58,84.792 C376.142667,84.9786667 375.662667,85.072 375.14,85.072 C374.212,85.072 373.444,84.8026667 372.836,84.264 C372.228,83.7253333 371.892,83.0186667 371.828,82.144 L371.828,82.144 L378.868,82.144 L378.884,81.792 C378.884,80.96 378.708,80.2213333 378.356,79.576 C378.004,78.9306667 377.518667,78.4266667 376.9,78.064 C376.281333,77.7013333 375.582667,77.52 374.804,77.52 C374.025333,77.52 373.324,77.7013333 372.7,78.064 C372.076,78.4266667 371.585333,78.9333333 371.228,79.584 C370.870667,80.2346667 370.692,80.9706667 370.692,81.792 C370.692,82.6133333 370.878667,83.3493333 371.252,84 C371.625333,84.6506667 372.145333,85.16 372.812,85.528 C373.478667,85.896 374.244,86.08 375.108,86.08 Z M377.796,81.296 L371.828,81.296 C371.902667,80.464 372.214667,79.7893333 372.764,79.272 C373.313333,78.7546667 373.993333,78.496 374.804,78.496 C375.625333,78.496 376.310667,78.7546667 376.86,79.272 C377.409333,79.7893333 377.721333,80.464 377.796,81.296 L377.796,81.296 Z M385.972,75.744 C386.206667,75.744 386.404,75.664 386.564,75.504 C386.724,75.344 386.804,75.1466667 386.804,74.912 C386.804,74.6986667 386.724,74.5146667 386.564,74.36 C386.404,74.2053333 386.206667,74.128 385.972,74.128 C385.737333,74.128 385.54,74.208 385.38,74.368 C385.22,74.528 385.14,74.7146667 385.14,74.928 C385.14,75.152 385.22,75.344 385.38,75.504 C385.54,75.664 385.737333,75.744 385.972,75.744 Z M386.532,86 L386.532,77.584 L385.396,77.584 L385.396,86 L386.532,86 Z M390.836,86 L390.836,81.584 C390.836,80.6346667 391.1,79.8906667 391.628,79.352 C392.156,78.8133333 392.873333,78.544 393.78,78.544 C394.590667,78.544 395.214667,78.7733333 395.652,79.232 C396.089333,79.6906667 396.308,80.3573333 396.308,81.232 L396.308,81.232 L396.308,86 L397.444,86 L397.444,81.12 C397.444,79.9466667 397.132,79.0533333 396.508,78.44 C395.884,77.8266667 395.044,77.52 393.988,77.52 C393.262667,77.52 392.625333,77.6613333 392.076,77.944 C391.526667,78.2266667 391.097333,78.624 390.788,79.136 L390.788,79.136 L390.788,77.584 L389.7,77.584 L389.7,86 L390.836,86 Z M404.02,86.08 C404.734667,86.08 405.38,85.9386667 405.956,85.656 C406.532,85.3733333 406.985333,84.96 407.316,84.416 L407.316,84.416 L406.468,83.84 C406.190667,84.256 405.838667,84.5653333 405.412,84.768 C404.985333,84.9706667 404.521333,85.072 404.02,85.072 C403.412,85.072 402.865333,84.936 402.38,84.664 C401.894667,84.392 401.516,84.008 401.244,83.512 C400.972,83.016 400.836,82.4426667 400.836,81.792 C400.836,81.152 400.972,80.5813333 401.244,80.08 C401.516,79.5786667 401.894667,79.192 402.38,78.92 C402.865333,78.648 403.412,78.512 404.02,78.512 C404.521333,78.512 404.985333,78.616 405.412,78.824 C405.838667,79.032 406.190667,79.344 406.468,79.76 L406.468,79.76 L407.316,79.184 C406.985333,78.64 406.534667,78.2266667 405.964,77.944 C405.393333,77.6613333 404.745333,77.52 404.02,77.52 C403.188,77.52 402.444,77.7013333 401.788,78.064 C401.132,78.4266667 400.617333,78.9333333 400.244,79.584 C399.870667,80.2346667 399.684,80.9706667 399.684,81.792 C399.684,82.6133333 399.870667,83.352 400.244,84.008 C400.617333,84.664 401.132,85.1733333 401.788,85.536 C402.444,85.8986667 403.188,86.08 404.02,86.08 Z M412.98,86.08 C413.790667,86.08 414.521333,85.896 415.172,85.528 C415.822667,85.16 416.332,84.6506667 416.7,84 C417.068,83.3493333 417.252,82.6133333 417.252,81.792 C417.252,80.9706667 417.068,80.2346667 416.7,79.584 C416.332,78.9333333 415.822667,78.4266667 415.172,78.064 C414.521333,77.7013333 413.790667,77.52 412.98,77.52 C412.169333,77.52 411.438667,77.7013333 410.788,78.064 C410.137333,78.4266667 409.625333,78.9333333 409.252,79.584 C408.878667,80.2346667 408.692,80.9706667 408.692,81.792 C408.692,82.6133333 408.878667,83.3493333 409.252,84 C409.625333,84.6506667 410.137333,85.16 410.788,85.528 C411.438667,85.896 412.169333,86.08 412.98,86.08 Z M412.98,85.072 C412.382667,85.072 411.846667,84.936 411.372,84.664 C410.897333,84.392 410.524,84.0053333 410.252,83.504 C409.98,83.0026667 409.844,82.432 409.844,81.792 C409.844,81.152 409.98,80.5813333 410.252,80.08 C410.524,79.5786667 410.897333,79.192 411.372,78.92 C411.846667,78.648 412.382667,78.512 412.98,78.512 C413.577333,78.512 414.113333,78.648 414.588,78.92 C415.062667,79.192 415.433333,79.5786667 415.7,80.08 C415.966667,80.5813333 416.1,81.152 416.1,81.792 C416.1,82.432 415.966667,83.0026667 415.7,83.504 C415.433333,84.0053333 415.062667,84.392 414.588,84.664 C414.113333,84.936 413.577333,85.072 412.98,85.072 Z M420.708,86 L420.708,81.584 C420.708,80.6346667 420.961333,79.8906667 421.468,79.352 C421.974667,78.8133333 422.66,78.544 423.524,78.544 C424.302667,78.544 424.902667,78.7733333 425.324,79.232 C425.745333,79.6906667 425.956,80.3573333 425.956,81.232 L425.956,81.232 L425.956,86 L427.092,86 L427.092,81.584 C427.092,80.6346667 427.342667,79.8906667 427.844,79.352 C428.345333,78.8133333 429.033333,78.544 429.908,78.544 C430.676,78.544 431.270667,78.7733333 431.692,79.232 C432.113333,79.6906667 432.324,80.3573333 432.324,81.232 L432.324,81.232 L432.324,86 L433.46,86 L433.46,81.12 C433.46,79.936 433.158667,79.04 432.556,78.432 C431.953333,77.824 431.124,77.52 430.068,77.52 C429.321333,77.52 428.657333,77.6773333 428.076,77.992 C427.494667,78.3066667 427.049333,78.7413333 426.74,79.296 C426.484,78.7093333 426.097333,78.2666667 425.58,77.968 C425.062667,77.6693333 424.452,77.52 423.748,77.52 C423.054667,77.52 422.441333,77.6586667 421.908,77.936 C421.374667,78.2133333 420.958667,78.608 420.66,79.12 L420.66,79.12 L420.66,77.584 L419.572,77.584 L419.572,86 L420.708,86 Z M440.116,86.08 C440.788,86.08 441.404,85.9626667 441.964,85.728 C442.524,85.4933333 442.990667,85.152 443.364,84.704 L443.364,84.704 L442.724,83.968 C442.404,84.3306667 442.025333,84.6053333 441.588,84.792 C441.150667,84.9786667 440.670667,85.072 440.148,85.072 C439.22,85.072 438.452,84.8026667 437.844,84.264 C437.236,83.7253333 436.9,83.0186667 436.836,82.144 L436.836,82.144 L443.876,82.144 L443.892,81.792 C443.892,80.96 443.716,80.2213333 443.364,79.576 C443.012,78.9306667 442.526667,78.4266667 441.908,78.064 C441.289333,77.7013333 440.590667,77.52 439.812,77.52 C439.033333,77.52 438.332,77.7013333 437.708,78.064 C437.084,78.4266667 436.593333,78.9333333 436.236,79.584 C435.878667,80.2346667 435.7,80.9706667 435.7,81.792 C435.7,82.6133333 435.886667,83.3493333 436.26,84 C436.633333,84.6506667 437.153333,85.16 437.82,85.528 C438.486667,85.896 439.252,86.08 440.116,86.08 Z M442.804,81.296 L436.836,81.296 C436.910667,80.464 437.222667,79.7893333 437.772,79.272 C438.321333,78.7546667 439.001333,78.496 439.812,78.496 C440.633333,78.496 441.318667,78.7546667 441.868,79.272 C442.417333,79.7893333 442.729333,80.464 442.804,81.296 L442.804,81.296 Z M356.292,116 L356.292,108.544 L358.852,108.544 L358.852,107.584 L356.26,107.584 L356.26,106.592 C356.26,106.069333 356.385333,105.674667 356.636,105.408 C356.886667,105.141333 357.257333,105.008 357.748,105.008 C358.249333,105.008 358.665333,105.146667 358.996,105.424 L358.996,105.424 L359.38,104.576 C359.177333,104.405333 358.926667,104.274667 358.628,104.184 C358.329333,104.093333 358.02,104.048 357.7,104.048 C356.889333,104.048 356.262667,104.272 355.82,104.72 C355.377333,105.168 355.156,105.776 355.156,106.544 L355.156,106.544 L355.156,107.584 L353.652,107.584 L353.652,108.544 L355.156,108.544 L355.156,116 L356.292,116 Z M362.756,116.08 C363.438667,116.08 364.028,115.957333 364.524,115.712 C365.02,115.466667 365.396,115.125333 365.652,114.688 L365.652,114.688 L365.652,116 L366.74,116 L366.74,110.784 C366.74,109.706667 366.446667,108.893333 365.86,108.344 C365.273333,107.794667 364.430667,107.52 363.332,107.52 C362.670667,107.52 362.041333,107.618667 361.444,107.816 C360.846667,108.013333 360.334667,108.293333 359.908,108.656 L359.908,108.656 L360.42,109.504 C360.772,109.194667 361.193333,108.952 361.684,108.776 C362.174667,108.6 362.686667,108.512 363.22,108.512 C363.998667,108.512 364.590667,108.701333 364.996,109.08 C365.401333,109.458667 365.604,110.010667 365.604,110.736 L365.604,110.736 L365.604,111.248 L362.932,111.248 C361.801333,111.248 360.977333,111.466667 360.46,111.904 C359.942667,112.341333 359.684,112.917333 359.684,113.632 C359.684,114.368 359.961333,114.96 360.516,115.408 C361.070667,115.856 361.817333,116.08 362.756,116.08 Z M362.932,115.184 C362.26,115.184 361.737333,115.042667 361.364,114.76 C360.990667,114.477333 360.804,114.090667 360.804,113.6 C360.804,112.597333 361.524,112.096 362.964,112.096 L362.964,112.096 L365.604,112.096 L365.604,113.472 C365.38,114.026667 365.038667,114.450667 364.58,114.744 C364.121333,115.037333 363.572,115.184 362.932,115.184 Z M370.964,116 L370.964,111.584 C370.964,110.634667 371.217333,109.890667 371.724,109.352 C372.230667,108.813333 372.916,108.544 373.78,108.544 C374.558667,108.544 375.158667,108.773333 375.58,109.232 C376.001333,109.690667 376.212,110.357333 376.212,111.232 L376.212,111.232 L376.212,116 L377.348,116 L377.348,111.584 C377.348,110.634667 377.598667,109.890667 378.1,109.352 C378.601333,108.813333 379.289333,108.544 380.164,108.544 C380.932,108.544 381.526667,108.773333 381.948,109.232 C382.369333,109.690667 382.58,110.357333 382.58,111.232 L382.58,111.232 L382.58,116 L383.716,116 L383.716,111.12 C383.716,109.936 383.414667,109.04 382.812,108.432 C382.209333,107.824 381.38,107.52 380.324,107.52 C379.577333,107.52 378.913333,107.677333 378.332,107.992 C377.750667,108.306667 377.305333,108.741333 376.996,109.296 C376.74,108.709333 376.353333,108.266667 375.836,107.968 C375.318667,107.669333 374.708,107.52 374.004,107.52 C373.310667,107.52 372.697333,107.658667 372.164,107.936 C371.630667,108.213333 371.214667,108.608 370.916,109.12 L370.916,109.12 L370.916,107.584 L369.828,107.584 L369.828,116 L370.964,116 Z M387.38,105.744 C387.614667,105.744 387.812,105.664 387.972,105.504 C388.132,105.344 388.212,105.146667 388.212,104.912 C388.212,104.698667 388.132,104.514667 387.972,104.36 C387.812,104.205333 387.614667,104.128 387.38,104.128 C387.145333,104.128 386.948,104.208 386.788,104.368 C386.628,104.528 386.548,104.714667 386.548,104.928 C386.548,105.152 386.628,105.344 386.788,105.504 C386.948,105.664 387.145333,105.744 387.38,105.744 Z M387.94,116 L387.94,107.584 L386.804,107.584 L386.804,116 L387.94,116 Z M392.244,116 L392.244,104.128 L391.108,104.128 L391.108,116 L392.244,116 Z M395.988,105.744 C396.222667,105.744 396.42,105.664 396.58,105.504 C396.74,105.344 396.82,105.146667 396.82,104.912 C396.82,104.698667 396.74,104.514667 396.58,104.36 C396.42,104.205333 396.222667,104.128 395.988,104.128 C395.753333,104.128 395.556,104.208 395.396,104.368 C395.236,104.528 395.156,104.714667 395.156,104.928 C395.156,105.152 395.236,105.344 395.396,105.504 C395.556,105.664 395.753333,105.744 395.988,105.744 Z M396.548,116 L396.548,107.584 L395.412,107.584 L395.412,116 L396.548,116 Z M403.284,116.08 C403.956,116.08 404.572,115.962667 405.132,115.728 C405.692,115.493333 406.158667,115.152 406.532,114.704 L406.532,114.704 L405.892,113.968 C405.572,114.330667 405.193333,114.605333 404.756,114.792 C404.318667,114.978667 403.838667,115.072 403.316,115.072 C402.388,115.072 401.62,114.802667 401.012,114.264 C400.404,113.725333 400.068,113.018667 400.004,112.144 L400.004,112.144 L407.044,112.144 L407.06,111.792 C407.06,110.96 406.884,110.221333 406.532,109.576 C406.18,108.930667 405.694667,108.426667 405.076,108.064 C404.457333,107.701333 403.758667,107.52 402.98,107.52 C402.201333,107.52 401.5,107.701333 400.876,108.064 C400.252,108.426667 399.761333,108.933333 399.404,109.584 C399.046667,110.234667 398.868,110.970667 398.868,111.792 C398.868,112.613333 399.054667,113.349333 399.428,114 C399.801333,114.650667 400.321333,115.16 400.988,115.528 C401.654667,115.896 402.42,116.08 403.284,116.08 Z M405.972,111.296 L400.004,111.296 C400.078667,110.464 400.390667,109.789333 400.94,109.272 C401.489333,108.754667 402.169333,108.496 402.98,108.496 C403.801333,108.496 404.486667,108.754667 405.036,109.272 C405.585333,109.789333 405.897333,110.464 405.972,111.296 L405.972,111.296 Z M411.636,116.08 C412.724,116.08 413.574667,115.864 414.188,115.432 C414.801333,115 415.108,114.416 415.108,113.68 C415.108,113.136 414.964,112.709333 414.676,112.4 C414.388,112.090667 414.041333,111.872 413.636,111.744 C413.230667,111.616 412.692,111.488 412.02,111.36 C411.476,111.264 411.049333,111.170667 410.74,111.08 C410.430667,110.989333 410.172,110.848 409.964,110.656 C409.756,110.464 409.652,110.208 409.652,109.888 C409.652,109.472 409.836,109.136 410.204,108.88 C410.572,108.624 411.118667,108.496 411.844,108.496 C412.804,108.496 413.630667,108.736 414.324,109.216 L414.324,109.216 L414.82,108.304 C414.468,108.069333 414.02,107.88 413.476,107.736 C412.932,107.592 412.388,107.52 411.844,107.52 C410.798667,107.52 409.982667,107.744 409.396,108.192 C408.809333,108.64 408.516,109.216 408.516,109.92 C408.516,110.485333 408.662667,110.928 408.956,111.248 C409.249333,111.568 409.604,111.794667 410.02,111.928 C410.436,112.061333 410.985333,112.192 411.668,112.32 C412.18,112.405333 412.590667,112.493333 412.9,112.584 C413.209333,112.674667 413.465333,112.808 413.668,112.984 C413.870667,113.16 413.972,113.402667 413.972,113.712 C413.972,114.149333 413.788,114.488 413.42,114.728 C413.052,114.968 412.484,115.088 411.716,115.088 C411.14,115.088 410.585333,115 410.052,114.824 C409.518667,114.648 409.076,114.421333 408.724,114.144 L408.724,114.144 L408.212,115.04 C408.564,115.338667 409.052,115.586667 409.676,115.784 C410.3,115.981333 410.953333,116.08 411.636,116.08 Z\",\"id\":\"Middleincomefamilies\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"g\",{\"transform\":\"translate(54.000000, 0.000000)\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"1.5\",\"key\":3},[React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"19.5\",\"cy\":\"11.5\",\"r\":\"11.5\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M39,44 C39,32.954305 30.2695526,24 19.5,24 C8.73044738,24 0,32.954305 0,44\",\"id\":\"Oval-Copy\",\"key\":1})]),React.createElement(\"g\",{\"transform\":\"translate(331.000000, 4.000000)\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"1.5\",\"key\":4},[React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"7.5\",\"cy\":\"18.5\",\"r\":\"4.5\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M15,31 C15,26.581722 11.6421356,23 7.5,23 C3.35786438,23 0,26.581722 0,31\",\"id\":\"Oval-Copy\",\"key\":1}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"31.5\",\"cy\":\"4.5\",\"r\":\"4.5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M39,17 C39,12.581722 35.6421356,9 31.5,9 C27.3578644,9 24,12.581722 24,17\",\"id\":\"Oval-Copy\",\"key\":3}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"54.5\",\"cy\":\"18.5\",\"r\":\"4.5\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M62,31 C62,26.581722 58.6421356,23 54.5,23 C50.3578644,23 47,26.581722 47,31\",\"id\":\"Oval-Copy\",\"key\":5}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"31.5\",\"cy\":\"35.5\",\"r\":\"4.5\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M39,48 C39,43.581722 35.6421356,40 31.5,40 C27.3578644,40 24,43.581722 24,48\",\"id\":\"Oval-Copy\",\"key\":7}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"77.5\",\"cy\":\"4.5\",\"r\":\"4.5\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M85,17 C85,12.581722 81.6421356,9 77.5,9 C73.3578644,9 70,12.581722 70,17\",\"id\":\"Oval-Copy\",\"key\":9}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"100.5\",\"cy\":\"18.5\",\"r\":\"4.5\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M108,31 C108,26.581722 104.642136,23 100.5,23 C96.3578644,23 93,26.581722 93,31\",\"id\":\"Oval-Copy\",\"key\":11}),React.createElement(\"circle\",{\"id\":\"Oval\",\"cx\":\"77.5\",\"cy\":\"35.5\",\"r\":\"4.5\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M85,48 C85,43.581722 81.6421356,40 77.5,40 C73.3578644,40 70,43.581722 70,48\",\"id\":\"Oval-Copy\",\"key\":13})])])))]);\n}\n\nEarlyYearsGraph1.defaultProps = {\"width\":\"445px\",\"height\":\"126px\",\"viewBox\":\"0 0 445 126\",\"version\":\"1.1\"};\n\nmodule.exports = EarlyYearsGraph1;\n\nEarlyYearsGraph1.default = EarlyYearsGraph1;\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.ScrollContainer = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _scrollHandler = require(\"./scroll-handler\");\n\nvar _router = require(\"@reach/router\");\n\n// TODO: In Gatsby v3, this file should be removed.\n// We are deprecating this in V2 in favor of useScrollRestoration\nvar propTypes = {\n  scrollKey: _propTypes.default.string.isRequired,\n  shouldUpdateScroll: _propTypes.default.func,\n  children: _propTypes.default.element.isRequired\n};\nvar hasNotWarnedDeprecation = true;\n\nvar ScrollContainerImplementation = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ScrollContainerImplementation, _React$Component);\n\n  function ScrollContainerImplementation(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    if (process.env.NODE_ENV !== \"production\" && hasNotWarnedDeprecation) {\n      hasNotWarnedDeprecation = false;\n      console.log(\"Deprecation Warning:\\n\\n  Gatsby <ScrollContainer> is deprecated in Gatsby v2 and will be removed in Gatsby v3.\\n  Update to the React hook alternative useScrollRestoration, like this:.\\n  \\n  ```\\n  import React from 'react';\\n  import { useScrollRestoration } from 'gatsby-react-router-scroll';\\n\\n  function Component() {\\n    const scrollRestoration = useScrollRestoration('\" + _this.props.scrollKey + \"');\\n\\n    return <ul {...scrollRestoration} />;\\n  }\\n  ```\\n  \");\n    }\n\n    return _this;\n  }\n\n  var _proto = ScrollContainerImplementation.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/no-find-dom-node\n    var node = _reactDom.default.findDOMNode(this);\n\n    var _this$props = this.props,\n        location = _this$props.location,\n        scrollKey = _this$props.scrollKey;\n    if (!node) return;\n    node.addEventListener(\"scroll\", function () {\n      _this2.props.context.save(location, scrollKey, node.scrollTop);\n    });\n    var position = this.props.context.read(location, scrollKey);\n    node.scrollTo(0, position || 0);\n  };\n\n  _proto.render = function render() {\n    return this.props.children;\n  };\n\n  return ScrollContainerImplementation;\n}(React.Component);\n\nvar ScrollContainer = function ScrollContainer(props) {\n  return /*#__PURE__*/React.createElement(_router.Location, null, function (_ref) {\n    var location = _ref.location;\n    return /*#__PURE__*/React.createElement(_scrollHandler.ScrollContext.Consumer, null, function (context) {\n      return /*#__PURE__*/React.createElement(ScrollContainerImplementation, (0, _extends2.default)({}, props, {\n        context: context,\n        location: location\n      }));\n    });\n  });\n};\n\nexports.ScrollContainer = ScrollContainer;\nScrollContainer.propTypes = propTypes;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.BreadcrumbConsumer = exports.BreadcrumbProvider = exports.BreadcrumbContext = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n/* eslint-disable import/no-extraneous-dependencies */\nvar BreadcrumbContext = _react.default.createContext('Breadcrumb');\n\nexports.BreadcrumbContext = BreadcrumbContext;\n\nvar BreadcrumbProvider = function BreadcrumbProvider(_ref) {\n  var children = _ref.children,\n      defaultCrumb = _ref.defaultCrumb;\n\n  var _React$useState = _react.default.useState(defaultCrumb ? [(0, _extends2.default)({\n    pathname: defaultCrumb.location.pathname\n  }, defaultCrumb)] : []),\n      crumbs = _React$useState[0],\n      setCrumbs = _React$useState[1];\n\n  var updateCrumbs = function updateCrumbs(_ref2) {\n    var location = _ref2.location,\n        crumbLabel = _ref2.crumbLabel,\n        crumbSeparator = _ref2.crumbSeparator,\n        crumbStyle = _ref2.crumbStyle,\n        crumbActiveStyle = _ref2.crumbActiveStyle;\n    // check to see if the path is already in the breadcrumb\n    var indexOfFirstOccurrenceOfCurrentPath = crumbs.findIndex(function (crumb) {\n      return crumb.pathname === location.pathname;\n    }); // when path exists in breadcrumb we need to remove any crumbs after\n    // that pathname\n\n    if (indexOfFirstOccurrenceOfCurrentPath > -1 && indexOfFirstOccurrenceOfCurrentPath < crumbs.length - 1) {\n      setCrumbs(crumbs.slice(0, indexOfFirstOccurrenceOfCurrentPath));\n    } // when path does not exist we add it to the end of the breadcrumb\n\n\n    if (indexOfFirstOccurrenceOfCurrentPath === -1) {\n      setCrumbs([].concat(crumbs, [(0, _extends2.default)((0, _extends2.default)({}, location), {}, {\n        crumbLabel: crumbLabel,\n        crumbSeparator: crumbSeparator,\n        crumbStyle: crumbStyle,\n        crumbActiveStyle: crumbActiveStyle\n      })]));\n    }\n  };\n\n  var crumb = {\n    crumbs: crumbs,\n    updateCrumbs: updateCrumbs\n  };\n  return /*#__PURE__*/_react.default.createElement(BreadcrumbContext.Provider, {\n    value: crumb\n  }, children);\n};\n\nexports.BreadcrumbProvider = BreadcrumbProvider;\nvar BreadcrumbConsumer = BreadcrumbContext.Consumer;\nexports.BreadcrumbConsumer = BreadcrumbConsumer;\nBreadcrumbProvider.defaultProps = {\n  defaultCrumb: null\n};\nBreadcrumbProvider.propTypes = {\n  children: _propTypes.default.node.isRequired,\n  defaultCrumb: _propTypes.default.shape({\n    location: _propTypes.default.shape({\n      pathname: _propTypes.default.string\n    }),\n    crumbLabel: _propTypes.default.string,\n    crumbSeparator: _propTypes.default.string,\n    crumbStyle: _propTypes.default.shape(),\n    crumbActiveStyle: _propTypes.default.shape()\n  })\n};","import { serializeStyles } from '@emotion/serialize';\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nexport default css;","var React = require('react');\n\nfunction ApprenticeshipsMobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 9\"),React.createElement(\"g\",{\"id\":\"Home->-Issues-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Mobile/Timeline/School-years/Early-years-foundation-stage-Copy\",\"transform\":\"translate(-9.000000, -2493.000000)\"},React.createElement(\"g\",{\"id\":\"Group-9\",\"transform\":\"translate(11.000000, 2493.000000)\"},[React.createElement(\"path\",{\"d\":\"M35.48,14 L35.48,12.976 L29.32,12.976 L33.128,9.232 C33.8426667,8.53866667 34.328,7.92533333 34.584,7.392 C34.84,6.85866667 34.968,6.304 34.968,5.728 C34.968,4.78933333 34.6346667,4.05066667 33.968,3.512 C33.3013333,2.97333333 32.3973333,2.704 31.256,2.704 C30.4026667,2.704 29.6373333,2.84266667 28.96,3.12 C28.2826667,3.39733333 27.7253333,3.792 27.288,4.304 L27.288,4.304 L28.104,5.008 C28.8293333,4.176 29.848,3.76 31.16,3.76 C32.0026667,3.76 32.6506667,3.944 33.104,4.312 C33.5573333,4.68 33.784,5.19466667 33.784,5.856 C33.784,6.28266667 33.68,6.70666667 33.472,7.128 C33.264,7.54933333 32.8666667,8.048 32.28,8.624 L32.28,8.624 L27.624,13.184 L27.624,14 L35.48,14 Z M41.384,14.096 C42.248,14.096 43.0186667,13.8666667 43.696,13.408 C44.3733333,12.9493333 44.904,12.2906667 45.288,11.432 C45.672,10.5733333 45.864,9.56266667 45.864,8.4 C45.864,7.23733333 45.672,6.22666667 45.288,5.368 C44.904,4.50933333 44.3733333,3.85066667 43.696,3.392 C43.0186667,2.93333333 42.248,2.704 41.384,2.704 C40.52,2.704 39.7493333,2.93333333 39.072,3.392 C38.3946667,3.85066667 37.8666667,4.50933333 37.488,5.368 C37.1093333,6.22666667 36.92,7.23733333 36.92,8.4 C36.92,9.56266667 37.1093333,10.5733333 37.488,11.432 C37.8666667,12.2906667 38.3946667,12.9493333 39.072,13.408 C39.7493333,13.8666667 40.52,14.096 41.384,14.096 Z M41.384,13.04 C40.7333333,13.04 40.16,12.8586667 39.664,12.496 C39.168,12.1333333 38.7813333,11.6053333 38.504,10.912 C38.2266667,10.2186667 38.088,9.38133333 38.088,8.4 C38.088,7.41866667 38.2266667,6.58133333 38.504,5.888 C38.7813333,5.19466667 39.168,4.66666667 39.664,4.304 C40.16,3.94133333 40.7333333,3.76 41.384,3.76 C42.0346667,3.76 42.608,3.94133333 43.104,4.304 C43.6,4.66666667 43.9866667,5.19466667 44.264,5.888 C44.5413333,6.58133333 44.68,7.41866667 44.68,8.4 C44.68,9.38133333 44.5413333,10.2186667 44.264,10.912 C43.9866667,11.6053333 43.6,12.1333333 43.104,12.496 C42.608,12.8586667 42.0346667,13.04 41.384,13.04 Z M50.616,14 L50.616,2.8 L46.824,2.8 L46.824,3.824 L49.464,3.824 L49.464,14 L50.616,14 Z M56.824,14.096 C57.7093333,14.096 58.456,13.9493333 59.064,13.656 C59.672,13.3626667 60.128,12.96 60.432,12.448 C60.736,11.936 60.888,11.3546667 60.888,10.704 C60.888,9.65866667 60.5173333,8.84533333 59.776,8.264 C59.0346667,7.68266667 57.8533333,7.392 56.232,7.392 L56.232,7.392 L54.792,7.392 L55.176,3.824 L60.296,3.824 L60.296,2.8 L54.168,2.8 L53.592,8.416 L55.976,8.416 C57.3306667,8.416 58.2933333,8.61333333 58.864,9.008 C59.4346667,9.40266667 59.72,9.984 59.72,10.752 C59.72,11.4453333 59.4666667,12 58.96,12.416 C58.4533333,12.832 57.736,13.04 56.808,13.04 C56.104,13.04 55.448,12.92 54.84,12.68 C54.232,12.44 53.7413333,12.128 53.368,11.744 L53.368,11.744 L52.808,12.656 C53.2453333,13.0933333 53.824,13.4426667 54.544,13.704 C55.264,13.9653333 56.024,14.096 56.824,14.096 Z M62.152,15.6 L67.432,0.528 L66.392,0.528 L61.112,15.6 L62.152,15.6 Z M70.808,14 L70.808,2.8 L67.016,2.8 L67.016,3.824 L69.656,3.824 L69.656,14 L70.808,14 Z M78.072,14.096 C78.7973333,14.096 79.4506667,13.9546667 80.032,13.672 C80.6133333,13.3893333 81.0693333,12.9866667 81.4,12.464 C81.7306667,11.9413333 81.896,11.3386667 81.896,10.656 C81.896,9.984 81.736,9.39466667 81.416,8.888 C81.096,8.38133333 80.6506667,7.98933333 80.08,7.712 C79.5093333,7.43466667 78.856,7.296 78.12,7.296 C77.3306667,7.296 76.632,7.464 76.024,7.8 C75.416,8.136 74.9733333,8.608 74.696,9.216 C74.664,8.87466667 74.648,8.57066667 74.648,8.304 C74.648,6.81066667 75,5.672 75.704,4.888 C76.408,4.104 77.3786667,3.712 78.616,3.712 C79.5333333,3.712 80.2586667,3.888 80.792,4.24 L80.792,4.24 L81.256,3.312 C80.5946667,2.90666667 79.7093333,2.704 78.6,2.704 C77.576,2.704 76.68,2.92533333 75.912,3.368 C75.144,3.81066667 74.5466667,4.464 74.12,5.328 C73.6933333,6.192 73.48,7.248 73.48,8.496 C73.48,10.2773333 73.8746667,11.656 74.664,12.632 C75.4533333,13.608 76.5893333,14.096 78.072,14.096 Z M78.024,13.12 C77.4053333,13.12 76.872,13.008 76.424,12.784 C75.976,12.56 75.6373333,12.2666667 75.408,11.904 C75.1786667,11.5413333 75.064,11.1466667 75.064,10.72 C75.064,10.2613333 75.1866667,9.84533333 75.432,9.472 C75.6773333,9.09866667 76.016,8.80533333 76.448,8.592 C76.88,8.37866667 77.3786667,8.272 77.944,8.272 C78.808,8.272 79.4933333,8.49066667 80,8.928 C80.5066667,9.36533333 80.76,9.952 80.76,10.688 C80.76,11.424 80.5066667,12.0133333 80,12.456 C79.4933333,12.8986667 78.8346667,13.12 78.024,13.12 Z\",\"id\":\"2015/16\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":0}),React.createElement(\"line\",{\"x1\":\"1\",\"y1\":\"8.5\",\"x2\":\"17\",\"y2\":\"8.5\",\"id\":\"Line-5\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M143.48,14 L143.48,12.976 L137.32,12.976 L141.128,9.232 C141.842667,8.53866667 142.328,7.92533333 142.584,7.392 C142.84,6.85866667 142.968,6.304 142.968,5.728 C142.968,4.78933333 142.634667,4.05066667 141.968,3.512 C141.301333,2.97333333 140.397333,2.704 139.256,2.704 C138.402667,2.704 137.637333,2.84266667 136.96,3.12 C136.282667,3.39733333 135.725333,3.792 135.288,4.304 L135.288,4.304 L136.104,5.008 C136.829333,4.176 137.848,3.76 139.16,3.76 C140.002667,3.76 140.650667,3.944 141.104,4.312 C141.557333,4.68 141.784,5.19466667 141.784,5.856 C141.784,6.28266667 141.68,6.70666667 141.472,7.128 C141.264,7.54933333 140.866667,8.048 140.28,8.624 L140.28,8.624 L135.624,13.184 L135.624,14 L143.48,14 Z M149.384,14.096 C150.248,14.096 151.018667,13.8666667 151.696,13.408 C152.373333,12.9493333 152.904,12.2906667 153.288,11.432 C153.672,10.5733333 153.864,9.56266667 153.864,8.4 C153.864,7.23733333 153.672,6.22666667 153.288,5.368 C152.904,4.50933333 152.373333,3.85066667 151.696,3.392 C151.018667,2.93333333 150.248,2.704 149.384,2.704 C148.52,2.704 147.749333,2.93333333 147.072,3.392 C146.394667,3.85066667 145.866667,4.50933333 145.488,5.368 C145.109333,6.22666667 144.92,7.23733333 144.92,8.4 C144.92,9.56266667 145.109333,10.5733333 145.488,11.432 C145.866667,12.2906667 146.394667,12.9493333 147.072,13.408 C147.749333,13.8666667 148.52,14.096 149.384,14.096 Z M149.384,13.04 C148.733333,13.04 148.16,12.8586667 147.664,12.496 C147.168,12.1333333 146.781333,11.6053333 146.504,10.912 C146.226667,10.2186667 146.088,9.38133333 146.088,8.4 C146.088,7.41866667 146.226667,6.58133333 146.504,5.888 C146.781333,5.19466667 147.168,4.66666667 147.664,4.304 C148.16,3.94133333 148.733333,3.76 149.384,3.76 C150.034667,3.76 150.608,3.94133333 151.104,4.304 C151.6,4.66666667 151.986667,5.19466667 152.264,5.888 C152.541333,6.58133333 152.68,7.41866667 152.68,8.4 C152.68,9.38133333 152.541333,10.2186667 152.264,10.912 C151.986667,11.6053333 151.6,12.1333333 151.104,12.496 C150.608,12.8586667 150.034667,13.04 149.384,13.04 Z M158.616,14 L158.616,2.8 L154.824,2.8 L154.824,3.824 L157.464,3.824 L157.464,14 L158.616,14 Z M165.88,14.096 C166.605333,14.096 167.258667,13.9546667 167.84,13.672 C168.421333,13.3893333 168.877333,12.9866667 169.208,12.464 C169.538667,11.9413333 169.704,11.3386667 169.704,10.656 C169.704,9.984 169.544,9.39466667 169.224,8.888 C168.904,8.38133333 168.458667,7.98933333 167.888,7.712 C167.317333,7.43466667 166.664,7.296 165.928,7.296 C165.138667,7.296 164.44,7.464 163.832,7.8 C163.224,8.136 162.781333,8.608 162.504,9.216 C162.472,8.87466667 162.456,8.57066667 162.456,8.304 C162.456,6.81066667 162.808,5.672 163.512,4.888 C164.216,4.104 165.186667,3.712 166.424,3.712 C167.341333,3.712 168.066667,3.888 168.6,4.24 L168.6,4.24 L169.064,3.312 C168.402667,2.90666667 167.517333,2.704 166.408,2.704 C165.384,2.704 164.488,2.92533333 163.72,3.368 C162.952,3.81066667 162.354667,4.464 161.928,5.328 C161.501333,6.192 161.288,7.248 161.288,8.496 C161.288,10.2773333 161.682667,11.656 162.472,12.632 C163.261333,13.608 164.397333,14.096 165.88,14.096 Z M165.832,13.12 C165.213333,13.12 164.68,13.008 164.232,12.784 C163.784,12.56 163.445333,12.2666667 163.216,11.904 C162.986667,11.5413333 162.872,11.1466667 162.872,10.72 C162.872,10.2613333 162.994667,9.84533333 163.24,9.472 C163.485333,9.09866667 163.824,8.80533333 164.256,8.592 C164.688,8.37866667 165.186667,8.272 165.752,8.272 C166.616,8.272 167.301333,8.49066667 167.808,8.928 C168.314667,9.36533333 168.568,9.952 168.568,10.688 C168.568,11.424 168.314667,12.0133333 167.808,12.456 C167.301333,12.8986667 166.642667,13.12 165.832,13.12 Z M170.84,15.6 L176.12,0.528 L175.08,0.528 L169.8,15.6 L170.84,15.6 Z M179.496,14 L179.496,2.8 L175.704,2.8 L175.704,3.824 L178.344,3.824 L178.344,14 L179.496,14 Z M185.384,14 L190.072,3.616 L190.072,2.8 L181.848,2.8 L181.848,5.92 L182.984,5.92 L182.984,3.824 L188.744,3.824 L184.136,14 L185.384,14 Z\",\"id\":\"2016/17\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":2}),React.createElement(\"line\",{\"x1\":\"107\",\"y1\":\"8.5\",\"x2\":\"123\",\"y2\":\"8.5\",\"id\":\"Line-5-Copy\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M251.48,14 L251.48,12.976 L245.32,12.976 L249.128,9.232 C249.842667,8.53866667 250.328,7.92533333 250.584,7.392 C250.84,6.85866667 250.968,6.304 250.968,5.728 C250.968,4.78933333 250.634667,4.05066667 249.968,3.512 C249.301333,2.97333333 248.397333,2.704 247.256,2.704 C246.402667,2.704 245.637333,2.84266667 244.96,3.12 C244.282667,3.39733333 243.725333,3.792 243.288,4.304 L243.288,4.304 L244.104,5.008 C244.829333,4.176 245.848,3.76 247.16,3.76 C248.002667,3.76 248.650667,3.944 249.104,4.312 C249.557333,4.68 249.784,5.19466667 249.784,5.856 C249.784,6.28266667 249.68,6.70666667 249.472,7.128 C249.264,7.54933333 248.866667,8.048 248.28,8.624 L248.28,8.624 L243.624,13.184 L243.624,14 L251.48,14 Z M257.384,14.096 C258.248,14.096 259.018667,13.8666667 259.696,13.408 C260.373333,12.9493333 260.904,12.2906667 261.288,11.432 C261.672,10.5733333 261.864,9.56266667 261.864,8.4 C261.864,7.23733333 261.672,6.22666667 261.288,5.368 C260.904,4.50933333 260.373333,3.85066667 259.696,3.392 C259.018667,2.93333333 258.248,2.704 257.384,2.704 C256.52,2.704 255.749333,2.93333333 255.072,3.392 C254.394667,3.85066667 253.866667,4.50933333 253.488,5.368 C253.109333,6.22666667 252.92,7.23733333 252.92,8.4 C252.92,9.56266667 253.109333,10.5733333 253.488,11.432 C253.866667,12.2906667 254.394667,12.9493333 255.072,13.408 C255.749333,13.8666667 256.52,14.096 257.384,14.096 Z M257.384,13.04 C256.733333,13.04 256.16,12.8586667 255.664,12.496 C255.168,12.1333333 254.781333,11.6053333 254.504,10.912 C254.226667,10.2186667 254.088,9.38133333 254.088,8.4 C254.088,7.41866667 254.226667,6.58133333 254.504,5.888 C254.781333,5.19466667 255.168,4.66666667 255.664,4.304 C256.16,3.94133333 256.733333,3.76 257.384,3.76 C258.034667,3.76 258.608,3.94133333 259.104,4.304 C259.6,4.66666667 259.986667,5.19466667 260.264,5.888 C260.541333,6.58133333 260.68,7.41866667 260.68,8.4 C260.68,9.38133333 260.541333,10.2186667 260.264,10.912 C259.986667,11.6053333 259.6,12.1333333 259.104,12.496 C258.608,12.8586667 258.034667,13.04 257.384,13.04 Z M266.616,14 L266.616,2.8 L262.824,2.8 L262.824,3.824 L265.464,3.824 L265.464,14 L266.616,14 Z M272.504,14 L277.192,3.616 L277.192,2.8 L268.968,2.8 L268.968,5.92 L270.104,5.92 L270.104,3.824 L275.864,3.824 L271.256,14 L272.504,14 Z M278.52,15.6 L283.8,0.528 L282.76,0.528 L277.48,15.6 L278.52,15.6 Z M287.176,14 L287.176,2.8 L283.384,2.8 L283.384,3.824 L286.024,3.824 L286.024,14 L287.176,14 Z M294.104,14.096 C294.989333,14.096 295.76,13.9653333 296.416,13.704 C297.072,13.4426667 297.576,13.0693333 297.928,12.584 C298.28,12.0986667 298.456,11.5306667 298.456,10.88 C298.456,10.2186667 298.266667,9.65333333 297.888,9.184 C297.509333,8.71466667 296.968,8.36266667 296.264,8.128 C296.84,7.904 297.282667,7.58133333 297.592,7.16 C297.901333,6.73866667 298.056,6.24 298.056,5.664 C298.056,5.06666667 297.890667,4.544 297.56,4.096 C297.229333,3.648 296.768,3.304 296.176,3.064 C295.584,2.824 294.893333,2.704 294.104,2.704 C292.909333,2.704 291.957333,2.97066667 291.248,3.504 C290.538667,4.03733333 290.184,4.75733333 290.184,5.664 C290.184,6.24 290.333333,6.73866667 290.632,7.16 C290.930667,7.58133333 291.368,7.904 291.944,8.128 C291.24,8.36266667 290.704,8.712 290.336,9.176 C289.968,9.64 289.784,10.208 289.784,10.88 C289.784,11.872 290.168,12.656 290.936,13.232 C291.704,13.808 292.76,14.096 294.104,14.096 Z M294.104,7.712 C293.24,7.712 292.562667,7.53066667 292.072,7.168 C291.581333,6.80533333 291.336,6.31466667 291.336,5.696 C291.336,5.07733333 291.584,4.58666667 292.08,4.224 C292.576,3.86133333 293.250667,3.68 294.104,3.68 C294.946667,3.68 295.621333,3.86133333 296.128,4.224 C296.634667,4.58666667 296.888,5.08266667 296.888,5.712 C296.888,6.32 296.64,6.80533333 296.144,7.168 C295.648,7.53066667 294.968,7.712 294.104,7.712 Z M294.104,13.12 C293.112,13.12 292.338667,12.92 291.784,12.52 C291.229333,12.12 290.952,11.568 290.952,10.864 C290.952,10.1706667 291.232,9.624 291.792,9.224 C292.352,8.824 293.122667,8.624 294.104,8.624 C295.096,8.624 295.872,8.824 296.432,9.224 C296.992,9.624 297.272,10.1706667 297.272,10.864 C297.272,11.5573333 296.992,12.1066667 296.432,12.512 C295.872,12.9173333 295.096,13.12 294.104,13.12 Z\",\"id\":\"2017/18\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"line\",{\"x1\":\"215\",\"y1\":\"8.5\",\"x2\":\"231\",\"y2\":\"8.5\",\"id\":\"Line-5-Copy\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":5}),React.createElement(\"g\",{\"id\":\"Group-8\",\"transform\":\"translate(1.000000, 81.000000)\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"key\":6},React.createElement(\"g\",{\"id\":\"Group-7\",\"transform\":\"translate(0.000000, 0.000000)\"},[React.createElement(\"polygon\",{\"id\":\"Line-7\",\"points\":\"1 -0.5 1 679.5 4.54747351e-13 679.5 4.54747351e-13 -0.5\",\"key\":0}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy\",\"points\":\"351 -0.5 351 679.5 350 679.5 350 -0.5\",\"key\":1}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy-2\",\"points\":\"234 -0.5 234 679.5 233 679.5 233 -0.5\",\"key\":2}),React.createElement(\"polygon\",{\"id\":\"Line-7-Copy-3\",\"points\":\"118 -0.5 118 679.5 117 679.5 117 -0.5\",\"key\":3})])),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"fill\":\"#2D3142\",\"transform\":\"translate(158.000000, 93.000000) rotate(-270.000000) translate(-158.000000, -93.000000) \",\"x\":\"146\",\"y\":\"-64\",\"width\":\"24\",\"height\":\"314\",\"key\":7}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-61\",\"fill\":\"#2D3142\",\"transform\":\"translate(172.000000, 242.500000) rotate(-270.000000) translate(-172.000000, -242.500000) \",\"x\":\"160\",\"y\":\"71\",\"width\":\"24\",\"height\":\"343\",\"key\":8}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-64\",\"fill\":\"#2D3142\",\"transform\":\"translate(141.000000, 390.500000) rotate(-270.000000) translate(-141.000000, -390.500000) \",\"x\":\"129\",\"y\":\"250\",\"width\":\"24\",\"height\":\"281\",\"key\":9}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-67\",\"fill\":\"#2D3142\",\"transform\":\"translate(128.000000, 539.000000) rotate(-270.000000) translate(-128.000000, -539.000000) \",\"x\":\"116\",\"y\":\"412\",\"width\":\"24\",\"height\":\"254\",\"key\":10}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-70\",\"fill\":\"#2D3142\",\"transform\":\"translate(78.000000, 685.000000) rotate(-270.000000) translate(-78.000000, -685.000000) \",\"x\":\"66\",\"y\":\"608\",\"width\":\"24\",\"height\":\"154\",\"key\":11}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-59\",\"fill\":\"#3772FF\",\"transform\":\"translate(158.000000, 125.000000) rotate(-270.000000) translate(-158.000000, -125.000000) \",\"x\":\"146\",\"y\":\"-32\",\"width\":\"24\",\"height\":\"314\",\"key\":12}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-62\",\"fill\":\"#3772FF\",\"transform\":\"translate(172.000000, 274.500000) rotate(-270.000000) translate(-172.000000, -274.500000) \",\"x\":\"160\",\"y\":\"103\",\"width\":\"24\",\"height\":\"343\",\"key\":13}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-65\",\"fill\":\"#3772FF\",\"transform\":\"translate(141.000000, 422.500000) rotate(-270.000000) translate(-141.000000, -422.500000) \",\"x\":\"129\",\"y\":\"282\",\"width\":\"24\",\"height\":\"281\",\"key\":14}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-71\",\"fill\":\"#3772FF\",\"transform\":\"translate(78.000000, 717.000000) rotate(-270.000000) translate(-78.000000, -717.000000) \",\"x\":\"66\",\"y\":\"640\",\"width\":\"24\",\"height\":\"154\",\"key\":15}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-60\",\"fill\":\"#FFBA08\",\"transform\":\"translate(136.000000, 157.500000) rotate(-270.000000) translate(-136.000000, -157.500000) \",\"x\":\"124\",\"y\":\"22\",\"width\":\"24\",\"height\":\"271\",\"key\":16}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-68\",\"fill\":\"#3772FF\",\"transform\":\"translate(128.000000, 571.000000) rotate(-270.000000) translate(-128.000000, -571.000000) \",\"x\":\"116\",\"y\":\"444\",\"width\":\"24\",\"height\":\"254\",\"key\":17}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-63\",\"fill\":\"#FFBA08\",\"transform\":\"translate(158.000000, 306.000000) rotate(-270.000000) translate(-158.000000, -306.000000) \",\"x\":\"146\",\"y\":\"149\",\"width\":\"24\",\"height\":\"314\",\"key\":18}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-66\",\"fill\":\"#FFBA08\",\"transform\":\"translate(125.000000, 454.000000) rotate(-270.000000) translate(-125.000000, -454.000000) \",\"x\":\"113\",\"y\":\"330\",\"width\":\"24\",\"height\":\"248\",\"key\":19}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-69\",\"fill\":\"#FFBA08\",\"transform\":\"translate(102.000000, 603.500000) rotate(-270.000000) translate(-102.000000, -603.500000) \",\"x\":\"90\",\"y\":\"502\",\"width\":\"24\",\"height\":\"203\",\"key\":20}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-72\",\"fill\":\"#FFBA08\",\"transform\":\"translate(78.000000, 749.000000) rotate(-270.000000) translate(-78.000000, -749.000000) \",\"x\":\"66\",\"y\":\"672\",\"width\":\"24\",\"height\":\"154\",\"key\":21}),React.createElement(\"path\",{\"d\":\"M282.761,99 L282.761,97.976 L276.601,97.976 L280.409,94.232 C281.123667,93.5386667 281.609,92.9253333 281.865,92.392 C282.121,91.8586667 282.249,91.304 282.249,90.728 C282.249,89.7893333 281.915667,89.0506667 281.249,88.512 C280.582333,87.9733333 279.678333,87.704 278.537,87.704 C277.683667,87.704 276.918333,87.8426667 276.241,88.12 C275.563667,88.3973333 275.006333,88.792 274.569,89.304 L274.569,89.304 L275.385,90.008 C276.110333,89.176 277.129,88.76 278.441,88.76 C279.283667,88.76 279.931667,88.944 280.385,89.312 C280.838333,89.68 281.065,90.1946667 281.065,90.856 C281.065,91.2826667 280.961,91.7066667 280.753,92.128 C280.545,92.5493333 280.147667,93.048 279.561,93.624 L279.561,93.624 L274.905,98.184 L274.905,99 L282.761,99 Z M288.793,99.096 C289.518333,99.096 290.171667,98.9546667 290.753,98.672 C291.334333,98.3893333 291.790333,97.9866667 292.121,97.464 C292.451667,96.9413333 292.617,96.3386667 292.617,95.656 C292.617,94.984 292.457,94.3946667 292.137,93.888 C291.817,93.3813333 291.371667,92.9893333 290.801,92.712 C290.230333,92.4346667 289.577,92.296 288.841,92.296 C288.051667,92.296 287.353,92.464 286.745,92.8 C286.137,93.136 285.694333,93.608 285.417,94.216 C285.385,93.8746667 285.369,93.5706667 285.369,93.304 C285.369,91.8106667 285.721,90.672 286.425,89.888 C287.129,89.104 288.099667,88.712 289.337,88.712 C290.254333,88.712 290.979667,88.888 291.513,89.24 L291.513,89.24 L291.977,88.312 C291.315667,87.9066667 290.430333,87.704 289.321,87.704 C288.297,87.704 287.401,87.9253333 286.633,88.368 C285.865,88.8106667 285.267667,89.464 284.841,90.328 C284.414333,91.192 284.201,92.248 284.201,93.496 C284.201,95.2773333 284.595667,96.656 285.385,97.632 C286.174333,98.608 287.310333,99.096 288.793,99.096 Z M288.745,98.12 C288.126333,98.12 287.593,98.008 287.145,97.784 C286.697,97.56 286.358333,97.2666667 286.129,96.904 C285.899667,96.5413333 285.785,96.1466667 285.785,95.72 C285.785,95.2613333 285.907667,94.8453333 286.153,94.472 C286.398333,94.0986667 286.737,93.8053333 287.169,93.592 C287.601,93.3786667 288.099667,93.272 288.665,93.272 C289.529,93.272 290.214333,93.4906667 290.721,93.928 C291.227667,94.3653333 291.481,94.952 291.481,95.688 C291.481,96.424 291.227667,97.0133333 290.721,97.456 C290.214333,97.8986667 289.555667,98.12 288.745,98.12 Z M295.913,94.45 C296.566333,94.45 297.098333,94.2073333 297.509,93.722 C297.919667,93.2366667 298.125,92.5926667 298.125,91.79 C298.125,90.9873333 297.919667,90.3433333 297.509,89.858 C297.098333,89.3726667 296.566333,89.13 295.913,89.13 C295.250333,89.13 294.716,89.375 294.31,89.865 C293.904,90.355 293.701,90.9966667 293.701,91.79 C293.701,92.5833333 293.904,93.225 294.31,93.715 C294.716,94.205 295.250333,94.45 295.913,94.45 Z M295.983,99 L302.675,89.2 L301.849,89.2 L295.157,99 L295.983,99 Z M295.913,93.82 C295.446333,93.82 295.077667,93.638 294.807,93.274 C294.536333,92.91 294.401,92.4153333 294.401,91.79 C294.401,91.1646667 294.536333,90.67 294.807,90.306 C295.077667,89.942 295.446333,89.76 295.913,89.76 C296.370333,89.76 296.736667,89.9396667 297.012,90.299 C297.287333,90.6583333 297.425,91.1553333 297.425,91.79 C297.425,92.4246667 297.287333,92.9216667 297.012,93.281 C296.736667,93.6403333 296.370333,93.82 295.913,93.82 Z M301.919,99.07 C302.581667,99.07 303.116,98.825 303.522,98.335 C303.928,97.845 304.131,97.2033333 304.131,96.41 C304.131,95.6166667 303.928,94.975 303.522,94.485 C303.116,93.995 302.581667,93.75 301.919,93.75 C301.265667,93.75 300.733667,93.995 300.323,94.485 C299.912333,94.975 299.707,95.6166667 299.707,96.41 C299.707,97.2033333 299.912333,97.845 300.323,98.335 C300.733667,98.825 301.265667,99.07 301.919,99.07 Z M301.919,98.44 C301.461667,98.44 301.095333,98.2603333 300.82,97.901 C300.544667,97.5416667 300.407,97.0446667 300.407,96.41 C300.407,95.7753333 300.544667,95.2783333 300.82,94.919 C301.095333,94.5596667 301.461667,94.38 301.919,94.38 C302.385667,94.38 302.754333,94.562 303.025,94.926 C303.295667,95.29 303.431,95.7846667 303.431,96.41 C303.431,97.0353333 303.295667,97.53 303.025,97.894 C302.754333,98.258 302.385667,98.44 301.919,98.44 Z\",\"id\":\"26%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M310.261,248 L310.261,246.976 L304.101,246.976 L307.909,243.232 C308.623667,242.538667 309.109,241.925333 309.365,241.392 C309.621,240.858667 309.749,240.304 309.749,239.728 C309.749,238.789333 309.415667,238.050667 308.749,237.512 C308.082333,236.973333 307.178333,236.704 306.037,236.704 C305.183667,236.704 304.418333,236.842667 303.741,237.12 C303.063667,237.397333 302.506333,237.792 302.069,238.304 L302.069,238.304 L302.885,239.008 C303.610333,238.176 304.629,237.76 305.941,237.76 C306.783667,237.76 307.431667,237.944 307.885,238.312 C308.338333,238.68 308.565,239.194667 308.565,239.856 C308.565,240.282667 308.461,240.706667 308.253,241.128 C308.045,241.549333 307.647667,242.048 307.061,242.624 L307.061,242.624 L302.405,247.184 L302.405,248 L310.261,248 Z M314.661,248.096 C315.685,248.096 316.581,247.874667 317.349,247.432 C318.117,246.989333 318.714333,246.336 319.141,245.472 C319.567667,244.608 319.781,243.552 319.781,242.304 C319.781,240.522667 319.386333,239.144 318.597,238.168 C317.807667,237.192 316.671667,236.704 315.189,236.704 C314.463667,236.704 313.810333,236.845333 313.229,237.128 C312.647667,237.410667 312.191667,237.813333 311.861,238.336 C311.530333,238.858667 311.365,239.461333 311.365,240.144 C311.365,240.816 311.525,241.405333 311.845,241.912 C312.165,242.418667 312.610333,242.810667 313.181,243.088 C313.751667,243.365333 314.405,243.504 315.141,243.504 C315.930333,243.504 316.629,243.336 317.237,243 C317.845,242.664 318.287667,242.192 318.565,241.584 C318.597,241.914667 318.613,242.218667 318.613,242.496 C318.613,243.989333 318.261,245.128 317.557,245.912 C316.853,246.696 315.882333,247.088 314.645,247.088 C313.727667,247.088 313.002333,246.912 312.469,246.56 L312.469,246.56 L312.005,247.488 C312.666333,247.893333 313.551667,248.096 314.661,248.096 Z M315.317,242.528 C314.453,242.528 313.767667,242.309333 313.261,241.872 C312.754333,241.434667 312.501,240.848 312.501,240.112 C312.501,239.376 312.754333,238.786667 313.261,238.344 C313.767667,237.901333 314.426333,237.68 315.237,237.68 C315.855667,237.68 316.389,237.792 316.837,238.016 C317.285,238.24 317.623667,238.533333 317.853,238.896 C318.082333,239.258667 318.197,239.653333 318.197,240.08 C318.197,240.538667 318.074333,240.954667 317.829,241.328 C317.583667,241.701333 317.245,241.994667 316.813,242.208 C316.381,242.421333 315.882333,242.528 315.317,242.528 Z M323.413,243.45 C324.066333,243.45 324.598333,243.207333 325.009,242.722 C325.419667,242.236667 325.625,241.592667 325.625,240.79 C325.625,239.987333 325.419667,239.343333 325.009,238.858 C324.598333,238.372667 324.066333,238.13 323.413,238.13 C322.750333,238.13 322.216,238.375 321.81,238.865 C321.404,239.355 321.201,239.996667 321.201,240.79 C321.201,241.583333 321.404,242.225 321.81,242.715 C322.216,243.205 322.750333,243.45 323.413,243.45 Z M323.483,248 L330.175,238.2 L329.349,238.2 L322.657,248 L323.483,248 Z M323.413,242.82 C322.946333,242.82 322.577667,242.638 322.307,242.274 C322.036333,241.91 321.901,241.415333 321.901,240.79 C321.901,240.164667 322.036333,239.67 322.307,239.306 C322.577667,238.942 322.946333,238.76 323.413,238.76 C323.870333,238.76 324.236667,238.939667 324.512,239.299 C324.787333,239.658333 324.925,240.155333 324.925,240.79 C324.925,241.424667 324.787333,241.921667 324.512,242.281 C324.236667,242.640333 323.870333,242.82 323.413,242.82 Z M329.419,248.07 C330.081667,248.07 330.616,247.825 331.022,247.335 C331.428,246.845 331.631,246.203333 331.631,245.41 C331.631,244.616667 331.428,243.975 331.022,243.485 C330.616,242.995 330.081667,242.75 329.419,242.75 C328.765667,242.75 328.233667,242.995 327.823,243.485 C327.412333,243.975 327.207,244.616667 327.207,245.41 C327.207,246.203333 327.412333,246.845 327.823,247.335 C328.233667,247.825 328.765667,248.07 329.419,248.07 Z M329.419,247.44 C328.961667,247.44 328.595333,247.260333 328.32,246.901 C328.044667,246.541667 327.907,246.044667 327.907,245.41 C327.907,244.775333 328.044667,244.278333 328.32,243.919 C328.595333,243.559667 328.961667,243.38 329.419,243.38 C329.885667,243.38 330.254333,243.562 330.525,243.926 C330.795667,244.29 330.931,244.784667 330.931,245.41 C330.931,246.035333 330.795667,246.53 330.525,246.894 C330.254333,247.258 329.885667,247.44 329.419,247.44 Z\",\"id\":\"29%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":23}),React.createElement(\"path\",{\"d\":\"M282.761,131 L282.761,129.976 L276.601,129.976 L280.409,126.232 C281.123667,125.538667 281.609,124.925333 281.865,124.392 C282.121,123.858667 282.249,123.304 282.249,122.728 C282.249,121.789333 281.915667,121.050667 281.249,120.512 C280.582333,119.973333 279.678333,119.704 278.537,119.704 C277.683667,119.704 276.918333,119.842667 276.241,120.12 C275.563667,120.397333 275.006333,120.792 274.569,121.304 L274.569,121.304 L275.385,122.008 C276.110333,121.176 277.129,120.76 278.441,120.76 C279.283667,120.76 279.931667,120.944 280.385,121.312 C280.838333,121.68 281.065,122.194667 281.065,122.856 C281.065,123.282667 280.961,123.706667 280.753,124.128 C280.545,124.549333 280.147667,125.048 279.561,125.624 L279.561,125.624 L274.905,130.184 L274.905,131 L282.761,131 Z M288.793,131.096 C289.518333,131.096 290.171667,130.954667 290.753,130.672 C291.334333,130.389333 291.790333,129.986667 292.121,129.464 C292.451667,128.941333 292.617,128.338667 292.617,127.656 C292.617,126.984 292.457,126.394667 292.137,125.888 C291.817,125.381333 291.371667,124.989333 290.801,124.712 C290.230333,124.434667 289.577,124.296 288.841,124.296 C288.051667,124.296 287.353,124.464 286.745,124.8 C286.137,125.136 285.694333,125.608 285.417,126.216 C285.385,125.874667 285.369,125.570667 285.369,125.304 C285.369,123.810667 285.721,122.672 286.425,121.888 C287.129,121.104 288.099667,120.712 289.337,120.712 C290.254333,120.712 290.979667,120.888 291.513,121.24 L291.513,121.24 L291.977,120.312 C291.315667,119.906667 290.430333,119.704 289.321,119.704 C288.297,119.704 287.401,119.925333 286.633,120.368 C285.865,120.810667 285.267667,121.464 284.841,122.328 C284.414333,123.192 284.201,124.248 284.201,125.496 C284.201,127.277333 284.595667,128.656 285.385,129.632 C286.174333,130.608 287.310333,131.096 288.793,131.096 Z M288.745,130.12 C288.126333,130.12 287.593,130.008 287.145,129.784 C286.697,129.56 286.358333,129.266667 286.129,128.904 C285.899667,128.541333 285.785,128.146667 285.785,127.72 C285.785,127.261333 285.907667,126.845333 286.153,126.472 C286.398333,126.098667 286.737,125.805333 287.169,125.592 C287.601,125.378667 288.099667,125.272 288.665,125.272 C289.529,125.272 290.214333,125.490667 290.721,125.928 C291.227667,126.365333 291.481,126.952 291.481,127.688 C291.481,128.424 291.227667,129.013333 290.721,129.456 C290.214333,129.898667 289.555667,130.12 288.745,130.12 Z M295.913,126.45 C296.566333,126.45 297.098333,126.207333 297.509,125.722 C297.919667,125.236667 298.125,124.592667 298.125,123.79 C298.125,122.987333 297.919667,122.343333 297.509,121.858 C297.098333,121.372667 296.566333,121.13 295.913,121.13 C295.250333,121.13 294.716,121.375 294.31,121.865 C293.904,122.355 293.701,122.996667 293.701,123.79 C293.701,124.583333 293.904,125.225 294.31,125.715 C294.716,126.205 295.250333,126.45 295.913,126.45 Z M295.983,131 L302.675,121.2 L301.849,121.2 L295.157,131 L295.983,131 Z M295.913,125.82 C295.446333,125.82 295.077667,125.638 294.807,125.274 C294.536333,124.91 294.401,124.415333 294.401,123.79 C294.401,123.164667 294.536333,122.67 294.807,122.306 C295.077667,121.942 295.446333,121.76 295.913,121.76 C296.370333,121.76 296.736667,121.939667 297.012,122.299 C297.287333,122.658333 297.425,123.155333 297.425,123.79 C297.425,124.424667 297.287333,124.921667 297.012,125.281 C296.736667,125.640333 296.370333,125.82 295.913,125.82 Z M301.919,131.07 C302.581667,131.07 303.116,130.825 303.522,130.335 C303.928,129.845 304.131,129.203333 304.131,128.41 C304.131,127.616667 303.928,126.975 303.522,126.485 C303.116,125.995 302.581667,125.75 301.919,125.75 C301.265667,125.75 300.733667,125.995 300.323,126.485 C299.912333,126.975 299.707,127.616667 299.707,128.41 C299.707,129.203333 299.912333,129.845 300.323,130.335 C300.733667,130.825 301.265667,131.07 301.919,131.07 Z M301.919,130.44 C301.461667,130.44 301.095333,130.260333 300.82,129.901 C300.544667,129.541667 300.407,129.044667 300.407,128.41 C300.407,127.775333 300.544667,127.278333 300.82,126.919 C301.095333,126.559667 301.461667,126.38 301.919,126.38 C302.385667,126.38 302.754333,126.562 303.025,126.926 C303.295667,127.29 303.431,127.784667 303.431,128.41 C303.431,129.035333 303.295667,129.53 303.025,129.894 C302.754333,130.258 302.385667,130.44 301.919,130.44 Z\",\"id\":\"26%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M282.761,312 L282.761,310.976 L276.601,310.976 L280.409,307.232 C281.123667,306.538667 281.609,305.925333 281.865,305.392 C282.121,304.858667 282.249,304.304 282.249,303.728 C282.249,302.789333 281.915667,302.050667 281.249,301.512 C280.582333,300.973333 279.678333,300.704 278.537,300.704 C277.683667,300.704 276.918333,300.842667 276.241,301.12 C275.563667,301.397333 275.006333,301.792 274.569,302.304 L274.569,302.304 L275.385,303.008 C276.110333,302.176 277.129,301.76 278.441,301.76 C279.283667,301.76 279.931667,301.944 280.385,302.312 C280.838333,302.68 281.065,303.194667 281.065,303.856 C281.065,304.282667 280.961,304.706667 280.753,305.128 C280.545,305.549333 280.147667,306.048 279.561,306.624 L279.561,306.624 L274.905,311.184 L274.905,312 L282.761,312 Z M288.793,312.096 C289.518333,312.096 290.171667,311.954667 290.753,311.672 C291.334333,311.389333 291.790333,310.986667 292.121,310.464 C292.451667,309.941333 292.617,309.338667 292.617,308.656 C292.617,307.984 292.457,307.394667 292.137,306.888 C291.817,306.381333 291.371667,305.989333 290.801,305.712 C290.230333,305.434667 289.577,305.296 288.841,305.296 C288.051667,305.296 287.353,305.464 286.745,305.8 C286.137,306.136 285.694333,306.608 285.417,307.216 C285.385,306.874667 285.369,306.570667 285.369,306.304 C285.369,304.810667 285.721,303.672 286.425,302.888 C287.129,302.104 288.099667,301.712 289.337,301.712 C290.254333,301.712 290.979667,301.888 291.513,302.24 L291.513,302.24 L291.977,301.312 C291.315667,300.906667 290.430333,300.704 289.321,300.704 C288.297,300.704 287.401,300.925333 286.633,301.368 C285.865,301.810667 285.267667,302.464 284.841,303.328 C284.414333,304.192 284.201,305.248 284.201,306.496 C284.201,308.277333 284.595667,309.656 285.385,310.632 C286.174333,311.608 287.310333,312.096 288.793,312.096 Z M288.745,311.12 C288.126333,311.12 287.593,311.008 287.145,310.784 C286.697,310.56 286.358333,310.266667 286.129,309.904 C285.899667,309.541333 285.785,309.146667 285.785,308.72 C285.785,308.261333 285.907667,307.845333 286.153,307.472 C286.398333,307.098667 286.737,306.805333 287.169,306.592 C287.601,306.378667 288.099667,306.272 288.665,306.272 C289.529,306.272 290.214333,306.490667 290.721,306.928 C291.227667,307.365333 291.481,307.952 291.481,308.688 C291.481,309.424 291.227667,310.013333 290.721,310.456 C290.214333,310.898667 289.555667,311.12 288.745,311.12 Z M295.913,307.45 C296.566333,307.45 297.098333,307.207333 297.509,306.722 C297.919667,306.236667 298.125,305.592667 298.125,304.79 C298.125,303.987333 297.919667,303.343333 297.509,302.858 C297.098333,302.372667 296.566333,302.13 295.913,302.13 C295.250333,302.13 294.716,302.375 294.31,302.865 C293.904,303.355 293.701,303.996667 293.701,304.79 C293.701,305.583333 293.904,306.225 294.31,306.715 C294.716,307.205 295.250333,307.45 295.913,307.45 Z M295.983,312 L302.675,302.2 L301.849,302.2 L295.157,312 L295.983,312 Z M295.913,306.82 C295.446333,306.82 295.077667,306.638 294.807,306.274 C294.536333,305.91 294.401,305.415333 294.401,304.79 C294.401,304.164667 294.536333,303.67 294.807,303.306 C295.077667,302.942 295.446333,302.76 295.913,302.76 C296.370333,302.76 296.736667,302.939667 297.012,303.299 C297.287333,303.658333 297.425,304.155333 297.425,304.79 C297.425,305.424667 297.287333,305.921667 297.012,306.281 C296.736667,306.640333 296.370333,306.82 295.913,306.82 Z M301.919,312.07 C302.581667,312.07 303.116,311.825 303.522,311.335 C303.928,310.845 304.131,310.203333 304.131,309.41 C304.131,308.616667 303.928,307.975 303.522,307.485 C303.116,306.995 302.581667,306.75 301.919,306.75 C301.265667,306.75 300.733667,306.995 300.323,307.485 C299.912333,307.975 299.707,308.616667 299.707,309.41 C299.707,310.203333 299.912333,310.845 300.323,311.335 C300.733667,311.825 301.265667,312.07 301.919,312.07 Z M301.919,311.44 C301.461667,311.44 301.095333,311.260333 300.82,310.901 C300.544667,310.541667 300.407,310.044667 300.407,309.41 C300.407,308.775333 300.544667,308.278333 300.82,307.919 C301.095333,307.559667 301.461667,307.38 301.919,307.38 C302.385667,307.38 302.754333,307.562 303.025,307.926 C303.295667,308.29 303.431,308.784667 303.431,309.41 C303.431,310.035333 303.295667,310.53 303.025,310.894 C302.754333,311.258 302.385667,311.44 301.919,311.44 Z\",\"id\":\"26%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M248.345,397 L248.345,395.976 L242.185,395.976 L245.993,392.232 C246.707667,391.538667 247.193,390.925333 247.449,390.392 C247.705,389.858667 247.833,389.304 247.833,388.728 C247.833,387.789333 247.499667,387.050667 246.833,386.512 C246.166333,385.973333 245.262333,385.704 244.121,385.704 C243.267667,385.704 242.502333,385.842667 241.825,386.12 C241.147667,386.397333 240.590333,386.792 240.153,387.304 L240.153,387.304 L240.969,388.008 C241.694333,387.176 242.713,386.76 244.025,386.76 C244.867667,386.76 245.515667,386.944 245.969,387.312 C246.422333,387.68 246.649,388.194667 246.649,388.856 C246.649,389.282667 246.545,389.706667 246.337,390.128 C246.129,390.549333 245.731667,391.048 245.145,391.624 L245.145,391.624 L240.489,396.184 L240.489,397 L248.345,397 Z M257.065,397 L257.065,394.056 L259.305,394.056 L259.305,393.032 L257.065,393.032 L257.065,390.44 L255.945,390.44 L255.945,393.032 L251.081,393.032 L256.809,385.8 L255.529,385.8 L249.593,393.224 L249.593,394.056 L255.913,394.056 L255.913,397 L257.065,397 Z M262.329,392.45 C262.982333,392.45 263.514333,392.207333 263.925,391.722 C264.335667,391.236667 264.541,390.592667 264.541,389.79 C264.541,388.987333 264.335667,388.343333 263.925,387.858 C263.514333,387.372667 262.982333,387.13 262.329,387.13 C261.666333,387.13 261.132,387.375 260.726,387.865 C260.32,388.355 260.117,388.996667 260.117,389.79 C260.117,390.583333 260.32,391.225 260.726,391.715 C261.132,392.205 261.666333,392.45 262.329,392.45 Z M262.399,397 L269.091,387.2 L268.265,387.2 L261.573,397 L262.399,397 Z M262.329,391.82 C261.862333,391.82 261.493667,391.638 261.223,391.274 C260.952333,390.91 260.817,390.415333 260.817,389.79 C260.817,389.164667 260.952333,388.67 261.223,388.306 C261.493667,387.942 261.862333,387.76 262.329,387.76 C262.786333,387.76 263.152667,387.939667 263.428,388.299 C263.703333,388.658333 263.841,389.155333 263.841,389.79 C263.841,390.424667 263.703333,390.921667 263.428,391.281 C263.152667,391.640333 262.786333,391.82 262.329,391.82 Z M268.335,397.07 C268.997667,397.07 269.532,396.825 269.938,396.335 C270.344,395.845 270.547,395.203333 270.547,394.41 C270.547,393.616667 270.344,392.975 269.938,392.485 C269.532,391.995 268.997667,391.75 268.335,391.75 C267.681667,391.75 267.149667,391.995 266.739,392.485 C266.328333,392.975 266.123,393.616667 266.123,394.41 C266.123,395.203333 266.328333,395.845 266.739,396.335 C267.149667,396.825 267.681667,397.07 268.335,397.07 Z M268.335,396.44 C267.877667,396.44 267.511333,396.260333 267.236,395.901 C266.960667,395.541667 266.823,395.044667 266.823,394.41 C266.823,393.775333 266.960667,393.278333 267.236,392.919 C267.511333,392.559667 267.877667,392.38 268.335,392.38 C268.801667,392.38 269.170333,392.562 269.441,392.926 C269.711667,393.29 269.847,393.784667 269.847,394.41 C269.847,395.035333 269.711667,395.53 269.441,395.894 C269.170333,396.258 268.801667,396.44 268.335,396.44 Z\",\"id\":\"24%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M248.345,428 L248.345,426.976 L242.185,426.976 L245.993,423.232 C246.707667,422.538667 247.193,421.925333 247.449,421.392 C247.705,420.858667 247.833,420.304 247.833,419.728 C247.833,418.789333 247.499667,418.050667 246.833,417.512 C246.166333,416.973333 245.262333,416.704 244.121,416.704 C243.267667,416.704 242.502333,416.842667 241.825,417.12 C241.147667,417.397333 240.590333,417.792 240.153,418.304 L240.153,418.304 L240.969,419.008 C241.694333,418.176 242.713,417.76 244.025,417.76 C244.867667,417.76 245.515667,417.944 245.969,418.312 C246.422333,418.68 246.649,419.194667 246.649,419.856 C246.649,420.282667 246.545,420.706667 246.337,421.128 C246.129,421.549333 245.731667,422.048 245.145,422.624 L245.145,422.624 L240.489,427.184 L240.489,428 L248.345,428 Z M257.065,428 L257.065,425.056 L259.305,425.056 L259.305,424.032 L257.065,424.032 L257.065,421.44 L255.945,421.44 L255.945,424.032 L251.081,424.032 L256.809,416.8 L255.529,416.8 L249.593,424.224 L249.593,425.056 L255.913,425.056 L255.913,428 L257.065,428 Z M262.329,423.45 C262.982333,423.45 263.514333,423.207333 263.925,422.722 C264.335667,422.236667 264.541,421.592667 264.541,420.79 C264.541,419.987333 264.335667,419.343333 263.925,418.858 C263.514333,418.372667 262.982333,418.13 262.329,418.13 C261.666333,418.13 261.132,418.375 260.726,418.865 C260.32,419.355 260.117,419.996667 260.117,420.79 C260.117,421.583333 260.32,422.225 260.726,422.715 C261.132,423.205 261.666333,423.45 262.329,423.45 Z M262.399,428 L269.091,418.2 L268.265,418.2 L261.573,428 L262.399,428 Z M262.329,422.82 C261.862333,422.82 261.493667,422.638 261.223,422.274 C260.952333,421.91 260.817,421.415333 260.817,420.79 C260.817,420.164667 260.952333,419.67 261.223,419.306 C261.493667,418.942 261.862333,418.76 262.329,418.76 C262.786333,418.76 263.152667,418.939667 263.428,419.299 C263.703333,419.658333 263.841,420.155333 263.841,420.79 C263.841,421.424667 263.703333,421.921667 263.428,422.281 C263.152667,422.640333 262.786333,422.82 262.329,422.82 Z M268.335,428.07 C268.997667,428.07 269.532,427.825 269.938,427.335 C270.344,426.845 270.547,426.203333 270.547,425.41 C270.547,424.616667 270.344,423.975 269.938,423.485 C269.532,422.995 268.997667,422.75 268.335,422.75 C267.681667,422.75 267.149667,422.995 266.739,423.485 C266.328333,423.975 266.123,424.616667 266.123,425.41 C266.123,426.203333 266.328333,426.845 266.739,427.335 C267.149667,427.825 267.681667,428.07 268.335,428.07 Z M268.335,427.44 C267.877667,427.44 267.511333,427.260333 267.236,426.901 C266.960667,426.541667 266.823,426.044667 266.823,425.41 C266.823,424.775333 266.960667,424.278333 267.236,423.919 C267.511333,423.559667 267.877667,423.38 268.335,423.38 C268.801667,423.38 269.170333,423.562 269.441,423.926 C269.711667,424.29 269.847,424.784667 269.847,425.41 C269.847,426.035333 269.711667,426.53 269.441,426.894 C269.170333,427.258 268.801667,427.44 268.335,427.44 Z\",\"id\":\"24%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":27}),React.createElement(\"path\",{\"d\":\"M221.745,460 L221.745,458.976 L215.585,458.976 L219.393,455.232 C220.107667,454.538667 220.593,453.925333 220.849,453.392 C221.105,452.858667 221.233,452.304 221.233,451.728 C221.233,450.789333 220.899667,450.050667 220.233,449.512 C219.566333,448.973333 218.662333,448.704 217.521,448.704 C216.667667,448.704 215.902333,448.842667 215.225,449.12 C214.547667,449.397333 213.990333,449.792 213.553,450.304 L213.553,450.304 L214.369,451.008 C215.094333,450.176 216.113,449.76 217.425,449.76 C218.267667,449.76 218.915667,449.944 219.369,450.312 C219.822333,450.68 220.049,451.194667 220.049,451.856 C220.049,452.282667 219.945,452.706667 219.737,453.128 C219.529,453.549333 219.131667,454.048 218.545,454.624 L218.545,454.624 L213.889,459.184 L213.889,460 L221.745,460 Z M226.289,460 L226.289,448.8 L222.497,448.8 L222.497,449.824 L225.137,449.824 L225.137,460 L226.289,460 Z M230.929,455.45 C231.582333,455.45 232.114333,455.207333 232.525,454.722 C232.935667,454.236667 233.141,453.592667 233.141,452.79 C233.141,451.987333 232.935667,451.343333 232.525,450.858 C232.114333,450.372667 231.582333,450.13 230.929,450.13 C230.266333,450.13 229.732,450.375 229.326,450.865 C228.92,451.355 228.717,451.996667 228.717,452.79 C228.717,453.583333 228.92,454.225 229.326,454.715 C229.732,455.205 230.266333,455.45 230.929,455.45 Z M230.999,460 L237.691,450.2 L236.865,450.2 L230.173,460 L230.999,460 Z M230.929,454.82 C230.462333,454.82 230.093667,454.638 229.823,454.274 C229.552333,453.91 229.417,453.415333 229.417,452.79 C229.417,452.164667 229.552333,451.67 229.823,451.306 C230.093667,450.942 230.462333,450.76 230.929,450.76 C231.386333,450.76 231.752667,450.939667 232.028,451.299 C232.303333,451.658333 232.441,452.155333 232.441,452.79 C232.441,453.424667 232.303333,453.921667 232.028,454.281 C231.752667,454.640333 231.386333,454.82 230.929,454.82 Z M236.935,460.07 C237.597667,460.07 238.132,459.825 238.538,459.335 C238.944,458.845 239.147,458.203333 239.147,457.41 C239.147,456.616667 238.944,455.975 238.538,455.485 C238.132,454.995 237.597667,454.75 236.935,454.75 C236.281667,454.75 235.749667,454.995 235.339,455.485 C234.928333,455.975 234.723,456.616667 234.723,457.41 C234.723,458.203333 234.928333,458.845 235.339,459.335 C235.749667,459.825 236.281667,460.07 236.935,460.07 Z M236.935,459.44 C236.477667,459.44 236.111333,459.260333 235.836,458.901 C235.560667,458.541667 235.423,458.044667 235.423,457.41 C235.423,456.775333 235.560667,456.278333 235.836,455.919 C236.111333,455.559667 236.477667,455.38 236.935,455.38 C237.401667,455.38 237.770333,455.562 238.041,455.926 C238.311667,456.29 238.447,456.784667 238.447,457.41 C238.447,458.035333 238.311667,458.53 238.041,458.894 C237.770333,459.258 237.401667,459.44 236.935,459.44 Z\",\"id\":\"21%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":28}),React.createElement(\"path\",{\"d\":\"M224.089,545 L224.089,543.976 L217.929,543.976 L221.737,540.232 C222.451667,539.538667 222.937,538.925333 223.193,538.392 C223.449,537.858667 223.577,537.304 223.577,536.728 C223.577,535.789333 223.243667,535.050667 222.577,534.512 C221.910333,533.973333 221.006333,533.704 219.865,533.704 C219.011667,533.704 218.246333,533.842667 217.569,534.12 C216.891667,534.397333 216.334333,534.792 215.897,535.304 L215.897,535.304 L216.713,536.008 C217.438333,535.176 218.457,534.76 219.769,534.76 C220.611667,534.76 221.259667,534.944 221.713,535.312 C222.166333,535.68 222.393,536.194667 222.393,536.856 C222.393,537.282667 222.289,537.706667 222.081,538.128 C221.873,538.549333 221.475667,539.048 220.889,539.624 L220.889,539.624 L216.233,544.184 L216.233,545 L224.089,545 Z M233.177,545 L233.177,543.976 L227.017,543.976 L230.825,540.232 C231.539667,539.538667 232.025,538.925333 232.281,538.392 C232.537,537.858667 232.665,537.304 232.665,536.728 C232.665,535.789333 232.331667,535.050667 231.665,534.512 C230.998333,533.973333 230.094333,533.704 228.953,533.704 C228.099667,533.704 227.334333,533.842667 226.657,534.12 C225.979667,534.397333 225.422333,534.792 224.985,535.304 L224.985,535.304 L225.801,536.008 C226.526333,535.176 227.545,534.76 228.857,534.76 C229.699667,534.76 230.347667,534.944 230.801,535.312 C231.254333,535.68 231.481,536.194667 231.481,536.856 C231.481,537.282667 231.377,537.706667 231.169,538.128 C230.961,538.549333 230.563667,539.048 229.977,539.624 L229.977,539.624 L225.321,544.184 L225.321,545 L233.177,545 Z M236.585,540.45 C237.238333,540.45 237.770333,540.207333 238.181,539.722 C238.591667,539.236667 238.797,538.592667 238.797,537.79 C238.797,536.987333 238.591667,536.343333 238.181,535.858 C237.770333,535.372667 237.238333,535.13 236.585,535.13 C235.922333,535.13 235.388,535.375 234.982,535.865 C234.576,536.355 234.373,536.996667 234.373,537.79 C234.373,538.583333 234.576,539.225 234.982,539.715 C235.388,540.205 235.922333,540.45 236.585,540.45 Z M236.655,545 L243.347,535.2 L242.521,535.2 L235.829,545 L236.655,545 Z M236.585,539.82 C236.118333,539.82 235.749667,539.638 235.479,539.274 C235.208333,538.91 235.073,538.415333 235.073,537.79 C235.073,537.164667 235.208333,536.67 235.479,536.306 C235.749667,535.942 236.118333,535.76 236.585,535.76 C237.042333,535.76 237.408667,535.939667 237.684,536.299 C237.959333,536.658333 238.097,537.155333 238.097,537.79 C238.097,538.424667 237.959333,538.921667 237.684,539.281 C237.408667,539.640333 237.042333,539.82 236.585,539.82 Z M242.591,545.07 C243.253667,545.07 243.788,544.825 244.194,544.335 C244.6,543.845 244.803,543.203333 244.803,542.41 C244.803,541.616667 244.6,540.975 244.194,540.485 C243.788,539.995 243.253667,539.75 242.591,539.75 C241.937667,539.75 241.405667,539.995 240.995,540.485 C240.584333,540.975 240.379,541.616667 240.379,542.41 C240.379,543.203333 240.584333,543.845 240.995,544.335 C241.405667,544.825 241.937667,545.07 242.591,545.07 Z M242.591,544.44 C242.133667,544.44 241.767333,544.260333 241.492,543.901 C241.216667,543.541667 241.079,543.044667 241.079,542.41 C241.079,541.775333 241.216667,541.278333 241.492,540.919 C241.767333,540.559667 242.133667,540.38 242.591,540.38 C243.057667,540.38 243.426333,540.562 243.697,540.926 C243.967667,541.29 244.103,541.784667 244.103,542.41 C244.103,543.035333 243.967667,543.53 243.697,543.894 C243.426333,544.258 243.057667,544.44 242.591,544.44 Z\",\"id\":\"22%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":29}),React.createElement(\"path\",{\"d\":\"M224.089,577 L224.089,575.976 L217.929,575.976 L221.737,572.232 C222.451667,571.538667 222.937,570.925333 223.193,570.392 C223.449,569.858667 223.577,569.304 223.577,568.728 C223.577,567.789333 223.243667,567.050667 222.577,566.512 C221.910333,565.973333 221.006333,565.704 219.865,565.704 C219.011667,565.704 218.246333,565.842667 217.569,566.12 C216.891667,566.397333 216.334333,566.792 215.897,567.304 L215.897,567.304 L216.713,568.008 C217.438333,567.176 218.457,566.76 219.769,566.76 C220.611667,566.76 221.259667,566.944 221.713,567.312 C222.166333,567.68 222.393,568.194667 222.393,568.856 C222.393,569.282667 222.289,569.706667 222.081,570.128 C221.873,570.549333 221.475667,571.048 220.889,571.624 L220.889,571.624 L216.233,576.184 L216.233,577 L224.089,577 Z M233.177,577 L233.177,575.976 L227.017,575.976 L230.825,572.232 C231.539667,571.538667 232.025,570.925333 232.281,570.392 C232.537,569.858667 232.665,569.304 232.665,568.728 C232.665,567.789333 232.331667,567.050667 231.665,566.512 C230.998333,565.973333 230.094333,565.704 228.953,565.704 C228.099667,565.704 227.334333,565.842667 226.657,566.12 C225.979667,566.397333 225.422333,566.792 224.985,567.304 L224.985,567.304 L225.801,568.008 C226.526333,567.176 227.545,566.76 228.857,566.76 C229.699667,566.76 230.347667,566.944 230.801,567.312 C231.254333,567.68 231.481,568.194667 231.481,568.856 C231.481,569.282667 231.377,569.706667 231.169,570.128 C230.961,570.549333 230.563667,571.048 229.977,571.624 L229.977,571.624 L225.321,576.184 L225.321,577 L233.177,577 Z M236.585,572.45 C237.238333,572.45 237.770333,572.207333 238.181,571.722 C238.591667,571.236667 238.797,570.592667 238.797,569.79 C238.797,568.987333 238.591667,568.343333 238.181,567.858 C237.770333,567.372667 237.238333,567.13 236.585,567.13 C235.922333,567.13 235.388,567.375 234.982,567.865 C234.576,568.355 234.373,568.996667 234.373,569.79 C234.373,570.583333 234.576,571.225 234.982,571.715 C235.388,572.205 235.922333,572.45 236.585,572.45 Z M236.655,577 L243.347,567.2 L242.521,567.2 L235.829,577 L236.655,577 Z M236.585,571.82 C236.118333,571.82 235.749667,571.638 235.479,571.274 C235.208333,570.91 235.073,570.415333 235.073,569.79 C235.073,569.164667 235.208333,568.67 235.479,568.306 C235.749667,567.942 236.118333,567.76 236.585,567.76 C237.042333,567.76 237.408667,567.939667 237.684,568.299 C237.959333,568.658333 238.097,569.155333 238.097,569.79 C238.097,570.424667 237.959333,570.921667 237.684,571.281 C237.408667,571.640333 237.042333,571.82 236.585,571.82 Z M242.591,577.07 C243.253667,577.07 243.788,576.825 244.194,576.335 C244.6,575.845 244.803,575.203333 244.803,574.41 C244.803,573.616667 244.6,572.975 244.194,572.485 C243.788,571.995 243.253667,571.75 242.591,571.75 C241.937667,571.75 241.405667,571.995 240.995,572.485 C240.584333,572.975 240.379,573.616667 240.379,574.41 C240.379,575.203333 240.584333,575.845 240.995,576.335 C241.405667,576.825 241.937667,577.07 242.591,577.07 Z M242.591,576.44 C242.133667,576.44 241.767333,576.260333 241.492,575.901 C241.216667,575.541667 241.079,575.044667 241.079,574.41 C241.079,573.775333 241.216667,573.278333 241.492,572.919 C241.767333,572.559667 242.133667,572.38 242.591,572.38 C243.057667,572.38 243.426333,572.562 243.697,572.926 C243.967667,573.29 244.103,573.784667 244.103,574.41 C244.103,575.035333 243.967667,575.53 243.697,575.894 C243.426333,576.258 243.057667,576.44 242.591,576.44 Z\",\"id\":\"22%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":30}),React.createElement(\"path\",{\"d\":\"M172.033,609 L172.033,597.8 L168.241,597.8 L168.241,598.824 L170.881,598.824 L170.881,609 L172.033,609 Z M177.921,609 L182.609,598.616 L182.609,597.8 L174.385,597.8 L174.385,600.92 L175.521,600.92 L175.521,598.824 L181.281,598.824 L176.673,609 L177.921,609 Z M186.097,604.45 C186.750333,604.45 187.282333,604.207333 187.693,603.722 C188.103667,603.236667 188.309,602.592667 188.309,601.79 C188.309,600.987333 188.103667,600.343333 187.693,599.858 C187.282333,599.372667 186.750333,599.13 186.097,599.13 C185.434333,599.13 184.9,599.375 184.494,599.865 C184.088,600.355 183.885,600.996667 183.885,601.79 C183.885,602.583333 184.088,603.225 184.494,603.715 C184.9,604.205 185.434333,604.45 186.097,604.45 Z M186.167,609 L192.859,599.2 L192.033,599.2 L185.341,609 L186.167,609 Z M186.097,603.82 C185.630333,603.82 185.261667,603.638 184.991,603.274 C184.720333,602.91 184.585,602.415333 184.585,601.79 C184.585,601.164667 184.720333,600.67 184.991,600.306 C185.261667,599.942 185.630333,599.76 186.097,599.76 C186.554333,599.76 186.920667,599.939667 187.196,600.299 C187.471333,600.658333 187.609,601.155333 187.609,601.79 C187.609,602.424667 187.471333,602.921667 187.196,603.281 C186.920667,603.640333 186.554333,603.82 186.097,603.82 Z M192.103,609.07 C192.765667,609.07 193.3,608.825 193.706,608.335 C194.112,607.845 194.315,607.203333 194.315,606.41 C194.315,605.616667 194.112,604.975 193.706,604.485 C193.3,603.995 192.765667,603.75 192.103,603.75 C191.449667,603.75 190.917667,603.995 190.507,604.485 C190.096333,604.975 189.891,605.616667 189.891,606.41 C189.891,607.203333 190.096333,607.845 190.507,608.335 C190.917667,608.825 191.449667,609.07 192.103,609.07 Z M192.103,608.44 C191.645667,608.44 191.279333,608.260333 191.004,607.901 C190.728667,607.541667 190.591,607.044667 190.591,606.41 C190.591,605.775333 190.728667,605.278333 191.004,604.919 C191.279333,604.559667 191.645667,604.38 192.103,604.38 C192.569667,604.38 192.938333,604.562 193.209,604.926 C193.479667,605.29 193.615,605.784667 193.615,606.41 C193.615,607.035333 193.479667,607.53 193.209,607.894 C192.938333,608.258 192.569667,608.44 192.103,608.44 Z\",\"id\":\"17%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":31}),React.createElement(\"path\",{\"d\":\"M124.233,691 L124.233,679.8 L120.441,679.8 L120.441,680.824 L123.081,680.824 L123.081,691 L124.233,691 Z M130.249,691.096 C131.123667,691.096 131.865,690.952 132.473,690.664 C133.081,690.376 133.539667,689.984 133.849,689.488 C134.158333,688.992 134.313,688.424 134.313,687.784 C134.313,686.866667 134.006333,686.122667 133.393,685.552 C132.779667,684.981333 131.886333,684.664 130.713,684.6 L130.713,684.6 L133.881,680.616 L133.881,679.8 L126.681,679.8 L126.681,680.824 L132.409,680.824 L129.305,684.712 L129.305,685.56 L130.105,685.56 C131.118333,685.56 131.875667,685.757333 132.377,686.152 C132.878333,686.546667 133.129,687.090667 133.129,687.784 C133.129,688.488 132.878333,689.04 132.377,689.44 C131.875667,689.84 131.166333,690.04 130.249,690.04 C129.545,690.04 128.883667,689.92 128.265,689.68 C127.646333,689.44 127.150333,689.128 126.777,688.744 L126.777,688.744 L126.217,689.656 C126.654333,690.093333 127.233,690.442667 127.953,690.704 C128.673,690.965333 129.438333,691.096 130.249,691.096 Z M137.897,686.45 C138.550333,686.45 139.082333,686.207333 139.493,685.722 C139.903667,685.236667 140.109,684.592667 140.109,683.79 C140.109,682.987333 139.903667,682.343333 139.493,681.858 C139.082333,681.372667 138.550333,681.13 137.897,681.13 C137.234333,681.13 136.7,681.375 136.294,681.865 C135.888,682.355 135.685,682.996667 135.685,683.79 C135.685,684.583333 135.888,685.225 136.294,685.715 C136.7,686.205 137.234333,686.45 137.897,686.45 Z M137.967,691 L144.659,681.2 L143.833,681.2 L137.141,691 L137.967,691 Z M137.897,685.82 C137.430333,685.82 137.061667,685.638 136.791,685.274 C136.520333,684.91 136.385,684.415333 136.385,683.79 C136.385,683.164667 136.520333,682.67 136.791,682.306 C137.061667,681.942 137.430333,681.76 137.897,681.76 C138.354333,681.76 138.720667,681.939667 138.996,682.299 C139.271333,682.658333 139.409,683.155333 139.409,683.79 C139.409,684.424667 139.271333,684.921667 138.996,685.281 C138.720667,685.640333 138.354333,685.82 137.897,685.82 Z M143.903,691.07 C144.565667,691.07 145.1,690.825 145.506,690.335 C145.912,689.845 146.115,689.203333 146.115,688.41 C146.115,687.616667 145.912,686.975 145.506,686.485 C145.1,685.995 144.565667,685.75 143.903,685.75 C143.249667,685.75 142.717667,685.995 142.307,686.485 C141.896333,686.975 141.691,687.616667 141.691,688.41 C141.691,689.203333 141.896333,689.845 142.307,690.335 C142.717667,690.825 143.249667,691.07 143.903,691.07 Z M143.903,690.44 C143.445667,690.44 143.079333,690.260333 142.804,689.901 C142.528667,689.541667 142.391,689.044667 142.391,688.41 C142.391,687.775333 142.528667,687.278333 142.804,686.919 C143.079333,686.559667 143.445667,686.38 143.903,686.38 C144.369667,686.38 144.738333,686.562 145.009,686.926 C145.279667,687.29 145.415,687.784667 145.415,688.41 C145.415,689.035333 145.279667,689.53 145.009,689.894 C144.738333,690.258 144.369667,690.44 143.903,690.44 Z\",\"id\":\"13%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":32}),React.createElement(\"path\",{\"d\":\"M124.233,721 L124.233,709.8 L120.441,709.8 L120.441,710.824 L123.081,710.824 L123.081,721 L124.233,721 Z M130.249,721.096 C131.123667,721.096 131.865,720.952 132.473,720.664 C133.081,720.376 133.539667,719.984 133.849,719.488 C134.158333,718.992 134.313,718.424 134.313,717.784 C134.313,716.866667 134.006333,716.122667 133.393,715.552 C132.779667,714.981333 131.886333,714.664 130.713,714.6 L130.713,714.6 L133.881,710.616 L133.881,709.8 L126.681,709.8 L126.681,710.824 L132.409,710.824 L129.305,714.712 L129.305,715.56 L130.105,715.56 C131.118333,715.56 131.875667,715.757333 132.377,716.152 C132.878333,716.546667 133.129,717.090667 133.129,717.784 C133.129,718.488 132.878333,719.04 132.377,719.44 C131.875667,719.84 131.166333,720.04 130.249,720.04 C129.545,720.04 128.883667,719.92 128.265,719.68 C127.646333,719.44 127.150333,719.128 126.777,718.744 L126.777,718.744 L126.217,719.656 C126.654333,720.093333 127.233,720.442667 127.953,720.704 C128.673,720.965333 129.438333,721.096 130.249,721.096 Z M137.897,716.45 C138.550333,716.45 139.082333,716.207333 139.493,715.722 C139.903667,715.236667 140.109,714.592667 140.109,713.79 C140.109,712.987333 139.903667,712.343333 139.493,711.858 C139.082333,711.372667 138.550333,711.13 137.897,711.13 C137.234333,711.13 136.7,711.375 136.294,711.865 C135.888,712.355 135.685,712.996667 135.685,713.79 C135.685,714.583333 135.888,715.225 136.294,715.715 C136.7,716.205 137.234333,716.45 137.897,716.45 Z M137.967,721 L144.659,711.2 L143.833,711.2 L137.141,721 L137.967,721 Z M137.897,715.82 C137.430333,715.82 137.061667,715.638 136.791,715.274 C136.520333,714.91 136.385,714.415333 136.385,713.79 C136.385,713.164667 136.520333,712.67 136.791,712.306 C137.061667,711.942 137.430333,711.76 137.897,711.76 C138.354333,711.76 138.720667,711.939667 138.996,712.299 C139.271333,712.658333 139.409,713.155333 139.409,713.79 C139.409,714.424667 139.271333,714.921667 138.996,715.281 C138.720667,715.640333 138.354333,715.82 137.897,715.82 Z M143.903,721.07 C144.565667,721.07 145.1,720.825 145.506,720.335 C145.912,719.845 146.115,719.203333 146.115,718.41 C146.115,717.616667 145.912,716.975 145.506,716.485 C145.1,715.995 144.565667,715.75 143.903,715.75 C143.249667,715.75 142.717667,715.995 142.307,716.485 C141.896333,716.975 141.691,717.616667 141.691,718.41 C141.691,719.203333 141.896333,719.845 142.307,720.335 C142.717667,720.825 143.249667,721.07 143.903,721.07 Z M143.903,720.44 C143.445667,720.44 143.079333,720.260333 142.804,719.901 C142.528667,719.541667 142.391,719.044667 142.391,718.41 C142.391,717.775333 142.528667,717.278333 142.804,716.919 C143.079333,716.559667 143.445667,716.38 143.903,716.38 C144.369667,716.38 144.738333,716.562 145.009,716.926 C145.279667,717.29 145.415,717.784667 145.415,718.41 C145.415,719.035333 145.279667,719.53 145.009,719.894 C144.738333,720.258 144.369667,720.44 143.903,720.44 Z\",\"id\":\"13%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":33}),React.createElement(\"path\",{\"d\":\"M124.233,755 L124.233,743.8 L120.441,743.8 L120.441,744.824 L123.081,744.824 L123.081,755 L124.233,755 Z M130.249,755.096 C131.123667,755.096 131.865,754.952 132.473,754.664 C133.081,754.376 133.539667,753.984 133.849,753.488 C134.158333,752.992 134.313,752.424 134.313,751.784 C134.313,750.866667 134.006333,750.122667 133.393,749.552 C132.779667,748.981333 131.886333,748.664 130.713,748.6 L130.713,748.6 L133.881,744.616 L133.881,743.8 L126.681,743.8 L126.681,744.824 L132.409,744.824 L129.305,748.712 L129.305,749.56 L130.105,749.56 C131.118333,749.56 131.875667,749.757333 132.377,750.152 C132.878333,750.546667 133.129,751.090667 133.129,751.784 C133.129,752.488 132.878333,753.04 132.377,753.44 C131.875667,753.84 131.166333,754.04 130.249,754.04 C129.545,754.04 128.883667,753.92 128.265,753.68 C127.646333,753.44 127.150333,753.128 126.777,752.744 L126.777,752.744 L126.217,753.656 C126.654333,754.093333 127.233,754.442667 127.953,754.704 C128.673,754.965333 129.438333,755.096 130.249,755.096 Z M137.897,750.45 C138.550333,750.45 139.082333,750.207333 139.493,749.722 C139.903667,749.236667 140.109,748.592667 140.109,747.79 C140.109,746.987333 139.903667,746.343333 139.493,745.858 C139.082333,745.372667 138.550333,745.13 137.897,745.13 C137.234333,745.13 136.7,745.375 136.294,745.865 C135.888,746.355 135.685,746.996667 135.685,747.79 C135.685,748.583333 135.888,749.225 136.294,749.715 C136.7,750.205 137.234333,750.45 137.897,750.45 Z M137.967,755 L144.659,745.2 L143.833,745.2 L137.141,755 L137.967,755 Z M137.897,749.82 C137.430333,749.82 137.061667,749.638 136.791,749.274 C136.520333,748.91 136.385,748.415333 136.385,747.79 C136.385,747.164667 136.520333,746.67 136.791,746.306 C137.061667,745.942 137.430333,745.76 137.897,745.76 C138.354333,745.76 138.720667,745.939667 138.996,746.299 C139.271333,746.658333 139.409,747.155333 139.409,747.79 C139.409,748.424667 139.271333,748.921667 138.996,749.281 C138.720667,749.640333 138.354333,749.82 137.897,749.82 Z M143.903,755.07 C144.565667,755.07 145.1,754.825 145.506,754.335 C145.912,753.845 146.115,753.203333 146.115,752.41 C146.115,751.616667 145.912,750.975 145.506,750.485 C145.1,749.995 144.565667,749.75 143.903,749.75 C143.249667,749.75 142.717667,749.995 142.307,750.485 C141.896333,750.975 141.691,751.616667 141.691,752.41 C141.691,753.203333 141.896333,753.845 142.307,754.335 C142.717667,754.825 143.249667,755.07 143.903,755.07 Z M143.903,754.44 C143.445667,754.44 143.079333,754.260333 142.804,753.901 C142.528667,753.541667 142.391,753.044667 142.391,752.41 C142.391,751.775333 142.528667,751.278333 142.804,750.919 C143.079333,750.559667 143.445667,750.38 143.903,750.38 C144.369667,750.38 144.738333,750.562 145.009,750.926 C145.279667,751.29 145.415,751.784667 145.415,752.41 C145.415,753.035333 145.279667,753.53 145.009,753.894 C144.738333,754.258 144.369667,754.44 143.903,754.44 Z\",\"id\":\"13%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":34}),React.createElement(\"path\",{\"d\":\"M310.261,280 L310.261,278.976 L304.101,278.976 L307.909,275.232 C308.623667,274.538667 309.109,273.925333 309.365,273.392 C309.621,272.858667 309.749,272.304 309.749,271.728 C309.749,270.789333 309.415667,270.050667 308.749,269.512 C308.082333,268.973333 307.178333,268.704 306.037,268.704 C305.183667,268.704 304.418333,268.842667 303.741,269.12 C303.063667,269.397333 302.506333,269.792 302.069,270.304 L302.069,270.304 L302.885,271.008 C303.610333,270.176 304.629,269.76 305.941,269.76 C306.783667,269.76 307.431667,269.944 307.885,270.312 C308.338333,270.68 308.565,271.194667 308.565,271.856 C308.565,272.282667 308.461,272.706667 308.253,273.128 C308.045,273.549333 307.647667,274.048 307.061,274.624 L307.061,274.624 L302.405,279.184 L302.405,280 L310.261,280 Z M314.661,280.096 C315.685,280.096 316.581,279.874667 317.349,279.432 C318.117,278.989333 318.714333,278.336 319.141,277.472 C319.567667,276.608 319.781,275.552 319.781,274.304 C319.781,272.522667 319.386333,271.144 318.597,270.168 C317.807667,269.192 316.671667,268.704 315.189,268.704 C314.463667,268.704 313.810333,268.845333 313.229,269.128 C312.647667,269.410667 312.191667,269.813333 311.861,270.336 C311.530333,270.858667 311.365,271.461333 311.365,272.144 C311.365,272.816 311.525,273.405333 311.845,273.912 C312.165,274.418667 312.610333,274.810667 313.181,275.088 C313.751667,275.365333 314.405,275.504 315.141,275.504 C315.930333,275.504 316.629,275.336 317.237,275 C317.845,274.664 318.287667,274.192 318.565,273.584 C318.597,273.914667 318.613,274.218667 318.613,274.496 C318.613,275.989333 318.261,277.128 317.557,277.912 C316.853,278.696 315.882333,279.088 314.645,279.088 C313.727667,279.088 313.002333,278.912 312.469,278.56 L312.469,278.56 L312.005,279.488 C312.666333,279.893333 313.551667,280.096 314.661,280.096 Z M315.317,274.528 C314.453,274.528 313.767667,274.309333 313.261,273.872 C312.754333,273.434667 312.501,272.848 312.501,272.112 C312.501,271.376 312.754333,270.786667 313.261,270.344 C313.767667,269.901333 314.426333,269.68 315.237,269.68 C315.855667,269.68 316.389,269.792 316.837,270.016 C317.285,270.24 317.623667,270.533333 317.853,270.896 C318.082333,271.258667 318.197,271.653333 318.197,272.08 C318.197,272.538667 318.074333,272.954667 317.829,273.328 C317.583667,273.701333 317.245,273.994667 316.813,274.208 C316.381,274.421333 315.882333,274.528 315.317,274.528 Z M323.413,275.45 C324.066333,275.45 324.598333,275.207333 325.009,274.722 C325.419667,274.236667 325.625,273.592667 325.625,272.79 C325.625,271.987333 325.419667,271.343333 325.009,270.858 C324.598333,270.372667 324.066333,270.13 323.413,270.13 C322.750333,270.13 322.216,270.375 321.81,270.865 C321.404,271.355 321.201,271.996667 321.201,272.79 C321.201,273.583333 321.404,274.225 321.81,274.715 C322.216,275.205 322.750333,275.45 323.413,275.45 Z M323.483,280 L330.175,270.2 L329.349,270.2 L322.657,280 L323.483,280 Z M323.413,274.82 C322.946333,274.82 322.577667,274.638 322.307,274.274 C322.036333,273.91 321.901,273.415333 321.901,272.79 C321.901,272.164667 322.036333,271.67 322.307,271.306 C322.577667,270.942 322.946333,270.76 323.413,270.76 C323.870333,270.76 324.236667,270.939667 324.512,271.299 C324.787333,271.658333 324.925,272.155333 324.925,272.79 C324.925,273.424667 324.787333,273.921667 324.512,274.281 C324.236667,274.640333 323.870333,274.82 323.413,274.82 Z M329.419,280.07 C330.081667,280.07 330.616,279.825 331.022,279.335 C331.428,278.845 331.631,278.203333 331.631,277.41 C331.631,276.616667 331.428,275.975 331.022,275.485 C330.616,274.995 330.081667,274.75 329.419,274.75 C328.765667,274.75 328.233667,274.995 327.823,275.485 C327.412333,275.975 327.207,276.616667 327.207,277.41 C327.207,278.203333 327.412333,278.845 327.823,279.335 C328.233667,279.825 328.765667,280.07 329.419,280.07 Z M329.419,279.44 C328.961667,279.44 328.595333,279.260333 328.32,278.901 C328.044667,278.541667 327.907,278.044667 327.907,277.41 C327.907,276.775333 328.044667,276.278333 328.32,275.919 C328.595333,275.559667 328.961667,275.38 329.419,275.38 C329.885667,275.38 330.254333,275.562 330.525,275.926 C330.795667,276.29 330.931,276.784667 330.931,277.41 C330.931,278.035333 330.795667,278.53 330.525,278.894 C330.254333,279.258 329.885667,279.44 329.419,279.44 Z\",\"id\":\"29%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":35}),React.createElement(\"path\",{\"d\":\"M243.121,163 L243.121,161.976 L236.961,161.976 L240.769,158.232 C241.483667,157.538667 241.969,156.925333 242.225,156.392 C242.481,155.858667 242.609,155.304 242.609,154.728 C242.609,153.789333 242.275667,153.050667 241.609,152.512 C240.942333,151.973333 240.038333,151.704 238.897,151.704 C238.043667,151.704 237.278333,151.842667 236.601,152.12 C235.923667,152.397333 235.366333,152.792 234.929,153.304 L234.929,153.304 L235.745,154.008 C236.470333,153.176 237.489,152.76 238.801,152.76 C239.643667,152.76 240.291667,152.944 240.745,153.312 C241.198333,153.68 241.425,154.194667 241.425,154.856 C241.425,155.282667 241.321,155.706667 241.113,156.128 C240.905,156.549333 240.507667,157.048 239.921,157.624 L239.921,157.624 L235.265,162.184 L235.265,163 L243.121,163 Z M247.905,163.096 C248.779667,163.096 249.521,162.952 250.129,162.664 C250.737,162.376 251.195667,161.984 251.505,161.488 C251.814333,160.992 251.969,160.424 251.969,159.784 C251.969,158.866667 251.662333,158.122667 251.049,157.552 C250.435667,156.981333 249.542333,156.664 248.369,156.6 L248.369,156.6 L251.537,152.616 L251.537,151.8 L244.337,151.8 L244.337,152.824 L250.065,152.824 L246.961,156.712 L246.961,157.56 L247.761,157.56 C248.774333,157.56 249.531667,157.757333 250.033,158.152 C250.534333,158.546667 250.785,159.090667 250.785,159.784 C250.785,160.488 250.534333,161.04 250.033,161.44 C249.531667,161.84 248.822333,162.04 247.905,162.04 C247.201,162.04 246.539667,161.92 245.921,161.68 C245.302333,161.44 244.806333,161.128 244.433,160.744 L244.433,160.744 L243.873,161.656 C244.310333,162.093333 244.889,162.442667 245.609,162.704 C246.329,162.965333 247.094333,163.096 247.905,163.096 Z M255.553,158.45 C256.206333,158.45 256.738333,158.207333 257.149,157.722 C257.559667,157.236667 257.765,156.592667 257.765,155.79 C257.765,154.987333 257.559667,154.343333 257.149,153.858 C256.738333,153.372667 256.206333,153.13 255.553,153.13 C254.890333,153.13 254.356,153.375 253.95,153.865 C253.544,154.355 253.341,154.996667 253.341,155.79 C253.341,156.583333 253.544,157.225 253.95,157.715 C254.356,158.205 254.890333,158.45 255.553,158.45 Z M255.623,163 L262.315,153.2 L261.489,153.2 L254.797,163 L255.623,163 Z M255.553,157.82 C255.086333,157.82 254.717667,157.638 254.447,157.274 C254.176333,156.91 254.041,156.415333 254.041,155.79 C254.041,155.164667 254.176333,154.67 254.447,154.306 C254.717667,153.942 255.086333,153.76 255.553,153.76 C256.010333,153.76 256.376667,153.939667 256.652,154.299 C256.927333,154.658333 257.065,155.155333 257.065,155.79 C257.065,156.424667 256.927333,156.921667 256.652,157.281 C256.376667,157.640333 256.010333,157.82 255.553,157.82 Z M261.559,163.07 C262.221667,163.07 262.756,162.825 263.162,162.335 C263.568,161.845 263.771,161.203333 263.771,160.41 C263.771,159.616667 263.568,158.975 263.162,158.485 C262.756,157.995 262.221667,157.75 261.559,157.75 C260.905667,157.75 260.373667,157.995 259.963,158.485 C259.552333,158.975 259.347,159.616667 259.347,160.41 C259.347,161.203333 259.552333,161.845 259.963,162.335 C260.373667,162.825 260.905667,163.07 261.559,163.07 Z M261.559,162.44 C261.101667,162.44 260.735333,162.260333 260.46,161.901 C260.184667,161.541667 260.047,161.044667 260.047,160.41 C260.047,159.775333 260.184667,159.278333 260.46,158.919 C260.735333,158.559667 261.101667,158.38 261.559,158.38 C262.025667,158.38 262.394333,158.562 262.665,158.926 C262.935667,159.29 263.071,159.784667 263.071,160.41 C263.071,161.035333 262.935667,161.53 262.665,161.894 C262.394333,162.258 262.025667,162.44 261.559,162.44 Z\",\"id\":\"23%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":36}),React.createElement(\"path\",{\"d\":\"M6.184,68 L6.184,57.824 L10.12,57.824 L10.12,56.8 L1.064,56.8 L1.064,57.824 L5,57.824 L5,68 L6.184,68 Z M15.208,68.08 C16.0186667,68.08 16.7493333,67.896 17.4,67.528 C18.0506667,67.16 18.56,66.6506667 18.928,66 C19.296,65.3493333 19.48,64.6133333 19.48,63.792 C19.48,62.9706667 19.296,62.2346667 18.928,61.584 C18.56,60.9333333 18.0506667,60.4266667 17.4,60.064 C16.7493333,59.7013333 16.0186667,59.52 15.208,59.52 C14.3973333,59.52 13.6666667,59.7013333 13.016,60.064 C12.3653333,60.4266667 11.8533333,60.9333333 11.48,61.584 C11.1066667,62.2346667 10.92,62.9706667 10.92,63.792 C10.92,64.6133333 11.1066667,65.3493333 11.48,66 C11.8533333,66.6506667 12.3653333,67.16 13.016,67.528 C13.6666667,67.896 14.3973333,68.08 15.208,68.08 Z M15.208,67.072 C14.6106667,67.072 14.0746667,66.936 13.6,66.664 C13.1253333,66.392 12.752,66.0053333 12.48,65.504 C12.208,65.0026667 12.072,64.432 12.072,63.792 C12.072,63.152 12.208,62.5813333 12.48,62.08 C12.752,61.5786667 13.1253333,61.192 13.6,60.92 C14.0746667,60.648 14.6106667,60.512 15.208,60.512 C15.8053333,60.512 16.3413333,60.648 16.816,60.92 C17.2906667,61.192 17.6613333,61.5786667 17.928,62.08 C18.1946667,62.5813333 18.328,63.152 18.328,63.792 C18.328,64.432 18.1946667,65.0026667 17.928,65.504 C17.6613333,66.0053333 17.2906667,66.392 16.816,66.664 C16.3413333,66.936 15.8053333,67.072 15.208,67.072 Z M24.456,68.08 C24.7973333,68.08 25.1253333,68.0293333 25.44,67.928 C25.7546667,67.8266667 26.0186667,67.68 26.232,67.488 L26.232,67.488 L25.832,66.672 C25.672,66.8106667 25.4826667,66.9173333 25.264,66.992 C25.0453333,67.0666667 24.8186667,67.104 24.584,67.104 C24.1146667,67.104 23.7546667,66.9733333 23.504,66.712 C23.2533333,66.4506667 23.128,66.0693333 23.128,65.568 L23.128,65.568 L23.128,60.544 L25.688,60.544 L25.688,59.584 L23.128,59.584 L23.128,57.744 L21.992,57.744 L21.992,59.584 L20.488,59.584 L20.488,60.544 L21.992,60.544 L21.992,65.632 C21.992,66.4106667 22.2053333,67.0133333 22.632,67.44 C23.0586667,67.8666667 23.6666667,68.08 24.456,68.08 Z M30.664,68.08 C31.3466667,68.08 31.936,67.9573333 32.432,67.712 C32.928,67.4666667 33.304,67.1253333 33.56,66.688 L33.56,66.688 L33.56,68 L34.648,68 L34.648,62.784 C34.648,61.7066667 34.3546667,60.8933333 33.768,60.344 C33.1813333,59.7946667 32.3386667,59.52 31.24,59.52 C30.5786667,59.52 29.9493333,59.6186667 29.352,59.816 C28.7546667,60.0133333 28.2426667,60.2933333 27.816,60.656 L27.816,60.656 L28.328,61.504 C28.68,61.1946667 29.1013333,60.952 29.592,60.776 C30.0826667,60.6 30.5946667,60.512 31.128,60.512 C31.9066667,60.512 32.4986667,60.7013333 32.904,61.08 C33.3093333,61.4586667 33.512,62.0106667 33.512,62.736 L33.512,62.736 L33.512,63.248 L30.84,63.248 C29.7093333,63.248 28.8853333,63.4666667 28.368,63.904 C27.8506667,64.3413333 27.592,64.9173333 27.592,65.632 C27.592,66.368 27.8693333,66.96 28.424,67.408 C28.9786667,67.856 29.7253333,68.08 30.664,68.08 Z M30.84,67.184 C30.168,67.184 29.6453333,67.0426667 29.272,66.76 C28.8986667,66.4773333 28.712,66.0906667 28.712,65.6 C28.712,64.5973333 29.432,64.096 30.872,64.096 L30.872,64.096 L33.512,64.096 L33.512,65.472 C33.288,66.0266667 32.9466667,66.4506667 32.488,66.744 C32.0293333,67.0373333 31.48,67.184 30.84,67.184 Z M38.872,68 L38.872,56.128 L37.736,56.128 L37.736,68 L38.872,68 Z M49.576,68.08 C50.28,68.08 50.912,67.9306667 51.472,67.632 C52.032,67.3333333 52.4826667,66.9013333 52.824,66.336 L52.824,66.336 L52.824,68 L53.912,68 L53.912,56.128 L52.776,56.128 L52.776,61.184 C52.424,60.64 51.9733333,60.2266667 51.424,59.944 C50.8746667,59.6613333 50.2586667,59.52 49.576,59.52 C48.7866667,59.52 48.072,59.6986667 47.432,60.056 C46.792,60.4133333 46.2906667,60.9173333 45.928,61.568 C45.5653333,62.2186667 45.384,62.96 45.384,63.792 C45.384,64.624 45.5653333,65.3653333 45.928,66.016 C46.2906667,66.6666667 46.792,67.1733333 47.432,67.536 C48.072,67.8986667 48.7866667,68.08 49.576,68.08 Z M49.672,67.072 C49.0746667,67.072 48.5386667,66.936 48.064,66.664 C47.5893333,66.392 47.216,66.0053333 46.944,65.504 C46.672,65.0026667 46.536,64.432 46.536,63.792 C46.536,63.152 46.672,62.5813333 46.944,62.08 C47.216,61.5786667 47.5893333,61.192 48.064,60.92 C48.5386667,60.648 49.0746667,60.512 49.672,60.512 C50.2586667,60.512 50.7893333,60.648 51.264,60.92 C51.7386667,61.192 52.112,61.5786667 52.384,62.08 C52.656,62.5813333 52.792,63.152 52.792,63.792 C52.792,64.432 52.656,65.0026667 52.384,65.504 C52.112,66.0053333 51.7386667,66.392 51.264,66.664 C50.7893333,66.936 50.2586667,67.072 49.672,67.072 Z M57.656,57.744 C57.8906667,57.744 58.088,57.664 58.248,57.504 C58.408,57.344 58.488,57.1466667 58.488,56.912 C58.488,56.6986667 58.408,56.5146667 58.248,56.36 C58.088,56.2053333 57.8906667,56.128 57.656,56.128 C57.4213333,56.128 57.224,56.208 57.064,56.368 C56.904,56.528 56.824,56.7146667 56.824,56.928 C56.824,57.152 56.904,57.344 57.064,57.504 C57.224,57.664 57.4213333,57.744 57.656,57.744 Z M58.216,68 L58.216,59.584 L57.08,59.584 L57.08,68 L58.216,68 Z M63.64,68.08 C64.728,68.08 65.5786667,67.864 66.192,67.432 C66.8053333,67 67.112,66.416 67.112,65.68 C67.112,65.136 66.968,64.7093333 66.68,64.4 C66.392,64.0906667 66.0453333,63.872 65.64,63.744 C65.2346667,63.616 64.696,63.488 64.024,63.36 C63.48,63.264 63.0533333,63.1706667 62.744,63.08 C62.4346667,62.9893333 62.176,62.848 61.968,62.656 C61.76,62.464 61.656,62.208 61.656,61.888 C61.656,61.472 61.84,61.136 62.208,60.88 C62.576,60.624 63.1226667,60.496 63.848,60.496 C64.808,60.496 65.6346667,60.736 66.328,61.216 L66.328,61.216 L66.824,60.304 C66.472,60.0693333 66.024,59.88 65.48,59.736 C64.936,59.592 64.392,59.52 63.848,59.52 C62.8026667,59.52 61.9866667,59.744 61.4,60.192 C60.8133333,60.64 60.52,61.216 60.52,61.92 C60.52,62.4853333 60.6666667,62.928 60.96,63.248 C61.2533333,63.568 61.608,63.7946667 62.024,63.928 C62.44,64.0613333 62.9893333,64.192 63.672,64.32 C64.184,64.4053333 64.5946667,64.4933333 64.904,64.584 C65.2133333,64.6746667 65.4693333,64.808 65.672,64.984 C65.8746667,65.16 65.976,65.4026667 65.976,65.712 C65.976,66.1493333 65.792,66.488 65.424,66.728 C65.056,66.968 64.488,67.088 63.72,67.088 C63.144,67.088 62.5893333,67 62.056,66.824 C61.5226667,66.648 61.08,66.4213333 60.728,66.144 L60.728,66.144 L60.216,67.04 C60.568,67.3386667 61.056,67.5866667 61.68,67.784 C62.304,67.9813333 62.9573333,68.08 63.64,68.08 Z M71.576,68.08 C72.2586667,68.08 72.848,67.9573333 73.344,67.712 C73.84,67.4666667 74.216,67.1253333 74.472,66.688 L74.472,66.688 L74.472,68 L75.56,68 L75.56,62.784 C75.56,61.7066667 75.2666667,60.8933333 74.68,60.344 C74.0933333,59.7946667 73.2506667,59.52 72.152,59.52 C71.4906667,59.52 70.8613333,59.6186667 70.264,59.816 C69.6666667,60.0133333 69.1546667,60.2933333 68.728,60.656 L68.728,60.656 L69.24,61.504 C69.592,61.1946667 70.0133333,60.952 70.504,60.776 C70.9946667,60.6 71.5066667,60.512 72.04,60.512 C72.8186667,60.512 73.4106667,60.7013333 73.816,61.08 C74.2213333,61.4586667 74.424,62.0106667 74.424,62.736 L74.424,62.736 L74.424,63.248 L71.752,63.248 C70.6213333,63.248 69.7973333,63.4666667 69.28,63.904 C68.7626667,64.3413333 68.504,64.9173333 68.504,65.632 C68.504,66.368 68.7813333,66.96 69.336,67.408 C69.8906667,67.856 70.6373333,68.08 71.576,68.08 Z M71.752,67.184 C71.08,67.184 70.5573333,67.0426667 70.184,66.76 C69.8106667,66.4773333 69.624,66.0906667 69.624,65.6 C69.624,64.5973333 70.344,64.096 71.784,64.096 L71.784,64.096 L74.424,64.096 L74.424,65.472 C74.2,66.0266667 73.8586667,66.4506667 73.4,66.744 C72.9413333,67.0373333 72.392,67.184 71.752,67.184 Z M81.992,68.08 C82.696,68.08 83.328,67.9306667 83.888,67.632 C84.448,67.3333333 84.8986667,66.9013333 85.24,66.336 L85.24,66.336 L85.24,68 L86.328,68 L86.328,56.128 L85.192,56.128 L85.192,61.184 C84.84,60.64 84.3893333,60.2266667 83.84,59.944 C83.2906667,59.6613333 82.6746667,59.52 81.992,59.52 C81.2026667,59.52 80.488,59.6986667 79.848,60.056 C79.208,60.4133333 78.7066667,60.9173333 78.344,61.568 C77.9813333,62.2186667 77.8,62.96 77.8,63.792 C77.8,64.624 77.9813333,65.3653333 78.344,66.016 C78.7066667,66.6666667 79.208,67.1733333 79.848,67.536 C80.488,67.8986667 81.2026667,68.08 81.992,68.08 Z M82.088,67.072 C81.4906667,67.072 80.9546667,66.936 80.48,66.664 C80.0053333,66.392 79.632,66.0053333 79.36,65.504 C79.088,65.0026667 78.952,64.432 78.952,63.792 C78.952,63.152 79.088,62.5813333 79.36,62.08 C79.632,61.5786667 80.0053333,61.192 80.48,60.92 C80.9546667,60.648 81.4906667,60.512 82.088,60.512 C82.6746667,60.512 83.2053333,60.648 83.68,60.92 C84.1546667,61.192 84.528,61.5786667 84.8,62.08 C85.072,62.5813333 85.208,63.152 85.208,63.792 C85.208,64.432 85.072,65.0026667 84.8,65.504 C84.528,66.0053333 84.1546667,66.392 83.68,66.664 C83.2053333,66.936 82.6746667,67.072 82.088,67.072 Z M92.824,68 L96.568,59.584 L95.448,59.584 L92.264,66.752 L89.112,59.584 L87.928,59.584 L91.656,68 L92.824,68 Z M100.536,68.08 C101.218667,68.08 101.808,67.9573333 102.304,67.712 C102.8,67.4666667 103.176,67.1253333 103.432,66.688 L103.432,66.688 L103.432,68 L104.52,68 L104.52,62.784 C104.52,61.7066667 104.226667,60.8933333 103.64,60.344 C103.053333,59.7946667 102.210667,59.52 101.112,59.52 C100.450667,59.52 99.8213333,59.6186667 99.224,59.816 C98.6266667,60.0133333 98.1146667,60.2933333 97.688,60.656 L97.688,60.656 L98.2,61.504 C98.552,61.1946667 98.9733333,60.952 99.464,60.776 C99.9546667,60.6 100.466667,60.512 101,60.512 C101.778667,60.512 102.370667,60.7013333 102.776,61.08 C103.181333,61.4586667 103.384,62.0106667 103.384,62.736 L103.384,62.736 L103.384,63.248 L100.712,63.248 C99.5813333,63.248 98.7573333,63.4666667 98.24,63.904 C97.7226667,64.3413333 97.464,64.9173333 97.464,65.632 C97.464,66.368 97.7413333,66.96 98.296,67.408 C98.8506667,67.856 99.5973333,68.08 100.536,68.08 Z M100.712,67.184 C100.04,67.184 99.5173333,67.0426667 99.144,66.76 C98.7706667,66.4773333 98.584,66.0906667 98.584,65.6 C98.584,64.5973333 99.304,64.096 100.744,64.096 L100.744,64.096 L103.384,64.096 L103.384,65.472 C103.16,66.0266667 102.818667,66.4506667 102.36,66.744 C101.901333,67.0373333 101.352,67.184 100.712,67.184 Z M108.744,68 L108.744,63.584 C108.744,62.6346667 109.008,61.8906667 109.536,61.352 C110.064,60.8133333 110.781333,60.544 111.688,60.544 C112.498667,60.544 113.122667,60.7733333 113.56,61.232 C113.997333,61.6906667 114.216,62.3573333 114.216,63.232 L114.216,63.232 L114.216,68 L115.352,68 L115.352,63.12 C115.352,61.9466667 115.04,61.0533333 114.416,60.44 C113.792,59.8266667 112.952,59.52 111.896,59.52 C111.170667,59.52 110.533333,59.6613333 109.984,59.944 C109.434667,60.2266667 109.005333,60.624 108.696,61.136 L108.696,61.136 L108.696,59.584 L107.608,59.584 L107.608,68 L108.744,68 Z M121.096,68.08 C121.437333,68.08 121.765333,68.0293333 122.08,67.928 C122.394667,67.8266667 122.658667,67.68 122.872,67.488 L122.872,67.488 L122.472,66.672 C122.312,66.8106667 122.122667,66.9173333 121.904,66.992 C121.685333,67.0666667 121.458667,67.104 121.224,67.104 C120.754667,67.104 120.394667,66.9733333 120.144,66.712 C119.893333,66.4506667 119.768,66.0693333 119.768,65.568 L119.768,65.568 L119.768,60.544 L122.328,60.544 L122.328,59.584 L119.768,59.584 L119.768,57.744 L118.632,57.744 L118.632,59.584 L117.128,59.584 L117.128,60.544 L118.632,60.544 L118.632,65.632 C118.632,66.4106667 118.845333,67.0133333 119.272,67.44 C119.698667,67.8666667 120.306667,68.08 121.096,68.08 Z M127.304,68.08 C127.986667,68.08 128.576,67.9573333 129.072,67.712 C129.568,67.4666667 129.944,67.1253333 130.2,66.688 L130.2,66.688 L130.2,68 L131.288,68 L131.288,62.784 C131.288,61.7066667 130.994667,60.8933333 130.408,60.344 C129.821333,59.7946667 128.978667,59.52 127.88,59.52 C127.218667,59.52 126.589333,59.6186667 125.992,59.816 C125.394667,60.0133333 124.882667,60.2933333 124.456,60.656 L124.456,60.656 L124.968,61.504 C125.32,61.1946667 125.741333,60.952 126.232,60.776 C126.722667,60.6 127.234667,60.512 127.768,60.512 C128.546667,60.512 129.138667,60.7013333 129.544,61.08 C129.949333,61.4586667 130.152,62.0106667 130.152,62.736 L130.152,62.736 L130.152,63.248 L127.48,63.248 C126.349333,63.248 125.525333,63.4666667 125.008,63.904 C124.490667,64.3413333 124.232,64.9173333 124.232,65.632 C124.232,66.368 124.509333,66.96 125.064,67.408 C125.618667,67.856 126.365333,68.08 127.304,68.08 Z M127.48,67.184 C126.808,67.184 126.285333,67.0426667 125.912,66.76 C125.538667,66.4773333 125.352,66.0906667 125.352,65.6 C125.352,64.5973333 126.072,64.096 127.512,64.096 L127.512,64.096 L130.152,64.096 L130.152,65.472 C129.928,66.0266667 129.586667,66.4506667 129.128,66.744 C128.669333,67.0373333 128.12,67.184 127.48,67.184 Z M137.96,71.184 C139.368,71.184 140.421333,70.84 141.12,70.152 C141.818667,69.464 142.168,68.4053333 142.168,66.976 L142.168,66.976 L142.168,59.584 L141.08,59.584 L141.08,61.2 C140.728,60.656 140.264,60.24 139.688,59.952 C139.112,59.664 138.466667,59.52 137.752,59.52 C136.952,59.52 136.232,59.6906667 135.592,60.032 C134.952,60.3733333 134.448,60.8533333 134.08,61.472 C133.712,62.0906667 133.528,62.7946667 133.528,63.584 C133.528,64.3733333 133.712,65.08 134.08,65.704 C134.448,66.328 134.954667,66.8133333 135.6,67.16 C136.245333,67.5066667 136.962667,67.68 137.752,67.68 C138.445333,67.68 139.077333,67.5413333 139.648,67.264 C140.218667,66.9866667 140.68,66.5813333 141.032,66.048 L141.032,66.048 L141.032,67.12 C141.032,68.1653333 140.781333,68.936 140.28,69.432 C139.778667,69.928 138.994667,70.176 137.928,70.176 C137.288,70.176 136.677333,70.0746667 136.096,69.872 C135.514667,69.6693333 135.021333,69.3866667 134.616,69.024 L134.616,69.024 L134.04,69.888 C134.477333,70.2933333 135.045333,70.6106667 135.744,70.84 C136.442667,71.0693333 137.181333,71.184 137.96,71.184 Z M137.864,66.672 C137.256,66.672 136.709333,66.5413333 136.224,66.28 C135.738667,66.0186667 135.36,65.6533333 135.088,65.184 C134.816,64.7146667 134.68,64.1813333 134.68,63.584 C134.68,62.9866667 134.816,62.4533333 135.088,61.984 C135.36,61.5146667 135.738667,61.152 136.224,60.896 C136.709333,60.64 137.256,60.512 137.864,60.512 C138.482667,60.512 139.034667,60.6426667 139.52,60.904 C140.005333,61.1653333 140.384,61.528 140.656,61.992 C140.928,62.456 141.064,62.9866667 141.064,63.584 C141.064,64.1813333 140.928,64.7146667 140.656,65.184 C140.384,65.6533333 140.002667,66.0186667 139.512,66.28 C139.021333,66.5413333 138.472,66.672 137.864,66.672 Z M148.92,68.08 C149.592,68.08 150.208,67.9626667 150.768,67.728 C151.328,67.4933333 151.794667,67.152 152.168,66.704 L152.168,66.704 L151.528,65.968 C151.208,66.3306667 150.829333,66.6053333 150.392,66.792 C149.954667,66.9786667 149.474667,67.072 148.952,67.072 C148.024,67.072 147.256,66.8026667 146.648,66.264 C146.04,65.7253333 145.704,65.0186667 145.64,64.144 L145.64,64.144 L152.68,64.144 L152.696,63.792 C152.696,62.96 152.52,62.2213333 152.168,61.576 C151.816,60.9306667 151.330667,60.4266667 150.712,60.064 C150.093333,59.7013333 149.394667,59.52 148.616,59.52 C147.837333,59.52 147.136,59.7013333 146.512,60.064 C145.888,60.4266667 145.397333,60.9333333 145.04,61.584 C144.682667,62.2346667 144.504,62.9706667 144.504,63.792 C144.504,64.6133333 144.690667,65.3493333 145.064,66 C145.437333,66.6506667 145.957333,67.16 146.624,67.528 C147.290667,67.896 148.056,68.08 148.92,68.08 Z M151.608,63.296 L145.64,63.296 C145.714667,62.464 146.026667,61.7893333 146.576,61.272 C147.125333,60.7546667 147.805333,60.496 148.616,60.496 C149.437333,60.496 150.122667,60.7546667 150.672,61.272 C151.221333,61.7893333 151.533333,62.464 151.608,63.296 L151.608,63.296 Z M158.36,68.08 C159.064,68.08 159.696,67.9306667 160.256,67.632 C160.816,67.3333333 161.266667,66.9013333 161.608,66.336 L161.608,66.336 L161.608,68 L162.696,68 L162.696,56.128 L161.56,56.128 L161.56,61.184 C161.208,60.64 160.757333,60.2266667 160.208,59.944 C159.658667,59.6613333 159.042667,59.52 158.36,59.52 C157.570667,59.52 156.856,59.6986667 156.216,60.056 C155.576,60.4133333 155.074667,60.9173333 154.712,61.568 C154.349333,62.2186667 154.168,62.96 154.168,63.792 C154.168,64.624 154.349333,65.3653333 154.712,66.016 C155.074667,66.6666667 155.576,67.1733333 156.216,67.536 C156.856,67.8986667 157.570667,68.08 158.36,68.08 Z M158.456,67.072 C157.858667,67.072 157.322667,66.936 156.848,66.664 C156.373333,66.392 156,66.0053333 155.728,65.504 C155.456,65.0026667 155.32,64.432 155.32,63.792 C155.32,63.152 155.456,62.5813333 155.728,62.08 C156,61.5786667 156.373333,61.192 156.848,60.92 C157.322667,60.648 157.858667,60.512 158.456,60.512 C159.042667,60.512 159.573333,60.648 160.048,60.92 C160.522667,61.192 160.896,61.5786667 161.168,62.08 C161.44,62.5813333 161.576,63.152 161.576,63.792 C161.576,64.432 161.44,65.0026667 161.168,65.504 C160.896,66.0053333 160.522667,66.392 160.048,66.664 C159.573333,66.936 159.042667,67.072 158.456,67.072 Z M169.736,68 L171.08,65.008 L177.32,65.008 L178.664,68 L179.912,68 L174.792,56.8 L173.624,56.8 L168.504,68 L169.736,68 Z M176.888,64.048 L171.512,64.048 L174.2,58.032 L176.888,64.048 Z M182.664,71.104 L182.664,66.416 C183.016,66.96 183.466667,67.3733333 184.016,67.656 C184.565333,67.9386667 185.181333,68.08 185.864,68.08 C186.664,68.08 187.381333,67.9013333 188.016,67.544 C188.650667,67.1866667 189.149333,66.6826667 189.512,66.032 C189.874667,65.3813333 190.056,64.6346667 190.056,63.792 C190.056,62.96 189.874667,62.2186667 189.512,61.568 C189.149333,60.9173333 188.648,60.4133333 188.008,60.056 C187.368,59.6986667 186.653333,59.52 185.864,59.52 C185.16,59.52 184.528,59.6693333 183.968,59.968 C183.408,60.2666667 182.957333,60.6933333 182.616,61.248 L182.616,61.248 L182.616,59.584 L181.528,59.584 L181.528,71.104 L182.664,71.104 Z M185.784,67.072 C185.186667,67.072 184.650667,66.936 184.176,66.664 C183.701333,66.392 183.328,66.0053333 183.056,65.504 C182.784,65.0026667 182.648,64.432 182.648,63.792 C182.648,63.152 182.784,62.584 183.056,62.088 C183.328,61.592 183.701333,61.2053333 184.176,60.928 C184.650667,60.6506667 185.186667,60.512 185.784,60.512 C186.370667,60.512 186.904,60.6506667 187.384,60.928 C187.864,61.2053333 188.24,61.592 188.512,62.088 C188.784,62.584 188.92,63.152 188.92,63.792 C188.92,64.432 188.784,65.0026667 188.512,65.504 C188.24,66.0053333 187.864,66.392 187.384,66.664 C186.904,66.936 186.370667,67.072 185.784,67.072 Z M193.512,71.104 L193.512,66.416 C193.864,66.96 194.314667,67.3733333 194.864,67.656 C195.413333,67.9386667 196.029333,68.08 196.712,68.08 C197.512,68.08 198.229333,67.9013333 198.864,67.544 C199.498667,67.1866667 199.997333,66.6826667 200.36,66.032 C200.722667,65.3813333 200.904,64.6346667 200.904,63.792 C200.904,62.96 200.722667,62.2186667 200.36,61.568 C199.997333,60.9173333 199.496,60.4133333 198.856,60.056 C198.216,59.6986667 197.501333,59.52 196.712,59.52 C196.008,59.52 195.376,59.6693333 194.816,59.968 C194.256,60.2666667 193.805333,60.6933333 193.464,61.248 L193.464,61.248 L193.464,59.584 L192.376,59.584 L192.376,71.104 L193.512,71.104 Z M196.632,67.072 C196.034667,67.072 195.498667,66.936 195.024,66.664 C194.549333,66.392 194.176,66.0053333 193.904,65.504 C193.632,65.0026667 193.496,64.432 193.496,63.792 C193.496,63.152 193.632,62.584 193.904,62.088 C194.176,61.592 194.549333,61.2053333 195.024,60.928 C195.498667,60.6506667 196.034667,60.512 196.632,60.512 C197.218667,60.512 197.752,60.6506667 198.232,60.928 C198.712,61.2053333 199.088,61.592 199.36,62.088 C199.632,62.584 199.768,63.152 199.768,63.792 C199.768,64.432 199.632,65.0026667 199.36,65.504 C199.088,66.0053333 198.712,66.392 198.232,66.664 C197.752,66.936 197.218667,67.072 196.632,67.072 Z M204.36,68 L204.36,63.712 C204.36,62.7306667 204.610667,61.968 205.112,61.424 C205.613333,60.88 206.306667,60.608 207.192,60.608 L207.192,60.608 L207.464,60.624 L207.464,59.52 C206.685333,59.52 206.032,59.664 205.504,59.952 C204.976,60.24 204.578667,60.6666667 204.312,61.232 L204.312,61.232 L204.312,59.584 L203.224,59.584 L203.224,68 L204.36,68 Z M213.208,68.08 C213.88,68.08 214.496,67.9626667 215.056,67.728 C215.616,67.4933333 216.082667,67.152 216.456,66.704 L216.456,66.704 L215.816,65.968 C215.496,66.3306667 215.117333,66.6053333 214.68,66.792 C214.242667,66.9786667 213.762667,67.072 213.24,67.072 C212.312,67.072 211.544,66.8026667 210.936,66.264 C210.328,65.7253333 209.992,65.0186667 209.928,64.144 L209.928,64.144 L216.968,64.144 L216.984,63.792 C216.984,62.96 216.808,62.2213333 216.456,61.576 C216.104,60.9306667 215.618667,60.4266667 215,60.064 C214.381333,59.7013333 213.682667,59.52 212.904,59.52 C212.125333,59.52 211.424,59.7013333 210.8,60.064 C210.176,60.4266667 209.685333,60.9333333 209.328,61.584 C208.970667,62.2346667 208.792,62.9706667 208.792,63.792 C208.792,64.6133333 208.978667,65.3493333 209.352,66 C209.725333,66.6506667 210.245333,67.16 210.912,67.528 C211.578667,67.896 212.344,68.08 213.208,68.08 Z M215.896,63.296 L209.928,63.296 C210.002667,62.464 210.314667,61.7893333 210.864,61.272 C211.413333,60.7546667 212.093333,60.496 212.904,60.496 C213.725333,60.496 214.410667,60.7546667 214.96,61.272 C215.509333,61.7893333 215.821333,62.464 215.896,63.296 L215.896,63.296 Z M220.44,68 L220.44,63.584 C220.44,62.6346667 220.704,61.8906667 221.232,61.352 C221.76,60.8133333 222.477333,60.544 223.384,60.544 C224.194667,60.544 224.818667,60.7733333 225.256,61.232 C225.693333,61.6906667 225.912,62.3573333 225.912,63.232 L225.912,63.232 L225.912,68 L227.048,68 L227.048,63.12 C227.048,61.9466667 226.736,61.0533333 226.112,60.44 C225.488,59.8266667 224.648,59.52 223.592,59.52 C222.866667,59.52 222.229333,59.6613333 221.68,59.944 C221.130667,60.2266667 220.701333,60.624 220.392,61.136 L220.392,61.136 L220.392,59.584 L219.304,59.584 L219.304,68 L220.44,68 Z M232.792,68.08 C233.133333,68.08 233.461333,68.0293333 233.776,67.928 C234.090667,67.8266667 234.354667,67.68 234.568,67.488 L234.568,67.488 L234.168,66.672 C234.008,66.8106667 233.818667,66.9173333 233.6,66.992 C233.381333,67.0666667 233.154667,67.104 232.92,67.104 C232.450667,67.104 232.090667,66.9733333 231.84,66.712 C231.589333,66.4506667 231.464,66.0693333 231.464,65.568 L231.464,65.568 L231.464,60.544 L234.024,60.544 L234.024,59.584 L231.464,59.584 L231.464,57.744 L230.328,57.744 L230.328,59.584 L228.824,59.584 L228.824,60.544 L230.328,60.544 L230.328,65.632 C230.328,66.4106667 230.541333,67.0133333 230.968,67.44 C231.394667,67.8666667 232.002667,68.08 232.792,68.08 Z M237.208,57.744 C237.442667,57.744 237.64,57.664 237.8,57.504 C237.96,57.344 238.04,57.1466667 238.04,56.912 C238.04,56.6986667 237.96,56.5146667 237.8,56.36 C237.64,56.2053333 237.442667,56.128 237.208,56.128 C236.973333,56.128 236.776,56.208 236.616,56.368 C236.456,56.528 236.376,56.7146667 236.376,56.928 C236.376,57.152 236.456,57.344 236.616,57.504 C236.776,57.664 236.973333,57.744 237.208,57.744 Z M237.768,68 L237.768,59.584 L236.632,59.584 L236.632,68 L237.768,68 Z M244.424,68.08 C245.138667,68.08 245.784,67.9386667 246.36,67.656 C246.936,67.3733333 247.389333,66.96 247.72,66.416 L247.72,66.416 L246.872,65.84 C246.594667,66.256 246.242667,66.5653333 245.816,66.768 C245.389333,66.9706667 244.925333,67.072 244.424,67.072 C243.816,67.072 243.269333,66.936 242.784,66.664 C242.298667,66.392 241.92,66.008 241.648,65.512 C241.376,65.016 241.24,64.4426667 241.24,63.792 C241.24,63.152 241.376,62.5813333 241.648,62.08 C241.92,61.5786667 242.298667,61.192 242.784,60.92 C243.269333,60.648 243.816,60.512 244.424,60.512 C244.925333,60.512 245.389333,60.616 245.816,60.824 C246.242667,61.032 246.594667,61.344 246.872,61.76 L246.872,61.76 L247.72,61.184 C247.389333,60.64 246.938667,60.2266667 246.368,59.944 C245.797333,59.6613333 245.149333,59.52 244.424,59.52 C243.592,59.52 242.848,59.7013333 242.192,60.064 C241.536,60.4266667 241.021333,60.9333333 240.648,61.584 C240.274667,62.2346667 240.088,62.9706667 240.088,63.792 C240.088,64.6133333 240.274667,65.352 240.648,66.008 C241.021333,66.664 241.536,67.1733333 242.192,67.536 C242.848,67.8986667 243.592,68.08 244.424,68.08 Z M253.512,68.08 C254.184,68.08 254.8,67.9626667 255.36,67.728 C255.92,67.4933333 256.386667,67.152 256.76,66.704 L256.76,66.704 L256.12,65.968 C255.8,66.3306667 255.421333,66.6053333 254.984,66.792 C254.546667,66.9786667 254.066667,67.072 253.544,67.072 C252.616,67.072 251.848,66.8026667 251.24,66.264 C250.632,65.7253333 250.296,65.0186667 250.232,64.144 L250.232,64.144 L257.272,64.144 L257.288,63.792 C257.288,62.96 257.112,62.2213333 256.76,61.576 C256.408,60.9306667 255.922667,60.4266667 255.304,60.064 C254.685333,59.7013333 253.986667,59.52 253.208,59.52 C252.429333,59.52 251.728,59.7013333 251.104,60.064 C250.48,60.4266667 249.989333,60.9333333 249.632,61.584 C249.274667,62.2346667 249.096,62.9706667 249.096,63.792 C249.096,64.6133333 249.282667,65.3493333 249.656,66 C250.029333,66.6506667 250.549333,67.16 251.216,67.528 C251.882667,67.896 252.648,68.08 253.512,68.08 Z M256.2,63.296 L250.232,63.296 C250.306667,62.464 250.618667,61.7893333 251.168,61.272 C251.717333,60.7546667 252.397333,60.496 253.208,60.496 C254.029333,60.496 254.714667,60.7546667 255.264,61.272 C255.813333,61.7893333 256.125333,62.464 256.2,63.296 L256.2,63.296 Z M261.864,68.08 C262.952,68.08 263.802667,67.864 264.416,67.432 C265.029333,67 265.336,66.416 265.336,65.68 C265.336,65.136 265.192,64.7093333 264.904,64.4 C264.616,64.0906667 264.269333,63.872 263.864,63.744 C263.458667,63.616 262.92,63.488 262.248,63.36 C261.704,63.264 261.277333,63.1706667 260.968,63.08 C260.658667,62.9893333 260.4,62.848 260.192,62.656 C259.984,62.464 259.88,62.208 259.88,61.888 C259.88,61.472 260.064,61.136 260.432,60.88 C260.8,60.624 261.346667,60.496 262.072,60.496 C263.032,60.496 263.858667,60.736 264.552,61.216 L264.552,61.216 L265.048,60.304 C264.696,60.0693333 264.248,59.88 263.704,59.736 C263.16,59.592 262.616,59.52 262.072,59.52 C261.026667,59.52 260.210667,59.744 259.624,60.192 C259.037333,60.64 258.744,61.216 258.744,61.92 C258.744,62.4853333 258.890667,62.928 259.184,63.248 C259.477333,63.568 259.832,63.7946667 260.248,63.928 C260.664,64.0613333 261.213333,64.192 261.896,64.32 C262.408,64.4053333 262.818667,64.4933333 263.128,64.584 C263.437333,64.6746667 263.693333,64.808 263.896,64.984 C264.098667,65.16 264.2,65.4026667 264.2,65.712 C264.2,66.1493333 264.016,66.488 263.648,66.728 C263.28,66.968 262.712,67.088 261.944,67.088 C261.368,67.088 260.813333,67 260.28,66.824 C259.746667,66.648 259.304,66.4213333 258.952,66.144 L258.952,66.144 L258.44,67.04 C258.792,67.3386667 259.28,67.5866667 259.904,67.784 C260.528,67.9813333 261.181333,68.08 261.864,68.08 Z\",\"id\":\"TotaldisadvantagedApprentices\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":37}),React.createElement(\"path\",{\"d\":\"M10.28,214 L10.28,212.976 L4.008,212.976 L4.008,202.8 L2.824,202.8 L2.824,214 L10.28,214 Z M15.576,214.08 C16.248,214.08 16.864,213.962667 17.424,213.728 C17.984,213.493333 18.4506667,213.152 18.824,212.704 L18.824,212.704 L18.184,211.968 C17.864,212.330667 17.4853333,212.605333 17.048,212.792 C16.6106667,212.978667 16.1306667,213.072 15.608,213.072 C14.68,213.072 13.912,212.802667 13.304,212.264 C12.696,211.725333 12.36,211.018667 12.296,210.144 L12.296,210.144 L19.336,210.144 L19.352,209.792 C19.352,208.96 19.176,208.221333 18.824,207.576 C18.472,206.930667 17.9866667,206.426667 17.368,206.064 C16.7493333,205.701333 16.0506667,205.52 15.272,205.52 C14.4933333,205.52 13.792,205.701333 13.168,206.064 C12.544,206.426667 12.0533333,206.933333 11.696,207.584 C11.3386667,208.234667 11.16,208.970667 11.16,209.792 C11.16,210.613333 11.3466667,211.349333 11.72,212 C12.0933333,212.650667 12.6133333,213.16 13.28,213.528 C13.9466667,213.896 14.712,214.08 15.576,214.08 Z M18.264,209.296 L12.296,209.296 C12.3706667,208.464 12.6826667,207.789333 13.232,207.272 C13.7813333,206.754667 14.4613333,206.496 15.272,206.496 C16.0933333,206.496 16.7786667,206.754667 17.328,207.272 C17.8773333,207.789333 18.1893333,208.464 18.264,209.296 L18.264,209.296 Z M25,214 L28.744,205.584 L27.624,205.584 L24.44,212.752 L21.288,205.584 L20.104,205.584 L23.832,214 L25,214 Z M33.912,214.08 C34.584,214.08 35.2,213.962667 35.76,213.728 C36.32,213.493333 36.7866667,213.152 37.16,212.704 L37.16,212.704 L36.52,211.968 C36.2,212.330667 35.8213333,212.605333 35.384,212.792 C34.9466667,212.978667 34.4666667,213.072 33.944,213.072 C33.016,213.072 32.248,212.802667 31.64,212.264 C31.032,211.725333 30.696,211.018667 30.632,210.144 L30.632,210.144 L37.672,210.144 L37.688,209.792 C37.688,208.96 37.512,208.221333 37.16,207.576 C36.808,206.930667 36.3226667,206.426667 35.704,206.064 C35.0853333,205.701333 34.3866667,205.52 33.608,205.52 C32.8293333,205.52 32.128,205.701333 31.504,206.064 C30.88,206.426667 30.3893333,206.933333 30.032,207.584 C29.6746667,208.234667 29.496,208.970667 29.496,209.792 C29.496,210.613333 29.6826667,211.349333 30.056,212 C30.4293333,212.650667 30.9493333,213.16 31.616,213.528 C32.2826667,213.896 33.048,214.08 33.912,214.08 Z M36.6,209.296 L30.632,209.296 C30.7066667,208.464 31.0186667,207.789333 31.568,207.272 C32.1173333,206.754667 32.7973333,206.496 33.608,206.496 C34.4293333,206.496 35.1146667,206.754667 35.664,207.272 C36.2133333,207.789333 36.5253333,208.464 36.6,209.296 L36.6,209.296 Z M41.144,214 L41.144,202.128 L40.008,202.128 L40.008,214 L41.144,214 Z M55.4,214 L55.4,212.976 L49.24,212.976 L53.048,209.232 C53.7626667,208.538667 54.248,207.925333 54.504,207.392 C54.76,206.858667 54.888,206.304 54.888,205.728 C54.888,204.789333 54.5546667,204.050667 53.888,203.512 C53.2213333,202.973333 52.3173333,202.704 51.176,202.704 C50.3226667,202.704 49.5573333,202.842667 48.88,203.12 C48.2026667,203.397333 47.6453333,203.792 47.208,204.304 L47.208,204.304 L48.024,205.008 C48.7493333,204.176 49.768,203.76 51.08,203.76 C51.9226667,203.76 52.5706667,203.944 53.024,204.312 C53.4773333,204.68 53.704,205.194667 53.704,205.856 C53.704,206.282667 53.6,206.706667 53.392,207.128 C53.184,207.549333 52.7866667,208.048 52.2,208.624 L52.2,208.624 L47.544,213.184 L47.544,214 L55.4,214 Z\",\"id\":\"Level2\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":38}),React.createElement(\"path\",{\"d\":\"M10.28,363 L10.28,361.976 L4.008,361.976 L4.008,351.8 L2.824,351.8 L2.824,363 L10.28,363 Z M15.576,363.08 C16.248,363.08 16.864,362.962667 17.424,362.728 C17.984,362.493333 18.4506667,362.152 18.824,361.704 L18.824,361.704 L18.184,360.968 C17.864,361.330667 17.4853333,361.605333 17.048,361.792 C16.6106667,361.978667 16.1306667,362.072 15.608,362.072 C14.68,362.072 13.912,361.802667 13.304,361.264 C12.696,360.725333 12.36,360.018667 12.296,359.144 L12.296,359.144 L19.336,359.144 L19.352,358.792 C19.352,357.96 19.176,357.221333 18.824,356.576 C18.472,355.930667 17.9866667,355.426667 17.368,355.064 C16.7493333,354.701333 16.0506667,354.52 15.272,354.52 C14.4933333,354.52 13.792,354.701333 13.168,355.064 C12.544,355.426667 12.0533333,355.933333 11.696,356.584 C11.3386667,357.234667 11.16,357.970667 11.16,358.792 C11.16,359.613333 11.3466667,360.349333 11.72,361 C12.0933333,361.650667 12.6133333,362.16 13.28,362.528 C13.9466667,362.896 14.712,363.08 15.576,363.08 Z M18.264,358.296 L12.296,358.296 C12.3706667,357.464 12.6826667,356.789333 13.232,356.272 C13.7813333,355.754667 14.4613333,355.496 15.272,355.496 C16.0933333,355.496 16.7786667,355.754667 17.328,356.272 C17.8773333,356.789333 18.1893333,357.464 18.264,358.296 L18.264,358.296 Z M25,363 L28.744,354.584 L27.624,354.584 L24.44,361.752 L21.288,354.584 L20.104,354.584 L23.832,363 L25,363 Z M33.912,363.08 C34.584,363.08 35.2,362.962667 35.76,362.728 C36.32,362.493333 36.7866667,362.152 37.16,361.704 L37.16,361.704 L36.52,360.968 C36.2,361.330667 35.8213333,361.605333 35.384,361.792 C34.9466667,361.978667 34.4666667,362.072 33.944,362.072 C33.016,362.072 32.248,361.802667 31.64,361.264 C31.032,360.725333 30.696,360.018667 30.632,359.144 L30.632,359.144 L37.672,359.144 L37.688,358.792 C37.688,357.96 37.512,357.221333 37.16,356.576 C36.808,355.930667 36.3226667,355.426667 35.704,355.064 C35.0853333,354.701333 34.3866667,354.52 33.608,354.52 C32.8293333,354.52 32.128,354.701333 31.504,355.064 C30.88,355.426667 30.3893333,355.933333 30.032,356.584 C29.6746667,357.234667 29.496,357.970667 29.496,358.792 C29.496,359.613333 29.6826667,360.349333 30.056,361 C30.4293333,361.650667 30.9493333,362.16 31.616,362.528 C32.2826667,362.896 33.048,363.08 33.912,363.08 Z M36.6,358.296 L30.632,358.296 C30.7066667,357.464 31.0186667,356.789333 31.568,356.272 C32.1173333,355.754667 32.7973333,355.496 33.608,355.496 C34.4293333,355.496 35.1146667,355.754667 35.664,356.272 C36.2133333,356.789333 36.5253333,357.464 36.6,358.296 L36.6,358.296 Z M41.144,363 L41.144,351.128 L40.008,351.128 L40.008,363 L41.144,363 Z M51.096,363.096 C51.9706667,363.096 52.712,362.952 53.32,362.664 C53.928,362.376 54.3866667,361.984 54.696,361.488 C55.0053333,360.992 55.16,360.424 55.16,359.784 C55.16,358.866667 54.8533333,358.122667 54.24,357.552 C53.6266667,356.981333 52.7333333,356.664 51.56,356.6 L51.56,356.6 L54.728,352.616 L54.728,351.8 L47.528,351.8 L47.528,352.824 L53.256,352.824 L50.152,356.712 L50.152,357.56 L50.952,357.56 C51.9653333,357.56 52.7226667,357.757333 53.224,358.152 C53.7253333,358.546667 53.976,359.090667 53.976,359.784 C53.976,360.488 53.7253333,361.04 53.224,361.44 C52.7226667,361.84 52.0133333,362.04 51.096,362.04 C50.392,362.04 49.7306667,361.92 49.112,361.68 C48.4933333,361.44 47.9973333,361.128 47.624,360.744 L47.624,360.744 L47.064,361.656 C47.5013333,362.093333 48.08,362.442667 48.8,362.704 C49.52,362.965333 50.2853333,363.096 51.096,363.096 Z\",\"id\":\"Level3\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":39}),React.createElement(\"path\",{\"d\":\"M10.28,511 L10.28,509.976 L4.008,509.976 L4.008,499.8 L2.824,499.8 L2.824,511 L10.28,511 Z M15.576,511.08 C16.248,511.08 16.864,510.962667 17.424,510.728 C17.984,510.493333 18.4506667,510.152 18.824,509.704 L18.824,509.704 L18.184,508.968 C17.864,509.330667 17.4853333,509.605333 17.048,509.792 C16.6106667,509.978667 16.1306667,510.072 15.608,510.072 C14.68,510.072 13.912,509.802667 13.304,509.264 C12.696,508.725333 12.36,508.018667 12.296,507.144 L12.296,507.144 L19.336,507.144 L19.352,506.792 C19.352,505.96 19.176,505.221333 18.824,504.576 C18.472,503.930667 17.9866667,503.426667 17.368,503.064 C16.7493333,502.701333 16.0506667,502.52 15.272,502.52 C14.4933333,502.52 13.792,502.701333 13.168,503.064 C12.544,503.426667 12.0533333,503.933333 11.696,504.584 C11.3386667,505.234667 11.16,505.970667 11.16,506.792 C11.16,507.613333 11.3466667,508.349333 11.72,509 C12.0933333,509.650667 12.6133333,510.16 13.28,510.528 C13.9466667,510.896 14.712,511.08 15.576,511.08 Z M18.264,506.296 L12.296,506.296 C12.3706667,505.464 12.6826667,504.789333 13.232,504.272 C13.7813333,503.754667 14.4613333,503.496 15.272,503.496 C16.0933333,503.496 16.7786667,503.754667 17.328,504.272 C17.8773333,504.789333 18.1893333,505.464 18.264,506.296 L18.264,506.296 Z M25,511 L28.744,502.584 L27.624,502.584 L24.44,509.752 L21.288,502.584 L20.104,502.584 L23.832,511 L25,511 Z M33.912,511.08 C34.584,511.08 35.2,510.962667 35.76,510.728 C36.32,510.493333 36.7866667,510.152 37.16,509.704 L37.16,509.704 L36.52,508.968 C36.2,509.330667 35.8213333,509.605333 35.384,509.792 C34.9466667,509.978667 34.4666667,510.072 33.944,510.072 C33.016,510.072 32.248,509.802667 31.64,509.264 C31.032,508.725333 30.696,508.018667 30.632,507.144 L30.632,507.144 L37.672,507.144 L37.688,506.792 C37.688,505.96 37.512,505.221333 37.16,504.576 C36.808,503.930667 36.3226667,503.426667 35.704,503.064 C35.0853333,502.701333 34.3866667,502.52 33.608,502.52 C32.8293333,502.52 32.128,502.701333 31.504,503.064 C30.88,503.426667 30.3893333,503.933333 30.032,504.584 C29.6746667,505.234667 29.496,505.970667 29.496,506.792 C29.496,507.613333 29.6826667,508.349333 30.056,509 C30.4293333,509.650667 30.9493333,510.16 31.616,510.528 C32.2826667,510.896 33.048,511.08 33.912,511.08 Z M36.6,506.296 L30.632,506.296 C30.7066667,505.464 31.0186667,504.789333 31.568,504.272 C32.1173333,503.754667 32.7973333,503.496 33.608,503.496 C34.4293333,503.496 35.1146667,503.754667 35.664,504.272 C36.2133333,504.789333 36.5253333,505.464 36.6,506.296 L36.6,506.296 Z M41.144,511 L41.144,499.128 L40.008,499.128 L40.008,511 L41.144,511 Z M55.032,511 L55.032,508.056 L57.272,508.056 L57.272,507.032 L55.032,507.032 L55.032,504.44 L53.912,504.44 L53.912,507.032 L49.048,507.032 L54.776,499.8 L53.496,499.8 L47.56,507.224 L47.56,508.056 L53.88,508.056 L53.88,511 L55.032,511 Z M62.648,507.16 L62.648,506.168 L58.456,506.168 L58.456,507.16 L62.648,507.16 Z M67.976,511.096 C68.8613333,511.096 69.608,510.949333 70.216,510.656 C70.824,510.362667 71.28,509.96 71.584,509.448 C71.888,508.936 72.04,508.354667 72.04,507.704 C72.04,506.658667 71.6693333,505.845333 70.928,505.264 C70.1866667,504.682667 69.0053333,504.392 67.384,504.392 L67.384,504.392 L65.944,504.392 L66.328,500.824 L71.448,500.824 L71.448,499.8 L65.32,499.8 L64.744,505.416 L67.128,505.416 C68.4826667,505.416 69.4453333,505.613333 70.016,506.008 C70.5866667,506.402667 70.872,506.984 70.872,507.752 C70.872,508.445333 70.6186667,509 70.112,509.416 C69.6053333,509.832 68.888,510.04 67.96,510.04 C67.256,510.04 66.6,509.92 65.992,509.68 C65.384,509.44 64.8933333,509.128 64.52,508.744 L64.52,508.744 L63.96,509.656 C64.3973333,510.093333 64.976,510.442667 65.696,510.704 C66.416,510.965333 67.176,511.096 67.976,511.096 Z\",\"id\":\"Level4-5\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":40}),React.createElement(\"path\",{\"d\":\"M10.28,660 L10.28,658.976 L4.008,658.976 L4.008,648.8 L2.824,648.8 L2.824,660 L10.28,660 Z M15.576,660.08 C16.248,660.08 16.864,659.962667 17.424,659.728 C17.984,659.493333 18.4506667,659.152 18.824,658.704 L18.824,658.704 L18.184,657.968 C17.864,658.330667 17.4853333,658.605333 17.048,658.792 C16.6106667,658.978667 16.1306667,659.072 15.608,659.072 C14.68,659.072 13.912,658.802667 13.304,658.264 C12.696,657.725333 12.36,657.018667 12.296,656.144 L12.296,656.144 L19.336,656.144 L19.352,655.792 C19.352,654.96 19.176,654.221333 18.824,653.576 C18.472,652.930667 17.9866667,652.426667 17.368,652.064 C16.7493333,651.701333 16.0506667,651.52 15.272,651.52 C14.4933333,651.52 13.792,651.701333 13.168,652.064 C12.544,652.426667 12.0533333,652.933333 11.696,653.584 C11.3386667,654.234667 11.16,654.970667 11.16,655.792 C11.16,656.613333 11.3466667,657.349333 11.72,658 C12.0933333,658.650667 12.6133333,659.16 13.28,659.528 C13.9466667,659.896 14.712,660.08 15.576,660.08 Z M18.264,655.296 L12.296,655.296 C12.3706667,654.464 12.6826667,653.789333 13.232,653.272 C13.7813333,652.754667 14.4613333,652.496 15.272,652.496 C16.0933333,652.496 16.7786667,652.754667 17.328,653.272 C17.8773333,653.789333 18.1893333,654.464 18.264,655.296 L18.264,655.296 Z M25,660 L28.744,651.584 L27.624,651.584 L24.44,658.752 L21.288,651.584 L20.104,651.584 L23.832,660 L25,660 Z M33.912,660.08 C34.584,660.08 35.2,659.962667 35.76,659.728 C36.32,659.493333 36.7866667,659.152 37.16,658.704 L37.16,658.704 L36.52,657.968 C36.2,658.330667 35.8213333,658.605333 35.384,658.792 C34.9466667,658.978667 34.4666667,659.072 33.944,659.072 C33.016,659.072 32.248,658.802667 31.64,658.264 C31.032,657.725333 30.696,657.018667 30.632,656.144 L30.632,656.144 L37.672,656.144 L37.688,655.792 C37.688,654.96 37.512,654.221333 37.16,653.576 C36.808,652.930667 36.3226667,652.426667 35.704,652.064 C35.0853333,651.701333 34.3866667,651.52 33.608,651.52 C32.8293333,651.52 32.128,651.701333 31.504,652.064 C30.88,652.426667 30.3893333,652.933333 30.032,653.584 C29.6746667,654.234667 29.496,654.970667 29.496,655.792 C29.496,656.613333 29.6826667,657.349333 30.056,658 C30.4293333,658.650667 30.9493333,659.16 31.616,659.528 C32.2826667,659.896 33.048,660.08 33.912,660.08 Z M36.6,655.296 L30.632,655.296 C30.7066667,654.464 31.0186667,653.789333 31.568,653.272 C32.1173333,652.754667 32.7973333,652.496 33.608,652.496 C34.4293333,652.496 35.1146667,652.754667 35.664,653.272 C36.2133333,653.789333 36.5253333,654.464 36.6,655.296 L36.6,655.296 Z M41.144,660 L41.144,648.128 L40.008,648.128 L40.008,660 L41.144,660 Z M52.344,660.096 C53.0693333,660.096 53.7226667,659.954667 54.304,659.672 C54.8853333,659.389333 55.3413333,658.986667 55.672,658.464 C56.0026667,657.941333 56.168,657.338667 56.168,656.656 C56.168,655.984 56.008,655.394667 55.688,654.888 C55.368,654.381333 54.9226667,653.989333 54.352,653.712 C53.7813333,653.434667 53.128,653.296 52.392,653.296 C51.6026667,653.296 50.904,653.464 50.296,653.8 C49.688,654.136 49.2453333,654.608 48.968,655.216 C48.936,654.874667 48.92,654.570667 48.92,654.304 C48.92,652.810667 49.272,651.672 49.976,650.888 C50.68,650.104 51.6506667,649.712 52.888,649.712 C53.8053333,649.712 54.5306667,649.888 55.064,650.24 L55.064,650.24 L55.528,649.312 C54.8666667,648.906667 53.9813333,648.704 52.872,648.704 C51.848,648.704 50.952,648.925333 50.184,649.368 C49.416,649.810667 48.8186667,650.464 48.392,651.328 C47.9653333,652.192 47.752,653.248 47.752,654.496 C47.752,656.277333 48.1466667,657.656 48.936,658.632 C49.7253333,659.608 50.8613333,660.096 52.344,660.096 Z M52.296,659.12 C51.6773333,659.12 51.144,659.008 50.696,658.784 C50.248,658.56 49.9093333,658.266667 49.68,657.904 C49.4506667,657.541333 49.336,657.146667 49.336,656.72 C49.336,656.261333 49.4586667,655.845333 49.704,655.472 C49.9493333,655.098667 50.288,654.805333 50.72,654.592 C51.152,654.378667 51.6506667,654.272 52.216,654.272 C53.08,654.272 53.7653333,654.490667 54.272,654.928 C54.7786667,655.365333 55.032,655.952 55.032,656.688 C55.032,657.424 54.7786667,658.013333 54.272,658.456 C53.7653333,658.898667 53.1066667,659.12 52.296,659.12 Z\",\"id\":\"Level6\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":41})])))]);\n}\n\nApprenticeshipsMobile.defaultProps = {\"width\":\"354px\",\"height\":\"761px\",\"viewBox\":\"0 0 354 761\",\"version\":\"1.1\"};\n\nmodule.exports = ApprenticeshipsMobile;\n\nApprenticeshipsMobile.default = ApprenticeshipsMobile;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.OptionsConsumer = exports.OptionsProvider = exports.OptionsContext = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n/* eslint-disable import/no-extraneous-dependencies */\nvar OptionsContext = _react.default.createContext('Options');\n\nexports.OptionsContext = OptionsContext;\n\nvar OptionsProvider = function OptionsProvider(_ref) {\n  var children = _ref.children,\n      _ref$useAutoGen = _ref.useAutoGen,\n      useAutoGen = _ref$useAutoGen === void 0 ? false : _ref$useAutoGen,\n      _ref$usePathPrefix = _ref.usePathPrefix,\n      usePathPrefix = _ref$usePathPrefix === void 0 ? null : _ref$usePathPrefix;\n  var options = {\n    useAutoGen: useAutoGen,\n    usePathPrefix: usePathPrefix\n  };\n  return /*#__PURE__*/_react.default.createElement(OptionsContext.Provider, {\n    value: options\n  }, children);\n};\n\nexports.OptionsProvider = OptionsProvider;\nvar OptionsConsumer = OptionsContext.Consumer;\nexports.OptionsConsumer = OptionsConsumer;\nOptionsProvider.defaultProps = {\n  useAutoGen: false,\n  usePathPrefix: null\n};\nOptionsProvider.propTypes = {\n  children: _propTypes.default.node.isRequired,\n  useAutoGen: _propTypes.default.bool,\n  usePathPrefix: _propTypes.default.string\n};","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph2Desktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 3\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Gaps-in-attainment\",\"transform\":\"translate(-829.000000, -2298.000000)\"},React.createElement(\"g\",{\"id\":\"Group-3\",\"transform\":\"translate(829.000000, 2298.000000)\"},[React.createElement(\"text\",{\"id\":\"2%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":0},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"15\",\"key\":0},\"2\"),React.createElement(\"tspan\",{\"x\":\"343.44\",\"y\":\"15\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"2016-copy\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":1},React.createElement(\"tspan\",{\"x\":\"0.8\",\"y\":\"27\"},\"2016\")),React.createElement(\"text\",{\"id\":\"2017-copy\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":2},React.createElement(\"tspan\",{\"x\":\"1.12\",\"y\":\"87\"},\"2017\")),React.createElement(\"text\",{\"id\":\"2018-copy\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":3},React.createElement(\"tspan\",{\"x\":\"0.336\",\"y\":\"147\"},\"2018\")),React.createElement(\"text\",{\"id\":\"2019-copy\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":4},React.createElement(\"tspan\",{\"x\":\"0.8\",\"y\":\"207\"},\"2019\")),React.createElement(\"text\",{\"id\":\"4%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":5},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"75\",\"key\":0},\"4\"),React.createElement(\"tspan\",{\"x\":\"345.024\",\"y\":\"75\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"4%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":6},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"135\",\"key\":0},\"4\"),React.createElement(\"tspan\",{\"x\":\"345.024\",\"y\":\"135\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"5%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":7},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"195\",\"key\":0},\"5\"),React.createElement(\"tspan\",{\"x\":\"343.52\",\"y\":\"195\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"11%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":8},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"99\",\"key\":0},\"11\"),React.createElement(\"tspan\",{\"x\":\"346.544\",\"y\":\"99\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"12%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":9},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"159\",\"key\":0},\"12\"),React.createElement(\"tspan\",{\"x\":\"349.712\",\"y\":\"159\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"13%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":10},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"219\",\"key\":0},\"13\"),React.createElement(\"tspan\",{\"x\":\"349.744\",\"y\":\"219\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-4\",\"transform\":\"translate(392.000000, 12.000000)\",\"key\":11},[React.createElement(\"text\",{\"id\":\"+5pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"7.021\",\"y\":\"14\"},\"+5pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"53\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-5\",\"transform\":\"translate(392.000000, 73.000000)\",\"key\":12},[React.createElement(\"text\",{\"id\":\"+7pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"8.86\",\"y\":\"14\"},\"+7pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"53\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-6\",\"transform\":\"translate(392.000000, 132.000000)\",\"key\":13},[React.createElement(\"text\",{\"id\":\"+8pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"7.517\",\"y\":\"14\"},\"+8pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"50\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-7\",\"transform\":\"translate(392.000000, 192.000000)\",\"key\":14},[React.createElement(\"text\",{\"id\":\"+8pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"6.517\",\"y\":\"14\"},\"+8pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"50\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"text\",{\"id\":\"7%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":15},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"39\",\"key\":0},\"7\"),React.createElement(\"tspan\",{\"x\":\"343.92\",\"y\":\"39\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-58\",\"fill\":\"#F3F3F3\",\"x\":\"48\",\"y\":\"0\",\"width\":\"274\",\"height\":\"228\",\"key\":16}),React.createElement(\"g\",{\"id\":\"Group-26-Copy\",\"transform\":\"translate(48.000000, 0.000000)\",\"key\":17},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-50\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"5\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-51\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"19\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-28-Copy\",\"transform\":\"translate(48.000000, 60.000000)\",\"key\":18},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-52\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"11\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-53\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"30\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-30-Copy\",\"transform\":\"translate(48.000000, 120.000000)\",\"key\":19},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-54\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"11\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-55\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"33\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-31-Copy\",\"transform\":\"translate(48.000000, 180.000000)\",\"key\":20},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-56\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"14\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-57\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"36\",\"height\":\"24\",\"key\":1})])])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph2Desktop.defaultProps = {\"width\":\"446px\",\"height\":\"228px\",\"viewBox\":\"0 0 446 228\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph2Desktop;\n\nSchoolYearsGapsInAttainmentGraph2Desktop.default = SchoolYearsGapsInAttainmentGraph2Desktop;\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _gatsby = require(\"gatsby\");\n\nvar _getManifestPathname = _interopRequireDefault(require(\"./get-manifest-pathname\"));\n\n/* global __MANIFEST_PLUGIN_HAS_LOCALISATION__ */\n// when we don't have localisation in our manifest, we tree shake everything away\nif (__MANIFEST_PLUGIN_HAS_LOCALISATION__) {\n  var withPrefix = _gatsby.withAssetPrefix || _gatsby.withPrefix;\n\n  exports.onRouteUpdate = function (_ref, pluginOptions) {\n    var location = _ref.location;\n    var localize = pluginOptions.localize;\n    var manifestFilename = (0, _getManifestPathname.default)(location.pathname, localize);\n    var manifestEl = document.head.querySelector(\"link[rel=\\\"manifest\\\"]\");\n\n    if (manifestEl) {\n      manifestEl.setAttribute(\"href\", withPrefix(manifestFilename));\n    }\n  };\n}","/*\n  Why commonjs and not ES imports/exports?\n\n  This module is used to alias `create-react-context` package, but drop the the actual implementation part\n  because Gatsby requires version of react that has implementatoin baked in.\n  \n  Package source is using ES modules:\n    - https://github.com/jamiebuilds/create-react-context/blob/v0.3.0/src/index.js\n  \n  But to build this package `babel-plugin-add-module-exports` is used ( https://www.npmjs.com/package/babel-plugin-add-module-exports).\n  Which result in both `module.exports` and `exports.default` being set to same thing.\n\n  We don't use that babel plugin so we only have `exports.default`.\n\n  This cause problems in various 3rd party react components that rely on `module.exports` being set.\n  See https://github.com/gatsbyjs/gatsby/issues/23645 for example of it.\n  \n  Instead of adding same babel plugin we mimic output here. Adding babel plugin just for this would:\n   a) unnecesairly slow down compilation for all other files (if we just apply it everywhere)\n   b) or complicate babel-loader configuration with overwrite specifically for this file\n*/\n\nconst { createContext } = require(`react`)\n\nmodule.exports = createContext\nmodule.exports.default = createContext\n","var React = require('react');\n\nfunction FurtherEducationsInequalitiesInFundingTablet (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 10\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Tablet/Timeline/School-years/Family-circumstances-Copy\",\"transform\":\"translate(-38.000000, -1658.000000)\"},React.createElement(\"g\",{\"id\":\"Group-10\",\"transform\":\"translate(38.000000, 1658.000000)\"},[React.createElement(\"polygon\",{\"id\":\"Line\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"690.001027 294.573082 690.001447 295.143444 107.845572 295.571635 107.845152 295.001274\",\"key\":0}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-6\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"transform\":\"translate(108.000225, 151.501774) rotate(-90.000000) translate(-108.000225, -151.501774) \",\"points\":\"251.000301 151.000317 251.000525 152.00323 -35.0000756 152.00323 -35.0000756 151.000317\",\"key\":1}),React.createElement(\"polygon\",{\"id\":\"Line-Copy\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"690.001027 237.655572 690.001447 238.225933 107.845572 238.654124 107.845152 238.083763\",\"key\":2}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-2\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"690.001027 180.738061 690.001447 181.308422 107.845572 181.736614 107.845152 181.166252\",\"key\":3}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-3\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"690.001027 123.82055 690.001447 124.390912 107.845572 124.819103 107.845152 124.248741\",\"key\":4}),React.createElement(\"polygon\",{\"id\":\"Line-Copy-4\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"690.001027 66.9030391 690.001447 67.4734008 107.845572 67.9015919 107.845152 67.3312302\",\"key\":5}),React.createElement(\"polygon\",{\"id\":\"Path\",\"fill\":\"#EFEFEF\",\"fillRule\":\"nonzero\",\"points\":\"690.1561 10.000021 690.15652 10.5712105 108.000645 11.0000231 108.000225 10.4288336\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M123.991563,61.870447 C145.137185,76.7579308 162.233796,87.5504606 175.281398,94.2480366 C188.329,100.945613 210.278844,110.196352 241.130929,122.000256 L297.384297,119.225034 C348.784433,107.50743 380.661342,101.648628 393.015023,101.648628 C405.368703,101.648628 412.758852,101.648628 415.185468,101.648628 L435.701402,46.1441891 L456.217336,43.3689672 L474.086053,46.1441891 C482.313772,50.6526201 489.924522,54.1473441 496.918302,56.628361 C503.912083,59.1093779 515.71426,62.5013159 532.324834,66.8041749 L552.178964,18.3919695 C565.310544,18.7706554 575.127308,18.7706554 581.629256,18.3919695 C588.131205,18.0132835 597.727368,16.8826376 610.417745,15.0000315 L650.787809,24.8674874 L669.649232,32.5764373 L689.17246,35.9683753\",\"id\":\"Path-7\",\"stroke\":\"#3772FF\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M107.016165,146.359858 L142.739774,158.483479 L165.563191,161.902962 L183.424996,159.726927 L204.925317,164.389858 L224.771766,173.093997 L240.9797,176.513479 L281.664922,179.000376 L301.180598,170.6071 L319.373177,168.120203 L340.542723,155.68572 L359.066076,155.68572 L378.581752,143.872961 L398.758976,148.535893 L416.620781,121.18003 L458.629099,121.18003 L472.852388,123.356064 L494.683483,119.003995 L514.529933,103.771754 L533.714834,96.0002016 L553.892058,111.543305 L596.231151,119.003995 L611.777536,119.003995 L631.293212,128.329858 C644.225223,126.940226 654.03819,126.422123 660.732112,126.775547 C667.426035,127.128972 677.239002,128.683282 690.171013,131.438478\",\"id\":\"Path-8\",\"stroke\":\"#2D3142\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M107.016165,197.31687 L150.34758,197.31687 L163.578546,194.554206 L186.401964,194.554206 L225.102541,201.000422 L240.318152,198.851683 L261.487698,198.851683 L279.018729,197.31687 L323.011693,184.731401 L359.727625,164.164902 C385.533142,154.860886 406.261656,147.903065 421.913167,143.29144 C437.564678,138.679815 460.939386,132.642883 492.03729,125.180643 L516.183803,125.180643 L533.714834,104.000218 L590.277216,104.000218 L633.277857,115.357837 L649.485791,118.120501 L675.286175,116.892651 L690.171013,119.348352\",\"id\":\"Path-9\",\"stroke\":\"#DF886C\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M107.016165,239.000502 L129.178034,239.000502 L164.570869,232.712863 L185.078867,232.712863 L202.940672,229.569044 L221.794799,232.712863 L265.126214,232.712863 L282.657245,227.053989 L362.043044,193.415122 L381.227945,187.756247 L398.758976,185.241192 L416.620781,178.324789 L478.475549,166.692658 L515.522255,163.548839 L533.053286,155.374908 C550.393456,155.202935 563.403907,154.469377 572.084637,153.174235 C580.765367,151.879092 586.719302,149.783213 589.946442,146.886596 L610.785214,145.000305 L647.501146,153.174235 L690.171013,153.174235\",\"id\":\"Path-10\",\"stroke\":\"#FFBA08\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":10}),React.createElement(\"polyline\",{\"id\":\"Path-11\",\"stroke\":\"#7DCFB6\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"points\":\"340.677525 253.814487 359.516822 267.000561 379.017146 250.988899 399.178498 247.849358 436.196063 243.767954 459.332041 243.767954 471.561058 241.570275 495.688578 241.570275 514.858389 233.407467 532.706143 223.04698 553.528524 214.570218 573.689876 220.535347 592.198659 214.570218 610.707441 217.395805 631.199307 214.570218 649.377576 196.360878 670.199956 186.000391\",\"key\":11}),React.createElement(\"text\",{\"id\":\"1989-90\",\"transform\":\"translate(95.736952, 334.416091) rotate(-45.000000) translate(-95.736952, -334.416091) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":12},React.createElement(\"tspan\",{\"x\":\"67.7677483\",\"y\":\"334.416091\"},\"1989-90\")),React.createElement(\"text\",{\"id\":\"1993-94\",\"transform\":\"translate(164.948398, 332.297840) rotate(-45.000000) translate(-164.948398, -332.297840) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":13},React.createElement(\"tspan\",{\"x\":\"135.183536\",\"y\":\"332.29784\"},\"1993-94\")),React.createElement(\"text\",{\"id\":\"1997-98\",\"transform\":\"translate(234.159844, 334.416091) rotate(-45.000000) translate(-234.159844, -334.416091) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":14},React.createElement(\"tspan\",{\"x\":\"207.35864\",\"y\":\"334.416091\"},\"1997-98\")),React.createElement(\"text\",{\"id\":\"2001-02\",\"transform\":\"translate(305.489541, 334.416091) rotate(-45.000000) translate(-305.489541, -334.416091) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":15},React.createElement(\"tspan\",{\"x\":\"277.600337\",\"y\":\"334.416091\"},\"2001-02\")),React.createElement(\"text\",{\"id\":\"2005-06\",\"transform\":\"translate(376.819237, 334.416091) rotate(-45.000000) translate(-376.819237, -334.416091) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":16},React.createElement(\"tspan\",{\"x\":\"344.994033\",\"y\":\"334.416091\"},\"2005-06\")),React.createElement(\"text\",{\"id\":\"2009-10\",\"transform\":\"translate(448.148934, 334.416091) rotate(-45.000000) translate(-448.148934, -334.416091) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":17},React.createElement(\"tspan\",{\"x\":\"419.60373\",\"y\":\"334.416091\"},\"2009-10\")),React.createElement(\"text\",{\"id\":\"2013-14\",\"transform\":\"translate(519.831672, 334.769133) rotate(-45.000000) translate(-519.831672, -334.769133) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":18},React.createElement(\"tspan\",{\"x\":\"497.337744\",\"y\":\"334.769133\"},\"2013-14\")),React.createElement(\"text\",{\"id\":\"2017-18\",\"transform\":\"translate(589.749201, 332.650882) rotate(-45.000000) translate(-589.749201, -332.650882) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":19},React.createElement(\"tspan\",{\"x\":\"564.227615\",\"y\":\"332.650882\"},\"2017-18\")),React.createElement(\"text\",{\"id\":\"2019-20\",\"transform\":\"translate(657.548480, 332.650882) rotate(-45.000000) translate(-657.548480, -332.650882) \",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":20},React.createElement(\"tspan\",{\"x\":\"628.010894\",\"y\":\"332.650882\"},\"2019-20\")),React.createElement(\"text\",{\"id\":\"£0\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":21},React.createElement(\"tspan\",{\"x\":\"70.216189\",\"y\":\"302.000603\"},\"£0\")),React.createElement(\"text\",{\"id\":\"£2k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":22},React.createElement(\"tspan\",{\"x\":\"73.1042121\",\"y\":\"245.000483\"},\"£2k\")),React.createElement(\"text\",{\"id\":\"£4k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":23},React.createElement(\"tspan\",{\"x\":\"71.6162121\",\"y\":\"185.000357\"},\"£4k\")),React.createElement(\"text\",{\"id\":\"£6k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":24},React.createElement(\"tspan\",{\"x\":\"72.4482121\",\"y\":\"125.000231\"},\"£6k\")),React.createElement(\"text\",{\"id\":\"£8k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":25},React.createElement(\"tspan\",{\"x\":\"71.9842121\",\"y\":\"73.0001218\"},\"£8k\")),React.createElement(\"text\",{\"id\":\"£10k\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":26},React.createElement(\"tspan\",{\"x\":\"65.8242121\",\"y\":\"15\"},\"£10k\")),React.createElement(\"text\",{\"id\":\"Mean-expenditure-per\",\"transform\":\"translate(26.962373, 169.254703) rotate(-90.000000) translate(-26.962373, -169.254703) \",\"fontFamily\":\"Montserrat-SemiBold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"500\",\"lineSpacing\":\"26\",\"fill\":\"#2D3142\",\"key\":27},[React.createElement(\"tspan\",{\"x\":\"-89.9256266\",\"y\":\"158.254703\",\"key\":0},\"Mean expenditure per pupil, \"),React.createElement(\"tspan\",{\"x\":\"-31.3736266\",\"y\":\"184.254703\",\"key\":1},\"2019-20 prices\")])])))]);\n}\n\nFurtherEducationsInequalitiesInFundingTablet.defaultProps = {\"width\":\"692px\",\"height\":\"370px\",\"viewBox\":\"0 0 692 370\",\"version\":\"1.1\"};\n\nmodule.exports = FurtherEducationsInequalitiesInFundingTablet;\n\nFurtherEducationsInequalitiesInFundingTablet.default = FurtherEducationsInequalitiesInFundingTablet;\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };","function stylis_min(W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {}\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;","import { StyleSheet } from '@emotion/sheet';\nimport Stylis from '@emotion/stylis';\nimport '@emotion/weak-memoize'; // https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\n\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\n\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexport default createCache;","var isBrowser = \"object\" !== 'undefined';\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\n\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };","import _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement, Component } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\nimport css from '@emotion/css';\nexport { default as css } from '@emotion/css';\nvar EmotionCacheContext = createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return forwardRef(render);\n}; // thus we only need to replace what is a valid character for JS, but not for CSS\n\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = createElement(type, newProps);\n  return ele;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  // use Context.read for the theme when it's stable\n  if (typeof props.css === 'function') {\n    return createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n} // $FlowFixMe\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)jsx.*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  createElementArgArray[1] = newProps;\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return createElement(ThemeContext.Consumer, null, function (theme) {\n      var serialized = serializeStyles([styles(theme)]);\n      return createElement(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = serializeStyles([styles]);\n  return createElement(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n}); // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return InnerGlobal;\n}(Component);\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = withEmotionCache(function (props, context) {\n  return createElement(ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = serializeStyles(args, context.registered);\n      {\n        insertStyles(context, serialized, false);\n      }\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n    return ele;\n  });\n});\nexport { CacheProvider, ClassNames, Global, ThemeContext, jsx, keyframes, withEmotionCache };","var React = require('react');\n\nfunction EarlyYearsGraph2 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 11\"),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"transform\":\"translate(-176.000000, -1936.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(165.000000, 1810.000000)\"},React.createElement(\"g\",{\"transform\":\"translate(13.000000, 126.000000)\"},[React.createElement(\"text\",{\"id\":\"Half-a-grade-at-GCSE\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":0},[React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"20\",\"key\":0},\"Half a grade at \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"50\",\"key\":1},\"GCSE level \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"80\",\"key\":2},\"English\")]),React.createElement(\"text\",{\"id\":\"A-third-of-a-grade-a\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":1},[React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"144\",\"key\":0},\"A third of a grade at \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"174\",\"key\":1},\"GCSE level \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"204\",\"key\":2},\"Mathematics\")]),React.createElement(\"text\",{\"id\":\"More-likely-to-take\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":2},[React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"263\",\"key\":0},\"More likely to take \"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"293\",\"key\":1},\"four or more A-\"),React.createElement(\"tspan\",{\"x\":\"136\",\"y\":\"323\",\"key\":2},\"levels\")]),React.createElement(\"g\",{\"transform\":\"translate(-0.000000, 249.000000)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":3},React.createElement(\"g\",{\"transform\":\"translate(-1.194444, 4.777778)\"},[React.createElement(\"path\",{\"d\":\"M10.1702925,0.361401335 C8.0988222,0.366461158 6.03556233,0.596153776 4.01443573,1.04628784 C3.60475469,1.13752972 3.31334605,1.50097898 3.31334605,1.92069751 L3.31334605,28.368739 C3.31334605,28.9082581 3.78674236,29.3253712 4.32196823,29.2574436 C6.09900327,29.0319135 7.88829464,28.9167964 9.67975323,28.9127336 C15.3153437,28.9127359 19.4232401,30.1215675 22.2556848,31.9735506 C22.8519148,32.3633932 23.6426197,31.9350534 23.6417625,31.2226864 L23.6116044,6.18186476 C23.6113411,5.96330921 23.5311897,5.75238892 23.3862407,5.58881516 C20.1066451,1.88781899 15.431991,0.361401335 10.1702925,0.361401335 Z M10.1706944,2.15238889 L10.6326169,2.15736043 C15.0830958,2.24051475 18.9858563,3.53668444 21.7621427,6.46798412 L21.8189167,6.53122222 L21.8475833,29.6616389 L21.5003428,29.4853311 C18.5307359,28.0177275 14.6298613,27.1210693 9.67772159,27.1210693 L8.7443429,27.1328197 C7.8113992,27.1542009 6.87987831,27.2044653 5.95084066,27.2835298 L5.10386111,27.3647222 L5.10386111,2.64808333 L5.83182968,2.5174305 C7.02702782,2.31842662 8.23431384,2.20053348 9.44542339,2.16470617 L10.1706944,2.15238889 Z\",\"id\":\"Stroke-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.2940468,0.366469151 C30.08272,0.366469151 25.3659588,1.91732779 22.0784044,5.59057295 C21.9313834,5.75484218 21.8500957,5.96755454 21.8500957,6.18800757 L21.8500957,31.2186511 C21.8500957,31.9278871 22.6351246,32.355865 23.2312592,31.9716266 C26.1155175,30.1125785 30.2124535,28.9077474 35.8142622,28.9077474 C37.5913898,28.9162312 39.370824,29.0346485 41.1380709,29.2622951 C41.6738357,29.3313093 42.1483547,28.9139945 42.1483547,28.3738029 L42.1483547,1.92576144 C42.1483547,1.50591978 41.8567788,1.14239858 41.4469441,1.05128035 C39.4269293,0.602172028 37.3638251,0.372565509 35.2940468,0.366469151 Z M35.2898611,2.15716667 L36.0161983,2.17008829 C37.4702007,2.21362725 38.9182736,2.37478876 40.3555,2.65405556 L40.3555,27.3671111 L39.5228094,27.2861928 C38.29107,27.17876 37.0552603,27.1219878 35.8185336,27.1160909 L35.208393,27.1207182 C30.3703696,27.1945795 26.5647802,28.1482376 23.6416389,29.6652222 L23.6416389,6.53838889 L23.4134538,6.78544219 C26.2114382,3.65920257 30.2643757,2.25306185 34.8185316,2.16279274 L35.2898611,2.15716667 Z\",\"id\":\"Stroke-3\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M4.20917939,2.76488344 C4.70393447,2.76488344 5.10501272,3.16596168 5.10501272,3.66071677 C5.10501272,4.11424227 4.76799558,4.4890532 4.33073866,4.5483722 L4.20917939,4.5565501 L2.16433333,4.55561111 L2.16433333,29.799 L2.27591332,29.7767778 C2.6919855,29.6924947 3.14139644,29.6090041 3.62175169,29.5282978 L4.11233302,29.4485932 C10.0009572,28.5238891 16.3015406,28.5512756 22.2823301,30.1580377 L22.998443,30.3584703 L23.1132529,30.400428 C23.5164769,30.5796563 23.735235,31.0337584 23.6084097,31.46919 C23.4815843,31.9046216 23.0531995,32.1702345 22.6167992,32.104911 L22.4978028,32.0787694 L21.7872647,31.8802863 C16.0907404,30.3560879 10.040994,30.3312246 4.39027647,31.2185697 C3.74976448,31.3191507 3.16212356,31.4253403 2.63315454,31.5324684 L1.78079522,31.7172072 L1.49709016,31.7867604 C0.966862808,31.9264732 0.447185202,31.5625456 0.38025142,31.0357487 L0.372999369,30.9204949 L0.372999369,3.66071677 C0.372999369,3.20719127 0.710016505,2.83238034 1.14727343,2.77306134 L1.2688327,2.76488344 L4.20917939,2.76488344 Z\",\"id\":\"Stroke-5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M44.089026,2.76482061 C44.5425515,2.76482061 44.9173625,3.10183774 44.9766815,3.53909466 L44.9848594,3.66065394 L44.9848594,30.9204321 C44.9848594,31.5079206 44.4288746,31.9363864 43.8607756,31.7866994 L43.5770744,31.7171495 L43.1103562,31.6128648 C42.4862756,31.4787391 41.7682546,31.3442559 40.9676223,31.2185355 C35.0813586,30.2942367 28.762076,30.3597527 22.860044,32.0787101 C22.3850257,32.2170584 21.8877939,31.9441334 21.7494456,31.4691152 C21.6110973,30.9940969 21.8840222,30.4968651 22.3590405,30.3585168 C28.5514059,28.5550003 35.1212907,28.4868861 41.2455556,29.4485574 C41.7462692,29.5271826 42.2168366,29.6092557 42.6548634,29.6927852 L43.1923056,29.799 L43.1923056,4.55561111 L41.1486794,4.55648728 C40.6951539,4.55648728 40.6704301,4.02059025 40.6111111,3.58333333 L40.6029332,3.46177406 C40.6029332,3.00824856 40.5898632,2.83231752 41.0271201,2.77299851 L41.1486794,2.76482061 L44.089026,2.76482061 Z\",\"id\":\"Stroke-7\",\"key\":3})])),React.createElement(\"g\",{\"transform\":\"translate(-0.000000, 294.000000)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4},React.createElement(\"g\",{\"transform\":\"translate(-1.194444, 4.777778)\"},[React.createElement(\"path\",{\"d\":\"M10.1702925,0.361401335 C8.0988222,0.366461158 6.03556233,0.596153776 4.01443573,1.04628784 C3.60475469,1.13752972 3.31334605,1.50097898 3.31334605,1.92069751 L3.31334605,28.368739 C3.31334605,28.9082581 3.78674236,29.3253712 4.32196823,29.2574436 C6.09900327,29.0319135 7.88829464,28.9167964 9.67975323,28.9127336 C15.3153437,28.9127359 19.4232401,30.1215675 22.2556848,31.9735506 C22.8519148,32.3633932 23.6426197,31.9350534 23.6417625,31.2226864 L23.6116044,6.18186476 C23.6113411,5.96330921 23.5311897,5.75238892 23.3862407,5.58881516 C20.1066451,1.88781899 15.431991,0.361401335 10.1702925,0.361401335 Z M10.1706944,2.15238889 L10.6326169,2.15736043 C15.0830958,2.24051475 18.9858563,3.53668444 21.7621427,6.46798412 L21.8189167,6.53122222 L21.8475833,29.6616389 L21.5003428,29.4853311 C18.5307359,28.0177275 14.6298613,27.1210693 9.67772159,27.1210693 L8.7443429,27.1328197 C7.8113992,27.1542009 6.87987831,27.2044653 5.95084066,27.2835298 L5.10386111,27.3647222 L5.10386111,2.64808333 L5.83182968,2.5174305 C7.02702782,2.31842662 8.23431384,2.20053348 9.44542339,2.16470617 L10.1706944,2.15238889 Z\",\"id\":\"Stroke-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.2940468,0.366469151 C30.08272,0.366469151 25.3659588,1.91732779 22.0784044,5.59057295 C21.9313834,5.75484218 21.8500957,5.96755454 21.8500957,6.18800757 L21.8500957,31.2186511 C21.8500957,31.9278871 22.6351246,32.355865 23.2312592,31.9716266 C26.1155175,30.1125785 30.2124535,28.9077474 35.8142622,28.9077474 C37.5913898,28.9162312 39.370824,29.0346485 41.1380709,29.2622951 C41.6738357,29.3313093 42.1483547,28.9139945 42.1483547,28.3738029 L42.1483547,1.92576144 C42.1483547,1.50591978 41.8567788,1.14239858 41.4469441,1.05128035 C39.4269293,0.602172028 37.3638251,0.372565509 35.2940468,0.366469151 Z M35.2898611,2.15716667 L36.0161983,2.17008829 C37.4702007,2.21362725 38.9182736,2.37478876 40.3555,2.65405556 L40.3555,27.3671111 L39.5228094,27.2861928 C38.29107,27.17876 37.0552603,27.1219878 35.8185336,27.1160909 L35.208393,27.1207182 C30.3703696,27.1945795 26.5647802,28.1482376 23.6416389,29.6652222 L23.6416389,6.53838889 L23.4134538,6.78544219 C26.2114382,3.65920257 30.2643757,2.25306185 34.8185316,2.16279274 L35.2898611,2.15716667 Z\",\"id\":\"Stroke-3\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M4.20917939,2.76488344 C4.70393447,2.76488344 5.10501272,3.16596168 5.10501272,3.66071677 C5.10501272,4.11424227 4.76799558,4.4890532 4.33073866,4.5483722 L4.20917939,4.5565501 L2.16433333,4.55561111 L2.16433333,29.799 L2.27591332,29.7767778 C2.6919855,29.6924947 3.14139644,29.6090041 3.62175169,29.5282978 L4.11233302,29.4485932 C10.0009572,28.5238891 16.3015406,28.5512756 22.2823301,30.1580377 L22.998443,30.3584703 L23.1132529,30.400428 C23.5164769,30.5796563 23.735235,31.0337584 23.6084097,31.46919 C23.4815843,31.9046216 23.0531995,32.1702345 22.6167992,32.104911 L22.4978028,32.0787694 L21.7872647,31.8802863 C16.0907404,30.3560879 10.040994,30.3312246 4.39027647,31.2185697 C3.74976448,31.3191507 3.16212356,31.4253403 2.63315454,31.5324684 L1.78079522,31.7172072 L1.49709016,31.7867604 C0.966862808,31.9264732 0.447185202,31.5625456 0.38025142,31.0357487 L0.372999369,30.9204949 L0.372999369,3.66071677 C0.372999369,3.20719127 0.710016505,2.83238034 1.14727343,2.77306134 L1.2688327,2.76488344 L4.20917939,2.76488344 Z\",\"id\":\"Stroke-5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M44.089026,2.76482061 C44.5425515,2.76482061 44.9173625,3.10183774 44.9766815,3.53909466 L44.9848594,3.66065394 L44.9848594,30.9204321 C44.9848594,31.5079206 44.4288746,31.9363864 43.8607756,31.7866994 L43.5770744,31.7171495 L43.1103562,31.6128648 C42.4862756,31.4787391 41.7682546,31.3442559 40.9676223,31.2185355 C35.0813586,30.2942367 28.762076,30.3597527 22.860044,32.0787101 C22.3850257,32.2170584 21.8877939,31.9441334 21.7494456,31.4691152 C21.6110973,30.9940969 21.8840222,30.4968651 22.3590405,30.3585168 C28.5514059,28.5550003 35.1212907,28.4868861 41.2455556,29.4485574 C41.7462692,29.5271826 42.2168366,29.6092557 42.6548634,29.6927852 L43.1923056,29.799 L43.1923056,4.55561111 L41.1486794,4.55648728 C40.6951539,4.55648728 40.6704301,4.02059025 40.6111111,3.58333333 L40.6029332,3.46177406 C40.6029332,3.00824856 40.5898632,2.83231752 41.0271201,2.77299851 L41.1486794,2.76482061 L44.089026,2.76482061 Z\",\"id\":\"Stroke-7\",\"key\":3})])),React.createElement(\"g\",{\"transform\":\"translate(57.000000, 249.000000)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":5},React.createElement(\"g\",{\"transform\":\"translate(-1.194444, 4.777778)\"},[React.createElement(\"path\",{\"d\":\"M10.1702925,0.361401335 C8.0988222,0.366461158 6.03556233,0.596153776 4.01443573,1.04628784 C3.60475469,1.13752972 3.31334605,1.50097898 3.31334605,1.92069751 L3.31334605,28.368739 C3.31334605,28.9082581 3.78674236,29.3253712 4.32196823,29.2574436 C6.09900327,29.0319135 7.88829464,28.9167964 9.67975323,28.9127336 C15.3153437,28.9127359 19.4232401,30.1215675 22.2556848,31.9735506 C22.8519148,32.3633932 23.6426197,31.9350534 23.6417625,31.2226864 L23.6116044,6.18186476 C23.6113411,5.96330921 23.5311897,5.75238892 23.3862407,5.58881516 C20.1066451,1.88781899 15.431991,0.361401335 10.1702925,0.361401335 Z M10.1706944,2.15238889 L10.6326169,2.15736043 C15.0830958,2.24051475 18.9858563,3.53668444 21.7621427,6.46798412 L21.8189167,6.53122222 L21.8475833,29.6616389 L21.5003428,29.4853311 C18.5307359,28.0177275 14.6298613,27.1210693 9.67772159,27.1210693 L8.7443429,27.1328197 C7.8113992,27.1542009 6.87987831,27.2044653 5.95084066,27.2835298 L5.10386111,27.3647222 L5.10386111,2.64808333 L5.83182968,2.5174305 C7.02702782,2.31842662 8.23431384,2.20053348 9.44542339,2.16470617 L10.1706944,2.15238889 Z\",\"id\":\"Stroke-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.2940468,0.366469151 C30.08272,0.366469151 25.3659588,1.91732779 22.0784044,5.59057295 C21.9313834,5.75484218 21.8500957,5.96755454 21.8500957,6.18800757 L21.8500957,31.2186511 C21.8500957,31.9278871 22.6351246,32.355865 23.2312592,31.9716266 C26.1155175,30.1125785 30.2124535,28.9077474 35.8142622,28.9077474 C37.5913898,28.9162312 39.370824,29.0346485 41.1380709,29.2622951 C41.6738357,29.3313093 42.1483547,28.9139945 42.1483547,28.3738029 L42.1483547,1.92576144 C42.1483547,1.50591978 41.8567788,1.14239858 41.4469441,1.05128035 C39.4269293,0.602172028 37.3638251,0.372565509 35.2940468,0.366469151 Z M35.2898611,2.15716667 L36.0161983,2.17008829 C37.4702007,2.21362725 38.9182736,2.37478876 40.3555,2.65405556 L40.3555,27.3671111 L39.5228094,27.2861928 C38.29107,27.17876 37.0552603,27.1219878 35.8185336,27.1160909 L35.208393,27.1207182 C30.3703696,27.1945795 26.5647802,28.1482376 23.6416389,29.6652222 L23.6416389,6.53838889 L23.4134538,6.78544219 C26.2114382,3.65920257 30.2643757,2.25306185 34.8185316,2.16279274 L35.2898611,2.15716667 Z\",\"id\":\"Stroke-3\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M4.20917939,2.76488344 C4.70393447,2.76488344 5.10501272,3.16596168 5.10501272,3.66071677 C5.10501272,4.11424227 4.76799558,4.4890532 4.33073866,4.5483722 L4.20917939,4.5565501 L2.16433333,4.55561111 L2.16433333,29.799 L2.27591332,29.7767778 C2.6919855,29.6924947 3.14139644,29.6090041 3.62175169,29.5282978 L4.11233302,29.4485932 C10.0009572,28.5238891 16.3015406,28.5512756 22.2823301,30.1580377 L22.998443,30.3584703 L23.1132529,30.400428 C23.5164769,30.5796563 23.735235,31.0337584 23.6084097,31.46919 C23.4815843,31.9046216 23.0531995,32.1702345 22.6167992,32.104911 L22.4978028,32.0787694 L21.7872647,31.8802863 C16.0907404,30.3560879 10.040994,30.3312246 4.39027647,31.2185697 C3.74976448,31.3191507 3.16212356,31.4253403 2.63315454,31.5324684 L1.78079522,31.7172072 L1.49709016,31.7867604 C0.966862808,31.9264732 0.447185202,31.5625456 0.38025142,31.0357487 L0.372999369,30.9204949 L0.372999369,3.66071677 C0.372999369,3.20719127 0.710016505,2.83238034 1.14727343,2.77306134 L1.2688327,2.76488344 L4.20917939,2.76488344 Z\",\"id\":\"Stroke-5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M44.089026,2.76482061 C44.5425515,2.76482061 44.9173625,3.10183774 44.9766815,3.53909466 L44.9848594,3.66065394 L44.9848594,30.9204321 C44.9848594,31.5079206 44.4288746,31.9363864 43.8607756,31.7866994 L43.5770744,31.7171495 L43.1103562,31.6128648 C42.4862756,31.4787391 41.7682546,31.3442559 40.9676223,31.2185355 C35.0813586,30.2942367 28.762076,30.3597527 22.860044,32.0787101 C22.3850257,32.2170584 21.8877939,31.9441334 21.7494456,31.4691152 C21.6110973,30.9940969 21.8840222,30.4968651 22.3590405,30.3585168 C28.5514059,28.5550003 35.1212907,28.4868861 41.2455556,29.4485574 C41.7462692,29.5271826 42.2168366,29.6092557 42.6548634,29.6927852 L43.1923056,29.799 L43.1923056,4.55561111 L41.1486794,4.55648728 C40.6951539,4.55648728 40.6704301,4.02059025 40.6111111,3.58333333 L40.6029332,3.46177406 C40.6029332,3.00824856 40.5898632,2.83231752 41.0271201,2.77299851 L41.1486794,2.76482061 L44.089026,2.76482061 Z\",\"id\":\"Stroke-7\",\"key\":3})])),React.createElement(\"g\",{\"transform\":\"translate(57.000000, 294.000000)\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":6},React.createElement(\"g\",{\"transform\":\"translate(-1.194444, 4.777778)\"},[React.createElement(\"path\",{\"d\":\"M10.1702925,0.361401335 C8.0988222,0.366461158 6.03556233,0.596153776 4.01443573,1.04628784 C3.60475469,1.13752972 3.31334605,1.50097898 3.31334605,1.92069751 L3.31334605,28.368739 C3.31334605,28.9082581 3.78674236,29.3253712 4.32196823,29.2574436 C6.09900327,29.0319135 7.88829464,28.9167964 9.67975323,28.9127336 C15.3153437,28.9127359 19.4232401,30.1215675 22.2556848,31.9735506 C22.8519148,32.3633932 23.6426197,31.9350534 23.6417625,31.2226864 L23.6116044,6.18186476 C23.6113411,5.96330921 23.5311897,5.75238892 23.3862407,5.58881516 C20.1066451,1.88781899 15.431991,0.361401335 10.1702925,0.361401335 Z M10.1706944,2.15238889 L10.6326169,2.15736043 C15.0830958,2.24051475 18.9858563,3.53668444 21.7621427,6.46798412 L21.8189167,6.53122222 L21.8475833,29.6616389 L21.5003428,29.4853311 C18.5307359,28.0177275 14.6298613,27.1210693 9.67772159,27.1210693 L8.7443429,27.1328197 C7.8113992,27.1542009 6.87987831,27.2044653 5.95084066,27.2835298 L5.10386111,27.3647222 L5.10386111,2.64808333 L5.83182968,2.5174305 C7.02702782,2.31842662 8.23431384,2.20053348 9.44542339,2.16470617 L10.1706944,2.15238889 Z\",\"id\":\"Stroke-1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.2940468,0.366469151 C30.08272,0.366469151 25.3659588,1.91732779 22.0784044,5.59057295 C21.9313834,5.75484218 21.8500957,5.96755454 21.8500957,6.18800757 L21.8500957,31.2186511 C21.8500957,31.9278871 22.6351246,32.355865 23.2312592,31.9716266 C26.1155175,30.1125785 30.2124535,28.9077474 35.8142622,28.9077474 C37.5913898,28.9162312 39.370824,29.0346485 41.1380709,29.2622951 C41.6738357,29.3313093 42.1483547,28.9139945 42.1483547,28.3738029 L42.1483547,1.92576144 C42.1483547,1.50591978 41.8567788,1.14239858 41.4469441,1.05128035 C39.4269293,0.602172028 37.3638251,0.372565509 35.2940468,0.366469151 Z M35.2898611,2.15716667 L36.0161983,2.17008829 C37.4702007,2.21362725 38.9182736,2.37478876 40.3555,2.65405556 L40.3555,27.3671111 L39.5228094,27.2861928 C38.29107,27.17876 37.0552603,27.1219878 35.8185336,27.1160909 L35.208393,27.1207182 C30.3703696,27.1945795 26.5647802,28.1482376 23.6416389,29.6652222 L23.6416389,6.53838889 L23.4134538,6.78544219 C26.2114382,3.65920257 30.2643757,2.25306185 34.8185316,2.16279274 L35.2898611,2.15716667 Z\",\"id\":\"Stroke-3\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M4.20917939,2.76488344 C4.70393447,2.76488344 5.10501272,3.16596168 5.10501272,3.66071677 C5.10501272,4.11424227 4.76799558,4.4890532 4.33073866,4.5483722 L4.20917939,4.5565501 L2.16433333,4.55561111 L2.16433333,29.799 L2.27591332,29.7767778 C2.6919855,29.6924947 3.14139644,29.6090041 3.62175169,29.5282978 L4.11233302,29.4485932 C10.0009572,28.5238891 16.3015406,28.5512756 22.2823301,30.1580377 L22.998443,30.3584703 L23.1132529,30.400428 C23.5164769,30.5796563 23.735235,31.0337584 23.6084097,31.46919 C23.4815843,31.9046216 23.0531995,32.1702345 22.6167992,32.104911 L22.4978028,32.0787694 L21.7872647,31.8802863 C16.0907404,30.3560879 10.040994,30.3312246 4.39027647,31.2185697 C3.74976448,31.3191507 3.16212356,31.4253403 2.63315454,31.5324684 L1.78079522,31.7172072 L1.49709016,31.7867604 C0.966862808,31.9264732 0.447185202,31.5625456 0.38025142,31.0357487 L0.372999369,30.9204949 L0.372999369,3.66071677 C0.372999369,3.20719127 0.710016505,2.83238034 1.14727343,2.77306134 L1.2688327,2.76488344 L4.20917939,2.76488344 Z\",\"id\":\"Stroke-5\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M44.089026,2.76482061 C44.5425515,2.76482061 44.9173625,3.10183774 44.9766815,3.53909466 L44.9848594,3.66065394 L44.9848594,30.9204321 C44.9848594,31.5079206 44.4288746,31.9363864 43.8607756,31.7866994 L43.5770744,31.7171495 L43.1103562,31.6128648 C42.4862756,31.4787391 41.7682546,31.3442559 40.9676223,31.2185355 C35.0813586,30.2942367 28.762076,30.3597527 22.860044,32.0787101 C22.3850257,32.2170584 21.8877939,31.9441334 21.7494456,31.4691152 C21.6110973,30.9940969 21.8840222,30.4968651 22.3590405,30.3585168 C28.5514059,28.5550003 35.1212907,28.4868861 41.2455556,29.4485574 C41.7462692,29.5271826 42.2168366,29.6092557 42.6548634,29.6927852 L43.1923056,29.799 L43.1923056,4.55561111 L41.1486794,4.55648728 C40.6951539,4.55648728 40.6704301,4.02059025 40.6111111,3.58333333 L40.6029332,3.46177406 C40.6029332,3.00824856 40.5898632,2.83231752 41.0271201,2.77299851 L41.1486794,2.76482061 L44.089026,2.76482061 Z\",\"id\":\"Stroke-7\",\"key\":3})])),React.createElement(\"circle\",{\"id\":\"Oval-Copy-7\",\"fill\":\"#3772FF\",\"transform\":\"translate(50.000000, 50.000000) rotate(-180.000000) translate(-50.000000, -50.000000) \",\"cx\":\"50\",\"cy\":\"50\",\"r\":\"50\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M75,75 C75,47.3857625 52.6142375,25 25,25 C-2.61423749,25 -25,47.3857625 -25,75\",\"id\":\"Oval-Copy-9\",\"fill\":\"#EFEFEF\",\"transform\":\"translate(25.000000, 50.000000) rotate(-90.000000) translate(-25.000000, -50.000000) \",\"key\":8}),React.createElement(\"circle\",{\"id\":\"Oval\",\"fill\":\"#FFFFFF\",\"cx\":\"50.4672897\",\"cy\":\"50.4672897\",\"r\":\"25.2336449\",\"key\":9}),React.createElement(\"polygon\",{\"id\":\"Clip-2\",\"points\":\"-1.8189894e-12 125 49.7995098 125 49.7995098 198.730756 -1.8189894e-12 198.730756\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M49.7995098,174.153192 L6.67892157,198.730756 C-7.07009804,175.22073 1.08872549,145.158364 24.9034314,131.585246 C32.8338235,127.064422 40.6426471,125 49.7995098,125 L49.7995098,174.153192 Z\",\"id\":\"Fill-1\",\"fill\":\"#EFEFEF\",\"key\":11}),React.createElement(\"polygon\",{\"id\":\"Clip-5\",\"points\":\"6.67892157 174.153192 92.920098 174.153192 92.920098 223.315966 6.67892157 223.315966\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M49.7995098,174.153192 L92.920098,198.730756 C79.170098,222.240783 48.7181373,230.296192 24.9034314,216.722106 C16.9740196,212.20225 11.2573529,206.558721 6.67892157,198.730756 L49.7995098,174.153192 Z\",\"id\":\"Fill-4\",\"fill\":\"#EFEFEF\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M49.7995098,174.153192 L49.7995098,125 C77.2985294,125 99.5906863,147.005989 99.5906863,174.153192 C99.5906863,183.193872 97.4985294,190.901824 92.920098,198.730756 L49.7995098,174.153192 Z\",\"id\":\"Fill-7\",\"fill\":\"#FFBA08\",\"key\":14}),React.createElement(\"ellipse\",{\"id\":\"Oval-Copy-10\",\"fill\":\"#FFFFFF\",\"cx\":\"50.4716981\",\"cy\":\"174.965666\",\"rx\":\"25\",\"ry\":\"24.7663551\",\"key\":15})]))))]);\n}\n\nEarlyYearsGraph2.defaultProps = {\"width\":\"319px\",\"height\":\"338px\",\"viewBox\":\"0 0 319 338\",\"version\":\"1.1\"};\n\nmodule.exports = EarlyYearsGraph2;\n\nEarlyYearsGraph2.default = EarlyYearsGraph2;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport loader from \"./loader\"\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.loadPageSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.AppProviders = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _breadcrumbContext = require(\"./breadcrumb-context\");\n\nvar _optionsContext = require(\"./options-context\");\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable import/prefer-default-export */\n\n/* eslint-disable react/prop-types */\nvar AppProviders = function AppProviders(_ref) {\n  var element = _ref.element,\n      pluginOptions = _ref.pluginOptions;\n  var defaultCrumb = pluginOptions.defaultCrumb,\n      useClassNames = pluginOptions.useClassNames,\n      useAutoGen = pluginOptions.useAutoGen,\n      usePathPrefix = pluginOptions.usePathPrefix;\n  return /*#__PURE__*/_react.default.createElement(_optionsContext.OptionsProvider, {\n    useAutoGen: useAutoGen || false,\n    useClassNames: useClassNames || false,\n    usePathPrefix: usePathPrefix || null\n  }, /*#__PURE__*/_react.default.createElement(_breadcrumbContext.BreadcrumbProvider, {\n    defaultCrumb: defaultCrumb || null\n  }, element));\n};\n\nexports.AppProviders = AppProviders;","import ResearchImage from \"../../../../src/components/research/research-image\";\nimport InequalitiesSpendingDesktop from \"../../../../src/content/further-education/svg/further-educations-inequalities-in-funding-desktop.svg\";\nimport InequalitiesSpendingMobile from \"../../../../src/content/further-education/svg/further-educations-inequalities-in-funding-mobile.svg\";\nimport InequalitiesSpendingTablet from \"../../../../src/content/further-education/svg/further-educations-inequalities-in-funding-tablet.svg\";\nimport ResizableGraph from \"../../../../src/components/research/resizable-graph\";\nimport * as React from 'react';\nexport default {\n  ResearchImage,\n  InequalitiesSpendingDesktop,\n  InequalitiesSpendingMobile,\n  InequalitiesSpendingTablet,\n  ResizableGraph,\n  React\n};","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","var React = require('react');\n\nfunction SchoolYearsExecutiveSummary (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 12\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Executive-summary\",\"transform\":\"translate(-906.000000, -728.000000)\"},React.createElement(\"g\",{\"id\":\"Group-7\",\"transform\":\"translate(830.000000, 728.000000)\"},React.createElement(\"g\",{\"id\":\"Group-12\",\"transform\":\"translate(76.000000, 0.000000)\"},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-5\",\"fillOpacity\":\"0.1\",\"fill\":\"#FFBA08\",\"x\":\"53\",\"y\":\"0\",\"width\":\"114\",\"height\":\"190\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-4\",\"fillOpacity\":\"0.1\",\"fill\":\"#3772FF\",\"x\":\"179\",\"y\":\"0\",\"width\":\"114\",\"height\":\"190\",\"key\":1}),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"fill\":\"#FFBA08\",\"x\":\"53\",\"y\":\"81\",\"width\":\"114\",\"height\":\"109\",\"key\":2}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy\",\"fill\":\"#3772FF\",\"x\":\"179\",\"y\":\"50\",\"width\":\"114\",\"height\":\"140\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M96.535,111.216 C97.687,111.216 98.656,111.027 99.442,110.649 C100.228,110.271 100.813,109.767 101.197,109.137 C101.581,108.507 101.773,107.808 101.773,107.04 C101.773,105.852 101.35,104.904 100.504,104.196 C99.658,103.488 98.347,103.134 96.571,103.134 L96.571,103.134 L95.545,103.134 L95.743,100.74 L100.999,100.74 L100.999,98.4 L93.313,98.4 L92.665,105.492 L95.887,105.492 C96.967,105.492 97.726,105.63 98.164,105.906 C98.602,106.182 98.821,106.59 98.821,107.13 C98.821,107.646 98.611,108.048 98.191,108.336 C97.771,108.624 97.195,108.768 96.463,108.768 C95.803,108.768 95.161,108.669 94.537,108.471 C93.913,108.273 93.361,107.994 92.881,107.634 L92.881,107.634 L91.729,109.866 C92.329,110.298 93.058,110.631 93.916,110.865 C94.774,111.099 95.647,111.216 96.535,111.216 Z M108.145,111 L112.825,100.29 L112.825,98.4 L102.727,98.4 L102.727,102.828 L105.319,102.828 L105.319,100.776 L109.495,100.776 L104.977,111 L108.145,111 Z M116.635,105.848 C117.456333,105.848 118.123,105.568 118.635,105.008 C119.147,104.448 119.403,103.698667 119.403,102.76 C119.403,101.821333 119.147,101.072 118.635,100.512 C118.123,99.952 117.456333,99.672 116.635,99.672 C115.813667,99.672 115.144333,99.952 114.627,100.512 C114.109667,101.072 113.851,101.821333 113.851,102.76 C113.851,103.698667 114.109667,104.448 114.627,105.008 C115.144333,105.568 115.813667,105.848 116.635,105.848 Z M117.563,111 L125.211,99.8 L123.307,99.8 L115.659,111 L117.563,111 Z M116.635,104.536 C116.283,104.536 116.000333,104.384 115.787,104.08 C115.573667,103.776 115.467,103.336 115.467,102.76 C115.467,102.184 115.573667,101.744 115.787,101.44 C116.000333,101.136 116.283,100.984 116.635,100.984 C116.997667,100.984 117.283,101.133333 117.491,101.432 C117.699,101.730667 117.803,102.173333 117.803,102.76 C117.803,103.346667 117.699,103.789333 117.491,104.088 C117.283,104.386667 116.997667,104.536 116.635,104.536 Z M124.235,111.128 C125.056333,111.128 125.725667,110.848 126.243,110.288 C126.760333,109.728 127.019,108.978667 127.019,108.04 C127.019,107.101333 126.760333,106.352 126.243,105.792 C125.725667,105.232 125.056333,104.952 124.235,104.952 C123.701667,104.952 123.224333,105.077333 122.803,105.328 C122.381667,105.578667 122.053667,105.938667 121.819,106.408 C121.584333,106.877333 121.467,107.421333 121.467,108.04 C121.467,108.658667 121.584333,109.202667 121.819,109.672 C122.053667,110.141333 122.381667,110.501333 122.803,110.752 C123.224333,111.002667 123.701667,111.128 124.235,111.128 Z M124.235,109.816 C123.883,109.816 123.600333,109.666667 123.387,109.368 C123.173667,109.069333 123.067,108.626667 123.067,108.04 C123.067,107.453333 123.173667,107.010667 123.387,106.712 C123.600333,106.413333 123.883,106.264 124.235,106.264 C124.597667,106.264 124.883,106.416 125.091,106.72 C125.299,107.024 125.403,107.464 125.403,108.04 C125.403,108.616 125.299,109.056 125.091,109.36 C124.883,109.664 124.597667,109.816 124.235,109.816 Z\",\"id\":\"57%\",\"fill\":\"#2D3142\",\"fillRule\":\"nonzero\",\"key\":4}),React.createElement(\"text\",{\"id\":\"0%\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":5},[React.createElement(\"tspan\",{\"x\":\"20.46\",\"y\":\"161\",\"key\":0},\"0\"),React.createElement(\"tspan\",{\"x\":\"31.052\",\"y\":\"161\",\"fontSize\":\"12\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"50%\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":6},[React.createElement(\"tspan\",{\"x\":\"10.404\",\"y\":\"88\",\"key\":0},\"50\"),React.createElement(\"tspan\",{\"x\":\"30.052\",\"y\":\"88\",\"fontSize\":\"12\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"100%\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"30\",\"fill\":\"#2D3142\",\"key\":7},[React.createElement(\"tspan\",{\"x\":\"3.092\",\"y\":\"15\",\"key\":0},\"100\"),React.createElement(\"tspan\",{\"x\":\"30.052\",\"y\":\"15\",\"fontSize\":\"12\",\"key\":1},\"%\")]),React.createElement(\"path\",{\"d\":\"M223.089,80 L227.769,69.29 L227.769,67.4 L217.671,67.4 L217.671,71.828 L220.263,71.828 L220.263,69.776 L224.439,69.776 L219.921,80 L223.089,80 Z M238.551,80 L238.551,77.354 L240.603,77.354 L240.603,74.978 L238.551,74.978 L238.551,72.62 L235.797,72.62 L235.797,74.978 L232.413,74.978 L237.921,67.4 L234.861,67.4 L228.921,75.392 L228.921,77.354 L235.707,77.354 L235.707,80 L238.551,80 Z M243.981,74.848 C244.802333,74.848 245.469,74.568 245.981,74.008 C246.493,73.448 246.749,72.6986667 246.749,71.76 C246.749,70.8213333 246.493,70.072 245.981,69.512 C245.469,68.952 244.802333,68.672 243.981,68.672 C243.159667,68.672 242.490333,68.952 241.973,69.512 C241.455667,70.072 241.197,70.8213333 241.197,71.76 C241.197,72.6986667 241.455667,73.448 241.973,74.008 C242.490333,74.568 243.159667,74.848 243.981,74.848 Z M244.909,80 L252.557,68.8 L250.653,68.8 L243.005,80 L244.909,80 Z M243.981,73.536 C243.629,73.536 243.346333,73.384 243.133,73.08 C242.919667,72.776 242.813,72.336 242.813,71.76 C242.813,71.184 242.919667,70.744 243.133,70.44 C243.346333,70.136 243.629,69.984 243.981,69.984 C244.343667,69.984 244.629,70.1333333 244.837,70.432 C245.045,70.7306667 245.149,71.1733333 245.149,71.76 C245.149,72.3466667 245.045,72.7893333 244.837,73.088 C244.629,73.3866667 244.343667,73.536 243.981,73.536 Z M251.581,80.128 C252.402333,80.128 253.071667,79.848 253.589,79.288 C254.106333,78.728 254.365,77.9786667 254.365,77.04 C254.365,76.1013333 254.106333,75.352 253.589,74.792 C253.071667,74.232 252.402333,73.952 251.581,73.952 C251.047667,73.952 250.570333,74.0773333 250.149,74.328 C249.727667,74.5786667 249.399667,74.9386667 249.165,75.408 C248.930333,75.8773333 248.813,76.4213333 248.813,77.04 C248.813,77.6586667 248.930333,78.2026667 249.165,78.672 C249.399667,79.1413333 249.727667,79.5013333 250.149,79.752 C250.570333,80.0026667 251.047667,80.128 251.581,80.128 Z M251.581,78.816 C251.229,78.816 250.946333,78.6666667 250.733,78.368 C250.519667,78.0693333 250.413,77.6266667 250.413,77.04 C250.413,76.4533333 250.519667,76.0106667 250.733,75.712 C250.946333,75.4133333 251.229,75.264 251.581,75.264 C251.943667,75.264 252.229,75.416 252.437,75.72 C252.645,76.024 252.749,76.464 252.749,77.04 C252.749,77.616 252.645,78.056 252.437,78.36 C252.229,78.664 251.943667,78.816 251.581,78.816 Z\",\"id\":\"74%\",\"fill\":\"#FFFFFF\",\"fillRule\":\"nonzero\",\"key\":8})]))))]);\n}\n\nSchoolYearsExecutiveSummary.defaultProps = {\"width\":\"293px\",\"height\":\"190px\",\"viewBox\":\"0 0 293 190\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsExecutiveSummary;\n\nSchoolYearsExecutiveSummary.default = SchoolYearsExecutiveSummary;\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { ImageNode } from \"../common/types\";\n\ninterface ResearchImageProps {\n  imageName: string;\n  objectPosition: string;\n  classNames: Array<string>;\n}\n\ninterface PureResearchImageProps {\n  data: ImageNode;\n  objectPosition: string;\n  classNames: string[];\n}\n\nexport const PureResearchImage = ({\n  data,\n  objectPosition,\n  classNames,\n}: PureResearchImageProps) => {\n  return (\n    <Img\n      imgStyle={{ objectPosition }}\n      fluid={data.node.childImageSharp.fluid}\n      className={`research-image-wrapper ${classNames.join(\" \")}`}\n    />\n  );\n};\n\nconst ResearchImage = ({\n  imageName,\n  objectPosition,\n  classNames,\n}: ResearchImageProps) => {\n  const data = useStaticQuery(graphql`\n    query {\n      images: allFile(filter: {relativePath: {regex: \"/research/.*\\\\.jpg/\"}}) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 2560) {\n                ...GatsbyImageSharpFluid\n                originalName\n              }\n            }\n          }\n        }\n      }\n    }\n    \n  `);\n\n  const img: ImageNode = data.images.edges.find((image: ImageNode) => {\n    if (image.node.childImageSharp.fluid) {\n      return image.node.childImageSharp.fluid.originalName === imageName;\n    }\n    return false;\n  });\n\n  return (\n    <PureResearchImage\n      data={img}\n      objectPosition={objectPosition}\n      classNames={classNames}\n    ></PureResearchImage>\n  );\n};\n\nResearchImage.defaultProps = {\n  objectPosition: \"center\",\n  classNames: [],\n};\n\nexport default ResearchImage;\n","var React = require('react');\n\nfunction SchoolYearsGapsInAttainmentGraph1Desktop (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Group 7\"),React.createElement(\"g\",{\"id\":\"Home->-Chronology->-Timeline\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"Desktop/Timeline/School-years/Gaps-in-attainment\",\"transform\":\"translate(-164.000000, -2286.000000)\"},React.createElement(\"g\",{\"id\":\"Group-7\",\"transform\":\"translate(164.000000, 2286.000000)\"},[React.createElement(\"text\",{\"id\":\"39%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":0},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"15\",\"key\":0},\"39\"),React.createElement(\"tspan\",{\"x\":\"353.664\",\"y\":\"15\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"2016\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":1},React.createElement(\"tspan\",{\"x\":\"0.8\",\"y\":\"27\"},\"2016\")),React.createElement(\"text\",{\"id\":\"2017\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":2},React.createElement(\"tspan\",{\"x\":\"1.12\",\"y\":\"87\"},\"2017\")),React.createElement(\"text\",{\"id\":\"2018\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":3},React.createElement(\"tspan\",{\"x\":\"0.336\",\"y\":\"147\"},\"2018\")),React.createElement(\"text\",{\"id\":\"2019\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":4},React.createElement(\"tspan\",{\"x\":\"0.8\",\"y\":\"207\"},\"2019\")),React.createElement(\"text\",{\"id\":\"47%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":5},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"75\",\"key\":0},\"47\"),React.createElement(\"tspan\",{\"x\":\"354.944\",\"y\":\"75\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"51%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":6},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"135\",\"key\":0},\"51\"),React.createElement(\"tspan\",{\"x\":\"349.792\",\"y\":\"135\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"51%-copy\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#FFBA08\",\"key\":7},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"195\",\"key\":0},\"51\"),React.createElement(\"tspan\",{\"x\":\"349.792\",\"y\":\"195\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"67%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":8},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"99\",\"key\":0},\"67\"),React.createElement(\"tspan\",{\"x\":\"354.112\",\"y\":\"99\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"70%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":9},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"159\",\"key\":0},\"70\"),React.createElement(\"tspan\",{\"x\":\"354.784\",\"y\":\"159\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"text\",{\"id\":\"71%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":10},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"219\",\"key\":0},\"71\"),React.createElement(\"tspan\",{\"x\":\"350.192\",\"y\":\"219\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"g\",{\"id\":\"Group-25\",\"transform\":\"translate(392.000000, 12.000000)\",\"key\":11},[React.createElement(\"text\",{\"id\":\"+21pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"4.48\",\"y\":\"14\"},\"+21pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"53\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy\",\"transform\":\"translate(392.000000, 73.000000)\",\"key\":12},[React.createElement(\"text\",{\"id\":\"+20pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"4.373\",\"y\":\"14\"},\"+20pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"53\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-2\",\"transform\":\"translate(392.000000, 132.000000)\",\"key\":13},[React.createElement(\"text\",{\"id\":\"+20pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"3.373\",\"y\":\"14\"},\"+20pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"50\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-25-Copy-3\",\"transform\":\"translate(392.000000, 192.000000)\",\"key\":14},[React.createElement(\"text\",{\"id\":\"+19pp\",\"fontFamily\":\"Montserrat-Regular, Montserrat\",\"fontSize\":\"14\",\"fontWeight\":\"normal\",\"lineSpacing\":\"24\",\"fill\":\"#2D3142\",\"key\":0},React.createElement(\"tspan\",{\"x\":\"4.193\",\"y\":\"14\"},\"+19pp\")),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"stroke\":\"#F3F3F3\",\"x\":\"0\",\"y\":\"0\",\"width\":\"50\",\"height\":\"24\",\"rx\":\"3\",\"key\":1})]),React.createElement(\"text\",{\"id\":\"60%\",\"fontFamily\":\"Montserrat-Bold, Montserrat\",\"fontSize\":\"16\",\"fontWeight\":\"bold\",\"lineSpacing\":\"24\",\"fill\":\"#3772FF\",\"key\":15},[React.createElement(\"tspan\",{\"x\":\"334\",\"y\":\"39\",\"key\":0},\"60\"),React.createElement(\"tspan\",{\"x\":\"355.056\",\"y\":\"39\",\"fontSize\":\"14\",\"key\":1},\"%\")]),React.createElement(\"rect\",{\"id\":\"Rectangle\",\"fill\":\"#F3F3F3\",\"x\":\"48\",\"y\":\"1.42108547e-14\",\"width\":\"274\",\"height\":\"228\",\"key\":16}),React.createElement(\"g\",{\"id\":\"Group-26\",\"transform\":\"translate(48.000000, 0.000000)\",\"key\":17},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-50\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"107\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-51\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"164\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-28\",\"transform\":\"translate(48.000000, 60.000000)\",\"key\":18},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-52\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"128\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-53\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"183\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-30\",\"transform\":\"translate(48.000000, 120.000000)\",\"key\":19},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-54\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"140\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-55\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"192\",\"height\":\"24\",\"key\":1})]),React.createElement(\"g\",{\"id\":\"Group-31\",\"transform\":\"translate(48.000000, 180.000000)\",\"key\":20},[React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-56\",\"fill\":\"#FFBA08\",\"x\":\"0\",\"y\":\"0\",\"width\":\"139\",\"height\":\"24\",\"key\":0}),React.createElement(\"rect\",{\"id\":\"Rectangle-Copy-57\",\"fill\":\"#3772FF\",\"x\":\"0\",\"y\":\"24\",\"width\":\"195\",\"height\":\"24\",\"key\":1})])])))]);\n}\n\nSchoolYearsGapsInAttainmentGraph1Desktop.defaultProps = {\"width\":\"446px\",\"height\":\"228px\",\"viewBox\":\"0 0 446 228\",\"version\":\"1.1\"};\n\nmodule.exports = SchoolYearsGapsInAttainmentGraph1Desktop;\n\nSchoolYearsGapsInAttainmentGraph1Desktop.default = SchoolYearsGapsInAttainmentGraph1Desktop;\n","const plugins = require(`./api-runner-browser-plugins`)\nconst {\n  getResourcesForPathname,\n  getResourcesForPathnameSync,\n  getResourceURLsForPathname,\n  loadPage,\n  loadPageSync,\n} = require(`./loader`).publicLoader\n\nexports.apiRunner = (api, args = {}, defaultReturn, argTransform) => {\n  // Hooks for gatsby-cypress's API handler\n  if (process.env.CYPRESS_SUPPORT) {\n    if (window.___apiHandler) {\n      window.___apiHandler(api)\n    } else if (window.___resolvedAPIs) {\n      window.___resolvedAPIs.push(api)\n    } else {\n      window.___resolvedAPIs = [api]\n    }\n  }\n\n  let results = plugins.map(plugin => {\n    if (!plugin.plugin[api]) {\n      return undefined\n    }\n\n    // Deprecated April 2019. Use `loadPageSync` instead\n    args.getResourcesForPathnameSync = getResourcesForPathnameSync\n    // Deprecated April 2019. Use `loadPage` instead\n    args.getResourcesForPathname = getResourcesForPathname\n    args.getResourceURLsForPathname = getResourceURLsForPathname\n    args.loadPage = loadPage\n    args.loadPageSync = loadPageSync\n\n    const result = plugin.plugin[api](args, plugin.options)\n    if (result && argTransform) {\n      args = argTransform({ args, result, plugin })\n    }\n    return result\n  })\n\n  // Filter out undefined results.\n  results = results.filter(result => typeof result !== `undefined`)\n\n  if (results.length > 0) {\n    return results\n  } else if (defaultReturn) {\n    return [defaultReturn]\n  } else {\n    return []\n  }\n}\n\nexports.apiRunnerAsync = (api, args, defaultReturn) =>\n  plugins.reduce(\n    (previous, next) =>\n      next.plugin[api]\n        ? previous.then(() => next.plugin[api](args, next.options))\n        : previous,\n    Promise.resolve()\n  )\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n"],"sourceRoot":""}