{"version":3,"sources":["webpack:///./src/components/hero/stats-card.js","webpack:///./src/components/hero/hero-image.js","webpack:///./src/components/hero/hero-summary.js","webpack:///./src/components/hero/hero.js","webpack:///./node_modules/react-easy-swipe/lib/index.js","webpack:///./node_modules/react-responsive-carousel/lib/es/cssClasses.js","webpack:///./node_modules/react-responsive-carousel/lib/es/shims/window.js","webpack:///./src/components/key-stats/uk.svg","webpack:///./node_modules/react-responsive-carousel/lib/es/components/Carousel.js","webpack:///./node_modules/react-responsive-carousel/lib/es/shims/document.js","webpack:///./src/components/maths-helpers.ts","webpack:///./src/components/pie.tsx","webpack:///./src/components/key-stats/uk-overlay.tsx","webpack:///./src/components/key-stats/pie-overlay.tsx","webpack:///./src/components/key-stats/legend.tsx","webpack:///./src/components/key-stats/key-stat-article.tsx","webpack:///./src/components/key-stats/data/uk-regions.ts","webpack:///./src/components/key-stats/data/individuals-stats.ts","webpack:///./src/components/key-stats/individuals.tsx","webpack:///./src/components/key-stats/data/society-stats.ts","webpack:///./src/components/key-stats/society.tsx","webpack:///./src/components/key-stats/data/business-stats.ts","webpack:///./src/components/key-stats/types.ts","webpack:///./src/components/key-stats/businesses.tsx","webpack:///./src/components/key-stats/key-stats.tsx","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/common/button.js","webpack:///./node_modules/react-responsive-carousel/lib/es/components/Thumbs.js","webpack:///./node_modules/react-responsive-carousel/lib/es/index.js","webpack:///./node_modules/react-responsive-carousel/lib/es/dimensions.js","webpack:///./node_modules/react-easy-swipe/lib/react-swipe.js","webpack:///./node_modules/react-responsive-carousel/lib/es/CSSTranslate.js"],"names":["statsCardStyles","headingStyles","carouselStyles","resourceStyles","textStyles","stats","heading","innerHtml","resource","noop","StatsCard","styles","css","autoPlay","infiniteLoop","renderArrowPrev","renderArrowNext","renderThumbs","statusFormatter","map","entry","i","key","PureHeroImage","data","fluid","placeholderImage","childImageSharp","className","HeroImage","useStaticQuery","heroSummaryStyles","HeroSummary","variant","label","onClick","console","log","heroStyles","imageContainerStyles","heroImageStyles","Hero","exports","_reactSwipe","Object","defineProperty","value","obj","_reactSwipe2","__esModule","default","_classnames","_default","ROOT","customClassName","enumerable","configurable","writable","_defineProperty","CAROUSEL","isSlider","carousel","WRAPPER","axis","SLIDER","isSwiping","thumbs","slider","animated","ITEM","selected","thumb","slide","ARROW_PREV","disabled","ARROW_NEXT","DOT","dot","window","React","Uk","props","createElement","defaultProps","module","_react","_typeof","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_reactDom","_interopRequireDefault","_reactEasySwipe","_cssClasses","_CSSTranslate","_Thumbs","_document","_window","WeakMap","Symbol","iterator","constructor","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","push","apply","_extends","assign","target","arguments","length","source","this","_defineProperties","descriptor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","_getPrototypeOf","getPrototypeOf","Carousel","_React$Component","subClass","superClass","TypeError","create","_inherits","Derived","Constructor","protoProps","staticProps","_super","result","Super","NewTarget","_this","instance","_classCallCheck","node","thumbsRef","carouselWrapperRef","listRef","index","itemsRef","state","Children","count","children","timer","clearTimeout","setTimeout","increment","interval","clearAutoPlay","setState","isMouseEntered","activeElement","contains","isFocusWithinTheCarousel","isHorizontal","prevKey","keyCode","decrement","initialized","firstItem","itemSize","clientWidth","clientHeight","updateSizes","hasMount","item","cancelClick","onClickItem","selectedItem","onChange","onClickThumb","selectItem","event","swiping","onSwipeStart","onSwipeEnd","delta","onSwipeMove","childrenLength","currentPosition","getPosition","finalBoundry","axisDelta","x","y","handledDelta","position","hasMoved","Math","abs","swipeScrollTolerance","setPosition","forceReflow","list","findDOMNode","HTMLElement","forEach","prop","style","offsetLeft","positions","undefined","fromSwipe","moveTo","lastPosition","needClonedSlide","oldPosition","centerMode","centerSlidePercentage","resetAutoPlay","newIndex","isKeyboardEvent","cb","handleOnChange","toArray","images","getElementsByTagName","image","complete","addEventListener","onImageLoad","forceUpdate","removeEventListener","height","setupCarousel","prevProps","prevState","resetPosition","setupAutoPlay","destroyAutoPlay","destroyCarousel","bindEvents","initialImage","getInitialImage","setMountState","unbindEvents","carouselWrapper","stopOnHover","startOnLeave","useKeyboardArrows","navigateWithKeyboard","isClone","_this2","slideProps","ref","setItemsRef","handleClickItem","bind","extraProps","minWidth","renderItem","isSelected","_this3","_this$props","showIndicators","labels","renderIndicator","_","changeItem","showStatus","showThumbs","setThumbsRef","onSelectItem","handleClickThumb","transitionTime","thumbWidth","_this4","canShowArrows","showArrows","hasPrev","hasNext","itemListStyles","transformProp","WebkitTransform","MozTransform","MsTransform","OTransform","transform","msTransform","getOwnPropertyDescriptors","defineProperties","_objectSpread","WebkitTransitionDuration","MozTransitionDuration","MsTransitionDuration","OTransitionDuration","transitionDuration","msTransitionDuration","itemsClone","renderItems","firstClone","shift","lastClone","pop","swiperProps","tolerance","containerStyles","onSwipeLeft","onSwipeForward","onSwipeRight","onSwipeBackwards","dynamicHeight","itemHeight","getVariableImageHeight","onSwipeUp","verticalSwipe","onSwipeDown","setCarouselWrapperRef","tabIndex","width","onClickPrev","leftArrow","swipeable","tagName","innerRef","setListRef","allowMouseEvents","emulateTouch","onClickNext","rightArrow","renderControls","renderStatus","Component","onClickHandler","type","onKeyDown","role","concat","img","find","warn","current","total","document","getArc","startTheta","endTheta","radius","start","getCartesianCoordinate","end","theta","r","cos","PI","sin","getPathDataForCircularBar","min","max","percentRatio","bar","inner","outer","getCircularBar","largeArcFlag","join","cumulativePercent","getPathsFromStats","reduce","a","number","stat","statPercent","pathData","d","fill","colour","statToPiePart","Pie","focus","isActive","blur","viewBox","onMouseEnter","id","dx","dy","stdDeviation","color","transformOrigin","cursor","opacity","UkOverlay","pieCss","PieOverlay","useState","name","currentStat","setCurrentStat","isCurrentStat","statName","pieStats","s","title","replace","metric","PieLegend","Legend","legendDetails","keyStatArticleCss","mq","BreakPoint","md","sm","KeyStatArticle","h3","h4","summaryMain","legendKey","reference","href","rel","figure","UkRegions","require","Background","Individual","colours","Key","IndividualStats","dict","location","IndividualsArticle","Quintile","Society","SocietyStats","q","SocietyArticle","JobType","JobTypeRaw","Business","KeyStatsCategories","BusinessStats","region","businessStat","Professional","Pro","Other","All","BusinessArticle","keyStatsCss","screenNumberForCategory","individual","society","businesses","KeyStats","statToView","setStatToView","articleContainerCss","checked","changeViewStat","htmlFor","hasOwn","classNames","classes","arg","argType","Array","isArray","darkStyles","lightGreyStyles","lightBlueStyles","borderlessStyles","styleForVariant","dark","borderless","Error","Button","_dimensions","Thumbs","_Component","_props","itemsWrapperRef","itemsListRef","wrapperSize","outerWidth","visibleItems","floor","_state","getFirstItem","handler","deltaX","setupThumbs","destroyThumbs","itemClass","thumbProps","setItemsWrapperRef","slideRight","slideLeft","setItemsListRef","_Carousel","el","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","_propTypes","setHasSupportToCaptureOption","_react2","_propTypes2","_createClass","supportsCaptureOption","hasSupport","getSafeEventHandlerOpts","options","capture","_event$touches$","touches","pageX","pageY","screenX","screenY","ReactSwipe","_ref","_len","args","_key","_handleSwipeStart","_handleSwipeMove","_handleSwipeEnd","_onMouseDown","_onMouseMove","_onMouseUp","_setSwiperRef","swiper","passive","mouseDown","_getPosition","moveStart","_getPosition2","deltaY","moving","preventDefault","movePosition","indexOf","_objectWithoutProperties","onMouseDown","onTouchStart","onTouchEnd","displayName","propTypes","string","bool","func","isRequired","positionPercent"],"mappings":"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","file":"413cbce736992bcf4f0535fea8be67c93e86998f-94ba2ca28026e6ab6af5.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport tw from \"twin.macro\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { PropTypes } from \"prop-types\";\n\nconst statsCardStyles = css`\n  ${tw`h-56 bg-white`}\n\n  div {\n    ${tw`text-midnight`}\n  }\n`;\n\nconst headingStyles = css`\n  ${tw`text-left font-light ml-3 md:ml-6 text-5xl mb-1`}\n`;\n\nconst carouselStyles = css`\n  .carousel .control-dots .dot {\n    ${tw`bg-light-grey`}\n  }\n\n  .carousel .control-dots .dot.selected {\n    ${tw`bg-cobalt`}\n  }\n`;\n\nconst resourceStyles = css`\n  ${tw`font-light underline`}\n`;\n\nconst textStyles = css`\n  ${tw`mx-3 md:mx-6 text-left`}\n`;\n\nconst stats = [\n  {\n    heading: \"51%\",\n    innerHtml: (\n      <>\n        Of disadvantaged pupils reached the expected standard in all of reading,\n        writing and maths, compared to <strong>71% of all other pupils</strong>{\" \"}\n        in 2019.\n      </>\n    ),\n    resource: \"State of the Nation\",\n  },\n  {\n    heading: \"2%\",\n    innerHtml: (\n      <>\n        Of students in the North East from lower socio-economic backgrounds\n        attended a selective university, in comparison with <strong>11%</strong>{\" \"}\n        of students from the same social group from Inner London.\n      </>\n    ),\n    resource: \"Department for Education\",\n  },\n  {\n    heading: \"27%\",\n    innerHtml: (\n      <>\n        Of graduates have completed an unpaid internship. A six-month unpaid\n        internship will cost a person living in London a minimum of{\" \"}\n        <strong>£1,100</strong> a month and <strong>£885</strong> in Manchester.\n      </>\n    ),\n    resource: \"Mobility Manifesto 2019\",\n  },\n];\n\nconst noop = () => {};\n\nconst StatsCard = ({ styles }) => {\n  return (\n    <>\n      <Carousel\n        css={[styles, carouselStyles]}\n        autoPlay\n        infiniteLoop\n        renderArrowPrev={noop}\n        renderArrowNext={noop}\n        renderThumbs={noop}\n        statusFormatter={noop}\n      >\n        {stats.map((entry, i) => (\n          <div key={i} css={statsCardStyles}>\n            <div css={headingStyles}>{entry.heading}</div>\n            <div css={textStyles}>\n              {entry.innerHtml}{\" \"}\n              <span css={resourceStyles}>- {entry.resource}</span>\n            </div>\n          </div>\n        ))}\n      </Carousel>\n    </>\n  );\n};\n\nStatsCard.propTypes = {\n  styles: PropTypes.object.isRequired,\n};\n\nexport default StatsCard;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nexport const PureHeroImage = ({ data }) => {\n  return (\n    <Img\n      fluid={data.placeholderImage.childImageSharp.fluid}\n      className=\"hero-image-wrapper\"\n    />\n  );\n};\n\nconst HeroImage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"hero.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 800, maxHeight: 800, cropFocus: CENTER) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return <PureHeroImage data={data} />;\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport Button from \"../common/button\";\nimport { css } from \"@emotion/core\";\nimport tw from \"twin.macro\";\n\nconst heroSummaryStyles = css`\n  ${tw`flex justify-center lg:flex-col lg:h-full w-full lg:w-168`}\n\n  > div {\n    ${tw`w-88 md:w-176 lg:w-7 xl:w-144 mt-8 md:mt-16 lg:mt-0 lg:ml-20 xl:ml-40 `}\n  }\n\n  .summaryText {\n    ${tw`text-midnight text-xl md:text-double leading-7 md:leading-11 mb-8 md:mb-12`}\n\n    p:first-of-type {\n      margin-bottom: 2.75rem;\n    }\n  }\n\n  span.highlight {\n    ${tw`bg-yellow font-semibold`}\n  }\n`;\n\nconst HeroSummary = () => (\n  <div css={heroSummaryStyles}>\n    <div>\n      <div className=\"summaryText\">\n        <p>\n          <span className=\"highlight\">Social inequality</span> is persistent and\n          systematic. Often where you start in life is where you’ll end up.\n        </p>\n        <p>Together we can change this.</p>\n      </div>\n      <Button\n        variant=\"dark\"\n        label=\"Find out how\"\n        onClick={() => console.log(\"Hero button clicked\")}\n      />\n    </div>\n  </div>\n);\n\nexport default HeroSummary;\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport tw from \"twin.macro\";\nimport StatsCard from \"../hero/stats-card\";\nimport HeroImage from \"../hero/hero-image\";\nimport HeroSummary from \"./hero-summary\";\n\nconst heroStyles = css`\n  ${tw`bg-taupe relative h-128 md:h-192 lg:h-144`}\n`;\n\nconst imageContainerStyles = css`\n  ${tw`absolute bottom-0 lg:right-0 w-full lg:w-136 h-48 md:h-88 lg:h-full`}\n`;\n\nconst heroImageStyles = css`\n  .hero-image-wrapper {\n    ${tw`h-full`}\n  }\n`;\n\nconst statsCardStyles = css`\n  ${tw`absolute shadow-xl lg:shadow-none lg:border w-88 md:w-176 lg:w-136 -bottom-30 lg:bottom-0 right-1/2 lg:right-0 -mr-44  md:-mr-88 lg:mr-0`}\n`;\n\nconst Hero = () => (\n  <div css={[heroStyles, heroImageStyles]}>\n    <HeroSummary />\n    <div css={imageContainerStyles}>\n      <HeroImage />\n    </div>\n    <StatsCard styles={statsCardStyles} />\n  </div>\n);\n\nexport default Hero;\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', './react-swipe'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./react-swipe'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.reactSwipe);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _reactSwipe) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _reactSwipe2 = _interopRequireDefault(_reactSwipe);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.default = _reactSwipe2.default;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _default = {\n  ROOT: function ROOT(customClassName) {\n    return (0, _classnames.default)(_defineProperty({\n      'carousel-root': true\n    }, customClassName || '', !!customClassName));\n  },\n  CAROUSEL: function CAROUSEL(isSlider) {\n    return (0, _classnames.default)({\n      carousel: true,\n      'carousel-slider': isSlider\n    });\n  },\n  WRAPPER: function WRAPPER(isSlider, axis) {\n    return (0, _classnames.default)({\n      'thumbs-wrapper': !isSlider,\n      'slider-wrapper': isSlider,\n      'axis-horizontal': axis === 'horizontal',\n      'axis-vertical': axis !== 'horizontal'\n    });\n  },\n  SLIDER: function SLIDER(isSlider, isSwiping) {\n    return (0, _classnames.default)({\n      thumbs: !isSlider,\n      slider: isSlider,\n      animated: !isSwiping\n    });\n  },\n  ITEM: function ITEM(isSlider, selected) {\n    return (0, _classnames.default)({\n      thumb: !isSlider,\n      slide: isSlider,\n      selected: selected\n    });\n  },\n  ARROW_PREV: function ARROW_PREV(disabled) {\n    return (0, _classnames.default)({\n      'control-arrow control-prev': true,\n      'control-disabled': disabled\n    });\n  },\n  ARROW_NEXT: function ARROW_NEXT(disabled) {\n    return (0, _classnames.default)({\n      'control-arrow control-next': true,\n      'control-disabled': disabled\n    });\n  },\n  DOT: function DOT(selected) {\n    return (0, _classnames.default)({\n      dot: true,\n      selected: selected\n    });\n  }\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = function _default() {\n  return window;\n};\n\nexports.default = _default;","var React = require('react');\n\nfunction Uk (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Fill 1\"),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"transform\":\"translate(-820.000000, -932.000000)\",\"fill\":\"#2D3142\"},React.createElement(\"g\",{\"transform\":\"translate(820.000000, 932.000000)\"},React.createElement(\"path\",{\"d\":\"M188.147915,0 L187.624369,0.423651111 L186.659653,1.95864746 L186.099495,2.22860189 L184.997486,1.94091323 L184.274406,1.95864746 L184.404378,2.652253 L184.629539,2.78624498 L184.91694,2.76062887 L185.240953,3.00102624 L185.561305,3.55866934 L185.67297,3.94291104 L185.740702,4.34685745 L186.244111,5.87200145 L186.419847,6.26215457 L186.659653,6.52422712 L187.020278,6.75280167 L187.302187,6.83359095 L187.554807,6.6247211 L187.818411,5.97840685 L188.312668,6.52422712 L187.992316,5.74786182 L187.818411,5.48775975 L187.818411,4.93602807 L188.768482,5.07790193 L189.698417,5.65919066 L191.402688,7.46611191 L191.150068,7.93508384 L191.018266,8.36070542 L190.957857,8.85529346 L190.913923,9.50160772 L191.708395,8.27794567 L192.125768,7.91734961 L192.823219,7.91932008 L192.823219,7.46611191 L192.513851,6.97152387 L192.169702,6.84738424 L191.799924,6.80206343 L191.402688,6.52422712 L191.210477,6.12225118 L190.560621,4.22074735 L190.077348,3.92123587 L187.369919,3.00102624 L187.369919,2.49658585 L187.598741,2.54584761 L188.312668,2.49658585 L188.173544,1.86209442 L188.190019,1.50740977 L188.567118,0.96355997 L188.6678,0.89656398 L188.753838,0.906416331 L188.799602,0.82562705 L188.781296,0.508381334 L188.147915,0 Z M207.845833,3.48045631 L207.090827,4.75840354 L206.580737,4.94039603 L206.020928,4.93039644 L205.494265,5.03839199 L204.573526,6.14634624 L203.433651,6.39833584 L203.032208,6.82431825 L202.923561,6.55832923 L202.820438,6.46033328 L202.557107,6.37033699 L203.433651,5.18438596 L203.947423,4.6724071 L204.459354,4.30642221 L204.459354,3.75044516 L203.588335,3.83044186 L202.183287,4.75440371 L201.347255,4.75840354 L201.864711,5.59636895 L202.061749,5.81635987 L201.907065,6.84431743 L201.654782,7.09830694 L201.314109,7.09030727 L200.89241,7.32629753 L200.597774,7.77827887 L200.025074,8.9062323 L199.710181,9.39221223 L199.255336,9.76419688 L198.931236,9.92619019 L198.693685,10.3101743 L198.522427,11.3561312 L198.529793,12.1940966 L198.701051,12.35209 L198.903613,11.8981088 L198.992004,10.90015 L199.599692,11.1061415 L200.312345,10.3101743 L201.608745,8.34025566 L201.862869,8.73823923 L202.146457,8.7802375 L202.820438,8.34025566 L202.820438,8.84023502 L202.732047,9.08022511 L202.557107,9.84819341 L204.074485,7.85827556 L204.6656,7.78427862 L204.719002,9.39221223 L205.074408,9.16422165 L205.319324,8.73823923 L206.008037,7.0023109 L206.376333,6.59832758 L206.659921,5.79636069 L207.321012,5.41637638 L208.970976,5.32438018 L208.871536,4.62240916 L208.543753,3.04447431 L208.322776,2.85048232 L207.845833,3.48045631 Z M195.340468,7.99024088 L195.191006,8.69035934 L195.293269,9.56272917 L195.248037,10.0165097 L195.448631,11.1870781 L195.407332,11.4260074 L194.988446,11.5575111 L194.624625,11.768658 L194.247038,11.8112578 L193.773087,11.4260074 L193.773087,12.8651398 L194.341435,12.9929392 L194.825218,13.3818939 L195.15954,14.0320039 L195.293269,14.9358606 L195.580393,15.2025723 L196.227405,15.1192249 L197.320834,14.7265659 L197.320834,14.2616724 L196.705289,14.2024031 L196.412265,13.6504579 L196.333601,12.7651229 L196.333601,11.6816062 L196.506662,11.34266 L197.330667,10.1498656 L197.572559,9.56272917 L197.330667,8.93669732 L196.980613,8.6070119 L196.542061,8.5218123 L196.054344,8.62923789 L196.054344,8.16619657 L196.333601,8.16619657 L196.333601,7.6531468 L195.725921,7.60128617 L195.340468,7.99024088 Z M183.935232,11.899279 L183.324538,12.830882 L183.520319,14.077968 L184.29626,15.13762 L185.183561,15.7648745 L186.173244,16.0710787 L187.249143,16.1527331 L188.247807,15.751884 L188.289118,14.8147138 L188.183145,13.736504 L188.752527,12.8884112 L188.872869,12.8271704 L188.973454,12.8197473 L189.023747,12.7213908 L189.002193,12.3762152 L188.499269,12.0867131 L188.055618,12.0867131 L186.667188,12.4356003 L186.42291,12.4356003 L186.205575,12.3762152 L185.963094,12.1628002 L185.840955,11.8584518 L185.779886,11.5800844 L185.738574,11.446468 L184.89438,11.4019293 L183.935232,11.899279 Z M199.32122,14.7865325 L199.72575,15.0810098 L200.916752,16.3828026 L201.17138,16.8275649 L200.990676,17.6866262 L200.510169,17.9587639 L199.89824,18.0420299 L199.32122,18.3040132 L198.522427,19.721566 L199.124089,20.2861501 L199.953683,19.9937036 L199.848957,18.8137635 L200.524543,18.2633956 L201.302801,18.3690013 L201.879821,19.2179082 L201.968119,20.903537 L202.791553,20.3978484 L204.481544,20.1338342 L205.171504,19.3742859 L204.099602,18.6878491 L203.861402,18.2410559 L204.109869,17.3819946 L204.216649,17.2926359 L204.325482,17.2987286 L204.387085,17.2093699 L204.374765,16.8275649 L203.475353,17.3535623 L202.96199,17.507909 L202.49791,17.3819946 L202.044097,16.7097739 L202.138556,16.0375533 L202.553353,15.6212233 L203.054395,15.7613539 L202.721736,15.3876724 L202.245335,15.2617579 L201.17138,15.2962829 L201.286373,15.0160217 L201.411634,14.7865325 L201.411634,14.3214614 L200.863362,14.2524116 L199.32122,14.7865325 Z M176.972414,15.5543398 L175.367728,16.6990416 L174.414052,18.8154766 L174.63867,22.0280267 L174.395017,22.5119499 L173.825858,24.6400457 L174.309358,27.0110748 L175.388667,28.8340464 L176.605031,29.3101957 L176.605031,28.8709722 L177.469239,27.9789211 L177.769999,27.3239729 L177.585355,26.3988829 L177.513021,26.2842183 L177.554899,25.7245 L177.427361,25.2833331 L177.092338,24.9859827 L177.393098,24.7352755 L177.695761,24.6653107 L178.009846,24.7605406 L178.342966,24.9859827 L178.342966,24.5020595 L178.120251,24.0259103 L178.164033,23.6138954 L178.424818,23.2835061 L178.815044,23.0425162 L178.93116,23.5691956 L179.087251,24.0667231 L179.289027,24.5448158 L179.553619,24.9859827 L179.553619,25.4252061 L178.978749,26.4066567 L178.546645,27.7437617 L178.436239,29.2771567 L178.815044,30.8610819 L179.721131,31.7667373 L181.881652,31.3916483 L182.764897,31.7822851 L182.94383,31.0010115 L183.37403,30.7580782 L184.487603,30.8610819 L183.971743,29.8427055 L184.4324,29.9243311 L184.795977,30.0934127 L185.121483,30.1361689 L185.494578,29.8427055 L186.155107,30.0234479 L186.729977,29.4151429 L187.230609,28.7154949 L187.687459,28.6280389 L187.959666,29.0789232 L189.265497,31.9591405 L189.650012,32.5538413 L190.066888,32.9561388 L192.787052,34.1319361 L193.348597,34.2057878 L193.912046,33.7451862 L194.740087,32.1398829 L195.210262,31.7822851 L196.58462,31.4616131 L197.2718,31.086524 L197.563042,30.5909401 L197.572559,29.5220335 L197.526874,28.7038341 L197.30987,28.1480027 L196.803528,27.8584262 L196.211526,27.9789211 L195.01039,28.8126682 L194.353668,28.8709722 L194.583996,29.3529519 L195.088435,30.8610819 L194.397449,31.0398809 L193.780701,30.828043 L193.262937,30.2411161 L192.855579,29.3101957 L193.396186,28.7329861 L194.850493,27.6427014 L195.088435,26.9333361 L194.901888,26.4824519 L194.55925,26.3366919 L193.738823,26.3988829 L193.078294,26.6690247 L192.490099,27.1937607 L191.871447,27.578567 L191.140487,27.4153158 L191.207111,27.0790961 L191.307999,26.2472925 L191.386044,25.9188466 L190.775006,26.4280348 L190.375262,26.0315677 L189.985036,25.3552413 L189.41778,24.9859827 L188.911438,25.2522376 L188.435552,25.7031218 L187.929209,25.8488818 L186.583404,24.5487027 L185.966656,25.0559475 L185.410822,25.9305074 L184.862601,26.3988829 L183.511085,26.2142535 L182.816292,25.9188466 L182.275686,25.4252061 L182.91718,25.203651 L183.7338,24.4554164 L184.449532,23.4098314 L184.748389,22.2729035 L185.085316,22.4225504 L187.211574,21.5363297 L187.047869,21.4061174 L186.87655,21.2020534 L186.716652,21.0524065 L186.832768,20.7803212 L186.939367,20.6773175 L187.211574,20.5684834 L185.167168,19.371308 L184.487603,18.5686563 L184.723643,18.5181262 L185.241406,18.0808462 L184.904479,17.8204217 L184.346741,16.9652965 L183.971743,16.6679461 L183.560578,16.7126458 L183.117052,16.9264271 L182.644973,16.9575226 L181.396249,15.6476262 L180.438767,15.2900283 L178.704639,15.2025723 L176.972414,15.5543398 Z M84.5762533,16.5784051 L84.5952507,16.8881576 L84.3197889,17.085791 L84.1944063,17.2549196 L84.1108179,17.463955 L84.0481266,17.67109 L84.0880211,17.7109968 L84.614248,17.5722733 L85.0283905,17.3081286 L84.8992084,17.2093119 L84.8992084,16.8539518 L84.9258047,16.5879068 L84.7206332,16.494791 L84.5610554,16.494791 L84.5762533,16.5784051 Z M174.833384,30.4166386 L173.321094,30.9970795 L172.518206,31.8361328 L172.44305,32.0947451 L171.926121,33.4625169 L172.039772,34.1713061 L172.314734,34.221113 L172.666685,34.1598123 L173.003972,34.4605688 L173.167116,34.541026 L173.579558,34.1329932 L173.819692,34.221113 L173.9975,34.6463865 L173.913179,34.9567213 L173.779364,35.2574778 L173.819692,35.6521011 L174.525427,37.0792579 L174.84255,37.4164117 L175.240328,37.7248308 L175.58678,38.1137071 L175.733426,38.7305453 L176.397,40.5293376 L176.56931,40.8530819 L179.806527,40.8569132 L181.520455,40.3205321 L182.37467,38.9470134 L181.388474,38.8320746 L179.368421,39.8646082 L178.332732,39.9431497 L178.734176,38.9987359 L179.476573,38.3972228 L180.294126,38.0888037 L180.9577,37.9930213 L180.9577,37.5600852 L180.455437,36.845549 L180.16581,36.6367435 L179.753368,36.6060931 L179.753368,36.0831216 L180.246466,35.6521011 L178.41522,32.6732704 L177.738814,32.2709846 L176.978086,31.9989628 L175.790251,30.7537924 L175.258659,30.4051447 L174.833384,30.4166386 Z M187.61834,37.3851811 L186.174142,38.0085822 L186.174142,38.4407559 L188.740278,38.4407559 L188.740278,38.958982 L188.304632,39.2725948 L187.83119,39.3739453 L187.361726,39.2725948 L186.922101,38.958982 L188.075868,40.7373961 L188.471729,41.7853218 L187.970437,42.2825129 L187.970437,42.8026512 L189.766733,44.6575563 L190.59824,44.1259443 L190.848886,43.4107541 L190.683778,42.4718279 L190.273992,41.2957799 L190.737488,40.8961148 L190.673832,40.4888006 L190.472917,40.0164691 L190.536573,39.393068 L190.75738,39.1100516 L191.82163,38.4407559 L191.873351,37.5974434 L191.002058,37.188217 L189.271409,37.0562701 L187.61834,37.3851811 Z M173.272833,48.820442 L172.44747,49.9455027 L172.830469,50.8942335 L173.418372,51.6033859 L174.07713,52.092126 L174.689928,52.3604539 L174.211179,53.7442593 L173.221128,53.7595924 L171.210385,52.8357777 L169.142192,53.5775127 L168.134906,53.6618443 L167.254009,52.8357777 L167.397633,52.7322798 L167.751907,52.3604539 L166.9208,51.9617953 L165.758399,51.9215461 L163.506367,52.3604539 L162.119912,53.0312737 L159.63042,54.9325687 L158.073531,55.6743037 L154.975072,56.1917933 L151.878527,55.6743037 L151.068485,55.842967 L150.869326,55.6570541 L150.199078,54.3096646 L150.147373,54.142918 L150.095669,54.2195831 L149.76629,54.3000815 L149.438826,54.5300768 L148.973482,55.6973033 L148.665169,56.1917933 L148.25536,56.4543713 L147.937471,56.4390383 L147.181049,56.1917933 L145.798424,56.1917933 L145.392445,56.404539 L145.114771,57.3130207 L144.802627,57.5238497 L144.300899,57.4261017 L143.615331,57.0696089 L143.201693,57.1424408 L142.966148,57.3992689 L142.797629,57.7921776 L142.58315,58.2157524 L142.192491,58.5109131 L142.711454,59.0284027 L141.891837,58.7964907 L140.815611,57.7615116 L140.097489,57.5238497 L139.72981,57.5717654 L138.760823,58.0451725 L137.368623,59.0284027 L137.261383,59.1817329 L135.790669,60.7897838 L135.637469,60.8721988 L135.4881,60.9891131 L135.501505,61.2612743 L135.547464,61.5890177 L135.501505,61.8669287 L134.515283,63.3273993 L133.906315,63.9426369 L133.276282,64.2224645 L133.92738,62.7140783 L134.392723,61.2900237 L134.927007,60.0307991 L135.773434,59.0284027 L135.694919,58.3307501 L135.721729,58.2924176 L135.773434,58.0451725 L135.773434,57.5238497 L133.998235,56.1917933 L132.48156,55.5037238 L130.924671,55.1970634 L130.041859,55.5995552 L129.672265,56.5789521 L129.457786,57.8305102 L129.061382,59.0284027 L128.394964,59.6992225 L127.661522,60.0499654 L127.077449,60.531039 L126.83616,61.6062673 L126.491461,61.7998468 L124.346669,64.2224645 L123.668761,64.3297957 L124.011545,63.3887314 L124.704772,62.0854243 L125.35204,60.3451261 L126.638916,59.0744018 L127.056384,58.5109131 L127.207669,58.0835051 L127.351293,57.4471846 L127.318738,56.868363 L126.945314,56.6153681 L126.481886,56.4754542 L125.46694,55.6743037 L124.863717,55.36381 L123.745361,53.8650069 L123.107668,53.3111014 L123.285762,54.4783279 L123.088518,54.9594015 L122.774459,55.3963927 L122.615515,56.4064556 L122.623175,57.1520239 L122.554235,57.8535097 L122.265071,58.4840804 L121.604398,59.0284027 L121.836112,58.5147464 L121.996972,57.9895903 L122.088891,57.3858525 L122.119531,56.6153681 L122.016122,56.6881999 L121.797812,55.7509688 L121.606313,54.6738239 L121.604398,54.3000815 L120.955215,53.4605984 L120.104958,52.8913599 L115.451525,51.8429644 L114.840642,52.5770329 L114.603183,53.7653423 L114.474878,55.1855636 L114.193374,56.6153681 L114.436578,56.6153681 L114.009535,57.6848465 L113.475252,58.2809178 L111.558343,59.4308946 L111.273009,59.7528881 L111.19641,60.3489594 L111.205984,61.6062673 L115.179596,65.1194464 L114.101454,64.3508786 L113.207152,63.9292205 L111.205984,65.1194464 L111.546853,65.472106 L111.700053,65.5871037 L111.947087,65.6388526 L111.947087,66.1045932 L111.832187,66.1275928 L111.474084,66.1045932 L111.474084,66.6239994 L111.883892,66.6872481 L112.266891,66.6469989 L112.630739,66.4572528 L112.958203,66.1045932 L113.207152,66.6239994 L113.092253,67.1817382 L113.435037,67.635979 L114.436578,68.4582124 L112.925648,68.5195445 L110.822986,67.0533241 L110.598932,66.9862421 L110.120183,66.6872481 L109.848254,66.6239994 L109.710375,66.7811629 L109.714205,67.1817382 L109.76208,67.635979 L109.72378,67.9943884 L109.380996,68.7150405 L109.128217,69.3973601 L109.114812,70.0873462 L109.472916,70.8175814 L108.754793,70.8175814 L108.835223,71.3139881 L108.952037,71.8353109 L109.231626,72.6997101 L109.367591,72.8338741 L110.045499,73.8899361 L110.093373,74.1505975 L110.464882,74.5166735 L111.537278,76.1304742 L112.069646,76.4965502 L112.46605,76.6441305 L113.207152,77.2881175 L113.574831,77.4318646 L113.95783,77.2996173 L114.369553,76.688213 L114.662547,76.4965502 L115.37684,76.4946335 L117.672917,76.9680406 L117.182679,77.3168669 L116.150497,77.5066131 L115.671749,77.909105 L116.659885,78.6680897 L117.073524,79.0859146 L117.425883,79.8180665 L114.932561,77.909105 L114.381043,77.7461916 L112.575205,77.909105 L112.084966,77.6848595 L110.98576,76.7092959 L110.338493,76.4965502 L110.016774,76.6192144 L109.515045,76.9469577 L109.028637,77.4011986 L108.754793,77.909105 L107.996456,77.2823676 L107.207478,77.1750365 L106.439566,77.4433644 L105.003321,78.4208447 L104.394353,78.5895079 L103.781555,78.4208447 L102.259136,77.3571161 L101.424199,76.9872069 L100.838211,77.182703 L100.805656,78.3307631 L102.47553,80.9239608 L102.835549,81.1846222 L103.302807,81.1846222 L103.224292,81.5046991 L103.107478,82.3115995 L103.032793,82.633593 L103.377492,82.7543405 L103.699211,82.9555865 L103.99795,83.225831 L104.267964,83.5689074 L103.99795,83.9924822 L104.503508,84.3930575 L105.076091,84.5157217 L106.265302,84.4563062 L106.265302,84.9642126 L105.776978,85.2536234 L104.744797,85.4989518 L104.267964,85.8611945 L105.009066,86.3710175 L105.009066,86.8405914 L104.513083,86.8405914 L104.762032,87.3235817 L104.938211,87.883237 L104.963106,88.5061411 L104.785012,89.1731277 L105.009066,89.1731277 L104.139659,90.2905218 L103.343022,90.1851072 L102.569365,89.918696 L101.776557,90.5760994 L100.912895,88.7821356 L99.5360153,88.3873102 L98.8504477,89.3168748 L100.045403,91.5094972 L100.045403,91.9752378 L99.8424142,92.2090664 L99.7428345,92.4218121 L99.6738948,92.6537241 L99.5513352,92.9488848 L101.039285,92.8530534 L101.751663,93.1060483 L102.287861,93.8765327 L102.125086,94.0586124 L102.102106,94.1161112 L102.021677,94.3039408 L102.942788,94.4917703 L104.434568,96.4026484 L105.506964,96.6709763 L106.022098,97.1616331 L107.182584,97.399295 L107.623032,97.796037 L107.948581,98.6431865 L108.006031,99.4366705 L107.718782,99.9369104 L107.008319,99.9292439 L107.008319,100.435234 L107.885386,100.674812 L111.508553,103.865998 L111.698138,104.318322 L111.788142,104.799396 L112.002622,105.454882 L112.257316,106.068203 L112.46605,106.426613 L111.724948,105.945539 L110.681276,104.06341 L109.151197,103.348508 L107.831766,102.041368 L107.379828,101.746207 L107.029384,101.610127 L106.209767,101.014055 L105.750169,100.864558 L105.36717,100.93164 L104.679687,101.293883 L104.267964,101.324549 L103.477071,100.887558 L102.46404,99.3849216 L101.776557,98.9517636 L101.575483,99.7720804 L101.309299,99.7203315 L101.039285,99.4117544 L100.805656,99.4635033 L100.648626,99.923494 L100.665861,100.10749 L100.752036,100.264654 L100.805656,100.644146 L101.09865,100.929724 L103.423452,101.985786 L105.009066,103.641752 L106.068057,104.132409 L106.477866,104.552151 L107.008319,105.502798 L104.394353,104.469736 L103.176418,103.703084 L102.153811,102.486026 L101.659743,102.058618 L100.014764,101.334132 L99.5513352,101.324549 L99.2066364,102.045201 L98.7757629,103.988662 L98.3372294,104.57515 L98.5631987,105.035141 L97.4007977,104.889477 L95.9243379,104.094077 L94.8979015,102.723688 L95.1085507,100.864558 L93.7757154,100.864558 L93.3793118,100.592397 L92.8584336,99.9292439 L92.5654396,100.467816 L91.7247576,101.60246 L91.3800588,102.252197 L91.4796384,102.514775 L91.586878,102.639356 L91.870297,102.714104 L91.4892134,103.400257 L91.9564717,104.176492 L93.3544169,105.502798 L93.8465701,106.551194 L93.7833754,107.421343 L93.6378359,108.379657 L93.8695501,109.71363 L93.1993024,109.284305 L92.8488586,109.182724 L92.3854302,109.20189 L92.6650193,110.024124 L92.8335387,110.36145 L93.1073827,110.67961 L92.5156498,110.700693 L91.9583867,110.424699 L91.4872984,109.909126 L91.1291946,109.20189 L90.8572656,108.210993 L90.6121464,106.838688 L90.4991618,105.493215 L90.6351264,104.57515 L89.7465695,103.988662 L88.8024778,103.683918 L87.8468961,103.703084 L86.9315293,104.06341 L86.460441,104.469736 L86.0793573,105.035141 L85.8112582,105.702127 L85.6733787,106.426613 L85.7193385,107.279512 L86.0333974,108.649901 L85.9414778,109.20189 L86.0027576,109.999207 L85.8265782,111.752922 L85.9414778,112.483157 L88.9575922,113.194226 L89.3788908,113.456804 L89.7389095,113.889962 L89.9782837,114.34037 L90.2348928,114.679613 L90.6351264,114.794611 L90.3517074,115.538262 L89.9725387,116.057668 L89.5148553,116.120917 L88.450119,114.915358 L87.7568914,114.955607 L86.4144811,115.722259 L86.4144811,116.226332 L86.6193854,116.841569 L85.882113,117.671469 L85.6733787,118.489869 L85.864878,119.327436 L86.3091565,119.605347 L86.8721645,119.680095 L87.4236826,119.913924 L88.0958452,120.991069 L88.5496987,122.323125 L89.1797315,123.375354 L90.3900072,123.601516 L90.0836083,124.274253 L89.894024,124.481248 L91.1291946,125.945552 L92.1326511,125.06007 L93.7374155,124.828158 L95.3747348,125.215317 L96.4777709,126.152548 L96.3226565,126.589539 L95.4781444,126.622122 L93.9806197,126.36146 L91.3800588,126.815701 L91.4872984,127.139611 L91.5658131,127.473105 L91.6749677,127.827681 L91.870297,128.193757 L91.4738934,128.092176 L90.3900072,127.317858 L90.0682883,127.064863 L89.4459155,126.091216 L89.1356866,126.36146 L88.5171438,125.897637 L86.5676806,123.875594 L85.9453078,123.463519 L85.3057,123.340855 L84.6622622,123.601516 L84.740777,123.904343 L84.8575916,124.672911 L84.9341913,124.981488 L84.3730983,124.973822 L84.2160688,125.502811 L84.2313887,126.357627 L84.1892589,127.317858 L84.0475494,127.743349 L83.5553961,128.881826 L83.4481565,129.366733 L83.5285862,130.234966 L83.865625,131.404109 L83.9441397,132.119011 L84.1777689,132.281924 L85.299955,132.611584 L85.6733787,132.83008 L85.29038,133.268988 L85.1620755,133.717479 L85.1812254,134.62021 L85.2405902,134.832956 L85.577629,135.352362 L85.6733787,135.578524 L85.6197589,135.78552 L85.4493245,135.982933 L85.2750601,136.092181 L85.1812254,136.038515 L85.7978533,138.677712 L86.6366203,139.10512 L88.5267187,138.823376 L89.4382555,138.355718 L91.870297,135.118534 L92.444795,134.562712 L92.6094845,134.537795 L92.6745942,134.986286 L92.9829082,135.81427 L93.0652529,136.391175 L92.751194,136.833916 L91.870297,137.412737 L92.9235434,137.579484 L93.7967803,138.001142 L94.6355474,138.12764 L95.5758091,137.412737 L97.2207884,135.074451 L98.193605,134.056722 L98.8102328,134.200469 L98.5000039,136.092181 L96.8914095,137.6044 L92.8431137,139.544028 L91.9966866,139.697358 L91.8147622,139.459696 L91.606028,139.018872 L91.3513339,138.746711 L91.014295,139.032288 L90.7059811,139.386864 L89.9284938,139.873688 L89.6259249,140.191848 L88.7833278,142.256056 L88.6358734,142.480302 L88.9499323,143.392617 L89.6910347,143.461615 L91.2536692,142.940293 L91.9583867,143.095539 L93.3371819,143.745276 L94.0974343,143.852607 L94.8193867,143.601529 L96.0871123,142.685381 L96.7094851,142.480302 L97.1346137,142.06056 L97.596127,141.240244 L98.2012649,140.686338 L99.0783319,141.067747 L99.0783319,141.567987 L98.2031799,141.911063 L97.329943,142.863627 L96.8626846,143.852607 L97.2035534,144.306848 L97.5539972,144.496594 L97.9121009,144.948919 L98.452129,145.924482 L98.7853379,146.229226 L100.290523,146.591469 L100.290523,147.04571 L98.8772576,147.501867 L97.6535768,146.566553 L96.5160708,145.186581 L95.3536699,144.306848 L94.1012643,144.579009 L92.5884195,145.558406 L91.7151826,146.823381 L92.3854302,147.959941 L91.9105119,148.878006 L90.6466163,150.710302 L90.3900072,151.846863 L90.8400307,152.529182 L93.8695501,153.45108 L94.2812736,153.845906 L95.2081304,155.026549 L95.4628245,155.273794 L95.9415728,155.199045 L96.7899149,154.859802 L99.8270942,154.32123 L100.543302,154.779304 L100.543302,155.273794 L100.290523,155.273794 L100.031999,155.153046 L99.4345206,154.988216 L98.8370427,155.022715 L98.5631987,155.503789 L98.3851043,155.716535 L94.8251317,155.670536 L94.0974343,155.273794 L92.5616096,154.102734 L91.6539028,153.734741 L91.014295,154.118067 L90.6466163,154.430477 L89.5761351,154.319313 L89.1356866,154.361479 L88.8790775,154.606807 L88.450119,155.342792 L86.9430193,157.313086 L86.3991612,158.40748 L86.7955648,158.90772 L87.1804784,159.038051 L87.7951913,159.653289 L88.168615,159.816202 L88.5669336,159.75487 L89.302291,159.406044 L89.6259249,159.361961 L90.4168171,159.938866 L90.3574523,160.862681 L90.2214878,161.70983 L90.7710909,162.08549 L91.5102783,162.367234 L92.2724456,162.88089 L93.0575929,163.105136 L93.8695501,162.532064 L94.3540434,162.788892 L94.8902415,162.604896 L95.4685695,162.265653 L96.0928573,162.08549 L96.0928573,162.532064 L94.3521284,163.415629 L92.3854302,163.89287 L91.1981344,163.70504 L90.6351264,163.432879 L90.1180782,163.02847 L89.7006096,162.472648 L88.9805721,161.178924 L88.6358734,160.768766 L87.6975266,160.580937 L86.5849155,160.983428 L85.5699691,161.70983 L84.9341913,162.532064 L84.5416177,163.843037 L84.2198988,165.378256 L83.8158352,166.740979 L83.1800574,167.517213 L83.9096699,168.274281 L84.1892589,168.456361 L84.1892589,168.952768 L82.9119584,169.037099 L81.6978526,169.361009 L83.3715568,169.82675 L86.7821598,169.054349 L88.4137341,169.361009 L86.9717442,170.961394 L86.6615153,171.626464 L88.0862703,172.005956 L88.8158827,172.023206 L89.3903807,170.919228 L89.9821136,170.604901 L90.6504463,170.526319 L91.1291946,170.758231 L89.9610487,171.954207 L88.4730989,172.615444 L84.723542,173.163599 L84.2313887,173.665756 L84.2409637,174.397908 L84.9341913,175.231641 L87.6496518,176.580947 L86.9276993,176.375868 L86.0027576,176.11904 L85.1888854,176.400784 L84.6622622,177.063937 L84.2677736,176.736194 L83.8445601,176.561781 L83.4002817,176.523448 L82.9560032,176.580947 L82.9560032,177.063937 L83.6032709,177.171268 L83.9766946,177.663842 L84.152874,178.361494 L84.1892589,179.07448 L83.87903,178.821485 L81.9659517,177.972419 L81.4278385,177.560344 L81.0869697,177.10227 L80.717376,176.736194 L80.1007482,176.580947 L79.57221,176.795609 L78.3006545,177.75009 L77.869781,177.972419 L72.3124704,178.576157 L71.845212,178.970982 L71.0524048,180.218707 L70.7804758,180.379704 L70.5391866,180.258956 L70.3610922,180.285789 L70.2902375,180.920193 L70.3285373,181.351434 L70.430032,181.74051 L70.5870614,182.100836 L70.7843057,182.468828 L71.2573091,182.930735 L72.0941612,183.413726 L72.988463,183.605389 L73.6453057,183.164564 L74.3653432,182.457328 L75.27688,182.369163 L77.9425507,183.114732 L80.451192,182.921152 L80.9165353,183.0419 L81.7246625,183.622638 L82.1919209,183.812384 L82.5787495,183.810468 L83.9441397,183.407976 L87.889026,181.209604 L89.3788908,181.612095 L91.1981344,182.777405 L91.9966866,182.921152 L95.3536699,182.468828 L94.5876726,182.978651 L93.5267663,183.269979 L91.600283,183.407976 L90.6906612,183.216313 L88.4137341,182.020337 L87.5270922,182.121918 L83.6951906,184.7132 L83.7066806,185.36677 L84.0666993,185.813344 L84.9341913,186.510997 L84.6622622,187.00357 L83.6626357,186.012673 L82.4964048,185.408935 L81.2439992,185.150191 L79.4400755,185.270938 L78.9134523,185.460684 L78.5496036,185.970507 L78.4883238,187.00357 L78.718123,187.51531 L84.1107442,191.992553 L86.3034115,192.46596 L87.6496518,190.583831 L87.9158359,190.583831 L87.8507261,191.229735 L87.7032716,191.758724 L87.1536685,192.824369 L87.592202,193.338025 L88.2222348,193.782683 L88.9116324,194.08551 L89.5033653,194.206258 L89.894024,194.392171 L90.3095775,195.258487 L90.6351264,195.507648 L90.8802455,195.398401 L93.3314369,193.401274 L95.7251786,190.524416 L97.1709985,188.324127 L97.5635722,187.869886 L97.9925307,187.534476 L98.452129,187.407978 L98.7872529,187.128151 L99.3081311,185.926425 L99.6738948,185.652347 L100.409252,185.512433 L100.98375,185.111858 L102.021677,183.812384 L102.42191,183.003567 L102.716819,182.625992 L103.477071,182.334664 L103.816025,181.74051 L104.131999,181.612095 L104.771607,181.55843 L105.311635,181.309268 L105.784638,180.749613 L106.265302,179.775966 L106.380201,179.246976 L106.449141,178.656655 L106.575531,178.171748 L106.88193,177.972419 L107.259183,177.870838 L107.705377,177.614009 L108.084545,177.247934 L108.24349,176.826275 L108.546059,176.291536 L110.688936,174.369158 L110.091458,175.660966 L109.428871,176.751527 L106.987254,179.436723 L106.75937,179.775966 L106.393606,180.688281 L106.403181,181.079273 L109.218221,182.441995 L115.179596,181.125272 L114.557223,181.560346 L111.644518,182.235 L110.225508,183.185647 L109.472916,183.407976 L107.916026,182.921152 L107.104069,182.921152 L106.041248,183.87755 L105.564414,183.923549 L104.649047,183.812384 L103.84092,184.523453 L103.526861,184.7132 L103.526861,185.20194 L104.222004,185.692596 L103.773895,186.532079 L102.287861,187.896719 L101.971887,188.335626 L101.03354,190.137257 L100.935875,190.394085 L100.815231,190.94224 L100.677351,191.256567 L100.457127,191.532562 L100.286693,191.676309 L100.154558,191.887138 L100.045403,192.372045 L100.529897,192.439127 L101.1178,193.10803 L101.548673,193.311193 L101.985292,193.188528 L102.770439,192.527292 L103.166843,192.372045 L103.773895,191.887138 L103.923265,191.841139 L104.649047,191.887138 L105.053111,191.791307 L106.265302,191.028489 L105.888048,191.611144 L105.434195,191.94847 L104.513083,192.372045 L102.787674,193.723268 L102.115511,194.016512 L101.301639,194.039511 L100.414997,193.688768 L99.5513352,192.824369 L99.3464309,193.753934 L98.0653004,196.883787 L98.5631987,197.299695 L99.2506813,195.877558 L99.6758098,195.296819 L100.167963,195.057241 L100.761611,197.560357 L101.343769,197.983932 L102.354885,197.0697 L106.204022,197.970515 L107.745592,197.780769 L108.145825,197.357194 L108.984592,195.952306 L110.464882,194.612583 L111.02023,193.60252 L111.420464,192.439127 L111.891552,191.47123 L112.686274,191.028489 L111.922192,192.10755 L110.734896,194.790829 L108.444564,197.937933 L107.473663,198.783166 L106.265302,199.080243 L103.343022,198.24651 L99.7007047,198.57042 L98.4904289,199.168408 L97.5769771,200.460215 L97.7301766,201.000704 L97.4429276,201.311198 L96.9699242,201.535443 L96.5850106,201.792271 L96.3054216,202.313594 L95.5758091,204.471717 L96.3743613,204.65763 L97.9427408,204.126724 L98.8102328,204.065392 L98.8102328,204.471717 L96.9986491,205.205786 L96.0200875,205.320784 L95.3536699,204.914458 L94.6604423,205.684943 L94.3099985,206.530176 L93.8695501,208.962377 L93.4731464,210.319349 L93.3850568,211.051501 L93.599536,211.62649 L93.9557248,211.693572 L94.3061685,211.365828 L94.6470373,210.94417 L94.9706712,210.731424 L96.4777709,210.252267 L96.9622643,210.468846 L97.1901485,210.93842 L97.1231237,211.413744 L96.7094851,211.62649 L96.0047676,211.793236 L95.2215353,212.255144 L94.7830019,212.943213 L95.1085507,213.803779 L94.4248981,214.846425 L93.8063553,216.0884 L93.3410119,217.420456 L93.1073827,218.754429 L93.9442348,218.074026 L94.6681023,216.947049 L95.4896344,215.936986 L96.5850106,215.618826 L96.3647863,216.508141 L96.1158372,217.088879 L94.9553513,218.926926 L94.8078968,219.360084 L94.8749215,219.913989 L95.1085507,220.929802 L95.2119604,221.03905 L95.4321846,221.194297 L95.6773037,221.443458 L95.8458232,221.85745 L95.7902884,222.244609 L95.5049543,222.206276 L95.2023854,221.995447 L95.1085507,221.85745 L95.0989758,221.767368 L94.8844965,221.617871 L94.5953325,221.476041 L94.3617033,221.412792 L94.1299892,221.54504 L94.0380695,221.813367 L93.9806197,222.114278 L93.8695501,222.34044 L91.1521746,226.323193 L89.8250842,228.971973 L89.6259249,230.689272 L89.4861304,231.070681 L89.4267656,231.528755 L89.5320902,231.90633 L89.894024,232.050078 L90.0319035,231.844998 L90.6351264,230.689272 L90.6083165,229.261384 L92.169036,227.434837 L92.3854302,226.240778 L92.9618432,225.888119 L93.4444215,225.439628 L93.89636,225.186633 L94.3617033,225.393629 L94.1567991,225.723289 L93.9442348,225.947534 L94.0974343,226.240778 L93.7910353,227.043845 L89.8269992,233.24797 L89.9093439,233.953289 L90.1333981,234.700774 L90.3900072,235.130099 L90.7155561,235.122432 L91.3666538,234.434363 L92.3184055,233.934123 L93.5516612,232.471736 L94.3617033,232.050078 L93.8082703,232.768813 L93.1590875,233.39555 L92.6152294,234.068287 L92.3854302,234.930769 L92.157546,235.450176 L90.6351264,237.773129 L90.8189657,238.279118 L90.8572656,240.00025 L91.1291946,240.881899 L91.6251779,241.522053 L92.1135012,241.822964 L93.1073827,242.198623 L92.8584336,243.036189 L93.3352669,243.015106 L93.7718854,242.833027 L95.0587609,241.767381 L98.5631987,237.773129 L97.891036,239.70509 L96.7650199,241.401305 L95.5145293,242.578115 L94.4766029,243.036189 L93.9959396,243.438681 L93.3754818,244.379745 L92.8431137,245.483723 L92.6133145,246.367289 L92.3509604,247.093691 L90.3900072,248.77074 L90.8036458,249.654306 L90.6638513,250.93078 L89.894024,253.182818 L89.0418519,255.080279 L88.9058874,255.804765 L89.011212,256.260922 L89.2620762,256.686414 L89.4171906,257.159821 L88.9058874,259.034283 L88.9652522,260.464087 L89.1433466,261.911142 L89.1356866,263.239365 L88.7794979,263.904435 L87.4026177,265.535485 L86.3895862,266.386468 L86.1942569,267.628443 L86.2689416,269.069747 L86.6959851,271.795192 L87.0847288,272.567593 L87.7224215,272.816755 L88.7737529,272.830171 L89.1893064,272.71134 L90.0031786,272.107602 L90.3900072,271.937023 L90.8132207,271.956189 L91.5255983,272.312682 L91.870297,272.40468 L92.7205541,272.22835 L93.5305962,271.812442 L94.2410588,271.24512 L94.8347067,270.626049 L96.0315775,268.933666 L96.3935112,267.967686 L95.9702977,267.553694 L95.9377428,267.293033 L95.3536699,265.851729 L95.0128011,265.372572 L94.6853372,265.033329 L94.3234035,264.878082 L93.8695501,264.945164 L93.8695501,264.552255 L94.7064021,264.025182 L95.2866451,263.160783 L96.0928573,261.017993 L96.2537167,260.874246 L96.4126612,260.947078 L96.5371357,260.916412 L96.5850106,260.402755 L96.5467107,259.18953 L96.5850106,258.852203 L96.8090648,258.233132 L97.5769771,256.707497 L97.3395179,255.509604 L97.7684764,255.133945 L98.3391444,254.894366 L98.5631987,254.0568 L98.2836096,253.401313 L97.8450762,253.276732 L97.5156973,252.901073 L97.5769771,251.434853 L97.4984624,251.247023 L97.3586679,250.955696 L97.2897281,250.679702 L98.0653004,250.079797 L98.1553051,249.558474 L98.2453098,248.425747 L98.3372294,247.894841 L98.5976685,247.093691 L98.9423673,246.386455 L99.3406859,245.782717 L100.99907,243.910171 L101.548673,243.517263 L102.778099,243.109021 L103.279827,242.685446 L103.526861,241.801881 L103.201312,240.159331 L102.299351,238.631778 L100.290523,236.452572 L100.460957,236.320325 L100.635221,236.105662 L100.805656,235.971498 L100.443722,235.645672 L100.290523,235.574756 L100.290523,235.130099 L100.543302,235.130099 L100.543302,234.733357 L100.100938,234.302115 L99.9745487,233.798042 L99.9477388,233.194304 L99.7983693,232.448736 L99.4364356,231.172262 L99.2334463,231.118596 L98.6915032,230.831102 L98.5631987,230.689272 L98.8293827,227.210592 L98.8064028,226.787017 L98.8178928,226.380692 L98.9442823,226.037616 L99.2104664,225.888119 L99.2947261,226.292527 L99.3004711,226.859849 L99.329196,227.15501 L100.005189,227.377338 L100.901405,227.452087 L101.686553,227.210592 L102.021677,226.480357 L102.130831,226.541689 L102.35297,225.755871 L102.531065,224.84164 L102.51766,224.513896 L102.789589,224.327983 L103.448347,224.270485 L103.773895,224.071155 L106.76703,219.459748 L111.079595,216.508141 L111.428124,216.042401 L112.293701,213.765447 L112.686274,212.95663 L113.230132,212.458306 L113.8391,212.184228 L115.313645,212.063481 L115.926443,211.745321 L117.263108,210.248434 L117.896971,209.811443 L117.186509,211.522992 L115.930273,212.460223 L114.543818,213.071627 L113.450357,213.803779 L112.870114,214.664345 L111.587068,217.637035 L111.238539,218.010778 L109.72378,219.20292 L107.623032,220.092236 L103.676231,227.020846 L102.787674,228.044325 L103.237697,229.932204 L103.302807,230.482276 L103.222377,231.034265 L102.864274,231.751084 L102.787674,232.257073 L102.755119,233.4358 L102.787674,234.029954 L102.906403,234.489945 L103.182163,234.819605 L103.471327,234.978685 L103.687721,235.210597 L103.907945,236.822481 L104.285199,237.324638 L105.506964,237.773129 L107.090664,238.68736 L107.745592,238.68736 L107.492812,237.54505 L107.132794,236.554153 L106.265302,234.733357 L107.326208,233.173222 L107.500472,232.690231 L107.577072,232.050078 L107.801126,231.147346 L108.119015,230.29253 L108.488609,229.809539 L108.484779,231.156929 L108.817988,231.984912 L111.204069,233.951372 L111.891552,234.192868 L112.196036,233.569964 L111.920277,232.216824 L110.541482,228.699812 L109.972729,227.638 L110.552972,227.179926 L110.822986,227.718498 L111.01257,228.536898 L112.46605,230.482276 L112.6001,231.772166 L112.971608,233.615963 L113.488656,235.264263 L114.066984,235.971498 L115.214065,236.22066 L115.629619,236.138245 L116.146667,235.574756 L116.493281,234.911603 L116.652225,234.315532 L116.755635,233.686878 L116.931814,232.92981 L117.240128,232.358655 L117.657597,231.844998 L118.011871,231.214428 L118.14209,230.288696 L117.973571,229.545045 L117.598232,229.037138 L117.123314,228.709395 L116.6618,228.483233 L116.6618,228.044325 L117.282258,228.216822 L117.866331,228.556065 L118.406359,228.747727 L118.906173,228.483233 L118.710843,227.747248 L118.638074,226.879015 L118.639988,225.617874 L118.482959,224.3069 L118.572964,223.820077 L119.030647,223.628414 L119.139802,222.618351 L118.812338,220.391229 L118.308695,218.110442 L117.896971,216.948966 L118.383379,216.354811 L118.873618,216.527307 L119.250871,217.201961 L119.404071,218.079776 L119.342791,220.063486 L119.612805,220.573309 L120.392207,220.529227 L120.903511,219.770242 L122.981278,215.41758 L123.481092,214.72951 L123.866005,214.438183 L124.03644,214.681595 L123.873665,215.618826 L121.303744,219.783658 L119.894309,223.507667 L119.840689,224.050072 L119.894309,226.514856 L120.003464,227.687832 L120.396037,228.598231 L121.244379,228.964306 L122.125276,228.979639 L122.787864,228.858892 L123.021493,228.331819 L122.615515,227.15501 L120.899681,224.552229 L120.679456,223.747245 L120.656476,223.097508 L120.842231,222.612601 L121.380344,222.744849 L121.399494,223.053426 L121.868667,224.996887 L122.288051,225.82487 L122.856804,226.683519 L123.521306,227.369672 L124.990106,227.929327 L126.83616,230.288696 L128.406454,231.291093 L133.774181,232.448736 L132.895199,233.046724 L126.868715,232.097993 L126.093142,231.609253 L125.679504,231.795166 L125.074366,231.689751 L122.770629,230.603023 L122.282306,230.541691 L121.604398,230.689272 L120.468807,231.160762 L119.647275,231.879498 L119.126397,233.006475 L118.906173,234.733357 L119.270021,239.34093 L119.446201,240.00025 L119.658765,240.556073 L119.898139,241.326557 L120.049424,243.49618 L119.497905,244.883819 L117.896971,246.583868 L118.603604,247.62268 L119.77941,248.692158 L121.868667,250.079797 L121.868667,250.560871 L121.606313,251.151192 L121.939522,251.392687 L123.107668,251.434853 L125.082026,252.303085 L126.139102,253.200067 L126.918505,254.528291 L127.098514,255.948512 L126.338262,257.117655 L127.655777,257.560396 L128.527099,258.664374 L128.852648,260.207259 L128.538589,261.941808 L127.671097,263.208699 L125.26012,264.356759 L124.093889,265.426237 L123.747276,266.148806 L123.450452,267.628443 L123.234057,268.237931 L122.942978,268.617423 L122.282306,269.173245 L121.08352,270.675881 L120.882446,271.06304 L120.821166,271.661028 L120.913086,273.037167 L120.882446,273.661988 L120.744566,274.227393 L119.915374,276.368266 L119.886649,276.68451 L119.898139,277.36108 L119.827284,277.568076 L119.451946,277.66774 L119.279596,277.809571 L116.931814,281.019923 L115.447695,281.985903 L114.741062,282.714222 L114.436578,283.881448 L114.338914,285.167506 L114.089964,286.024238 L113.450357,287.561374 L113.299072,288.113363 L113.226302,288.533104 L113.207152,289.932243 L113.318222,290.675894 L113.82761,291.921703 L113.948255,292.527357 L114.151244,293.110012 L115.451525,295.745375 L115.451525,296.16895 L115.302155,296.389362 L115.179596,296.634691 L114.547648,297.303594 L113.902295,297.198179 L113.300987,296.634691 L112.824154,295.950455 L112.657549,295.37355 L112.713084,293.85558 L112.686274,293.152178 L112.506265,292.498608 L112.241996,291.89487 L111.698138,291.015138 L111.564088,290.666311 L111.217474,289.964825 L110.857456,289.637082 L110.688936,290.369234 L110.520417,290.562813 L110.116353,290.624145 L109.354186,290.574313 L108.842883,291.074553 L108.593934,292.21303 L108.488609,294.484234 L108.674363,296.983517 L109.338866,299.212555 L110.380622,301.1196 L113.82378,305.288266 L114.549563,305.625593 L114.903837,305.989752 L115.129806,306.794736 L115.290665,307.662968 L115.451525,308.23604 L115.688984,308.464119 L115.985808,308.584866 L116.6618,308.663448 L116.504771,309.134938 L116.508601,309.568096 L116.659885,309.985921 L116.931814,310.376913 L116.504771,310.948069 L116.476046,311.984964 L116.698185,312.954778 L117.042884,313.399436 L117.791646,313.591099 L119.342791,314.428665 L120.122193,314.635661 L119.654935,313.621765 L119.6377,313.315104 L119.647275,312.734366 L119.836859,311.603555 L119.827284,311.063066 L118.787443,310.158418 L118.21103,308.682614 L117.799306,307.201061 L117.550357,306.520658 L117.186509,306.248497 L116.905005,305.60451 L116.728825,304.876191 L116.6618,304.347202 L116.65797,303.889128 L116.698185,303.567134 L116.84181,303.189558 L117.159699,302.635653 L117.707387,301.834502 L118.427424,301.064018 L119.254701,300.420031 L120.122193,300.025206 L121.499074,300.002206 L122.272731,300.343366 L122.942978,302.10858 L123.722381,302.601154 L125.35204,303.061144 L129.618645,305.736757 L130.815516,306.913567 L132.910519,310.158418 L133.232237,310.409496 L134.515283,310.376913 L134.859982,310.518744 L135.773434,311.227896 L136.541346,311.565223 L137.368623,311.68597 L137.747792,311.55564 L137.987166,311.262396 L138.167175,310.967235 L138.36442,310.836904 L138.607624,310.321331 L138.423784,309.138772 L138.30697,307.831631 L138.760823,306.913567 L138.24569,306.010835 L138.425699,305.242267 L138.737843,304.535031 L138.626774,303.726214 L138.18824,303.13781 L137.728642,302.810066 L137.211594,302.668236 L136.627521,302.635653 L136.393891,302.215911 L136.108557,301.30168 L135.773434,299.827793 L135.876843,299.151223 L136.120047,298.365406 L136.407296,297.719502 L136.627521,297.460757 L137.209679,297.606421 L137.460543,298.045329 L137.632892,298.733398 L137.973761,299.632297 L138.289735,300.075038 L138.709118,300.410448 L141.407344,301.713755 L141.947372,301.780837 L142.531445,301.485676 L143.414257,300.368282 L143.94854,300.025206 L143.634481,302.534072 L144.907952,304.663445 L146.757835,305.880504 L148.16727,305.625593 L147.820657,304.642362 L147.943216,303.570967 L148.356855,302.677819 L148.887308,302.212078 L148.902628,302.499572 L149.402441,302.723818 L149.477126,303.369722 L149.331586,304.184288 L149.402441,304.822526 L149.389036,304.876191 L149.285626,305.10427 L149.182217,305.276766 L149.268391,305.435846 L149.389036,305.529761 L149.507766,305.560427 L149.65139,305.625593 L149.65139,306.095166 L150.779321,306.187165 L152.49707,305.93992 L155.33509,303.781797 L157.223274,302.92698 L157.575632,302.635653 L156.344292,301.387928 L156.840275,300.985436 L157.079649,300.922188 L157.003049,300.680692 L156.836445,300.025206 L157.397538,299.478967 L157.826497,298.773648 L157.960546,298.974894 L158.021826,299.160806 L158.073531,299.632297 L157.893521,299.348636 L157.713512,299.256638 L157.305618,300.025206 L157.493288,300.423864 L157.721172,300.680692 L157.989271,300.722858 L158.320565,300.492863 L158.19226,300.368282 L158.15013,300.349116 L158.073531,300.025206 L160.637707,300.441114 L161.420939,299.110974 L162.357371,298.963394 L165.735419,299.293054 L166.330982,298.942311 L166.74462,297.926498 L166.80973,296.901102 L166.742705,295.547963 L166.558866,294.300238 L166.271617,293.623668 L166.74462,291.90637 L167.778717,292.835934 L168.345555,293.06018 L168.964098,292.768852 L168.898988,292.498608 L168.881753,292.444942 L168.847283,292.431526 L168.738128,292.305028 L169.255177,292.094199 L169.791375,292.280112 L170.354383,292.598272 L170.963351,292.768852 L182.478205,293.623668 L185.53645,292.791852 L185.710714,292.749686 L186.591611,293.152178 L186.591611,293.623668 L185.907958,293.347674 L185.346865,293.581502 L184.791517,293.939912 L184.100205,294.051076 L184.100205,294.484234 L186.591611,294.484234 L185.952003,294.944225 L182.945464,295.854623 L182.212021,295.797124 L180.867696,295.352467 L180.584277,295.118638 L180.375543,294.85031 L180.107444,294.629898 L179.655505,294.484234 L177.378578,295.176137 L176.836635,295.599712 L175.902118,296.634691 L177.709872,297.558505 L178.16947,297.926498 L176.689181,298.733398 L176.294692,298.773648 L175.708704,298.549402 L175.32762,298.079828 L174.902492,297.752085 L174.195859,297.926498 L173.347517,298.957644 L172.63897,300.665359 L171.461249,304.347202 L171.792543,305.409014 L171.480399,306.597323 L170.900156,307.639969 L170.446302,308.23604 L170.061389,308.510118 L169.262837,308.826361 L168.964098,309.088939 L168.713234,309.635178 L168.20576,311.195314 L166.98591,314.02809 L166.020753,318.896325 L165.262416,321.056365 L165.090066,321.200112 L164.703238,321.646686 L164.438968,322.11626 L164.812392,322.543668 L165.193476,323.438733 L165.377315,323.647646 L165.970963,323.975389 L169.377736,328.770792 L170.222248,329.531694 L171.461249,332.121058 L172.321081,332.548466 L172.424491,332.669214 L172.499175,333.303617 L172.759614,334.185266 L172.69259,334.735338 L172.53556,335.245162 L172.44747,335.728152 L172.63897,336.707549 L173.119633,337.541282 L174.195859,338.894421 L175.501885,341.228874 L176.287032,342.018525 L177.039624,341.688865 L177.614122,341.568117 L178.443314,341.640949 L178.981428,341.347705 L178.661624,340.161312 L179.010153,338.597344 L179.312721,337.95144 L179.879559,337.625613 L179.81828,338.875255 L179.900624,340.968213 L179.598055,342.77176 L178.39544,343.139752 L178.39544,343.570994 L178.948873,344.036734 L178.964193,344.933716 L178.770778,345.982112 L178.661624,346.930842 L179.019727,347.36975 L179.442941,347.639995 L179.938924,347.770325 L180.515337,347.814408 L180.846631,348.122985 L182.125847,349.915032 L182.154572,349.213546 L182.049247,348.383646 L182.125847,347.68791 L183.117813,347.137838 L183.485492,346.537934 L184.100205,345.24996 L185.176431,343.860404 L185.33346,343.358248 L185.44836,342.674012 L185.651349,341.863278 L185.764334,341.002712 L185.601559,340.161312 L186.086053,339.917901 L186.499691,340.180479 L186.827155,340.786133 L187.085679,341.502952 L186.754385,342.125856 L186.972695,343.109086 L187.466763,344.011818 L187.953171,344.40856 L189.580916,344.289729 L190.264568,343.860404 L190.547987,342.93084 L190.829491,342.279186 L191.493994,341.74253 L192.786614,341.035295 L193.866671,340.172812 L194.377974,339.42916 L194.521598,338.499596 L194.768632,338.499596 L194.797357,339.691738 L194.240094,340.786133 L193.428137,341.568117 L192.65831,341.884361 L192.777039,342.461266 L194.15775,345.223127 L194.768632,346.135442 L194.071575,347.762659 L193.648361,348.374063 L192.48596,348.851304 L191.993807,349.432042 L191.28143,350.754515 L190.971201,351.070759 L190.593947,351.373586 L190.343083,351.724329 L190.419683,352.207319 L190.990351,353.525959 L191.16653,353.692706 L192.269566,353.575792 L192.901514,353.318963 L193.533462,352.851306 L193.364942,353.84412 L192.114452,355.14551 L192.52043,355.827829 L192.261906,355.96391 L191.928697,356.191989 L191.651023,356.508232 L191.536124,356.881975 L191.411649,357.154136 L191.13972,357.042972 L190.664802,356.673062 L190.073069,356.740144 L186.74864,358.012785 L185.911788,358.543691 L185.33346,359.60167 L185.756674,361.295969 L185.34112,365.913126 L185.601559,367.963918 L186.606931,369.410972 L187.930191,370.00896 L191.04014,370.051126 L190.582457,370.687446 L189.132807,371.722425 L188.814918,372.356829 L188.516179,372.575325 L186.591611,375.086107 L184.209359,379.051611 L183.786146,380.002258 L183.696141,380.847491 L183.89147,381.692724 L188.071901,390.890622 L188.937478,392.232261 L190.096049,393.479986 L191.490164,394.474716 L193.039393,395.061204 L194.630753,395.233701 L195.253126,394.911707 L195.50782,394.022392 L195.906138,393.775147 L197.727297,393.336239 L198.25009,393.364989 L197.926456,393.706148 L197.602823,393.924644 L197.294509,393.970643 L196.98811,393.819229 L196.677881,394.177639 L196.398292,394.595464 L196.292967,395.151286 L196.495956,395.92752 L195.50399,396.504425 L194.992687,396.657755 L194.395209,396.707588 L194.13094,396.634756 L193.585167,396.362595 L193.261533,396.328095 L192.991519,396.504425 L192.863214,396.778503 L192.826829,397.027665 L192.786614,397.159912 L191.666343,397.215494 L190.616927,396.719088 L189.7322,395.931353 L189.081102,395.061204 L186.94397,389.437818 L186.099458,388.412422 L185.276011,388.347257 L183.973815,389.395652 L183.236543,389.685063 L181.694973,389.920808 L181.0343,390.288801 L180.641727,390.890622 L180.681942,391.827853 L181.17601,392.732501 L182.478205,394.457467 L183.359102,396.328095 L184.324259,397.989812 L184.324259,400.21885 L184.203614,400.445012 L183.94509,400.170935 L183.495067,399.408117 L182.960784,398.787129 L178.309265,395.735857 L177.899456,395.254784 L177.568163,394.656796 L176.80408,394.056891 L175.43103,393.364989 L173.9201,393.422487 L167.037614,396.839835 L165.593709,397.180995 L161.468814,397.288326 L160.901976,396.931833 L160.314073,396.032935 L159.567225,395.348699 L158.780163,395.080371 L158.073531,395.467529 L157.608187,394.896374 L156.97241,394.516882 L156.267692,394.309886 L155.608934,394.233221 L155.880863,394.953873 L156.94177,396.054018 L157.305618,397.159912 L156.080023,397.159912 L152.125561,398.808212 L150.884646,399.852774 L150.038219,400.084686 L149.243497,400.466095 L148.781983,400.784256 L148.515799,400.684591 L148.22089,400.510178 L147.920236,400.425846 L146.784645,400.521677 L145.717994,400.851338 L144.764327,401.476158 L143.94854,402.472805 L143.197863,404.040606 L142.715284,404.717176 L142.071847,404.991254 L141.665868,405.280665 L140.220048,407.042046 L140.179833,407.306541 L139.909819,407.99461 L139.601505,408.475684 L139.457881,408.090441 L139.348726,407.674533 L139.109352,407.551869 L138.869978,407.797197 L138.760823,408.49485 L138.693798,411.007549 L138.540599,412.078944 L138.24186,412.862845 L135.876843,414.413397 L135.156806,415.640039 L132.244101,417.916993 L131.537468,418.304152 L130.867221,418.499648 L130.181653,418.562897 L129.633965,418.869557 L124.610938,424.736355 L124.093889,425.696586 L123.873665,425.98983 L124.019205,426.352073 L123.97899,426.626151 L123.605566,427.180056 L124.158999,427.540382 L124.674132,427.291221 L125.183521,426.700899 L125.708229,426.359739 L127.738122,426.570568 L128.538589,426.359739 L128.802858,426.156577 L129.005847,425.882499 L129.258626,425.64867 L129.68567,425.543256 L130.106968,425.673587 L130.800196,426.231325 L131.579598,426.505403 L132.079412,427.120641 L132.51603,427.180056 L132.780299,427.059309 L133.044568,426.84273 L133.502252,426.359739 L133.067548,425.719586 L133.079038,424.943351 L133.425652,424.264865 L133.998235,423.916039 L133.91206,423.663044 L133.774181,423.502047 L135.061056,422.014744 L135.744709,421.407173 L136.489641,421.008514 L139.000197,421.043013 L139.72215,420.607939 L140.323458,420.23803 L142.939339,419.419629 L144.992211,419.766539 L145.980348,419.676458 L146.91295,418.967305 L147.200199,419.634292 L147.569792,419.728207 L147.977686,419.438796 L148.395155,418.967305 L148.508139,419.206884 L148.619209,419.304632 L148.887308,419.419629 L146.73294,420.968265 L146.503141,421.211677 L146.424626,421.623752 L146.418881,422.463235 L146.581656,422.859977 L146.87082,423.781875 L146.956995,424.713356 L146.541441,425.135014 L145.913323,425.345843 L145.809914,425.828833 L145.984178,426.384656 L146.675491,427.848959 L149.438826,431.235641 L150.045879,431.091894 L150.670167,430.587821 L151.629578,430.478573 L151.160405,431.082311 L149.68203,432.238037 L149.299031,432.379868 L149.159237,432.477616 L149.074977,432.719111 L148.902628,433.529845 L148.778153,433.690841 L148.130885,434.150832 L147.372548,435.287393 L146.78273,436.759363 L146.664001,438.237083 L147.071894,439.153231 L148.726448,441.434018 L149.283711,441.894009 L150.262273,441.719596 L152.129391,441.048776 L153.109868,441.043026 L153.109868,441.487684 L151.244665,442.877239 L150.612717,443.105318 L150.235463,443.01332 L149.452231,442.601245 L149.159237,442.668327 L148.935183,443.168567 L148.885393,443.870053 L148.963908,444.590705 L149.159237,445.140777 L148.749428,445.978343 L148.345365,447.199235 L148.044711,448.554291 L147.719162,451.053574 L147.234669,452.385631 L146.168017,454.461339 L144.069185,457.478111 L139.777685,461.19062 L139.109352,461.388032 L138.36442,461.443615 L137.770772,461.608445 L137.253723,461.943855 L136.175582,463.247162 L135.46895,463.896898 L134.754657,464.391388 L133.684176,464.730632 L133.437142,465.066042 L133.266707,465.48195 L133.033078,465.773277 L132.613695,465.940024 L128.138355,465.773277 L126.757645,466.455597 L126.83616,468.192062 L125.639289,467.239498 L125.145221,467.250997 L124.480718,467.994649 L123.592161,469.458953 L123.071283,470.10294 L122.366565,470.59743 L121.16395,470.802509 L120.882446,471.028671 L120.872871,471.555744 L121.035645,472.216981 L121.089265,472.801552 L120.761801,473.037297 L119.972824,472.908883 L118.580624,472.360728 L117.896971,472.241897 L118.14209,473.037297 L117.102249,473.474289 L116.403276,473.466622 L114.476793,472.412477 L114.061239,472.310895 L113.078848,472.241897 L112.483285,472.360728 L112.084966,472.669305 L112.027517,473.06413 L112.46605,473.445539 L112.46605,473.803949 L111.947087,473.803949 L111.837932,475.312335 L110.696596,476.314731 L109.223966,476.87247 L108.10944,477.035383 L107.638352,477.296045 L106.548721,478.423022 L105.870813,478.676017 L104.570533,478.783348 L104.231579,479.120675 L104.513083,479.873909 L104.513083,480.236152 L104.166469,480.454648 L104.078379,480.630977 L104.145404,480.826473 L104.267964,481.081385 L104.267964,481.51646 L104.0171,481.665957 L103.773895,481.874869 L104.476698,481.874869 L106.491271,481.47046 L107.008319,481.081385 L107.651757,481.51646 L109.076512,481.710039 L109.72378,482.267778 L109.972729,481.874869 L110.472542,482.344443 L110.775111,483.068928 L110.918735,483.940994 L110.95512,484.845642 L111.148535,486.311863 L111.033635,486.879185 L110.464882,487.454173 L109.836764,487.728251 L108.624573,487.967829 L108.10944,488.469986 L107.682397,489.06989 L107.285993,489.365051 L106.768945,489.480049 L105.995288,489.485799 L106.69809,489.702378 L108.488609,491.08235 L108.488609,491.444593 L108.412009,492.073246 L108.923312,492.100079 L109.342696,491.592173 L108.984592,490.647275 L109.6242,490.403864 L114.662547,491.08235 L115.451525,491.051684 L118.25699,490.39428 L118.797018,489.815459 L118.927237,489.163805 L118.415934,488.686565 L118.620839,487.831749 L118.452319,487.302759 L118.017616,487.053598 L117.425883,487.063181 L117.870161,486.77952 L119.909629,486.595524 L120.955215,486.160449 L121.380344,485.863372 L121.380344,486.29653 L119.999634,486.647273 L119.396411,487.839415 L119.605145,489.244304 L120.633497,490.281199 L120.633497,490.647275 L120.158578,490.382781 L119.787069,490.472862 L118.906173,491.08235 L117.159699,491.444593 L115.939848,492.151828 L115.451525,492.268743 L114.928731,492.184411 L113.98464,491.858584 L113.450357,491.879667 L113.526956,492.069413 L113.618876,492.510238 L113.695476,492.70765 L110.918735,492.305158 L110.688936,492.70765 L111.384079,493.504968 L113.168853,493.963042 L113.695476,495.090019 L113.368012,495.705257 L114.239334,496.34541 L116.594776,497.112061 L116.972029,497.416805 L117.159699,497.470471 L117.483333,497.32864 L117.783986,496.768985 L118.463809,496.466158 L118.795103,496.042583 L119.080437,495.525094 L119.404071,495.090019 L119.961334,494.710527 L120.510937,494.578279 L123.735786,494.653028 L124.361988,494.010957 L124.610938,493.821211 L125.105006,494.252453 L125.430555,494.354034 L126.093142,492.70765 L126.177402,492.262993 L126.177402,492.04258 L126.259747,491.929499 L126.589126,491.879667 L126.66764,490.43453 L127.853021,489.573964 L129.367781,489.163805 L130.428687,489.050724 L133.149893,489.418717 L134.532518,489.365051 L135.773434,488.686565 L135.233406,488.147992 L134.946157,487.588337 L135.074461,487.185845 L135.773434,487.063181 L136.081748,487.494422 L136.393891,487.772333 L136.76157,487.860498 L136.987539,487.739751 L137.278618,487.260594 L137.479693,487.063181 L137.763112,486.442193 L137.994826,486.256281 L138.24186,486.662606 L138.24952,487.185845 L138.073341,487.728251 L137.858861,488.130743 L137.753537,488.249574 L138.088661,488.95106 L138.645924,489.365051 L139.310426,489.531798 L139.973014,489.485799 L139.628315,490.003288 L138.971472,490.085703 L137.479693,489.892124 L137.943121,490.952019 L138.818273,491.988915 L139.793005,492.763233 L140.580067,493.07181 L143.425747,492.630985 L143.94854,492.268743 L145.905663,493.376554 L147.336163,493.526051 L147.751717,493.483885 L148.048541,493.267306 L148.471754,492.740233 L148.649849,492.851397 L148.682404,493.267306 L148.665169,493.646798 L147.897256,494.959688 L146.168017,495.38518 L144.321964,495.513594 L143.201693,495.889253 L142.956574,495.636258 L142.711454,495.450345 L142.711454,495.090019 L142.939339,495.090019 L142.711454,494.653028 L142.47591,494.978855 L142.087167,495.705257 L141.947372,495.889253 L140.712201,496.282162 L140.719861,497.18681 L141.04158,497.932378 L141.1335,498.541866 L140.444102,499.067022 L140.528362,499.484847 L140.593472,499.645844 L140.712201,499.852839 L141.346064,499.895005 L143.485112,500.814987 L143.94854,500.822653 L144.08259,500.222749 L144.411968,500.245748 L144.814117,500.519826 L145.181796,500.621407 L145.530325,500.399078 L146.039713,499.776174 L146.418881,499.425431 L146.803795,499.251018 L147.146579,499.270185 L148.048541,499.490597 L148.423879,499.776174 L148.665169,499.852839 L148.826028,499.732092 L149.166897,499.18777 L149.283711,499.067022 L149.523086,499.107271 L149.80459,499.241435 L150.045879,499.413932 L150.143543,499.645844 L150.245038,499.948671 L150.449942,499.843256 L150.620377,499.578762 L150.612717,499.425431 L152.125561,499.425431 L151.859377,498.921358 L151.485954,498.369369 L151.210195,497.802048 L151.244665,497.253892 L151.564468,496.891649 L152.050877,496.575406 L152.560265,496.366493 L156.455361,495.889253 L156.936025,496.0215 L157.251999,496.366493 L157.826497,497.470471 L158.163535,497.907462 L158.787823,498.325287 L159.086562,498.633864 L159.521266,499.404349 L159.923414,500.366496 L160.277688,501.457057 L160.540042,502.595534 L160.448122,502.635783 L160.338968,502.668366 L160.271943,502.769947 L160.317903,503.028692 L160.697072,503.607514 L161.407534,504.320499 L162.219491,504.734491 L162.885909,504.420164 L163.389552,504.46233 L165.507535,506.229461 L167.209964,508.579247 L167.870636,508.958739 L176.913235,509.788639 L179.462091,508.711494 L180.004034,508.786243 L180.695347,509.014321 L181.333039,508.27067 L181.587734,507.040194 L181.13771,505.79247 L181.357934,505.631473 L181.867323,505.564391 L182.125847,505.397644 L182.286706,505.1274 L182.497355,504.45083 L182.618,504.207418 L183.558262,503.239521 L184.169144,502.789114 L184.714918,502.595534 L186.819495,501.251978 L187.01291,500.878235 L187.960831,499.688009 L188.29787,499.425431 L188.483624,499.611344 L188.682784,500.01767 L188.966203,500.431661 L189.431546,500.621407 L192.50128,500.399078 L194.029445,499.852839 L196.045933,498.453701 L197.761767,498.051209 L198.46074,497.495387 L199.475686,496.289828 L201.846448,493.451302 L202.177742,492.88398 L202.516695,492.510238 L204.671063,491.08235 L205.180451,490.375114 L205.622815,489.585463 L206.118798,488.95106 L206.808195,488.686565 L207.520573,488.623316 L208.35551,488.351155 L209.004693,487.75125 L209.163637,486.662606 L209.69409,487.185845 L209.784095,487.839415 L209.500676,488.515985 L208.918518,489.050724 L207.365458,489.600796 L206.735426,489.949623 L205.49834,491.642005 L203.437807,493.821211 L203.215668,494.160454 L202.974379,494.653028 L202.775219,495.187767 L202.692875,495.666924 L202.56457,496.18633 L202.240936,496.443158 L201.871343,496.607988 L201.570689,496.847567 L198.37648,502.344456 L197.641122,503.107274 L196.87704,503.423517 L196.021038,503.500183 L195.310576,503.718678 L194.665223,504.086671 L194.029445,504.61566 L191.574424,507.891177 L190.237758,509.200234 L189.081102,508.958739 L188.29787,509.788639 L188.847473,510.369377 L188.613844,510.906033 L188.110201,511.427356 L187.828697,511.964012 L187.801887,512.85716 L187.665922,513.393816 L187.292499,513.55673 L186.591611,513.338234 L186.999505,514.02822 L187.099084,515.122615 L187.085679,517.284571 L187.202494,517.828893 L187.328883,518.135554 L187.399738,518.516963 L187.334628,519.249115 L187.212069,519.676523 L186.591611,520.862915 L186.099458,520.47384 L186.591611,519.653523 L186.319682,519.249115 L185.297076,519.958267 L183.88764,520.169096 L181.493899,520.046432 L180.185958,520.218928 L177.589227,521.039245 L173.452842,521.227075 L172.748124,520.887832 L171.679558,519.862436 L167.144854,518.810207 L164.239809,518.906038 L159.555736,517.673647 L158.902723,517.731145 L157.749897,518.346383 L156.96092,518.497797 L154.346954,518.497797 L153.663301,518.622377 L152.309401,519.13795 L145.693099,519.758938 L142.939339,520.862915 L142.939339,521.227075 L143.343402,521.499236 L143.609586,521.984143 L143.665121,522.59938 L143.433407,523.220368 L143.165308,523.320033 L141.947372,523.220368 L142.192491,523.712941 L142.812949,524.654006 L142.939339,525.014332 L143.017853,525.432157 L143.452557,526.992292 L143.676611,527.548114 L143.299357,527.768526 L143.073388,528.082853 L142.908699,528.422096 L142.711454,528.761339 L140.266008,531.505951 L139.72215,531.895026 L138.982962,532.126938 L136.882215,531.895026 L136.518366,531.764695 L135.779179,531.197374 L135.37703,531.074709 L132.154096,531.074709 L131.979832,531.436952 L132.012387,532.230436 L132.146436,533.062253 L132.290061,533.503077 L131.782588,534.934798 L131.533638,535.415872 L131.129575,537.794407 L131.301924,542.837055 L130.309958,544.822682 L128.804773,545.961159 L128.126865,546.752726 L127.845361,547.753206 L127.424063,548.462358 L124.861802,550.670314 L124.361988,550.5304 L123.99814,550.798728 L123.873665,551.412049 L124.093889,552.251532 L123.521306,553.192596 L123.105753,554.229492 L122.535085,555.057475 L121.491414,555.402468 L118.797018,555.580715 L117.896971,555.402468 L117.896971,555.760878 L118.08847,556.347366 L117.906546,556.82844 L117.849096,557.353596 L118.415934,558.087664 L119.608975,558.530405 L120.239008,558.915648 L120.633497,559.666966 L120.049424,559.385221 L118.555729,559.297056 L117.896971,558.894565 L117.762922,559.080478 L117.671002,559.164809 L117.425883,559.318139 L117.397158,558.674152 L117.297578,557.901751 L117.142464,557.236681 L116.931814,556.918521 L116.659885,556.99327 L116.184967,557.535675 L115.920698,557.738838 L115.179596,557.738838 L114.461473,558.31191 L114.109114,559.088144 L113.98847,560.071374 L113.948255,561.221351 L113.618876,563.423557 L113.281837,564.194041 L113.207152,564.517951 L110.688936,565.87109 L110.417007,565.850008 L109.869319,565.890257 L109.457596,566.166251 L109.706545,567.300895 L109.75442,568.011964 L109.72378,568.675117 L109.60122,568.962611 L109.107152,569.127441 L107.776231,570.057006 L103.630271,574.423085 L102.287861,575.178236 L100.99907,575.178236 L100.805656,575.385232 L100.700331,575.908471 L100.443722,576.46621 L99.9247589,577.30761 L99.1779115,577.769517 L98.452129,577.407274 L97.329943,576.32438 L96.5371357,576.347379 L95.1449356,577.250111 L93.9097649,577.679435 L91.600283,579.017242 L90.5412917,579.417817 L90.2559577,579.62098 L89.5723051,580.790123 L89.5033653,580.985619 L89.3654858,581.248197 L89.4267656,581.842351 L89.6259249,582.909913 L89.6852897,582.90033 L89.8021043,583.051744 L89.9016839,583.325822 L89.894024,583.676564 L89.7389095,583.90656 L89.4823004,584.015808 L89.1356866,584.056057 L89.5110253,585.756106 L90.8802455,586.306178 L92.6133145,586.108765 L94.0974343,585.629608 L94.6336324,585.359364 L95.2847301,584.834208 L95.6811337,584.075223 L95.4628245,583.09391 L95.4532495,582.317675 L96.1483921,581.736937 L97.0886538,581.41111 L97.8450762,581.367028 L98.4463841,581.621939 L99.6604898,582.377091 L101.12546,582.633919 L103.302807,583.676564 L104.015185,584.186388 L104.591598,584.89554 L105.627609,586.595589 L105.882303,587.136078 L105.895708,587.540486 L105.866983,587.998561 L105.995288,588.696213 L106.148487,589.085289 L106.326582,589.3632 L107.416213,590.576425 L107.783891,590.881169 L108.10944,591 L108.230085,590.699089 L108.651383,589.380449 L109.72378,588.107808 L109.972729,587.898896 L110.411262,587.831814 L111.144705,587.979394 L111.474084,587.898896 L112.506265,586.340677 L112.975438,585.305698 L112.824154,584.834208 L112.672869,584.667461 L112.548395,583.910393 L112.46605,583.676564 L112.293701,583.619066 L111.878147,583.691897 L111.698138,583.676564 L111.186835,583.358404 L110.872776,583.274073 L110.464882,583.295155 L111.625368,582.768083 L111.947087,582.528504 L112.092626,582.112596 L112.069646,581.650689 L112.117521,581.238614 L112.46605,580.985619 L112.908414,580.680875 L113.145873,580.573544 L113.450357,580.59271 L112.906499,579.960223 L112.686274,579.795393 L112.686274,579.448483 L113.145873,578.825579 L113.080763,578.179675 L113.105658,577.687102 L113.82378,577.485856 L114.281464,577.899848 L114.497858,579.895057 L114.932561,580.59271 L116.441576,577.982263 L116.931814,577.485856 L118.469554,576.96645 L119.101502,576.611874 L119.769835,575.78964 L120.457317,575.496396 L122.249751,575.780057 L122.615515,575.385232 L122.680624,575.078571 L123.107668,574.020593 L123.107668,573.771431 L122.912339,573.397689 L122.856804,573.048862 L122.988938,572.688536 L123.285762,572.270711 L123.620886,571.910385 L123.873665,571.705306 L123.873665,571.277898 L123.588331,570.547663 L123.99048,570.089589 L124.733497,569.834677 L125.46694,569.767595 L125.675674,569.671764 L125.871003,569.485851 L126.079737,569.34402 L126.338262,569.376603 L126.83616,570.929072 L127.044894,570.929072 L127.224903,570.802574 L127.339803,570.631994 L127.328313,570.547663 L133.276282,570.187337 L134.693377,569.639181 L137.322663,567.983215 L138.982962,567.804968 L142.071847,568.613785 L142.699964,568.991361 L143.037003,569.804011 L143.421917,570.492081 L144.193659,570.547663 L144.193659,570.187337 L143.99833,569.792511 L144.038545,569.411102 L144.277919,569.114025 L144.689642,568.962611 L144.689642,568.613785 L143.676611,568.613785 L143.94854,568.186377 L143.238078,568.113545 L142.939339,568.186377 L142.939339,567.804968 L144.193659,567.456142 L143.379787,566.833238 L141.324999,567.172481 L140.712201,566.288915 L142.46442,566.440329 L142.939339,566.288915 L143.257227,565.850008 L143.387447,565.253936 L143.236163,564.673198 L142.711454,564.318622 L142.711454,563.973629 L143.149988,563.979379 L143.519582,563.781966 L143.795341,563.383307 L143.94854,562.76807 L144.341114,563.10348 L144.710707,563.126479 L145.430745,562.76807 L145.045831,563.578803 L144.549848,564.339705 L144.277919,565.140855 L144.553678,566.080003 L144.842842,566.660741 L144.997956,567.122649 L145.214351,567.481058 L145.677779,567.804968 L146.074183,567.893133 L147.407018,567.804968 L146.911035,568.862947 L147.286373,569.727346 L148.094501,570.317667 L148.887308,570.547663 L148.749428,571.072819 L148.665169,571.277898 L149.237752,571.778138 L149.60543,571.9928 L150.011409,572.086715 L150.308233,571.952551 L150.794641,571.410145 L150.995715,571.277898 L151.355734,571.15715 L152.280676,570.631994 L152.61963,570.547663 L153.012203,570.722076 L155.39254,572.907032 L157.485628,575.513646 L158.833783,576.751788 L159.373811,576.151883 L159.938734,576.222798 L160.591747,576.554375 L161.403704,576.751788 L162.022247,576.682789 L163.481472,576.253464 L164.0215,575.975553 L163.745741,574.562998 L163.95256,573.230942 L164.322154,572.063715 L164.517483,571.101568 L164.894737,570.559163 L165.706694,570.340667 L166.482266,569.880676 L166.74462,568.613785 L167.321033,569.104442 L167.887871,569.288438 L168.32449,568.983694 L168.563864,567.563473 L168.753448,567.268312 L169.027292,567.122649 L169.354756,567.0594 L169.381566,566.856237 L169.753075,565.87109 L169.753075,565.480098 L168.134906,565.57018 L167.512533,565.259686 L167.254009,564.318622 L167.504873,563.504055 L168.129161,563.034481 L168.935373,562.825569 L169.753075,562.76807 L169.105807,560.401034 L169.075167,559.287473 L169.481146,557.738838 L169.954149,556.579278 L170.482687,555.605631 L171.06293,554.82173 L171.702538,554.208409 L171.382734,553.443675 L170.913561,551.490631 L170.457792,550.973141 L170.415663,550.704813 L170.457792,550.442235 L170.580352,550.313821 L170.789086,550.363653 L170.900156,550.493984 L170.984416,550.610898 L171.083995,550.670314 L171.233365,550.898393 L171.702538,552.251532 L172.150646,553.104431 L172.63897,553.574005 L173.249853,553.775251 L174.06181,553.8155 L176.689181,552.644441 L177.234954,551.870123 L177.568163,551.116888 L177.977971,550.538067 L179.454431,550.175824 L180.672367,549.618085 L181.361764,549.499254 L181.773488,549.587419 L182.462885,549.89408 L182.838224,549.928579 L183.190583,549.773332 L183.793806,549.261592 L183.973815,549.152345 L184.801092,548.462358 L185.220476,548.332028 L186.591611,548.721103 L187.451443,548.617605 L188.736404,547.768539 L191.459524,547.130302 L192.271481,547.164801 L198.497124,549.499254 L206.070923,555.33347 L206.907775,556.751775 L206.934585,558.894565 L207.158639,558.894565 L207.671857,558.097247 L208.052941,557.200265 L207.959106,556.479613 L207.0514,556.172953 L206.718191,555.628631 L206.919265,554.413488 L207.367373,553.204096 L207.790587,552.644441 L209.152147,552.203616 L209.918145,552.080952 L211.164805,552.864853 L217.871112,553.616171 L220.590402,554.904145 L221.21086,555.040226 L224.14846,554.973144 L224.822537,554.6684 L224.745938,553.8155 L225.998343,552.251532 L225.801099,552.1787 L225.261071,551.841374 L225.519595,550.869643 L225.268731,550.430735 L224.734448,550.313821 L224.138885,550.313821 L223.472467,550.160491 L223.043509,549.731166 L222.275596,548.332028 L221.877278,548.669354 L221.471299,548.931932 L221.042341,549.085263 L220.569337,549.152345 L221.825573,547.099636 L222.151122,546.815975 L222.333046,546.976972 L222.639445,547.732123 L222.76775,547.941036 L223.058829,548.015784 L224.004835,547.941036 L225.39512,548.332028 L225.515765,548.640605 L225.57513,549.227093 L225.737904,549.618085 L226.124733,549.324841 L226.674336,548.669354 L227.315859,548.161448 L227.995681,547.785789 L228.721464,547.553877 L229.531506,547.511711 L231.818008,547.941036 L232.478681,547.785789 L233.874711,547.04597 L234.671348,546.815975 L235.47756,546.804475 L237.957477,547.272132 L238.734964,547.795372 L239.437766,548.004284 L239.506706,547.990868 L239.583306,547.768539 L240.761027,545.597 L241.944493,545.821245 L242.103437,545.798246 L242.517076,545.472419 L243.445847,545.133176 L245.094657,544.822682 L245.094657,544.477689 L244.861027,544.251527 L244.594843,544.040698 L245.129126,543.864368 L247.448183,543.657372 L248.260141,543.364128 L248.37121,542.687558 L248.055236,541.911324 L245.230621,538.737388 L244.349724,537.66216 L243.897786,537.583578 L243.229453,537.16192 L242.869434,536.97409 L242.869434,536.627181 L247.480738,539.224212 L248.844213,540.884011 L249.317217,541.142756 L250.516003,541.562498 L251.360515,542.304233 L252.536321,542.929053 L252.76995,543.459959 L253.026559,543.822202 L253.612547,544.184445 L254.278964,544.447023 L254.746223,544.477689 L255.221141,544.029198 L255.355191,543.41396 L255.263271,542.304233 L255.052622,541.957323 L253.781066,540.884011 L254.323009,540.719181 L256.582701,540.535185 L257.241459,540.884011 L257.017405,541.658329 L256.352902,542.637726 L256.010118,543.647789 L256.743561,544.477689 L257.708717,544.356941 L258.202786,543.27213 L258.524505,541.897908 L258.989848,540.884011 L259.677331,540.686599 L260.801432,540.700015 L261.942768,540.916594 L262.674295,541.30567 L262.308531,542.083821 L262.56897,542.152819 L263.015164,541.897908 L263.189428,541.700495 L263.610727,541.932407 L264.315444,542.637726 L264.673548,542.915637 L264.673548,543.264463 L263.633707,543.689955 L263.149213,544.065614 L262.948139,544.650185 L263.208578,544.991345 L266.513857,547.109219 L267.335389,547.385214 L268.032446,546.990388 L268.199051,546.400067 L267.952017,545.326755 L268.155006,544.822682 L268.492045,544.684685 L268.792699,544.880181 L269.091438,545.144675 L269.411242,545.253923 L275.340061,543.264463 L281.536979,543.264463 L286.159773,541.596997 L287.492608,542.127903 L288.461595,541.602747 L289.648891,541.721578 L297.170985,544.477689 L298.710639,544.583103 L299.375142,544.805432 L300.005175,545.428336 L300.340298,545.623832 L301.611854,545.597 L302.015918,545.677498 L303.670472,546.300402 L304.379019,546.413483 L305.727175,546.388567 L307.0715,544.477689 L308.310501,543.657372 L308.381355,543.440793 L308.743289,542.829389 L309.133948,542.304233 L309.319702,542.304233 L310.662112,541.700495 L318.505925,540.021529 L319.96515,539.367959 L323.509803,535.893112 L324.944133,535.415872 L330.118444,537.125504 L331.36702,536.627181 L330.985936,534.407725 L330.890187,532.922339 L331.24829,532.249602 L333.105834,529.549074 L334.519099,528.236183 L335.256371,527.734027 L335.964919,527.548114 L338.335681,527.481032 L339.049973,527.185871 L339.325732,526.90221 L339.637876,526.486302 L339.994065,526.127893 L340.421108,525.976479 L341.206256,526.028228 L341.610319,525.999478 L342.609946,525.230911 L345.022837,524.402927 L346.010974,523.216535 L346.748246,521.380405 L347.046985,519.17245 L346.734841,516.895496 L346.139278,515.360277 L345.876924,514.390463 L345.76777,513.144655 L345.963099,512.937659 L347.24806,512.949159 L347.485519,512.757496 L347.688508,512.477668 L347.864687,512.128842 L347.987247,511.766599 L348.326201,509.869137 L347.435729,509.336315 L335.75427,510.424959 L331.280845,511.810681 L323.576827,510.940532 L323.180424,510.524624 L322.66912,509.57206 L322.276547,508.514081 L322.207607,507.781929 L321.435865,507.74743 L321.2616,508.301336 L321.428205,509.102486 L321.713539,509.788639 L320.233249,509.388064 L317.11564,509.388064 L316.778601,509.2424 L316.514332,508.891657 L316.269213,508.500665 L315.989624,508.167172 L316.642637,507.74743 L317.975472,507.42352 L319.114893,506.313792 L319.679816,506.294626 L320.970521,506.591703 L321.723114,506.493955 L322.088877,506.173879 L322.046748,505.608473 L321.589064,504.788157 L321.062441,504.420164 L315.263841,503.563431 L312.91223,504.207418 L312.737965,504.397164 L312.615406,504.813073 L312.450716,505.211731 L312.155807,505.397644 L309.834835,505.79247 L310.369118,505.493476 L310.903402,505.29223 L311.426195,504.995152 L311.897283,504.420164 L312.132827,503.766594 L312.228577,503.182022 L312.425821,502.754614 L314.926803,502.104877 L315.922599,502.037795 L316.510502,502.595534 L316.98925,502.12596 L317.458424,502.005213 L317.946747,501.980297 L318.482945,501.8078 L319.172343,501.144647 L319.222133,501.039232 L319.457677,501.010483 L319.93834,501.023899 L319.96515,501.039232 L320.960946,500.981733 L323.825776,501.447474 L325.459266,500.922318 L327.519799,499.628594 L329.367767,497.951545 L330.363564,496.282162 L330.225684,496.025333 L329.87524,495.810671 L328.902424,495.889253 L329.457772,495.471428 L329.741191,495.187767 L329.86375,494.87344 L329.86375,493.516467 L329.995885,493.021977 L330.363564,492.70765 L330.072485,491.998498 L329.94035,491.538507 L329.86375,491.08235 L329.94418,490.984602 L330.09738,490.545694 L330.195044,489.980289 L330.133764,489.485799 L329.574586,488.906977 L328.936894,489.025808 L327.895137,489.892124 L326.788271,490.352115 L324.473044,490.865771 L323.440863,491.879667 L323.034884,490.952019 L322.418256,490.647275 L321.765244,490.557194 L321.200321,490.281199 L322.006533,489.815459 L323.676407,489.146556 L324.563049,489.050724 L324.913493,489.140806 L325.719705,489.480049 L326.162068,489.485799 L326.531662,489.299886 L327.10999,488.799646 L327.531288,488.686565 L327.724703,488.372238 L327.883647,487.670752 L327.992802,486.978849 L328.011952,486.662606 L328.276221,486.516942 L329.400322,485.46663 L330.731242,484.811143 L331.280845,484.176739 L331.36702,483.080428 L331.698314,483.850912 L332.88178,485.46663 L333.454363,486.662606 L333.787572,486.952017 L334.467394,487.063181 L337.002845,486.677939 L338.172906,486.191115 L340.032365,484.924224 L342.100558,482.99993 L342.533346,482.070365 L342.477811,480.83989 L342.311207,480.912722 L342.039278,481.503043 L341.662024,481.874869 L340.350254,481.677456 L339.783416,481.430211 L339.318072,481.081385 L342.177157,478.143194 L342.305462,477.035383 L341.579679,477.476208 L335.55128,477.090966 L334.601444,476.642475 L335.522556,476.496811 L337.282434,475.898823 L338.080987,475.848991 L339.094018,476.52556 L339.545956,476.642475 L339.982575,476.588809 L340.744742,476.341564 L341.169871,476.284065 L341.903313,476.473811 L342.033533,476.2074 L342.064173,475.258669 L341.897568,474.996091 L341.51457,474.800595 L339.860015,474.415353 L339.101678,473.859531 L337.812888,472.632889 L337.812888,472.241897 L338.801024,472.439309 L340.604948,473.892113 L341.662024,474.242856 L344.124705,477.418709 L344.532599,477.265379 L344.940493,476.611809 L347.468284,473.803949 L348.349181,472.452726 L348.5943,472.241897 L348.885379,471.850905 L348.988788,471.09767 L349.180288,470.616596 L349.720316,471.028671 L350.329284,470.331019 L353.171134,469.115876 L353.356888,468.803466 L353.425828,467.994649 L353.942876,466.401931 L354.082671,465.338203 L354.726108,463.30466 L354.931013,462.16235 L354.831433,459.50782 L354.915693,457.989851 L355.296776,457.336281 L355.691265,456.897373 L356.832601,454.802499 L358.437365,450.553334 L358.517795,449.995596 L358.48141,449.414857 L359.398692,446.352086 L359.856376,445.779014 L360,445.240442 L359.145913,442.459414 L359.189958,440.330041 L359.124848,439.153231 L358.900794,438.237083 L359.134423,436.977858 L358.663335,435.218394 L358.000747,433.480012 L357.322839,430.662569 L356.464922,429.192516 L355.407846,427.99079 L346.430357,421.073679 L342.039278,418.813975 L330.876782,416.10578 L330.876782,416.514021 L331.34787,416.466106 L331.795979,416.519771 L332.221107,416.686518 L332.606021,416.958679 L330.959126,417.72533 L329.247122,417.288339 L327.600228,416.491022 L326.162068,416.10578 L323.077014,416.10578 L322.303357,415.921783 L321.497145,415.58254 L320.696677,415.385128 L319.96515,415.659205 L320.233249,416.10578 L318.482945,416.032948 L316.531567,416.416273 L314.746793,417.251923 L313.500133,418.562897 L313.004149,419.580626 L312.444971,421.043013 L311.981543,422.662564 L311.784299,424.115368 L311.32087,424.906935 L310.372948,425.982164 L309.643336,427.095725 L309.834835,428.032956 L309.834835,428.433531 L309.300552,428.163286 L308.285606,426.700899 L307.697703,426.359739 L306.253798,426.221742 L305.49163,426.327157 L304.848193,426.812064 L303.969211,425.727252 L302.105922,422.835061 L301.244175,422.244739 L300.753937,422.049243 L299.738991,421.211677 L299.271732,421.008514 L297.395039,421.458922 L296.295833,421.384173 L296.234553,420.652021 L296.719046,419.810622 L297.285884,419.419629 L298.138056,419.080386 L298.894479,418.261986 L301.743989,414.033905 L302.238057,413.654412 L302.908305,413.368835 L306.138898,410.077985 L306.732546,409.700409 L307.452584,409.541329 L307.850902,409.378415 L308.071126,408.954841 L308.823719,405.809654 L308.806484,403.231789 L308.297096,400.960585 L305.344176,392.786167 L305.190977,391.958184 L304.781168,391.009453 L304.21816,390.15847 L303.591957,389.685063 L303.860056,389.274904 L302.816385,388.517836 L302.492751,388.412422 L302.287847,388.170927 L302.180607,387.626604 L302.109752,386.990284 L302.002513,386.539876 L301.41078,385.851807 L300.775002,385.564313 L300.091349,385.409066 L299.390462,385.087072 L295.926239,382.24088 L294.237215,380.109589 L293.722082,379.894927 L292.448611,379.695598 L291.824323,379.247107 L290.713627,377.905467 L289.095458,377.064068 L286.502557,373.000816 L285.811244,371.774174 L284.805873,371.341016 L278.32362,372.552325 L277.323994,373.349643 L276.753326,373.568138 L276.211383,373.209729 L275.824554,372.789987 L274.351924,371.722425 L273.507412,371.494347 L272.413951,371.559512 L271.41624,372.040586 L270.870466,373.000816 L270.588962,372.705656 L270.288309,372.466077 L269.972335,372.291664 L269.639126,372.170916 L272.105637,370.501533 L272.875464,370.256205 L274.972382,370.501533 L275.073877,370.64528 L275.972009,371.525013 L276.224788,371.638094 L277.452298,371.341016 L280.330533,371.341016 L284.880558,369.788548 L286.502557,370.051126 L287.772197,370.98644 L291.215355,375.502016 L291.849218,376.015672 L292.580746,376.416247 L293.415683,376.655826 L294.294665,376.747824 L295.056832,376.552328 L296.460522,375.664929 L297.170985,375.502016 L297.954217,375.79526 L299.522596,376.952903 L300.267529,377.207815 L300.843942,377.650556 L300.679252,378.687451 L299.886445,380.56958 L300.675422,379.925593 L300.878412,379.695598 L301.32269,377.719554 L300.746277,375.709012 L294.287005,366.031957 L290.453188,360.027161 L289.819325,358.177615 L288.783314,354.16228 L287.984762,352.437315 L288.877149,349.993614 L289.991675,348.71139 L293.195458,346.930842 L291.887518,345.742533 L287.458139,343.960069 L286.502557,342.93084 L286.424042,342.681678 L286.169348,341.042961 L285.897419,340.420057 L285.066312,339.992649 L284.633523,339.557575 L284.277335,339.283497 L282.797045,338.894421 L282.517456,338.566678 L281.839548,337.562365 L281.536979,337.232705 L281.632729,336.989293 L281.785928,336.356806 L281.408675,336.216892 L281.123341,335.902565 L280.926096,335.494323 L280.795877,335.084165 L280.784387,333.838357 L280.340108,332.276305 L279.719651,330.800501 L279.179622,329.819188 L278.670234,329.305531 L277.471448,328.418133 L277.09228,327.894893 L276.979295,327.262406 L277.048235,326.769833 L277.009935,326.21401 L276.573317,325.353445 L275.556455,324.320382 L267.413904,319.13782 L259.977985,316.809117 L258.225766,315.626557 L256.697601,315.413812 L255.990968,315.160817 L255.382001,314.624161 L254.746223,313.784678 L254.435994,315.542226 L254.217685,315.868053 L253.781066,315.963884 L253.846176,315.82397 L253.754256,315.51731 L253.612547,315.218316 L253.509137,315.064985 L253.336788,315.02282 L253.281253,315.179983 L253.252528,315.386979 L253.156778,315.486644 L252.80442,315.454061 L252.547811,315.339063 L252.369716,315.086068 L252.277796,314.635661 L253.141458,314.244669 L253.488072,313.936092 L253.781066,313.399436 L253.488072,313.056359 L253.275508,312.650034 L253.133798,312.188127 L253.043794,311.68597 L252.83889,311.314145 L252.78144,311.124398 L252.76995,310.836904 L253.509137,310.836904 L253.509137,310.376913 L251.596059,309.502931 L251.042626,309.088939 L249.77873,307.415723 L249.005073,305.453096 L246.869855,297.633254 L246.965605,297.065932 L246.705166,296.83402 L246.613246,296.276281 L246.576861,294.875226 L246.590266,294.499567 L246.655376,294.215906 L246.622821,293.836414 L246.348977,293.152178 L245.335946,292.086533 L245.213386,291.90637 L244.807408,291.607376 L244.564203,290.880974 L244.401429,290.083656 L244.211845,289.525918 L243.884381,288.960512 L243.292648,287.365878 L243.166258,286.840722 L243.112638,286.664392 L242.978589,286.558977 L242.517076,286.351982 L242.371536,286.229317 L242.247062,285.838325 L241.921513,284.494769 L241.797038,283.128213 L241.630434,282.668223 L241.004231,281.696492 L240.851031,281.046755 L241.015721,280.490933 L241.266585,279.954277 L241.36042,279.32754 L241.13828,278.681636 L240.780177,278.346227 L240.596337,277.949485 L240.887416,277.119585 L240.062054,276.203436 L239.610116,275.505784 L239.410956,274.762132 L239.324782,274.338557 L239.183072,273.945649 L239.114132,273.525907 L239.278822,273.056333 L239.410956,272.784172 L239.516281,272.515844 L239.589051,272.22835 L239.633096,271.937023 L239.527771,270.808129 L238.643044,269.173245 L238.420905,267.795189 L238.42665,267.237451 L238.459205,266.888624 L238.648789,265.851729 L238.708154,265.238408 L238.579849,260.958577 L238.420905,260.191926 L238.166211,259.931265 L237.804277,259.712769 L237.628098,259.408025 L237.924922,258.852203 L237.924922,258.415212 L237.235524,257.752059 L236.91955,257.554646 L236.91955,257.117655 L237.413618,256.707497 L237.036365,256.272422 L236.781671,255.804765 L236.718476,255.344774 L236.91955,254.930782 L236.91955,254.489958 L234.447294,252.701744 L233.669806,252.603996 L232.394421,252.962405 L231.952057,252.701744 L231.952057,252.303085 L232.69316,252.303085 L232.373356,251.392687 L231.934823,250.850281 L231.471394,250.614536 L231.067331,250.560871 L230.931366,250.698868 L230.772422,251.020861 L230.540707,251.325605 L230.203669,251.434853 L230.019829,251.206774 L229.857055,250.750617 L229.657896,250.288709 L228.880408,249.744387 L228.5089,248.94707 L227.980361,247.459767 L223.208198,241.299724 L222.723705,240.33566 L220.661257,236.251326 L219.966114,235.450176 L219.190542,235.130099 L218.899463,234.932686 L218.813288,234.451612 L218.765414,233.861291 L218.573914,233.330385 L218.248365,233.165555 L212.422956,232.019411 L210.867981,231.172262 L208.573819,229.223051 L207.189279,228.776477 L205.714734,227.722332 L205.186196,227.15501 L204.944907,227.452087 L204.575313,227.781747 L204.422114,228.044325 L203.878256,227.647583 L202.955229,227.825829 L202.447756,227.638 L202.63734,227.300673 L202.966719,226.240778 L202.309876,225.82487 L201.270035,224.379732 L200.584467,224.071155 L194.521598,223.628414 L193.780496,223.958074 L192.71576,225.242215 L192.047427,225.83637 L192.214031,226.091281 L192.321271,226.380692 L192.52043,227.15501 L191.622298,227.270007 L190.996096,228.069241 L190.398618,229.077388 L189.557936,229.809539 L186.819495,231.018932 L184.552143,231.250844 L184.100205,231.172262 L183.881895,230.930767 L183.232713,230.010785 L182.976104,229.809539 L176.407677,229.2633 L175.791049,228.722811 L175.40805,228.203405 L175.046116,228.176572 L174.417999,228.483233 L172.71174,228.483233 L166.497586,226.718018 L165.687544,226.706519 L163.642331,227.15501 L163.207628,226.994013 L162.968254,226.610687 L162.797819,226.181363 L162.539295,225.83637 L162.286516,225.80762 L161.595203,225.945617 L161.284974,225.83637 L161.09922,225.357213 L159.856389,223.133924 L159.555736,222.967177 L159.247422,222.463104 L157.079649,220.929802 L157.079649,220.529227 L157.826497,220.554143 L158.320565,220.887636 L159.086562,221.85745 L160.415568,223.149257 L161.692868,224.061572 L163.090813,224.536896 L166.300342,224.479397 L172.150646,226.212029 L173.573487,226.315527 L174.984837,226.066365 L176.415337,225.393629 L177.671572,224.531146 L178.39544,224.199569 L180.928976,224.065405 L181.467089,223.697413 L181.874983,222.744849 L182.378626,220.563726 L182.769284,219.86799 L183.495067,219.609245 L184.084885,219.260419 L186.099458,216.948966 L188.022111,215.57666 L188.29787,214.974839 L188.673209,214.495682 L189.554106,214.250353 L191.28143,214.284853 L193.510482,215.469329 L194.395209,215.618826 L195.210996,215.386914 L197.507073,213.803779 L199.249717,213.40512 L200.105719,212.996879 L200.766391,211.706988 L202.692875,209.811443 L202.692875,209.401285 L201.377274,208.237891 L201.090025,208.069228 L199.851025,206.921168 L199.060132,206.509093 L195.754854,206.246515 L195.51165,205.790357 L195.251211,205.650444 L194.925662,205.592945 L194.521598,205.403199 L194.444999,205.159787 L194.287969,204.266638 L194.15009,204.065392 L193.261533,204.065392 L193.841776,203.398406 L194.322439,202.424759 L194.590538,201.257532 L194.521598,200.007891 L194.086895,199.193324 L192.803849,199.087909 L192.166157,198.451589 L191.539954,198.049097 L190.664802,198.204344 L189.891144,198.698834 L189.557936,199.321738 L189.186427,199.756813 L181.972647,203.438655 L180.567042,203.789398 L179.040792,204.707463 L178.28054,204.914458 L176.7428,204.914458 L176.114683,204.676797 L175.679979,204.065392 L177.244529,204.584798 L178.766948,203.944645 L182.53757,200.080723 L183.789976,199.105159 L185.193666,198.457339 L195.892734,196.883787 L196.346587,197.027534 L196.630006,197.290112 L196.8847,197.460692 L197.233229,197.299695 L197.926456,195.56898 L198.25009,195.057241 L199.6308,194.371088 L200.377648,193.836349 L200.998106,192.45446 L204.383814,190.014593 L204.948737,189.301607 L205.324076,188.165047 L205.971343,187.461644 L206.174333,187.00357 L206.153268,186.616411 L205.923468,185.717513 L205.923468,185.20194 L206.285402,184.230209 L206.781385,183.565139 L207.218004,182.763989 L207.620153,179.873714 L208.129541,178.790819 L208.776808,178.026084 L209.387691,177.479845 L211.400349,176.178455 L211.986337,175.471219 L212.861489,173.911084 L213.832391,172.519612 L215.071391,171.522966 L215.609505,170.783147 L215.829729,169.591005 L215.975268,169.249845 L216.639771,168.379696 L216.81595,168.005953 L216.821695,167.199053 L216.643601,166.712229 L216.427207,166.307821 L216.329542,165.746249 L216.80063,163.36388 L217.913242,160.973845 L221.18022,155.708868 L221.775783,154.45156 L221.668543,153.876572 L220.979146,153.336083 L220.885311,152.090275 L221.08447,150.737135 L221.944302,147.268039 L224.276764,141.067747 L225.205536,139.60536 L228.993393,136.038515 L229.081483,135.108951 L229.71343,133.903392 L231.18606,131.866016 L232.028657,131.137697 L232.271861,130.719873 L231.818008,130.53396 L231.480969,130.257965 L231.440754,129.684893 L231.691618,129.178904 L232.204837,129.121405 L231.18223,127.938845 L230.797317,127.20286 L230.946686,126.36146 L230.946686,125.945552 L230.381763,124.868407 L230.184519,123.680098 L230.060044,122.457289 L229.73641,121.295813 L226.664761,117.834383 L226.253037,116.933567 L225.998343,116.649906 L225.561725,116.628824 L224.958502,117.167396 L224.519968,117.107981 L224.20591,116.730405 L223.889936,116.105584 L223.675456,115.519096 L223.646732,115.254601 L219.648225,115.118521 L219.064153,115.254601 L216.898295,116.902901 L215.963778,117.107981 L215.230336,116.862652 L213.637062,115.867922 L212.869149,115.722259 L212.55509,115.858339 L212.227626,116.134334 L211.965272,116.49466 L211.852288,116.879902 L211.658873,117.203812 L211.22034,117.084981 L210.523282,116.649906 L210.193904,116.770654 L209.571531,117.374392 L209.163637,117.60822 L208.771064,117.504723 L208.445515,117.199979 L208.164011,117.090731 L207.901657,117.60822 L206.197313,116.724655 L205.542385,116.649906 L205.073211,116.958484 L204.816602,117.468307 L204.525523,117.571805 L203.951025,116.649906 L202.817349,116.707405 L199.72272,115.626427 L198.497124,116.226332 L198.112211,115.80659 L197.819217,115.858339 L197.520478,116.082585 L197.112584,116.226332 L196.750651,116.076835 L196.382972,115.409848 L196.132108,115.254601 L190.419683,115.254601 L189.82029,115.480763 L187.583578,117.107981 L186.116693,117.571805 L184.532993,117.516222 L179.781895,115.858339 L177.085584,114.066292 L172.58152,113.878462 L172.139157,114.006876 L171.18166,114.608698 L170.718231,114.794611 L170.273953,114.704529 L169.913934,114.5052 L169.588385,114.560782 L169.236027,115.254601 L169.437101,116.036586 L169.094317,116.895235 L168.517904,117.629303 L167.995111,118.029879 L167.305713,118.169792 L166.585676,118.081628 L165.262416,117.60822 L165.999688,119.409851 L165.450085,119.545931 L164.961762,119.760594 L164.496418,119.808509 L164.0215,119.409851 L164.314494,119.085941 L164.496418,118.771614 L164.762602,118.029879 L162.604405,118.532035 L157.079649,122.679618 L155.967038,123.024611 L152.49324,122.679618 L149.176472,123.212441 L148.16727,123.139609 L149.523086,124.370084 L149.938639,125.115652 L149.283711,125.441479 L148.766663,125.581393 L148.199825,125.951302 L147.675117,126.468792 L146.997209,127.476938 L146.618041,127.672434 L145.798424,127.743349 L145.769699,127.931179 L145.5016,128.37392 L144.913697,129.121405 L144.155359,129.51048 L143.502347,129.468314 L142.192491,129.121405 L142.615705,128.586666 L143.017853,127.902429 L143.676611,126.36146 L143.232333,126.024134 L142.740179,125.90722 L141.702253,125.945552 L141.702253,125.441479 L143.676611,125.441479 L144.511548,125.70214 L144.756667,125.604392 L144.421543,124.981488 L145.032426,124.176505 L145.729484,123.766346 L147.407018,123.601516 L147.265308,123.459686 L147.138919,123.275689 L147.027849,123.024611 L146.91295,122.679618 L148.18259,120.632659 L149.243497,119.793176 L150.289083,118.484119 L151.041675,117.079231 L150.861666,116.226332 L150.312063,116.31833 L148.739853,117.322643 L148.280255,117.824799 L147.700012,118.286707 L146.911035,118.30779 L145.086046,117.903381 L144.611128,117.291977 L144.193659,117.107981 L143.896835,117.14248 L142.353351,117.94938 L140.959235,119.409851 L139.310426,120.425664 L138.873808,121.042818 L138.498469,121.707888 L137.994826,122.395957 L137.460543,122.924946 L136.374742,123.392604 L135.880673,123.775929 L135.700664,123.72418 L135.999403,122.679618 L136.290482,122.006882 L136.617946,121.562224 L138.967642,119.162606 L139.478946,118.951777 L140.030464,118.507119 L140.273668,117.571805 L140.537937,116.78982 L141.150735,116.768737 L141.824812,116.891402 L144.184084,116.226332 L145.103281,116.165 L145.583944,115.954171 L148.379835,113.405055 L149.65139,112.931648 L150.612717,113.878462 L150.168438,114.934524 L150.340788,115.601511 L150.913371,115.871756 L151.629578,115.722259 L152.096837,115.233518 L153.052418,113.767298 L153.88161,113.098395 L158.795483,106.601026 L159.086562,106.006871 L159.178482,104.89906 L158.942938,104.237824 L158.494829,104.168825 L157.949056,104.801312 L156.920705,106.313532 L155.628084,107.54209 L154.283759,108.159244 L153.109868,107.820001 L153.598191,106.938352 L152.958584,106.077787 L151.796183,105.811375 L149.760545,107.452009 L148.485159,107.105099 L146.168017,105.502798 L146.372922,106.639359 L145.786934,106.654692 L144.925187,106.033704 L144.304729,105.267053 L143.670866,104.657565 L142.912529,104.799396 L141.455219,105.502798 L140.068764,105.192304 L138.914023,104.214824 L137.004774,101.324549 L137.734387,101.581377 L138.425699,102.215781 L139.590015,103.848748 L140.388567,104.417987 L143.305102,103.641752 L144.316219,103.925413 L146.390157,105.004475 L147.407018,105.035141 L147.700012,104.784063 L148.326215,103.906247 L148.665169,103.641752 L149.216687,103.634086 L150.292913,104.059577 L150.861666,104.06341 L150.704636,103.294843 L150.875071,102.59144 L151.629578,101.324549 L150.861666,100.002076 L150.612717,99.6954153 L150.061199,99.4251708 L148.935183,99.3734218 L148.395155,98.9517636 L148.079181,98.3499425 L147.981516,97.796037 L148.146205,97.5219592 L149.182217,98.1467799 L150.116733,98.2675275 L150.612717,98.5416053 L150.371428,98.9517636 L150.536117,99.1261768 L151.129765,99.4635033 L151.15466,98.7486011 L151.284879,98.1774459 L151.529999,97.7768707 L151.878527,97.564125 L154.193754,95.9349912 L155.34275,95.66283 L156.248542,95.1549236 L156.568346,94.8137638 L156.767505,94.3154406 L157.127524,92.9316351 L157.441583,92.2090664 L158.104171,91.5286635 L160.787076,90.1544412 L168.738128,83.5689074 L170.252888,81.8439422 L170.928881,80.7035486 L171.210385,79.5650716 L171.535934,78.9268345 L173.452842,76.9680406 L174.726312,76.17264 L177.893711,75.0322464 L179.410386,74.1505975 L180.770031,72.5732127 L182.68694,69.7653527 L184.261064,66.6604153 L184.590443,64.2224645 L184.965782,64.1093835 L185.291331,63.7164748 L185.454105,63.0954873 L185.33346,62.2847536 L185.053871,61.9129278 L184.705343,61.9953428 L184.305109,62.2330047 L183.855086,62.2847536 L183.087173,61.8132632 L182.704175,60.9833632 L182.704175,59.8659691 L183.110153,58.5109131 L183.374422,58.0566723 L184.324259,57.1424408 L184.651723,56.554036 L185.193666,55.3005613 L185.601559,54.7255729 L185.775824,53.694427 L186.463306,52.2703724 L186.693106,51.0073146 L185.473255,50.4572423 L183.087173,50.9498157 L181.884557,50.9459825 L180.000204,49.5640937 L178.542894,49.7078408 L176.172132,50.4572423 L175.055691,50.4572423 L174.791422,50.1889144 L174.655458,49.5775101 L174.563538,48.9373564 L174.417999,48.5655305 L173.816691,48.4581994 L173.272833,48.820442 Z M67.895525,60.8781165 L66.1207309,63.2374757 L59.7192713,68.2279127 L58.8118577,69.4563868 L58.4915941,69.752981 L56.2154349,70.9814551 L55.254644,71.2703953 L54.0231542,71.2703953 L53.7276729,71.4847086 L53.5046322,71.827227 L53.2320268,72.0013566 L52.795477,71.7411191 L52.0253193,72.8413879 L49.0857568,75.4935143 L49.478461,75.4628981 L49.7129398,75.6140655 L49.8806969,75.9317084 L50.0675173,76.4292213 L49.8254133,76.4521834 L49.6557498,76.5918697 L49.5089623,76.7602587 L49.3316735,76.899945 L49.478461,77.2979553 L49.6557498,77.6423873 L50.0675173,78.2604514 L50.1304262,78.4422349 L50.2695884,79.0622125 L50.33631,79.2401691 L50.5536317,79.3014014 L51.0854981,79.1521475 L51.2990072,79.2401691 L51.464858,79.6305253 L51.666929,80.692524 L51.8137165,81.1096694 L52.1149168,81.4808906 L53.0185177,82.0415493 L52.0348509,83.4900772 L51.6135518,82.4893109 L50.7423585,81.6320579 L49.8158816,81.1613342 L49.207762,81.3488583 L48.8531845,81.639712 L47.2499601,82.0415493 L47.1355802,82.2558626 L47.0898283,82.7361538 L46.9621041,83.2298397 L46.6075265,83.4900772 L46.8134103,84.1502385 L47.3548083,85.3480965 L47.6102566,85.7786365 L47.5263781,86.6952083 L47.5397224,87.0817376 L47.6102566,87.6883206 L47.1317675,87.0071106 L46.5865569,85.7135771 L46.2110097,84.2841843 L46.2548553,83.2298397 L45.8049612,82.7093647 L45.0557731,81.5421229 L44.819388,80.5700593 L45.8888397,80.6408592 L45.8888397,80.1739625 L43.9176934,79.2573907 L43.6527134,79.4927525 L43.3686701,79.4430012 L41.9713295,78.6756833 L41.4394631,78.2604514 L40.7455586,79.1004827 L40.5339559,79.5635524 L40.4557963,80.4074108 L40.6083028,81.2340476 L40.9857563,81.6014418 L41.9332028,82.0415493 L41.1897337,82.3687597 L38.4865564,82.5562838 L38.4865564,82.9791698 L38.6810021,83.0882399 L38.9383568,83.369526 L39.2014305,83.4900772 L39.0355797,83.8517308 L38.9421695,84.0966602 L38.8049136,84.2593087 L38.4865564,84.3760329 L38.513245,85.0591563 L38.1071965,85.6523448 L37.994723,86.5210788 L38.1643864,86.896127 L38.4751184,87.0434673 L38.6771895,87.334321 L38.4865564,88.1533038 L38.7744123,88.5073033 L39.8305197,90.7346302 L40.1221884,90.700187 L41.6853798,89.5520804 L41.51381,90.0572473 L41.2907693,90.4629117 L41.0105386,90.7614194 L40.678837,90.9891272 L41.6853798,90.9891272 L41.6853798,91.4177537 L41.271706,91.3105971 L40.9037841,91.3947916 L40.6197408,91.7200885 L40.4557963,92.3477201 L41.51381,92.3649417 L44.9070792,91.4177537 L42.7224239,92.676844 L41.5462177,93.103557 L40.4557963,93.275773 L40.5320495,93.4843457 L40.5453939,93.5647132 L40.5720825,93.6335996 L40.678837,93.7809399 L40.678837,94.2076529 L39.9658692,94.1751232 L39.4930991,94.5769605 L39.0698937,95.1471869 L38.4865564,95.6427862 L40.183191,96.9554548 L40.4901103,96.9611954 L40.949536,96.5708391 L41.2469237,97.6538864 L42.2000892,98.023194 L44.2760837,97.9198644 L44.8212943,98.1456587 L45.7649282,99.1330305 L46.2548553,99.3588248 L48.3441941,99.3588248 L48.3441941,99.823808 L48.0639634,99.8792998 L47.3853096,100.328975 L47.4901578,100.550942 L47.6102566,100.744207 L47.8866746,101.059936 L46.8134103,100.809266 L45.7344269,101.058023 L43.8967238,102.142983 L43.8967238,102.60414 L45.6448293,103.951251 L43.9100681,103.897673 L43.0922521,104.163651 L42.6442643,104.921402 L39.6970766,107.701733 L39.5541017,106.857875 L39.3558433,106.293389 L39.0584557,105.985314 L38.6123742,105.891552 L38.0461939,106.056114 L38.0652572,106.479 L38.3245182,106.995648 L38.4865564,107.491247 L38.8849795,107.784014 L41.0601032,110.556692 L41.4108681,110.767178 L43.2409459,112.954321 L43.5059259,113.069132 L44.1674228,112.357306 L46.3711415,110.820756 L47.1165169,110.051525 L46.9506661,109.919493 L46.7752836,109.724314 L46.6075265,109.592282 L47.5530667,108.803916 L47.9495836,108.363808 L48.3441941,107.701733 L48.1039964,107.443409 L47.8047024,106.970772 L47.6102566,106.811951 L47.854267,106.310611 L49.5337446,107.569701 L50.33631,107.701733 L50.33631,107.280761 L50.0675173,107.280761 L50.0675173,106.811951 L50.7080445,106.892318 L51.3523844,106.762199 L51.8480305,106.423508 L52.0348509,105.891552 L51.8899698,105.506936 L51.0511841,103.951251 L50.7309205,103.733111 L49.9626691,103.396333 L49.5547143,103.109307 L49.8501956,102.634756 L50.0293907,102.202302 L50.2219301,101.863611 L50.5593507,101.637817 L51.8137165,102.376432 L54.7628106,103.109307 L54.6141168,101.674173 L54.5168939,101.216844 L54.3529495,101.058023 L54.0669998,100.95278 L53.7562679,100.763342 L53.5122575,100.328975 L53.7734248,100.283051 L53.9507136,100.13571 L54.1032201,99.9596673 L54.2957595,99.823808 L53.9564326,99.3492572 L53.5980424,98.7158851 L53.1824622,98.1647939 L52.6715655,97.9198644 L52.2731423,97.5046325 L51.5201416,95.4552621 L51.0511841,94.7166469 L51.7546203,94.2612312 L52.7764137,93.2853405 L53.619012,92.1908122 L53.7791438,91.4177537 L53.7791438,90.9891272 L57.2448536,90.9891272 L57.2448536,91.4177537 L55.8970776,91.5076887 L54.5855218,91.9382287 L53.5484778,92.931341 L53.0185177,94.7166469 L53.0795203,95.68297 L53.3635637,96.6033688 L54.3453241,98.6450851 L54.5721775,99.4698084 L54.7628106,99.823808 L55.1173882,100.158672 L56.2630931,100.757601 L56.5071035,100.328975 L56.2344982,99.8620782 L55.8894523,99.0430955 L55.6969128,98.2662099 L55.8818269,97.9198644 L56.2230602,98.0691183 L56.4194123,98.4384259 L56.7301442,99.3588248 L57.178132,100.087873 L57.7347807,100.608348 L58.4058092,100.748034 L59.2102809,100.328975 L59.2102809,99.823808 L59.0482428,99.6764676 L58.8747666,99.4812895 L58.7184475,99.3588248 L58.7184475,98.8479173 L59.3761317,99.0316144 L59.8374638,99.2975924 L60.2873579,99.3396897 L60.9355105,98.8479173 L61.2386171,98.4001557 L61.8219544,97.3171084 L62.165094,97.0396493 L62.165094,96.5708391 L61.6522909,95.8743211 L60.3750492,95.4877918 L59.8164942,94.9252196 L59.0425238,94.5865281 L58.7317918,94.2861069 L58.9453009,93.7809399 L59.1454657,93.8058156 L59.9041854,94.1215449 L63.282204,94.7166469 L64.1286149,94.4831985 L64.7005143,93.8938371 L65.2075983,93.1322597 L65.8729078,92.3477201 L65.419201,92.3993849 L64.9654943,92.3381526 L64.5384761,92.1755041 L64.1572099,91.8827369 L64.4946305,91.8176775 L64.8110815,91.6512021 L65.1122818,91.37757 L65.3810744,90.9891272 L65.0341222,90.598771 L64.889241,90.4858738 L64.934993,89.5884371 L64.7405472,88.7235301 L64.3802506,88.0346661 L63.9036679,87.6883206 L63.4194598,87.768688 L62.3137878,88.453725 L57.6318388,89.5941776 L56.2630931,89.5520804 L56.2630931,89.0851837 L56.8426178,89.1368485 L58.7184475,88.6240275 L59.7021143,87.6883206 L60.0414412,87.7418989 L60.5904646,88.1303416 L60.9355105,88.1533038 L61.4692832,87.8050448 L62.6740844,86.2876304 L64.4984432,85.8723985 L65.1351577,85.35001 L64.9788386,84.8314485 L64.9502436,84.4946705 L65.0779678,84.2191249 L65.3810744,83.9129632 L64.9902766,83.1399047 L64.1572099,80.6408592 L64.7119522,80.6542538 L65.7852166,81.3679934 L66.3876172,81.5765661 L67.9946543,81.3679934 L68.6027739,81.5765661 L69.6607876,82.3170949 L70.1545273,82.4012894 L70.8122115,82.0415493 L70.9437484,81.8521117 L71.2849816,81.1900369 L71.5385236,80.8743075 L71.8549746,80.6446862 L72.8024211,80.1739625 L72.628945,79.4927525 L72.5317221,79.2401691 L72.6842286,79.0143747 L72.8577047,78.5972293 L73.0292745,78.2604514 L72.8024211,78.2604514 L72.8024211,77.8394789 L73.1398417,77.326658 L72.7604818,77.2826472 L72.093266,77.514182 L71.5518679,77.8394789 L69.8056687,79.745336 L68.8105639,80.1950111 L67.371284,80.2945137 L66.0482903,79.8735412 L65.3810744,78.7694453 L66.3742729,78.7464832 L66.7765087,78.5972293 L67.1024913,78.2604514 L67.1539623,77.7514574 L67.0433951,77.1467879 L67.1196483,76.641621 L68.1852874,76.2129945 L68.5284269,75.2351903 L68.9592578,75.0208771 L69.4244025,74.9252015 L69.6912889,74.6362613 L69.7465725,74.1827592 L69.559752,73.5742627 L70.1507146,72.8930527 L71.765377,71.6626651 L72.5317221,71.2703953 L72.5317221,70.7594879 L72.0055747,70.778623 L71.5194603,70.6006664 L71.1172245,70.2638885 L70.8122115,69.8161269 L71.6395592,66.9630818 L71.9064455,66.5727256 L72.5584107,66.2455152 L72.4459372,65.5202945 L71.7977846,64.406631 L71.6243085,63.3121026 L71.1744144,61.9822124 L70.5357935,60.7479978 L69.8056687,59.9309285 L68.9382881,59.8601286 L67.895525,60.8781165 Z M46.5435356,77.5720573 L46.7023764,78.2493172 L47.106891,78.8084311 L47.6130638,79.0347391 L47.6130638,79.4074817 L47.4838732,79.425786 L47.0645335,79.4074817 L47.0645335,79.8135048 L50.3430079,79.8135048 L50.1651062,79.2826795 L49.9151967,78.8467038 L49.6102223,78.4872734 L49.252301,78.1860841 L48.8393149,78.3940878 L47.5495274,77.2325953 L46.7913273,76.9630225 L46.5435356,77.5720573 Z M41.3311881,100.15532 L39.8944591,101.641436 L39.9421666,101.883002 L39.9770297,101.910057 L39.9733599,102.054997 L39.8944591,102.617363 L40.3733688,102.574848 L40.7311748,102.362269 L40.973382,101.906192 L41.0999903,101.131247 L42.3257055,101.983493 L42.7440633,101.720669 L42.731219,100.242284 L42.1036822,99.766881 L41.3311881,100.15532 Z M35.9071477,113.221604 L34.1952507,114.857889 L35.1515223,114.969453 L36.3212475,114.500881 L37.0448549,113.77385 L36.6734458,113.069132 L35.9071477,113.221604 Z M67.2183293,115.230489 L67.1022889,115.327169 L66.8302597,115.441251 L66.3699026,115.230489 L66.1054826,115.700352 L65.8962294,116.527931 L65.578545,117.343909 L65.3407572,117.604944 L63.9026169,118.554339 L63.6572199,118.62975 L63.5754209,118.863715 L63.6153693,119.670024 L63.796088,120.124419 L64.098554,120.518872 L64.2887842,121.064146 L64.1346977,121.994206 L64.3877039,122.276511 L64.7358252,122.466003 L65.1486247,122.533679 L65.578545,122.460202 L65.1296017,123.844657 L64.6483193,124.525282 L64.5132558,125.209775 L65.1105787,126.632901 L66.347075,128.139172 L66.8454781,128.993822 L66.8302597,129.920014 L66.9843462,130.179116 L67.1669672,130.629643 L67.341979,130.850073 L67.341979,131.310269 L64.6083709,127.603566 L64.1346977,127.354133 L63.7066798,128.68638 L62.9324428,129.69185 L62.5767124,129.587435 L63.3947022,127.568762 L62.7859656,127.603566 L62.2818555,127.87427 L61.8081823,127.930344 L61.2945608,127.354133 L60.8893704,126.716046 L60.5013008,126.367999 L58.8291773,125.410869 L58.5799758,125.209775 L58.2394637,124.782451 L58.1386417,124.35706 L58.0872795,123.732508 L57.9484115,123.169832 L57.1570538,122.626492 L56.7461566,122.015475 L56.2363396,121.495338 L55.4982465,121.487604 L55.4982465,121.994206 L55.9129483,122.582019 L55.8330516,123.566219 L55.4544935,124.565888 L54.9827226,125.246513 L55.8787069,125.488213 L56.9763351,126.221046 L57.8875378,127.303859 L58.2394637,128.531692 L57.1779792,128.028957 L56.5388057,127.947746 L56.257265,128.278391 L56.1849775,128.520091 L55.8520746,128.657376 L55.7645687,128.959017 L55.829247,129.216185 L56.1583453,129.699584 L56.257265,129.920014 L56.3523801,130.074701 L56.9687259,130.850073 L56.8032257,130.97189 L56.6548461,131.174917 L56.5007596,131.310269 L56.5007596,131.727926 L56.7062083,132.580641 L56.2287304,132.47236 L55.5781431,131.952223 L55.2509472,131.519097 L55.0264755,130.900347 L53.1279781,128.036692 L52.7855637,127.812395 L52.4127125,128.003821 L51.9257232,128.742454 L51.6632055,129.604838 L51.7297861,130.416948 L52.0512752,131.14398 L52.547776,131.727926 L50.3430079,131.727926 L50.7272729,133.249665 L52.2186777,134.402088 L52.547776,136.159726 L52.8274144,137.136192 L53.5046339,137.95797 L54.3435491,138.532248 L57.6478478,139.688538 L58.2394637,139.166467 L58.3136535,138.402697 L57.91417,137.174864 L57.9731414,136.397559 L58.3117512,135.860019 L58.7378668,135.682128 L59.1468618,135.39789 L59.4455232,134.506502 L59.7822307,135.026639 L59.9096849,135.629921 L59.8716389,136.262207 L59.6890179,136.861622 L60.1626911,136.530977 L60.874152,135.61832 L61.4067966,135.4733 L61.2317848,136.225469 L61.3040723,136.776543 L61.54186,137.140059 L61.8747629,137.323751 L61.7739409,137.582853 L61.667412,137.6834 L61.4067966,137.780079 L62.1068438,138.184201 L62.3902868,138.244142 L62.3902868,138.746877 L61.8747629,139.166467 L62.3275108,139.174202 L63.1017477,138.833889 L63.5050358,138.746877 L63.9140307,138.830022 L64.1556231,139.036917 L64.6197848,139.628597 L66.8702081,141.548657 L67.341979,142.436177 L66.3794141,142.209947 L65.6318094,141.515786 L64.9907337,140.709477 L64.3515602,140.127464 L63.5487887,139.978578 L62.8373277,140.299554 L61.1861296,141.515786 L61.2945608,141.99145 L61.4258196,142.215748 L61.5818084,142.37817 L61.7663317,142.664342 L61.8747629,142.962115 L62.0535793,143.596335 L62.1467921,143.820632 L63.8474501,146.135146 L64.4466753,146.324638 L66.0940688,146.160282 L65.8753041,146.711357 L65.5956657,147.074873 L65.2551536,147.312705 L64.8651817,147.496397 L65.4035332,148.743566 L66.0940688,149.837981 L66.6571502,149.383586 L67.2639846,149.056808 L67.8993535,148.890519 L68.5708661,148.921457 L68.5708661,149.339113 L67.480847,150.806712 L67.0737544,151.177963 L67.0737544,151.678764 L72.1490962,150.317513 L72.771149,149.884387 L72.2480159,149.339113 L72.2480159,148.921457 L72.6037464,148.967863 L72.9233332,149.130285 L73.21819,149.422258 L73.4750008,149.837981 L73.7679553,149.513137 L73.9734039,149.371984 L74.169341,149.470598 L74.4603932,149.837981 L74.5193646,150.851185 L74.6658418,152.210503 L74.8712905,153.417066 L75.327843,153.933336 L75.8623898,153.635563 L76.1914881,152.970406 L76.4939541,152.212436 L76.9333859,151.678764 L76.6879889,151.177963 L77.047524,150.797044 L77.2910187,150.329114 L77.6714791,149.339113 L77.2434611,148.281437 L77.08557,147.751631 L76.9333859,147.042002 L77.3556969,147.266299 L77.8236632,147.86378 L78.6720899,149.339113 L78.7538889,149.712297 L78.7653027,150.189895 L78.810958,150.582415 L79.0068951,150.758372 L82.0772106,150.702298 L83.0835284,150.39679 L84.0708231,149.837981 L84.0708231,150.298177 L80.6143403,152.094487 L80.2110523,152.498608 L79.887661,152.943335 L79.2294644,154.229176 L78.9821652,154.546286 L78.8756363,154.84406 L78.7234521,155.476345 L78.6207278,155.658103 L78.4057677,155.803123 L78.4057677,156.265252 L78.5027851,156.851132 L77.5345133,158.309063 L77.4241798,159.467287 L77.7665942,160.349006 L78.2745088,160.57717 L80.1882247,160.190451 L80.8540304,159.720588 L81.4323302,159.119239 L83.5457878,156.091229 L83.8254262,155.574959 L84.1716452,155.238513 L84.9287614,154.803454 L85.6915845,154.180837 L86.0359012,153.260445 L86.1005794,151.775444 L86.3516833,151.324916 L87.7784098,151.177963 L88.3129567,150.882123 L89.6255451,149.75677 L90.3541268,148.739699 L90.626156,148.190558 L90.7669263,147.538936 L90.6052307,146.808037 L90.5995238,146.372978 L91.1873351,144.700418 L88.5107961,144.700418 L87.911571,143.845769 L86.8576956,143.834167 L85.8532802,144.215085 L84.8298417,145.266961 L83.3346323,145.203153 L83.1386951,145.464188 L82.923735,145.897313 L82.6003437,146.21829 L82.0867221,146.160282 L81.852739,145.787098 L81.6092443,145.152879 L81.2725368,144.547664 L80.7360877,144.278894 L79.8286896,144.37364 L79.3512118,144.315632 L79.0068951,144.046862 L78.2098306,143.205748 L77.4812489,143.300495 L76.6879889,143.71235 L75.7083034,143.820632 L75.7083034,143.356569 L76.6157014,142.919576 L77.0399148,142.302759 L76.8877306,141.751685 L76.0602292,141.515786 L72.9880114,141.935376 L73.4730985,141.471313 L74.6829626,140.724945 L74.9530895,140.127464 L74.717204,139.63053 L74.1731456,139.133596 L73.6557195,138.439436 L73.4750008,137.323751 L73.6918632,136.909962 L74.0761282,136.35502 L74.2758699,135.711132 L73.9638924,135.009237 L73.4217363,134.827479 L72.7977812,135.057577 L72.1985561,135.504238 L71.7591243,135.937363 L72.0863203,135.312812 L73.0317644,134.363416 L73.2334084,133.854881 L73.299989,132.944157 L73.6252826,131.397281 L73.7223,130.384077 L73.6595241,129.45015 L73.3114028,127.425676 L72.9880114,122.694167 L72.8244135,122.127624 L72.4458554,121.470201 L71.7591243,120.559478 L70.1535814,119.161488 L70.0318341,118.838578 L69.1529705,117.30717 L68.8124585,116.83924 L67.971641,116.118009 L67.6539565,115.690684 L67.341979,114.969453 L67.2183293,115.230489 Z M34.7642284,116.084764 L33.089359,117.364203 L32.3330272,117.705893 L32.8290753,118.09504 L33.0610673,118.16148 L33.0610673,118.618964 L32.3103939,118.529745 L30.363924,117.705893 L30.7090829,116.844075 L30.8750609,116.568825 L31.0938502,116.339133 L31.0938502,115.919614 L30.2639599,116.760551 L29.141722,118.402561 L28.0817258,119.480782 L27.4442192,118.618964 L28.1383092,118.203242 L28.415568,118.16148 L28.415568,117.705893 L25.988139,118.134904 L25.2299211,117.705893 L24.6471118,118.81069 L24.1623805,120.131891 L23.6040907,121.278451 L22.7968338,121.853629 L22.7968338,122.311114 L24.4170059,123.508927 L24.9922707,123.74811 L25.4336214,124.029055 L25.7184247,124.095494 L25.9636195,123.95692 L26.2012699,123.65889 L26.4483509,123.224185 L27.5441832,123.50513 L29.6943534,124.936431 L30.8694026,125.046531 L30.1866293,125.513507 L29.8773065,125.545778 L30.1621098,125.866587 L30.3299739,126.22726 L30.4525714,126.595525 L30.8637443,127.377616 L30.9995445,127.540867 L31.339045,127.772457 L31.9671211,127.930014 L33.2157287,127.823711 L33.7909935,128.271704 L34.3794611,127.793338 L35.1169318,127.664255 L36.6013037,127.772457 L37.3217993,126.377223 L37.4406245,125.957704 L37.3067104,125.507813 L37.0784906,125.283816 L36.4673896,125.046531 L35.7525523,124.92694 L33.6570794,125.545778 L31.0938502,125.545778 L31.0938502,125.046531 L32.5951971,123.806956 L33.0610673,123.679772 L33.2327037,123.894277 L33.5401403,124.765586 L33.7909935,125.046531 L34.0116689,125.018057 L34.5228058,124.68396 L34.7849757,124.590945 L36.871018,124.39732 L37.7367444,123.772787 L38.4364928,122.311114 L37.2935076,122.707854 L36.7182428,122.688871 L36.4673896,122.081422 L36.3523366,121.17974 L36.0392417,120.862728 L35.0094233,120.940557 L35.0094233,120.445107 L35.2263264,120.027486 L35.1848319,119.752236 L34.9358648,119.611763 L34.5209197,119.5719 L34.5209197,119.072653 L36.1128001,119.072653 L36.9257153,119.877522 L37.3180271,120.031283 L37.5537914,120.270466 L37.8235057,120.792492 L38.1818674,121.25757 L38.6816877,121.35628 L38.9193381,121.071539 L39.5285529,119.947758 L39.8944591,119.5719 L39.5719336,118.748047 L38.9117936,118.357002 L38.1290562,118.343714 L37.6028303,118.309545 L37.1313018,117.960262 L36.0543306,118.529745 L35.4715213,118.16148 L36.0995973,117.734367 L36.3183866,117.168681 L36.1863586,116.546046 L35.7374634,115.919614 L34.7642284,116.084764 Z M79.9304485,123.568181 L79.6777836,123.844591 L79.4308179,124.226474 L79.5087071,124.47197 L79.5201055,124.528344 L79.6777836,124.7011 L79.2598417,125.504872 L79.1648549,126.352288 L79.3890237,127.028767 L79.9437467,127.321543 L79.9532454,126.288641 L80.4129815,123.828225 L80.1755145,123.5209 L79.9304485,123.568181 Z M79.2634593,129.19601 L79.2634593,129.686809 L78.4486788,129.232295 L78.046607,129.272399 L77.5956058,129.686809 L77.9232199,130.399136 L78.1380837,130.746706 L78.4125136,131.06372 L78.4125136,131.518234 L77.2616096,131.655734 L76.6085089,132.182817 L76.3085505,133.296186 L75.9894459,137.593063 L76.0575216,138.712161 L76.4957586,139.277439 L76.3659894,139.54862 L76.3042958,139.747231 L76.200055,140.226572 L76.8893209,140.623794 L77.5339123,140.396537 L78.1678668,139.966849 L78.829477,139.733863 L79.5123609,139.233516 L79.2826055,138.133515 L78.7294909,137.031605 L78.4125136,136.542716 L78.3784758,134.491673 L78.9635009,132.175179 L79.6187291,130.208164 L79.7889182,129.19601 L79.5974554,128.819795 L79.3549359,128.542885 L79.0528502,128.359551 L78.6933257,128.271704 L79.2634593,129.19601 Z M31.1606167,129.612865 L30.7063639,129.696786 L30.2501531,129.546109 L29.8174382,129.221865 L28.9480923,129.267641 L28.2197214,129.900869 L27.7282669,130.940356 L27.5461741,132.193462 L27.9671412,132.971646 L30.8473389,134.699674 L31.8204581,134.92283 L35.0256816,133.995874 L35.0765892,133.540026 L34.7809333,133.087993 L34.2464031,132.870559 L33.3888051,132.878188 L33.0735693,132.632144 L32.8699387,131.966491 L33.5728558,131.920716 L34.4069579,131.165419 L34.9121184,131.46296 L35.1451187,131.05098 L34.1308819,130.257537 L33.8802596,130.137376 L33.5297801,130.213669 L33.2184603,130.373883 L32.9130144,130.415844 L32.5977786,130.137376 L32.7446276,130.02103 L32.7935773,130.024845 L32.8092412,129.973347 L32.8699387,129.679621 L32.4626776,129.740655 L32.1004501,129.700601 L31.8047942,129.540387 L31.5835418,129.221865 L31.1606167,129.612865 Z M29.0291591,134.940324 L27.3609943,135.776154 L26.6419245,136.318472 L27.6161481,139.389663 L28.0452705,141.450082 L27.7765858,142.388934 L27.3088038,142.534718 L27.1232374,142.933196 L27.0420521,143.526052 L26.8719495,144.241367 L26.3925696,145.528158 L26.108421,146.00633 L25.646438,146.558367 L26.1238849,146.694433 L26.5201465,147.05209 L27.1425672,147.946235 L27.1425672,148.403026 L26.926073,149.190261 L27.0633149,150.28656 L28.0124098,153.837868 L28.3274861,154.555127 L29.386761,155.826367 L30.5310872,155.132433 L33.5465414,155.764165 L34.3951211,154.862246 L34.3951211,154.438499 L33.6625204,154.366579 L33.2063363,153.802879 L32.7849459,153.089508 L32.1528603,152.558853 L31.5980941,152.494707 L30.2836653,152.679368 L29.6361159,152.558853 L29.6361159,152.098174 L31.0452608,152.022366 L31.7430678,152.1526 L32.3809524,152.558853 L32.7868789,151.75801 L32.8661312,150.409019 L32.7018276,148.984219 L32.3809524,147.946235 L31.7314699,147.281458 L29.386761,146.558367 L29.386761,146.132677 L32.195386,146.890756 L32.8989919,146.558367 L33.1657437,146.016049 L33.5446084,144.622351 L33.7591696,144.008112 L34.1902249,143.481345 L34.6193472,143.250034 L34.9614853,142.874882 L35.1451187,141.885492 L34.5439609,141.934087 L34.1457663,141.545328 L33.8055612,140.98746 L33.3745059,140.540388 L32.8062087,140.357671 L31.6773464,140.340177 L31.134178,140.068046 L30.668329,139.243879 L30.5175563,139.101982 L29.6361159,138.680179 L29.3461683,138.612146 L29.0175612,138.65491 L28.7488765,138.520788 L28.6386964,137.941538 L28.5555781,137.642194 L28.3622798,137.303975 L28.1167909,137.000743 L27.8944978,136.784982 L28.7218147,136.314585 L29.4466835,137.053225 L30.1676863,138.133974 L31.6831454,139.043668 L32.3538906,139.723995 L33.1348159,140.104979 L34.1457663,139.566548 L34.1457663,139.101982 L33.3358462,138.973692 L32.189587,137.871562 L31.3796669,137.708283 L31.3796669,137.249548 L32.0890719,137.517792 L32.3442257,137.49641 L32.6496371,137.249548 L29.386761,134.92283 L29.0291591,134.940324 Z M78.8390501,141.179109 L79.0368683,142.143918 L79.7718649,143.066779 L80.6211186,143.474277 L81.6886544,142.9689 L81.56246,141.894226 L80.7132063,140.891464 L79.6098587,140.623794 L78.8390501,141.179109 Z M58.6196916,157.079629 L57.4950064,157.811252 L56.9920844,158.284432 L57.8343065,158.50867 L58.8832089,158.558079 L59.9355559,158.356645 L60.7915567,157.837857 L60.4023089,157.495799 L59.6083122,157.26586 L59.232843,156.895297 L58.6196916,157.079629 Z M65.9580048,158.8594 L64.8412937,159.758983 L62.6912929,162.239422 L63.3586653,162.591351 L64.4867521,163.765702 L65.0233043,164.014122 L65.5295214,164.367933 L66.1172642,165.924324 L66.7580933,166.278135 L68.1269651,166.142633 L69.116648,165.544166 L69.8086676,164.198556 L70.2902375,161.832916 L69.3346816,161.832916 L69.3346816,161.34925 L70.0134296,160.762074 L69.2266127,159.870019 L67.3591076,158.676849 L65.9580048,158.8594 Z M26.4113809,160.436493 L25.7372544,161.001085 L24.8595456,161.183636 L23.9741544,161.832916 L24.3467485,162.307173 L24.433175,163.039261 L24.2564808,163.714889 L23.835872,164.014122 L23.2270455,164.2983 L22.8160397,164.923115 L22.7968338,165.553576 L23.3538044,165.83399 L25.7046044,166.278135 L26.2750191,166.19721 L26.8435132,165.935616 L27.1469662,165.51029 L26.9453044,164.900531 L27.2122662,164.761265 L27.4945926,164.544839 L27.786522,164.230549 L28.080372,163.816515 L28.3953485,163.573741 L29.4459103,163.613262 L29.1386162,163.308383 L28.9868897,162.805896 L28.8831779,162.26577 L28.7064838,161.832916 L28.3799838,161.541211 L27.2141867,160.946507 L27.4408162,160.684913 L27.959375,159.56514 L27.8076485,159.367533 L27.6501603,159.226385 L27.4619426,159.147342 L27.2141867,159.119112 L26.9837162,158.769066 L26.8607985,158.678731 L26.6956279,158.676849 L26.4113809,160.436493 Z M61.2816161,182.601597 L60.6624876,182.809848 L59.5270827,183.744166 L58.6276322,184.102509 L57.3994589,184.969286 L56.9598172,185.494605 L55.237551,188.123077 L54.2332319,189.044262 L53.1926121,189.226248 L53.4043662,189.84725 L53.7673731,190.625848 L54.1061795,190.982315 L54.2574324,190.321914 L54.444986,189.729053 L54.8906778,189.723425 L55.8163454,190.102405 L56.4516075,189.89603 L58.4400787,188.385737 L59.8457221,186.597776 L60.3357814,186.539615 L60.6947549,186.36701 L60.9891938,186.089342 L61.2816161,185.71599 L61.5498378,185.218812 L62.0761978,183.914895 L62.4351713,183.28076 L62.6912929,182.612854 L62.3161857,182.430868 L61.2816161,182.601597 Z M73.2172404,185.425801 L71.8083033,185.870707 L70.7530189,186.704666 L70.6641329,187.989309 L70.3993662,188.276283 L70.100558,188.276283 L69.7866204,188.012421 L69.4670091,187.498178 L68.8977607,188.035533 L68.3190563,188.314803 L67.0065699,188.441919 L67.2183833,189.237358 L67.9521653,190.075168 L68.2452999,190.689563 L66.5394458,191.999244 L67.0349378,192.51156 L67.6306629,192.975727 L68.3114916,193.297369 L71.6588992,193.896355 L72.3926812,194.329706 L72.8276551,194.822762 L73.1529399,195.425601 L73.7392091,196.777654 L74.0682763,197.11663 L74.3878875,196.99144 L74.6923692,196.696762 L74.9665919,196.53883 L75.7249594,196.409788 L78.0227562,195.184851 L78.3574969,195.583533 L78.506901,196.128591 L78.4766419,196.764172 L78.2723933,197.438272 L77.843093,197.783027 L75.711721,198.821141 L74.4446232,198.682469 L74.0985353,198.821141 L73.7959448,199.22175 L73.6351936,199.685916 L73.5255045,200.159713 L73.0073182,201.513692 L72.736878,201.829556 L72.2621891,201.95282 L71.8612566,202.149272 L71.5208423,202.632699 L71.3657647,203.291391 L71.5284071,203.99053 L72.2300388,204.62611 L73.1207897,204.687742 L74.8569028,204.237058 L76.9447774,203.048715 L77.6615387,202.852263 L77.8790257,203.179683 L77.1963058,203.905786 L75.5906848,205.090277 L73.1264633,205.621853 L72.5156086,206.207357 L71.953925,206.502036 L70.3426305,206.136095 L69.6863873,206.428848 L69.8849623,206.569446 L70.0097809,206.70234 L70.1610761,206.810196 L70.4409724,206.881458 L70.4409724,207.330216 L69.7904028,207.788605 L69.2911284,207.226212 L68.8183307,206.272842 L68.2452999,205.581407 L67.5361034,205.458143 L66.6396789,205.635335 L65.8642907,206.172689 L65.5408971,207.1068 L65.7546017,208.312477 L66.2746791,209.31785 L66.9214664,210.051657 L67.9029944,210.639087 L68.6462323,210.901023 L69.0906622,210.935691 L69.4613356,210.733461 L69.6788225,210.273147 L69.8433561,209.812832 L70.0551695,209.599046 L73.3723181,209.599046 L73.7524474,209.410298 L74.5997009,208.79783 L74.9665919,208.666861 L75.3750891,208.838276 L75.8214101,209.13488 L76.2639487,209.265848 L76.6743371,208.909538 L77.287083,208.214251 L80.1314339,206.717748 L81.3342312,206.428848 L81.6708632,206.224691 L81.9205003,205.768229 L82.115293,205.304063 L82.2968473,205.090277 L83.1705774,204.764782 L83.6112249,204.730114 L83.9024683,205.090277 L83.8570797,205.689263 L83.5299037,206.24973 L83.1384272,206.681154 L82.9058107,206.881458 L84.0480899,207.661489 L85.4532447,207.314808 L88.6323364,205.090277 L89.2469734,204.329506 L89.4871546,203.609181 L88.906559,203.299095 L87.5543576,203.495547 L86.9151351,203.782522 L86.3439955,204.237058 L86.3439955,203.749779 L87.5146426,202.692405 L87.9477253,201.922004 L87.8323627,201.059155 L88.1046941,201.030265 L88.3448754,201.057229 L88.5699271,201.184345 L88.787414,201.469394 L88.7193311,202.170458 L89.2318438,202.436246 L90.4024909,202.407356 L90.8563767,201.99134 L90.59161,201.082267 L90.0790973,200.159713 L89.7575949,199.720584 L90.4138381,199.824588 L90.7050814,199.936296 L91.0038896,200.159713 L91.1873351,198.861588 L90.8128793,198.605429 L90.2890195,198.738323 L90.026144,198.595799 L89.857828,197.794583 L89.4587867,197.026108 L88.9746419,196.425196 L88.5604711,196.084293 L88.3278547,196.074663 L87.6659379,196.188297 L87.31985,196.084293 L87.0153683,195.805023 L86.2229593,194.535788 L85.971431,194.329706 L85.6215607,194.262296 L85.2660168,194.335484 L84.7156803,194.71298 L84.4528048,194.466452 L84.1918204,194.071622 L83.9024683,193.844353 L80.3356825,193.844353 L79.9612267,193.709533 L79.8685584,193.382113 L79.864776,192.950689 L79.7569781,192.486522 L78.3045436,188.927271 L77.4270311,187.596404 L76.3187933,187.498178 L76.3887673,187.205426 L76.4814357,186.485101 L76.5419538,186.186571 L74.8625764,185.635735 L74.3689756,185.28135 L73.2172404,185.425801 Z M48.9864945,192.617451 L48.1627868,192.812362 L46.8143753,193.664404 L46.0003129,193.955844 L43.5369061,194.349379 L42.7440633,194.780041 L43.1105843,195.836276 L43.3227807,196.820116 L43.6449333,197.564492 L45.9270087,198.583601 L46.6870575,198.546475 L46.4787193,197.417844 L47.1384571,196.311489 L47.9255126,195.979211 L48.7357169,195.821426 L49.4610427,195.216272 L49.5247016,194.154468 L51.7276856,193.885304 L52.2427441,193.088951 L51.7855574,191.978883 L50.8596096,191.932476 L48.9864945,192.617451 Z M70.5952232,194.806208 L70.1355627,195.001511 L69.7243896,195.359565 L69.3403694,195.872621 L70.3062383,196.567028 L71.2216803,196.68328 L73.1398417,196.596479 L72.7558215,195.979572 L71.6483694,195.246413 L71.1150081,194.782958 L70.5952232,194.806208 Z M96.5515125,200.800374 L96.0618519,200.895632 L94.9647174,200.856883 L94.4069461,201.486556 L94.2062956,201.841757 L94.0369393,202.360026 L94.9647174,202.384244 L95.7231392,202.07748 L96.3508621,201.433276 L96.8865435,200.483923 L96.5515125,200.800374 Z M93.6317055,206.399056 L92.9330824,206.259677 L92.5554045,206.580929 L92.1372032,207.731661 L92.3349573,208.652926 L92.9039056,209.03537 L93.6009077,208.583236 L93.4047746,207.831946 L93.5717309,207.340718 L93.8602574,206.873287 L94.0369393,206.184887 L93.6317055,206.399056 Z M92.8310276,211.286346 L92.6627192,211.318395 L92.4997824,211.165691 L92.324312,210.935691 L91.907122,211.429624 L91.534695,212.958553 L91.1873351,213.55806 L91.8337109,215.296251 L92.1739087,215.686495 L92.4926203,213.693797 L92.8274466,212.760603 L93.0870712,211.846262 L93.0154507,210.935691 L92.8310276,211.286346 Z M88.4075741,215.779394 L87.7989402,216.441296 L87.3878628,217.586817 L88.2958249,217.457715 L89.4652003,217.064262 L90.237467,216.340883 L89.9660761,215.256839 L89.6827121,214.736334 L88.4075741,215.779394 Z M88.1501773,218.313595 L86.3237988,220.16924 L83.6050283,222.881918 L82.5197889,223.221711 L81.7881031,223.784256 L80.6915198,225.143426 L79.6875788,226.785757 L79.2470548,228.239315 L79.7802212,229.264356 L80.9883535,229.224713 L82.3023629,228.849053 L83.1512697,228.875482 L81.9809505,229.879758 L79.1808816,230.41965 L78.1296741,231.297448 L77.5511319,231.931727 L76.942339,232.262081 L76.407282,232.696261 L76.0594004,233.685435 L75.9894459,234.795424 L76.301405,237.838455 L76.8610406,239.448695 L78.1429088,240.294401 L79.5363259,240.390675 L80.4457338,239.743182 L80.6858478,238.778548 L81.0394014,236.337705 L81.2984219,235.852556 L81.8920895,235.533529 L82.7712468,234.408438 L83.1512697,234.550018 L83.9321127,232.003461 L86.9420449,226.030663 L88.3713846,222.47983 L89.0841638,221.741725 L89.6267835,220.790306 L90.1883098,220.223985 L90.237467,219.440574 L90.137262,218.564664 L90.0011344,217.953038 L89.2354167,217.586817 L88.1501773,218.313595 Z M72.9893202,219.743583 L72.4078434,219.824282 L72.5016893,220.21702 L72.5568928,220.383798 L72.6636196,220.607963 L72.3765614,220.850062 L71.8355672,220.620517 L71.5761108,220.835715 L71.3663375,221.187206 L70.6376514,222.119732 L70.3248317,222.85858 L70.1445002,223.658401 L69.8850438,224.363176 L69.3403694,224.784606 L70.0598549,225.157616 L71.0203956,225.188103 L71.9717358,224.920898 L72.6636196,224.413389 L72.5679335,223.337397 L72.9672388,222.123319 L74.0897098,220.233159 L73.9277795,219.506865 L73.5303144,219.487138 L72.9893202,219.743583 Z M73.417959,231.2934 L72.9471057,231.736798 L72.4216334,232.088391 L71.9131119,232.234888 L71.4610927,232.518115 L70.5758885,233.785804 L69.3008177,234.561262 L68.1575859,235.766445 L67.3948035,237.217743 L67.6622482,238.508871 L67.6622482,238.956175 L67.2215295,238.821398 L66.9522014,238.340888 L66.690407,237.170864 L66.690407,236.754812 L67.1273588,234.897229 L67.3966869,234.47727 L66.9314839,234.260455 L66.5322003,234.596421 L66.1103157,235.084745 L64.1666332,235.993027 L62.880262,236.965768 L62.6147007,237.487298 L62.5186467,238.305728 L62.4734447,239.340975 L62.3265385,239.956262 L62.0364929,240.364501 L61.567523,240.792273 L62.7597236,241.681022 L61.1738896,244.15194 L60.7915567,245.218439 L60.9817815,245.333683 L61.1249209,245.583705 L61.3038451,245.696996 L60.8461757,246.863113 L60.8085074,247.921799 L61.252993,248.558573 L62.2493186,248.37887 L62.7032212,247.853434 L63.8276189,246.081795 L64.9670839,245.249692 L65.4680718,244.181239 L66.3024238,241.909557 L67.0294214,241.26497 L68.0313972,241.096987 L69.0540906,241.27669 L69.8244066,241.681022 L68.2065546,243.312023 L67.3025163,244.523066 L67.15561,245.696996 L67.4531893,245.728249 L68.8619824,246.452921 L69.3008177,247.013517 L70.0673669,249.310592 L68.1387518,250.468896 L67.3627855,251.396711 L67.15561,252.875355 L67.6509477,254.33056 L68.5003671,254.643087 L69.4062889,254.287587 L70.304677,253.527755 L70.6474582,253.131237 L70.7981312,252.875355 L71.0618091,251.490469 L71.5194785,251.24826 L73.0280925,251.490469 L74.0319518,251.160362 L74.9736584,250.613439 L75.7929431,249.834075 L76.4295368,248.818361 L76.6517796,249.310592 L76.8175199,248.779296 L77.0981485,248.400356 L77.4635307,248.111269 L77.8891821,247.890546 L77.8891821,247.486214 L77.6857734,246.951011 L77.5727686,246.298611 L77.5558179,245.552452 L77.6443383,244.80434 L77.0661305,244.517206 L76.8307038,244.271091 L76.6517796,243.915591 L76.6988649,243.513212 L76.8627218,242.915504 L76.9550091,242.370535 L76.7836185,242.13028 L76.4464875,241.909557 L75.9115982,241.374355 L75.4106102,240.710234 L75.1977845,240.094946 L75.0828963,238.122119 L74.5950923,234.47727 L74.4481861,231.674292 L74.3257642,231.271913 L74.0978712,231.016032 L73.7343725,230.889068 L73.417959,231.2934 Z M107.381075,233.402627 L107.335092,234.38009 L107.754453,235.461618 L108.034027,236.41864 L108.258422,236.885072 L109.459486,237.717589 L109.52938,238.522231 L109.932187,240.26717 L110.290851,241.309674 L112.566067,243.476446 L112.970713,244.578416 L113.309145,245.10803 L113.746899,245.141479 L113.984169,244.736371 L113.917954,244.216048 L113.647577,243.740324 L113.277877,243.476446 L113.643898,242.627205 L113.862775,242.302004 L113.912436,241.932203 L113.548254,239.986567 L113.309145,239.131752 L112.985428,238.317818 L112.566067,237.485302 L112.264422,237.206557 L111.942544,237.087627 L111.699756,236.781008 L111.497433,235.370561 L111.263841,235.177299 L110.954839,235.117833 L110.643997,234.922712 L109.586398,233.724112 L108.510406,232.789389 L107.381075,233.402627 Z M104.189817,245.207004 L104.263581,245.416684 L104.355786,245.888463 L104.425862,246.100015 L103.245634,246.313439 L102.172365,247.28508 L101.333297,248.629278 L100.855674,249.984708 L100.686016,252.001003 L100.990293,253.506205 L101.643107,254.754923 L102.504304,255.988663 L102.342023,256.290078 L102.277479,256.488525 L102.203715,256.651401 L102.026681,256.81615 L102.026681,257.229893 L102.164989,257.709161 L102.485863,259.371622 L102.504304,259.790982 L102.504304,260.199108 L103.933486,261.483397 L105.382953,262.410107 L106.978104,262.988598 L108.849871,263.194534 L110.445023,262.881886 L111.341258,262.488737 L111.824414,261.912117 L111.730364,260.886184 L111.370764,259.927648 L111.302532,259.109522 L112.084433,258.542264 L110.657095,257.890759 L110.373103,257.656741 L110.181316,256.836743 L110.50219,256.60647 L111.007475,256.587749 L111.344946,256.389302 L111.261962,254.975835 L109.753483,253.38826 L110.157342,252.545796 L109.46027,249.45302 L108.975271,248.129416 L108.254225,246.955584 L107.63645,246.358371 L105.382953,245.207004 L105.091584,245.141479 L104.189817,245.207004 Z M69.5422389,271.792301 L69.1457095,271.968675 L68.7654018,272.230563 L68.3905013,272.576184 L69.1709432,272.695548 L70.0144693,272.602907 L70.8597978,272.690203 L71.6438445,273.349377 L71.5158737,273.618391 L71.4780232,273.837522 L71.4618015,274.115444 L71.4113341,274.596463 L71.6582638,274.206303 L71.9808945,273.550692 L72.1899736,272.807785 L72.1070629,272.180679 L71.7501865,272.007869 L69.9946428,271.745981 L69.5422389,271.792301 Z M60.9353306,275.646562 L60.1503097,276.052082 L59.4460996,276.686307 L58.8900431,277.453143 L58.2820366,277.92593 L55.7653517,278.112353 L51.6189785,280.047701 L46.920397,280.280251 L46.1988704,279.99581 L44.6346006,278.927237 L44.051607,278.975284 L43.8322629,279.861278 L43.6052226,282.73451 L43.1857751,283.341829 L42.7644035,283.795396 L42.3334116,284.831298 L42.0486491,285.995966 L42.0698138,286.80124 L41.532998,287.189463 L40.7402807,288.217676 L40.3285295,288.538633 L39.0778833,288.711603 L37.8253131,288.538633 L36.2418026,287.702608 L35.5933906,287.621889 L33.9329173,288.117738 L33.3576201,288.096597 L33.7116491,286.91271 L33.4134181,286.972288 L32.9843503,287.168322 L32.6630304,287.560388 L32.3840401,288.010112 L32.0858091,288.340678 L29.7653794,288.701994 L29.3324634,289.040247 L28.9668899,289.45922 L27.9394359,291.054393 L28.0875894,291.613664 L27.9933099,291.715525 L27.8028269,291.790479 L27.6527494,292.234436 L27.860549,293.848828 L27.8162954,294.371583 L27.508444,294.877042 L26.7869174,295.171092 L26.4867623,295.56508 L26.3520773,296.312697 L26.5079271,297.911714 L26.5079271,298.565158 L26.126961,299.927781 L25.557436,301.030949 L22.9195345,304.317389 L22.6867219,305.172632 L22.6136072,306.729367 L22.7367478,307.192544 L22.931079,307.417405 L22.9272308,307.550016 L22.4558334,307.755659 L22.0748673,307.728752 L21.3918221,307.365514 L20.3008738,307.690315 L19.0540758,307.350139 L18.4056638,307.728752 L17.1415491,308.985672 L15.8947511,309.694851 L14.6633456,309.783258 L13.4608012,309.147111 L12.4218028,308.238055 L11.9234684,308.21307 L10.6805185,309.475755 L8.87573983,310.37328 L9.47220186,310.876816 L9.6953941,310.997896 L9.4164038,311.93578 L9.71463481,312.585381 L10.3168691,312.973603 L10.9460403,313.150418 L11.2500435,313.354139 L11.615617,314.142115 L11.9042277,314.457306 L12.2063068,314.470759 L12.7719837,314.042177 L13.0452018,313.955692 L13.5473844,314.249742 L14.7095233,315.30294 L15.2809724,315.520114 L15.8909029,315.22222 L16.4508076,314.810935 L16.841394,314.90703 L16.9395217,316.165871 L15.432974,316.66172 L11.8137963,320.119208 L10.422693,320.666948 L8.99503223,320.599682 L6.23783839,319.955847 L5.47205811,320.818778 L4.73513889,321.90657 L4.29067848,322.827158 L4.10211951,323.088536 L3.68652016,323.486368 L2.78990305,324.009123 L0.860059766,324.576082 L0,325.0604 L0.457928914,325.488982 L0.573373178,325.96369 L0.648411949,326.472993 L1.00051695,326.986138 L1.868273,327.95093 L3.41330207,330.128436 L4.26758962,331.025961 L5.17959931,331.510279 L6.23783839,331.519888 L7.00939089,333.46869 L7.48271237,334.360449 L8.10803547,335.058097 L8.71411786,335.296412 L10.1398545,335.519351 L10.6708981,335.922949 L10.9133311,336.908881 L11.0557123,339.657191 L11.5386542,340.610451 L12.2467123,341.046721 L14.241974,341.321552 L16.4027058,341.165878 L17.0511178,341.300411 L19.6717026,343.2569 L19.92568,343.65281 L19.9834021,344.20055 L20.1026945,344.729071 L20.5336864,345.034653 L24.4126137,345.953318 L25.1957106,345.789957 L26.6907138,344.607992 L27.5969513,344.684868 L27.1948204,345.219155 L27.3218091,345.307562 L27.6873826,345.253749 L27.9856136,345.338312 L28.2549836,345.874521 L28.3242502,346.149352 L28.4839481,346.193555 L29.0207639,346.06671 L30.7870611,346.664419 L31.3931435,346.602919 L30.5619448,344.857838 L30.5619448,344.45424 L30.8216944,344.121753 L31.9280353,343.477918 L32.0511758,343.635513 L31.947276,344.077549 L31.893402,344.629133 L31.9010983,345.338312 L31.8606928,345.901427 L31.9915296,346.141664 L32.489864,345.886052 L32.8304246,345.507439 L33.0901742,344.969308 L33.1883018,344.344692 L33.0247558,343.718155 L33.7366621,343.356838 L33.6924084,343.03396 L33.3537719,342.743754 L33.1767574,342.503517 L33.382633,341.880823 L33.6192937,341.475303 L33.9136766,341.165878 L34.3273519,340.85261 L36.3187654,340.327932 L37.0980142,339.807099 L36.8632775,338.786573 L37.3673842,338.092769 L36.0724843,336.995367 L36.2918284,336.134358 L35.0719674,335.530883 L34.9853842,334.860142 L35.1604747,334.815938 L35.4298446,334.902423 L35.629948,334.656421 L35.6761257,334.660264 L35.9570401,334.081774 L35.9474197,334.051024 L35.8512162,333.951085 L35.710759,333.635895 L35.6222517,333.249594 L35.6761257,332.957466 L35.9262549,332.822933 L36.5631225,332.945934 L36.8575053,332.932481 L38.0523535,332.025347 L39.8186507,329.22899 L40.882662,328.179635 L42.0217121,328.079697 L43.2511935,328.704312 L45.5062048,330.599301 L45.7601822,331.01443 L46.0930464,332.06955 L46.3835812,332.242521 L46.8184212,332.286724 L47.0454616,332.526961 L47.8189382,334.660264 L47.8805085,335.559711 L47.5899737,336.186249 L46.9550303,336.528346 L48.2422338,337.193322 L48.5693259,337.566169 L48.734796,338.092769 L48.8598606,338.690478 L49.0715085,339.320859 L49.6737427,340.302948 L50.3818009,341.13705 L51.1591256,341.79626 L51.9479947,342.297874 L52.3828348,342.340156 L52.6752936,342.021122 L52.9504357,341.621367 L53.3390981,341.386896 L53.77009,341.444553 L54.1587524,341.663649 L54.9226086,342.317093 L55.746111,343.295338 L55.9558347,344.398505 L55.6133501,345.534345 L54.7956199,346.589466 L55.1823582,347.300567 L55.1361805,347.998214 L54.5743517,349.447323 L55.1284842,349.906656 L56.1001401,351.090543 L56.613867,351.373062 L56.8139704,351.251982 L57.2007087,350.654273 L57.3892677,350.442865 L57.6798024,350.381364 L58.2339349,350.617757 L58.5206215,350.654273 L61.6279962,349.503058 L62.6323613,349.447323 L62.6573743,349.558793 L62.8016796,349.822093 L63.0171755,350.096924 L63.2499881,350.258363 L63.5097377,350.258363 L64.4467603,349.916265 L65.2991238,349.779811 L65.5319364,349.558793 L65.683938,349.041803 L65.6608492,348.528657 L65.5954308,348.059715 L65.6416085,347.671492 L66.1226262,346.845078 L66.4227813,346.895047 L66.7017716,347.321707 L67.1327636,347.627289 L67.6137813,347.523506 L68.1332805,347.256363 L68.6758685,347.183331 L69.2319251,347.650351 L69.4570414,347.223691 L70.2343661,347.544647 L71.3214663,347.621523 L72.2911981,347.967464 L72.7067974,349.105226 L73.1724226,349.13982 L75.9604016,350.181487 L75.6679428,350.248753 L74.9444921,350.598538 L74.9444921,350.994448 L75.5755874,351.455703 L76.1508846,351.559486 L77.568925,351.438406 L78.0537909,351.213544 L79.6007441,350.029657 L80.7244016,348.838082 L82.2424936,348.059715 L82.9082222,347.223691 L83.2891883,346.237759 L83.6028119,345.01159 L83.822156,343.73353 L83.9202836,342.547721 L83.8433208,340.18379 L84.0607408,339.440017 L84.7784193,339.16903 L85.4960978,339.028731 L87.0642157,338.448319 L88.6092448,338.292646 L90.7218748,338.471382 L91.1624871,338.932637 L91.2817795,339.430407 L91.5607698,339.491908 L91.8820897,339.338156 L92.134143,339.16903 L92.3842722,337.892892 L92.5458942,337.827547 L92.9595695,337.937095 L93.1269636,337.892892 L94.3314321,336.649426 L95.2953917,335.221458 L95.7417762,333.439861 L95.3877471,331.072087 L94.3295081,329.932403 L92.7825549,330.370595 L91.1009168,331.366137 L89.6309265,331.913877 L90.0253611,331.26812 L91.3548942,330.186093 L91.6415808,329.605681 L92.6517181,326.351913 L92.3842722,325.96369 L92.568983,325.562014 L92.6132367,325.3852 L92.6517181,325.127666 L92.189941,324.964305 L91.9648247,324.422331 L91.9590525,323.70162 L92.134143,322.954003 L91.0297262,322.335153 L91.2606147,322.048791 L92.0610283,321.895039 L92.6517181,321.677865 L92.243815,321.312705 L90.8931171,321.21661 L90.6256713,321.010967 L90.2985792,320.691933 L89.8926002,320.42479 L89.3865695,320.395961 L89.7348264,320.021192 L90.0446018,319.496514 L90.1485016,318.869977 L89.8791317,318.260736 L89.8791317,317.841763 L90.9739281,317.893654 L91.9552044,318.456769 L94.4853578,320.872591 L95.1106809,321.935399 L95.4954951,323.372976 L95.6340282,325.306402 L95.4550896,326.251975 L94.6161947,327.326314 L94.3718376,328.056634 L94.4314838,328.75236 L94.6950816,329.45193 L95.0760476,329.995826 L95.5070396,330.232219 L95.8764612,331.446856 L96.2170218,332.321318 L96.6480137,332.76912 L97.144424,332.66726 L97.6004289,331.790875 L98.1372447,331.494904 L97.6138974,330.808787 L97.8024563,330.31486 L98.2853982,329.890122 L98.631731,329.409648 L98.7702641,328.379512 L98.5162867,327.345533 L98.7471752,326.590228 L99.445613,325.49667 L99.6283998,325.127666 L99.6399442,324.793256 L99.5283481,324.545332 L99.4917907,324.201313 L99.7361478,323.611291 L99.5091074,323.44793 L98.3585129,321.677865 L98.2045872,320.813012 L97.9910153,318.343377 L97.738962,317.841763 L97.1271074,317.484291 L96.6980395,316.569469 L96.1285145,314.38043 L96.034235,313.750049 L96.007298,313.211918 L95.8899297,312.850602 L95.5070396,312.704538 L95.1607068,312.510427 L94.7104741,311.637886 L94.5065226,311.422634 L90.1485016,312.149111 L89.346164,312.070313 L88.7747149,311.620589 L88.2109621,311.401493 L87.424017,311.76281 L86.177219,312.704538 L84.8996358,313.332998 L84.5456067,313.750049 L83.7374968,315.047328 L83.3372901,315.435551 L83.1410348,315.827617 L82.8697408,316.133198 L82.4098878,316.088995 L82.3175324,315.787257 L82.2828991,315.22222 L82.1308975,314.676402 L81.6864371,314.38043 L83.0198183,311.918483 L83.7182561,310.978677 L84.6648991,310.10998 L85.6442513,309.573771 L87.8107553,308.928015 L88.8843869,308.391806 L89.698269,307.484672 L90.2196923,306.09322 L90.3178199,304.33853 L89.8791317,302.347447 L89.1980105,301.328843 L88.072429,300.319848 L86.9795566,300.02772 L86.4061834,301.096293 L88.722765,303.569772 L89.3865695,304.918942 L89.155681,304.918942 L88.2956212,303.617819 L87.2181414,303.179627 L86.2965114,302.599215 L85.907849,300.867588 L85.8077973,299.950844 L85.5518959,299.182086 L85.2248038,298.544017 L84.8919395,298.053934 L84.6052529,297.723368 L84.0299556,297.231363 L83.8009912,296.952688 L83.5816471,296.479902 L83.3372901,295.465142 L83.1775922,295.044247 L82.4406729,293.943001 L81.576765,293.133883 L80.6051092,292.634191 L79.5430219,292.453532 L79.4718313,292.017262 L80.1279395,289.678316 L80.1991302,288.538633 L79.9297602,287.942845 L79.4564387,287.543091 L78.9157748,287.304776 L78.434757,287.231744 L77.757484,287.275948 L77.0705906,287.179853 L76.7896762,286.624425 L77.324568,285.252193 L77.5650769,284.210526 L77.6959137,280.672317 L77.3264921,279.99581 L75.9834905,278.492889 L75.6871835,278.327606 L75.375484,277.847132 L74.6501092,277.506957 L73.2262966,277.249423 L72.5182385,277.376268 L71.1329073,277.977821 L70.3286456,278.112353 L69.7475761,277.94707 L66.2169057,275.936768 L65.2952757,275.698453 L63.923413,276.611354 L63.0498847,276.348054 L61.7415164,275.546624 L60.9353306,275.646562 Z M136.989433,328.022144 L136.317788,328.396938 L134.97639,328.724882 L133.065512,329.907825 L131.7979,331.153234 L130.954087,332.857374 L129.385654,336.806373 L128.884285,337.505207 L127.788841,338.516369 L127.041518,339.506059 L126.180677,340.130716 L125.387946,340.318112 L125.317944,340.575783 L125.357675,341.011091 L125.23659,341.61037 L124.909281,342.531738 L124.767384,343.349647 L124.752248,345.237281 L124.426832,346.34995 L123.221654,348.108748 L123.261385,349.319019 L123.000295,349.393197 L122.847047,349.488848 L122.724069,349.594258 L122.532982,349.707477 L122.532982,350.177922 L123.388147,350.462921 L124.124118,349.953436 L124.824143,349.229225 L125.588494,348.848575 L126.122026,349.061348 L126.791779,349.97686 L127.31396,350.177922 L127.785057,349.998333 L128.210748,349.73871 L128.587247,349.808984 L128.901312,350.609325 L129.368626,348.916897 L129.656204,348.475733 L130.059191,348.255151 L130.622994,348.108748 L131.122471,347.860837 L131.34383,347.370872 L131.856551,346.705223 L133.814728,345.348548 L133.77878,344.569679 L134.800438,343.572181 L136.026427,342.881155 L136.807805,341.957835 L136.508876,340.243935 L137.48891,339.652463 L137.706485,339.424073 L137.916493,338.961437 L138.107581,338.389486 L138.325156,337.876097 L138.595706,337.661371 L139.095183,336.564319 L139.303298,336.369114 L139.630607,336.136819 L139.579524,335.60391 L139.360057,335.037815 L139.172753,334.680589 L138.898419,334.48148 L138.247585,334.393638 L137.97136,334.212097 L137.776488,333.790454 L137.541885,332.746107 L137.350797,332.279567 L137.277011,331.422617 L138.014875,329.046971 L138.219206,328.137315 L137.630807,327.805466 L136.989433,328.022144 Z M121.149024,350.326177 L121.052137,350.635929 L121.289604,351.061601 L121.559367,351.008392 L121.713245,351.200325 L121.861425,350.846865 L122.11409,350.128543 L121.779736,350.018325 L121.149024,350.326177 Z M135.374284,388.636967 L130.765806,390.220129 L130.131926,390.70414 L130.503117,391.612385 L130.581162,392.495562 L130.406036,394.514527 L130.415554,395.854718 L130.345123,396.770676 L130.131926,397.381958 L130.131926,397.846686 L130.779131,398.654658 L131.974556,401.041934 L132.703613,401.747704 L132.819729,402.195077 L132.863511,402.636666 L132.852089,402.814072 L132.878739,402.976052 L132.833054,403.479347 L132.852089,403.647112 L132.958688,403.681822 L133.24993,403.602761 L133.347011,403.647112 L134.540532,404.698054 L134.574796,404.890887 L135.103981,404.669129 L135.893951,403.502487 L136.436461,403.232521 L136.819074,403.492846 L136.630623,404.063632 L136.217554,404.624777 L135.935829,404.890887 L135.855881,405.120359 L135.796871,405.642937 L135.770221,406.198297 L135.82352,406.547325 L136.046235,406.624459 L136.335574,406.502974 L136.550674,406.304355 L136.558288,406.15973 L137.485314,406.580107 L137.925032,406.66881 L138.303837,406.547325 L140.597607,405.15314 L141.159152,404.428087 L142.425008,403.502487 L142.581099,403.571907 L142.687697,403.515986 L142.718154,403.018476 L142.723865,402.578816 L142.748611,402.341631 L142.811428,402.171937 L142.948483,401.988746 L143.635662,401.196201 L144.482739,400.515499 L145.398343,400.054628 L146.281587,399.873364 L147.141988,399.381639 L148.39452,396.99822 L149.129288,396.174821 L148.689569,395.837363 L148.194648,395.727448 L147.141988,395.7718 L146.985898,395.69081 L146.527144,395.382277 L146.281587,395.309 L146.076004,395.449768 L145.758113,396.043695 L145.548723,396.174821 L145.097583,396.240385 L144.279059,396.506495 L143.814595,396.556631 L143.363455,396.452501 L143.209268,396.122756 L143.142644,395.592465 L142.948483,394.900193 L142.375516,394.196352 L142.341252,394.067153 L142.217522,393.910958 L142.223233,393.536862 L142.265111,393.13384 L142.230847,392.813737 L142.040493,392.800238 L141.518922,392.50906 L141.071589,392.15039 L141.107756,391.98841 L140.987833,391.656737 L140.892656,390.92397 L140.721337,390.196989 L140.365375,389.867244 L138.996727,389.078556 L138.315258,389.047702 L135.82352,388.615756 L135.374284,388.636967 Z M126.332454,396.073857 L126.332454,396.446994 L126.934927,397.446788 L127.157378,397.56462 L128.180655,397.496777 L128.484672,397.56462 L128.825765,397.964538 L129.53761,399.253557 L130.25687,399.871287 L130.610938,400.017685 L130.903833,399.871287 L131.081794,399.278552 L130.889003,398.835786 L130.579424,398.491215 L130.41444,398.176994 L130.292091,397.427149 L129.963975,396.754074 L129.487558,396.150627 L128.962943,395.645374 L128.708978,395.427562 L128.076845,395.513259 L127.674578,395.490049 L127.264897,395.266881 L126.332454,396.073857 Z M122.176781,429.606641 L122.131187,430.148233 L122.355356,429.760568 L122.492137,429.739664 L122.729604,429.648449 L122.934776,429.118259 L122.868285,428.89022 L122.431346,428.797105 L122.176781,429.606641 Z M102.259947,481.237428 L102.375831,481.573785 L102.252348,481.769518 L102.23715,482.225595 L102.470818,482.311109 L102.486016,482.463135 L102.52781,482.474537 L102.698786,482.408026 L102.841266,482.062167 L102.824169,481.568084 L102.934354,481.142412 L102.765277,481.009389 L102.565805,480.988486 L102.259947,481.237428 Z M103.870923,489.036347 L103.705646,489.203576 L103.870923,489.532331 L104.066596,489.576039 L104.220475,489.64255 L104.197678,489.743267 L104.220475,489.796476 L104.552929,489.716662 L104.628918,489.547534 L104.913879,489.576039 L105.26533,489.317595 L104.923377,489.157968 L104.482639,488.869119 L103.870923,489.036347 Z M125.773931,494.863683 L125.922111,495.131629 L126,495.226645 L126.191873,495.173436 L126.416042,495.429979 L126.750396,495.369169 L126.890976,495.055616 L126.446438,494.755365 L125.834723,494.637545 L125.773931,494.863683 Z M322.728066,506.565413 L322.472964,506.909456 L322.005277,508.46611 L322.355076,509.159836 L322.871077,509.930644 L323.508832,510.562329 L324.221958,510.827412 L328.489117,511.186495 L329.399367,510.808612 L329.604222,510.122405 L329.254423,509.287678 L328.489117,508.46611 L328.089071,508.163427 L327.729609,507.973546 L323.211213,506.435691 L322.728066,506.565413 Z M126.160528,520.790872 L126.042744,521.479603 L126.088338,522.209802 L126.377098,522.588424 L126.622164,522.319783 L126.605066,521.665308 L126.553773,521.317336 L126.50248,521.086557 L126.350501,520.688103 L126.160528,520.790872 Z M260.084297,543.263219 L259.313984,543.605355 L259.313984,543.996368 L262.163588,544.442122 L262.163588,543.996368 L261.924589,543.802816 L261.610214,543.396163 L261.430045,543.204567 L261.430045,542.848746 L261.727875,542.604363 L261.851051,542.293508 L261.760967,541.937686 L261.430045,541.609235 L260.985139,541.59164 L260.084297,543.263219 Z M248.297259,545.438375 L247.408165,546.044942 L246.195078,547.519879 L245.362493,548.189131 L244.496003,548.299751 L244.563815,548.109853 L244.657999,547.730057 L244.733346,547.553065 L241.627165,548.978222 L240.233245,550.16739 L239.366755,551.701324 L240.009088,551.323371 L240.591144,551.078163 L241.930437,550.925138 L242.339194,551.092912 L243.514608,551.913346 L243.76702,552.24705 L248.402745,555.477161 L249.69683,555.844051 L253.637479,554.693601 L253.761802,554.433643 L253.795708,553.825232 L253.769336,552.64897 L253.854102,552.365045 L254.068841,552.103244 L255.055886,551.238562 L255.619105,550.967543 L256.952748,550.582216 L257.075186,550.449471 L257.154301,550.305665 L257.254136,550.220856 L257.414248,550.211638 L257.414248,549.798656 L256.683382,548.67586 L256.591082,548.644518 L256.282159,548.718265 L256.178557,548.67586 L256.157837,548.533898 L256.201161,548.069293 L256.178557,547.92733 L255.752846,547.602844 L255.377995,547.532784 L254.498319,547.553065 L249.10724,545.392283 L248.297259,545.438375 Z\",\"id\":\"Fill-1\"}))))]);\n}\n\nUk.defaultProps = {\"width\":\"360px\",\"height\":\"591px\",\"viewBox\":\"0 0 360 591\",\"version\":\"1.1\"};\n\nmodule.exports = Uk;\n\nUk.default = Uk;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactEasySwipe = _interopRequireDefault(require(\"react-easy-swipe\"));\n\nvar _cssClasses = _interopRequireDefault(require(\"../cssClasses\"));\n\nvar _CSSTranslate = _interopRequireDefault(require(\"../CSSTranslate\"));\n\nvar _Thumbs = _interopRequireDefault(require(\"./Thumbs\"));\n\nvar _document = _interopRequireDefault(require(\"../shims/document\"));\n\nvar _window = _interopRequireDefault(require(\"../shims/window\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar noop = function noop() {};\n\nvar defaultStatusFormatter = function defaultStatusFormatter(current, total) {\n  return \"\".concat(current, \" of \").concat(total);\n};\n\nvar isKeyboardEvent = function isKeyboardEvent(e) {\n  return e ? e.hasOwnProperty('key') : false;\n};\n\nvar Carousel = /*#__PURE__*/function (_React$Component) {\n  _inherits(Carousel, _React$Component);\n\n  var _super = _createSuper(Carousel);\n\n  function Carousel(props) {\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"thumbsRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"carouselWrapperRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"listRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"setThumbsRef\", function (node) {\n      _this.thumbsRef = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCarouselWrapperRef\", function (node) {\n      _this.carouselWrapperRef = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setListRef\", function (node) {\n      _this.listRef = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setItemsRef\", function (node, index) {\n      if (!_this.itemsRef) {\n        _this.itemsRef = [];\n      }\n\n      _this.itemsRef[index] = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"autoPlay\", function () {\n      if (!_this.state.autoPlay || _react.Children.count(_this.props.children) <= 1) {\n        return;\n      }\n\n      if (_this.timer) clearTimeout(_this.timer);\n      _this.timer = setTimeout(function () {\n        _this.increment();\n      }, _this.props.interval);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAutoPlay\", function () {\n      if (!_this.state.autoPlay) {\n        return;\n      }\n\n      if (_this.timer) clearTimeout(_this.timer);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetAutoPlay\", function () {\n      _this.clearAutoPlay();\n\n      _this.autoPlay();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopOnHover\", function () {\n      _this.setState({\n        isMouseEntered: true\n      }, _this.clearAutoPlay);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startOnLeave\", function () {\n      _this.setState({\n        isMouseEntered: false\n      }, _this.autoPlay);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isFocusWithinTheCarousel\", function () {\n      if (!_this.carouselWrapperRef) {\n        return false;\n      }\n\n      if ((0, _document.default)().activeElement === _this.carouselWrapperRef || _this.carouselWrapperRef.contains((0, _document.default)().activeElement)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"navigateWithKeyboard\", function (e) {\n      if (!_this.isFocusWithinTheCarousel()) {\n        return;\n      }\n\n      var axis = _this.props.axis;\n      var isHorizontal = axis === 'horizontal';\n      var keyNames = {\n        ArrowUp: 38,\n        ArrowRight: 39,\n        ArrowDown: 40,\n        ArrowLeft: 37\n      };\n      var nextKey = isHorizontal ? keyNames.ArrowRight : keyNames.ArrowDown;\n      var prevKey = isHorizontal ? keyNames.ArrowLeft : keyNames.ArrowUp;\n\n      if (nextKey === e.keyCode) {\n        _this.increment();\n      } else if (prevKey === e.keyCode) {\n        _this.decrement();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSizes\", function () {\n      if (!_this.state.initialized || !_this.itemsRef || _this.itemsRef.length === 0) {\n        return;\n      }\n\n      var isHorizontal = _this.props.axis === 'horizontal';\n      var firstItem = _this.itemsRef[0];\n      var itemSize = isHorizontal ? firstItem.clientWidth : firstItem.clientHeight;\n\n      _this.setState({\n        itemSize: itemSize\n      });\n\n      if (_this.thumbsRef) {\n        _this.thumbsRef.updateSizes();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setMountState\", function () {\n      _this.setState({\n        hasMount: true\n      });\n\n      _this.updateSizes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickItem\", function (index, item) {\n      if (_react.Children.count(_this.props.children) === 0) {\n        return;\n      }\n\n      if (_this.state.cancelClick) {\n        _this.setState({\n          cancelClick: false\n        });\n\n        return;\n      }\n\n      _this.props.onClickItem(index, item);\n\n      if (index !== _this.state.selectedItem) {\n        _this.setState({\n          selectedItem: index\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnChange\", function (index, item) {\n      if (_react.Children.count(_this.props.children) <= 1) {\n        return;\n      }\n\n      _this.props.onChange(index, item);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickThumb\", function (index, item) {\n      _this.props.onClickThumb(index, item);\n\n      _this.selectItem({\n        selectedItem: index\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwipeStart\", function (event) {\n      _this.setState({\n        swiping: true\n      });\n\n      _this.props.onSwipeStart(event);\n\n      _this.clearAutoPlay();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwipeEnd\", function (event) {\n      _this.setState({\n        swiping: false,\n        cancelClick: false\n      });\n\n      _this.props.onSwipeEnd(event);\n\n      _this.autoPlay();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwipeMove\", function (delta, event) {\n      _this.props.onSwipeMove(event);\n\n      var isHorizontal = _this.props.axis === 'horizontal';\n\n      var childrenLength = _react.Children.count(_this.props.children);\n\n      var initialBoundry = 0;\n\n      var currentPosition = _this.getPosition(_this.state.selectedItem);\n\n      var finalBoundry = _this.props.infiniteLoop ? _this.getPosition(childrenLength - 1) - 100 : _this.getPosition(childrenLength - 1);\n      var axisDelta = isHorizontal ? delta.x : delta.y;\n      var handledDelta = axisDelta; // prevent user from swiping left out of boundaries\n\n      if (currentPosition === initialBoundry && axisDelta > 0) {\n        handledDelta = 0;\n      } // prevent user from swiping right out of boundaries\n\n\n      if (currentPosition === finalBoundry && axisDelta < 0) {\n        handledDelta = 0;\n      }\n\n      var position = currentPosition + 100 / (_this.state.itemSize / handledDelta);\n\n      var hasMoved = Math.abs(axisDelta) > _this.props.swipeScrollTolerance;\n\n      if (_this.props.infiniteLoop && hasMoved) {\n        // When allowing infinite loop, if we slide left from position 0 we reveal the cloned last slide that appears before it\n        // if we slide even further we need to jump to other side so it can continue - and vice versa for the last slide\n        if (_this.state.selectedItem === 0 && position > -100) {\n          position -= childrenLength * 100;\n        } else if (_this.state.selectedItem === childrenLength - 1 && position < -childrenLength * 100) {\n          position += childrenLength * 100;\n        }\n      }\n\n      _this.setPosition(position); // allows scroll if the swipe was within the tolerance\n\n\n      if (hasMoved && !_this.state.cancelClick) {\n        _this.setState({\n          cancelClick: true\n        });\n      }\n\n      return hasMoved;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPosition\", function (position, forceReflow) {\n      var list = _reactDom.default.findDOMNode(_this.listRef);\n\n      if (list instanceof HTMLElement) {\n        ['WebkitTransform', 'MozTransform', 'MsTransform', 'OTransform', 'transform', 'msTransform'].forEach(function (prop) {\n          list.style[prop] = (0, _CSSTranslate.default)(position, '%', _this.props.axis);\n        });\n\n        if (forceReflow) {\n          list.offsetLeft;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetPosition\", function () {\n      var currentPosition = _this.getPosition(_this.state.selectedItem);\n\n      _this.setPosition(currentPosition);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"decrement\", function () {\n      var positions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var fromSwipe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      _this.moveTo(_this.state.selectedItem - (typeof positions === 'number' ? positions : 1), fromSwipe);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"increment\", function () {\n      var positions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var fromSwipe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      _this.moveTo(_this.state.selectedItem + (typeof positions === 'number' ? positions : 1), fromSwipe);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"moveTo\", function (position, fromSwipe) {\n      if (typeof position !== 'number') {\n        return;\n      }\n\n      var lastPosition = _react.Children.count(_this.props.children) - 1;\n      var needClonedSlide = _this.props.infiniteLoop && !fromSwipe && (position < 0 || position > lastPosition);\n      var oldPosition = position;\n\n      if (position < 0) {\n        position = _this.props.infiniteLoop ? lastPosition : 0;\n      }\n\n      if (position > lastPosition) {\n        position = _this.props.infiniteLoop ? 0 : lastPosition;\n      }\n\n      if (needClonedSlide) {\n        // set swiping true would disable transition time, then we set slider to cloned position and force a reflow\n        // this is only needed for non-swiping situation\n        _this.setState({\n          swiping: true\n        }, function () {\n          if (oldPosition < 0) {\n            if (_this.props.centerMode && _this.props.centerSlidePercentage && _this.props.axis === 'horizontal') {\n              _this.setPosition(-(lastPosition + 2) * _this.props.centerSlidePercentage - (100 - _this.props.centerSlidePercentage) / 2, true);\n            } else {\n              _this.setPosition(-(lastPosition + 2) * 100, true);\n            }\n          } else if (oldPosition > lastPosition) {\n            _this.setPosition(0, true);\n          }\n\n          _this.selectItem({\n            selectedItem: position,\n            swiping: false\n          });\n        });\n      } else {\n        _this.selectItem({\n          // if it's not a slider, we don't need to set position here\n          selectedItem: position\n        });\n      } // don't reset auto play when stop on hover is enabled, doing so will trigger a call to auto play more than once\n      // and will result in the interval function not being cleared correctly.\n\n\n      if (_this.state.autoPlay && _this.state.isMouseEntered === false) {\n        _this.resetAutoPlay();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickNext\", function () {\n      _this.increment(1, false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickPrev\", function () {\n      _this.decrement(1, false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwipeForward\", function () {\n      _this.increment(1, true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwipeBackwards\", function () {\n      _this.decrement(1, true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeItem\", function (newIndex) {\n      return function (e) {\n        if (!isKeyboardEvent(e) || e.key === 'Enter') {\n          _this.selectItem({\n            selectedItem: newIndex\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectItem\", function (state, cb) {\n      _this.setState(state, cb);\n\n      _this.handleOnChange(state.selectedItem, _react.Children.toArray(_this.props.children)[state.selectedItem]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInitialImage\", function () {\n      var selectedItem = _this.props.selectedItem;\n      var item = _this.itemsRef && _this.itemsRef[selectedItem];\n      var images = item && item.getElementsByTagName('img');\n      return images && images[selectedItem];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getVariableImageHeight\", function (position) {\n      var item = _this.itemsRef && _this.itemsRef[position];\n      var images = item && item.getElementsByTagName('img') || [];\n\n      if (_this.state.hasMount && images.length > 0) {\n        var image = images[0];\n\n        if (!image.complete) {\n          // if the image is still loading, the size won't be available so we trigger a new render after it's done\n          var onImageLoad = function onImageLoad() {\n            _this.forceUpdate();\n\n            image.removeEventListener('load', onImageLoad);\n          };\n\n          image.addEventListener('load', onImageLoad);\n        }\n\n        var height = image.clientHeight;\n        return height > 0 ? height : null;\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      initialized: false,\n      selectedItem: props.selectedItem,\n      hasMount: false,\n      isMouseEntered: false,\n      autoPlay: props.autoPlay,\n      swiping: false,\n      cancelClick: false,\n      itemSize: 1\n    };\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.children) {\n        return;\n      }\n\n      this.setupCarousel();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!prevProps.children && this.props.children && !this.state.initialized) {\n        this.setupCarousel();\n      }\n\n      if (prevState.swiping && !this.state.swiping) {\n        // We stopped swiping, ensure we are heading to the new/current slide and not stuck\n        this.resetPosition();\n      }\n\n      if (prevProps.selectedItem !== this.props.selectedItem || prevProps.centerMode !== this.props.centerMode) {\n        this.updateSizes();\n        this.moveTo(this.props.selectedItem);\n      }\n\n      if (prevProps.autoPlay !== this.props.autoPlay) {\n        if (this.props.autoPlay) {\n          this.setupAutoPlay();\n        } else {\n          this.destroyAutoPlay();\n        }\n\n        this.setState({\n          autoPlay: this.props.autoPlay\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyCarousel();\n    }\n  }, {\n    key: \"setupCarousel\",\n    value: function setupCarousel() {\n      this.bindEvents();\n\n      if (this.state.autoPlay && _react.Children.count(this.props.children) > 1) {\n        this.setupAutoPlay();\n      }\n\n      this.setState({\n        initialized: true\n      });\n      var initialImage = this.getInitialImage();\n\n      if (initialImage) {\n        // if it's a carousel of images, we set the mount state after the first image is loaded\n        initialImage.addEventListener('load', this.setMountState);\n      } else {\n        this.setMountState();\n      }\n    }\n  }, {\n    key: \"destroyCarousel\",\n    value: function destroyCarousel() {\n      if (this.state.initialized) {\n        this.unbindEvents();\n        this.destroyAutoPlay();\n      }\n    }\n  }, {\n    key: \"setupAutoPlay\",\n    value: function setupAutoPlay() {\n      this.autoPlay();\n      var carouselWrapper = this.carouselWrapperRef;\n\n      if (this.props.stopOnHover && carouselWrapper) {\n        carouselWrapper.addEventListener('mouseenter', this.stopOnHover);\n        carouselWrapper.addEventListener('mouseleave', this.startOnLeave);\n      }\n    }\n  }, {\n    key: \"destroyAutoPlay\",\n    value: function destroyAutoPlay() {\n      this.clearAutoPlay();\n      var carouselWrapper = this.carouselWrapperRef;\n\n      if (this.props.stopOnHover && carouselWrapper) {\n        carouselWrapper.removeEventListener('mouseenter', this.stopOnHover);\n        carouselWrapper.removeEventListener('mouseleave', this.startOnLeave);\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      // as the widths are calculated, we need to resize\n      // the carousel when the window is resized\n      (0, _window.default)().addEventListener('resize', this.updateSizes); // issue #2 - image loading smaller\n\n      (0, _window.default)().addEventListener('DOMContentLoaded', this.updateSizes);\n\n      if (this.props.useKeyboardArrows) {\n        (0, _document.default)().addEventListener('keydown', this.navigateWithKeyboard);\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      // removing listeners\n      (0, _window.default)().removeEventListener('resize', this.updateSizes);\n      (0, _window.default)().removeEventListener('DOMContentLoaded', this.updateSizes);\n      var initialImage = this.getInitialImage();\n\n      if (initialImage) {\n        initialImage.removeEventListener('load', this.setMountState);\n      }\n\n      if (this.props.useKeyboardArrows) {\n        (0, _document.default)().removeEventListener('keydown', this.navigateWithKeyboard);\n      }\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition(index) {\n      if (this.props.infiniteLoop) {\n        // index has to be added by 1 because of the first cloned slide\n        ++index;\n      }\n\n      if (index === 0) {\n        return 0;\n      }\n\n      var childrenLength = _react.Children.count(this.props.children);\n\n      if (this.props.centerMode && this.props.axis === 'horizontal') {\n        var currentPosition = -index * this.props.centerSlidePercentage;\n        var lastPosition = childrenLength - 1;\n\n        if (index && (index !== lastPosition || this.props.infiniteLoop)) {\n          currentPosition += (100 - this.props.centerSlidePercentage) / 2;\n        } else if (index === lastPosition) {\n          currentPosition += 100 - this.props.centerSlidePercentage;\n        }\n\n        return currentPosition;\n      }\n\n      return -index * 100;\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems(isClone) {\n      var _this2 = this;\n\n      if (!this.props.children) {\n        return [];\n      }\n\n      return _react.Children.map(this.props.children, function (item, index) {\n        var slideProps = {\n          ref: function ref(e) {\n            return _this2.setItemsRef(e, index);\n          },\n          key: 'itemKey' + index + (isClone ? 'clone' : ''),\n          className: _cssClasses.default.ITEM(true, index === _this2.state.selectedItem),\n          onClick: _this2.handleClickItem.bind(_this2, index, item)\n        };\n        var extraProps = {};\n\n        if (_this2.props.centerMode && _this2.props.axis === 'horizontal') {\n          extraProps.style = {\n            minWidth: _this2.props.centerSlidePercentage + '%'\n          };\n        }\n\n        return /*#__PURE__*/_react.default.createElement(\"li\", _extends({}, slideProps, extraProps), _this2.props.renderItem(item, {\n          isSelected: index === _this2.state.selectedItem\n        }));\n      });\n    }\n  }, {\n    key: \"renderControls\",\n    value: function renderControls() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          showIndicators = _this$props.showIndicators,\n          labels = _this$props.labels,\n          renderIndicator = _this$props.renderIndicator,\n          children = _this$props.children;\n\n      if (!showIndicators) {\n        return null;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(\"ul\", {\n        className: \"control-dots\"\n      }, _react.Children.map(children, function (_, index) {\n        return renderIndicator && renderIndicator(_this3.changeItem(index), index === _this3.state.selectedItem, index, labels.item);\n      }));\n    }\n  }, {\n    key: \"renderStatus\",\n    value: function renderStatus() {\n      if (!this.props.showStatus) {\n        return null;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(\"p\", {\n        className: \"carousel-status\"\n      }, this.props.statusFormatter(this.state.selectedItem + 1, _react.Children.count(this.props.children)));\n    }\n  }, {\n    key: \"renderThumbs\",\n    value: function renderThumbs() {\n      if (!this.props.showThumbs || !this.props.children || _react.Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(_Thumbs.default, {\n        ref: this.setThumbsRef,\n        onSelectItem: this.handleClickThumb,\n        selectedItem: this.state.selectedItem,\n        transitionTime: this.props.transitionTime,\n        thumbWidth: this.props.thumbWidth,\n        labels: this.props.labels\n      }, this.props.renderThumbs(this.props.children));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (!this.props.children || _react.Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      var isHorizontal = this.props.axis === 'horizontal';\n      var canShowArrows = this.props.showArrows && _react.Children.count(this.props.children) > 1; // show left arrow?\n\n      var hasPrev = canShowArrows && (this.state.selectedItem > 0 || this.props.infiniteLoop) || false; // show right arrow\n\n      var hasNext = canShowArrows && (this.state.selectedItem < _react.Children.count(this.props.children) - 1 || this.props.infiniteLoop) || false; // obj to hold the transformations and styles\n\n      var itemListStyles = {};\n      var currentPosition = this.getPosition(this.state.selectedItem); // if 3d is available, let's take advantage of the performance of transform\n\n      var transformProp = (0, _CSSTranslate.default)(currentPosition, '%', this.props.axis);\n      var transitionTime = this.props.transitionTime + 'ms';\n      itemListStyles = {\n        WebkitTransform: transformProp,\n        MozTransform: transformProp,\n        MsTransform: transformProp,\n        OTransform: transformProp,\n        transform: transformProp,\n        msTransform: transformProp\n      };\n\n      if (!this.state.swiping) {\n        itemListStyles = _objectSpread({}, itemListStyles, {\n          WebkitTransitionDuration: transitionTime,\n          MozTransitionDuration: transitionTime,\n          MsTransitionDuration: transitionTime,\n          OTransitionDuration: transitionTime,\n          transitionDuration: transitionTime,\n          msTransitionDuration: transitionTime\n        });\n      }\n\n      var itemsClone = this.renderItems(true);\n      var firstClone = itemsClone.shift();\n      var lastClone = itemsClone.pop();\n      var swiperProps = {\n        className: _cssClasses.default.SLIDER(true, this.state.swiping),\n        onSwipeMove: this.onSwipeMove,\n        onSwipeStart: this.onSwipeStart,\n        onSwipeEnd: this.onSwipeEnd,\n        style: itemListStyles,\n        tolerance: this.props.swipeScrollTolerance\n      };\n      var containerStyles = {};\n\n      if (isHorizontal) {\n        swiperProps.onSwipeLeft = this.onSwipeForward;\n        swiperProps.onSwipeRight = this.onSwipeBackwards;\n\n        if (this.props.dynamicHeight) {\n          var itemHeight = this.getVariableImageHeight(this.state.selectedItem);\n          swiperProps.style.height = itemHeight || 'auto';\n          containerStyles.height = itemHeight || 'auto';\n        }\n      } else {\n        swiperProps.onSwipeUp = this.props.verticalSwipe === 'natural' ? this.onSwipeBackwards : this.onSwipeForward;\n        swiperProps.onSwipeDown = this.props.verticalSwipe === 'natural' ? this.onSwipeForward : this.onSwipeBackwards;\n        swiperProps.style.height = this.state.itemSize;\n        containerStyles.height = this.state.itemSize;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: _cssClasses.default.ROOT(this.props.className),\n        ref: this.setCarouselWrapperRef,\n        tabIndex: 0\n      }, /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: _cssClasses.default.CAROUSEL(true),\n        style: {\n          width: this.props.width\n        }\n      }, this.props.renderArrowPrev(this.onClickPrev, hasPrev, this.props.labels.leftArrow), /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: _cssClasses.default.WRAPPER(true, this.props.axis),\n        style: containerStyles\n      }, this.props.swipeable ? /*#__PURE__*/_react.default.createElement(_reactEasySwipe.default, _extends({\n        tagName: \"ul\",\n        innerRef: this.setListRef\n      }, swiperProps, {\n        allowMouseEvents: this.props.emulateTouch\n      }), this.props.infiniteLoop && lastClone, this.renderItems(), this.props.infiniteLoop && firstClone) : /*#__PURE__*/_react.default.createElement(\"ul\", {\n        className: _cssClasses.default.SLIDER(true, this.state.swiping),\n        ref: function ref(node) {\n          return _this4.setListRef(node);\n        },\n        style: itemListStyles\n      }, this.props.infiniteLoop && lastClone, this.renderItems(), this.props.infiniteLoop && firstClone)), this.props.renderArrowNext(this.onClickNext, hasNext, this.props.labels.rightArrow), this.renderControls(), this.renderStatus()), this.renderThumbs());\n    }\n  }]);\n\n  return Carousel;\n}(_react.default.Component);\n\nexports.default = Carousel;\n\n_defineProperty(Carousel, \"displayName\", 'Carousel');\n\n_defineProperty(Carousel, \"defaultProps\", {\n  axis: 'horizontal',\n  centerSlidePercentage: 80,\n  interval: 3000,\n  labels: {\n    leftArrow: 'previous slide / item',\n    rightArrow: 'next slide / item',\n    item: 'slide item'\n  },\n  onClickItem: noop,\n  onClickThumb: noop,\n  onChange: noop,\n  onSwipeStart: function onSwipeStart() {},\n  onSwipeEnd: function onSwipeEnd() {},\n  onSwipeMove: function onSwipeMove() {},\n  renderArrowPrev: function renderArrowPrev(onClickHandler, hasPrev, label) {\n    return /*#__PURE__*/_react.default.createElement(\"button\", {\n      type: \"button\",\n      \"aria-label\": label,\n      className: _cssClasses.default.ARROW_PREV(!hasPrev),\n      onClick: onClickHandler\n    });\n  },\n  renderArrowNext: function renderArrowNext(onClickHandler, hasNext, label) {\n    return /*#__PURE__*/_react.default.createElement(\"button\", {\n      type: \"button\",\n      \"aria-label\": label,\n      className: _cssClasses.default.ARROW_NEXT(!hasNext),\n      onClick: onClickHandler\n    });\n  },\n  renderIndicator: function renderIndicator(onClickHandler, isSelected, index, label) {\n    return /*#__PURE__*/_react.default.createElement(\"li\", {\n      className: _cssClasses.default.DOT(isSelected),\n      onClick: onClickHandler,\n      onKeyDown: onClickHandler,\n      value: index,\n      key: index,\n      role: \"button\",\n      tabIndex: 0,\n      \"aria-label\": \"\".concat(label, \" \").concat(index + 1)\n    });\n  },\n  renderItem: function renderItem(item) {\n    return item;\n  },\n  renderThumbs: function renderThumbs(children) {\n    var images = _react.Children.map(children, function (item) {\n      var img = item; // if the item is not an image, try to find the first image in the item's children.\n\n      if (item.type !== 'img') {\n        img = _react.Children.toArray(item.props.children).find(function (children) {\n          return children.type === 'img';\n        });\n      }\n\n      if (!img) {\n        return undefined;\n      }\n\n      return img;\n    });\n\n    if (images.filter(function (image) {\n      return image;\n    }).length === 0) {\n      console.warn(\"No images found! Can't build the thumb list without images. If you don't need thumbs, set showThumbs={false} in the Carousel. Note that it's not possible to get images rendered inside custom components. More info at https://github.com/leandrowd/react-responsive-carousel/blob/master/TROUBLESHOOTING.md\");\n      return [];\n    }\n\n    return images;\n  },\n  statusFormatter: defaultStatusFormatter,\n  selectedItem: 0,\n  showArrows: true,\n  showIndicators: true,\n  showStatus: true,\n  showThumbs: true,\n  stopOnHover: true,\n  swipeScrollTolerance: 5,\n  swipeable: true,\n  transitionTime: 350,\n  verticalSwipe: 'standard',\n  width: '100%'\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = function _default() {\n  return document;\n};\n\nexports.default = _default;","export type CartesianCoordinate = {\n  x: number;\n  y: number;\n};\n\nexport type Arc = {\n  start: CartesianCoordinate;\n  end: CartesianCoordinate;\n  radius: number;\n};\n\n/**\n * Creates a circular Arc.\n * @param {number} startTheta - The angle from the x-axis in complete turns.\n * @param {number} radius - The distance from the origin.\n *\n * Example usage:\n *\n * ```\n * getArc(0.25, 0.5, 1) // {start: {x:0, y: 1}, end: {x: -1, y: 0}, radius: 1}\n * ```\n */\nexport const getArc = (\n  startTheta: number,\n  endTheta: number,\n  radius: number\n): Arc => {\n  return {\n    start: getCartesianCoordinate(startTheta, radius),\n    end: getCartesianCoordinate(endTheta, radius),\n    radius,\n  };\n};\n\n/**\n * Creates Cartesian Cartesiancoordinate from polar Cartesiancoordinate.\n * @param {number} theta - The angle from the x-axis in turns.\n * @param {number} r - The distance from the origin.\n *\n * Example usage:\n *\n * ```\n * getCartesianCoordinate(0.25, 1) // {x: 0, y: 1}\n * getCartesianCoordinate(1/8, 1) // {x: 0.707, y: 0.707}\n * getCartesianCoordinate(0, 2) // {x: 2, y: 0}\n * ```\n */\nexport const getCartesianCoordinate = (\n  theta: number,\n  r: number\n): CartesianCoordinate => {\n  const x = r * Math.cos(2 * Math.PI * theta);\n  const y = r * Math.sin(2 * Math.PI * theta);\n\n  return { x, y };\n};\n\nexport type CircularBar = {\n  inner: Arc;\n  outer: Arc;\n};\n\nconst getCircularBar = (\n  min: number,\n  max: number,\n  start: number,\n  end: number,\n  percentRatio: number\n): CircularBar => {\n  // inner arc points are determined by min, start and min, end\n  const inner = getArc(start, end, min);\n  // with the remaining available space\n  const space = max - min;\n  // we fit the percentage of the bar\n  const fit = space * percentRatio;\n  // and the outer arc is determined by the fit plus the min\n  const outerRadius = min + fit;\n  const outer = getArc(start, end, outerRadius);\n  return {\n    inner,\n    outer,\n  };\n};\n\nexport const getPathDataForCircularBar = (\n  min: number,\n  max: number,\n  start: number,\n  end: number,\n  percentRatio: number\n): string => {\n  const bar = getCircularBar(min, max, start, end, percentRatio);\n  const largeArcFlag = end - start > 0.5 ? 1 : 0;\n\n  const pathData = [\n    `M ${bar.outer.start.x} ${bar.outer.start.y}`, // Move\n    `A ${bar.outer.radius} ${bar.outer.radius} 0 ${largeArcFlag} 1 ${bar.outer.end.x} ${bar.outer.end.y}`, // Arc Clockwise\n    `L ${bar.inner.end.x} ${bar.inner.end.y}`, // Line\n    `A ${bar.inner.radius} ${bar.inner.radius} 0 ${largeArcFlag} 0 ${bar.inner.start.x} ${bar.inner.start.y}`, // Inner Arc Anti-Clockwise\n  ].join(\" \");\n  return pathData;\n};\n","import React from \"react\";\nimport { getPathDataForCircularBar } from \"./maths-helpers\";\n\nlet cumulativePercent = 0;\n\nexport type Stat = {\n  number: number;\n  colour: string;\n  label: string;\n  metric: string;\n};\n\nconst innerRatio = 0.5;\n\nconst statToPiePart = (stat: Stat, total: number) => {\n  const statPercent = stat.number / total;\n  const startTheta = cumulativePercent;\n  cumulativePercent += statPercent;\n  const endTheta = cumulativePercent;\n\n  const pathData = getPathDataForCircularBar(\n    innerRatio,\n    1,\n    startTheta,\n    endTheta,\n    1\n  );\n\n  return (\n    <g key={stat.label}>\n      <title>\n        {stat.label}, {stat.number}\n      </title>\n      <path key={stat.label} d={pathData} fill={stat.colour}></path>\n    </g>\n  );\n};\n\nconst getPathsFromStats = (stats: Stat[]) => {\n  const total = stats.reduce((a, x) => a + x.number, 0);\n\n  return stats.map(stat => statToPiePart(stat, total));\n};\n\nconst Pie = ({\n  stats,\n  position,\n  focus,\n  blur,\n  isActive,\n}: {\n  stats: Stat[];\n  position: { x: number; y: number };\n  focus: () => void;\n  blur: () => void;\n  isActive: boolean;\n}) => {\n  return (\n    <svg\n      viewBox=\"-2 -2 4 4\"\n      width=\"100\"\n      height=\"100\"\n      x={position.x - 25}\n      y={position.y - 25}\n      onClick={focus}\n      onMouseEnter={focus}\n      // onBlur={blur}\n      // onMouseLeave={blur}\n      style={{\n        transform: isActive ? \"translateY(-0.0625rem)\" : null,\n      }}\n    >\n      <filter id=\"shadow\">\n        <feDropShadow\n          dx=\"-0.1\"\n          dy=\"0\"\n          stdDeviation=\"0.1\"\n          radius=\"0.5rem\"\n          color=\"rgba(184, 108, 305, 0.8)\"\n        />\n      </filter>\n      <g\n        style={{\n          transform: \"rotate(-0.25turn)\",\n          transformOrigin: \"0 0\",\n          cursor: \"pointer\",\n          filter: isActive ? \"url(#shadow)\" : \"none\",\n        }}\n        opacity={isActive ? \"1\" : \"0.7\"}\n      >\n        {getPathsFromStats(stats)}\n      </g>\n    </svg>\n  );\n};\n\nexport default Pie;\n","import React from \"react\";\nimport UkSvg from \"./uk.svg\";\n\nconst UkOverlay = ({ children }: { children: React.SVGProps<SVGElement> }) => (\n  <>\n    <svg width=\"360\" height=\"591\" viewBox=\"0 0 360 591\">\n      <title>Uk Overlay</title>\n      <UkSvg />\n      {children}\n    </svg>\n  </>\n);\n\nexport default UkOverlay;\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport Pie from \"../pie\";\nimport UkOverlay from \"./uk-overlay\";\nimport { PieMapOverlayProps } from \"./types\";\n\nconst pieCss = css`\n  position: relative;\n\n  @media screen and (min-width: 40rem) {\n    grid-row-start: 1;\n    grid-column: 2;\n    grid-row-end: 5;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n\n  aside.active {\n    display: block;\n    grid-row-start: 1;\n    grid-row-end: 1;\n  }\n  aside.inactive {\n    display: none;\n  }\n  aside {\n    position: absolute;\n    top: 0;\n    right: 0;\n    text-align: left;\n    background: white;\n    border: 1px solid var(--gray);\n    width: 20rem;\n    padding: 0.75rem;\n    h4 {\n      text-align: left;\n      margin: 0;\n      font-weight: 600;\n    }\n    li {\n      display: flex;\n      align-items: center;\n\n      span:first-of-type {\n        height: 0.625rem;\n        margin-right: 0.5rem;\n      }\n\n      span {\n        display: inline-block;\n        padding: 0.1rem;\n      }\n    }\n  }\n`;\n\nconst numberWithCommas = (x: number) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nconst PieLegend = ({\n  s,\n  isActive,\n}: {\n  s: PieMapOverlayProps;\n  isActive: boolean;\n}) => {\n  const max = Math.max(...s.pieStats.map(x => x.number));\n  return (\n    <aside key={s.name} className={isActive ? \"active\" : \"inactive\"}>\n      <h4>{s.name}</h4>\n      <ul>\n        {s.pieStats\n          .filter(x => x.number > 0)\n          .map(stat => (\n            <li key={stat.label}>\n              <span\n                css={css`\n                  width: ${(stat.number / max) * 10}rem;\n                  background: ${stat.colour};\n                `}\n                title={stat.label}\n              >\n                &nbsp;\n              </span>\n              <span>\n                {numberWithCommas(stat.number)}&nbsp;{stat.metric}\n              </span>\n            </li>\n          ))}\n      </ul>\n    </aside>\n  );\n};\n\nconst PieOverlay = ({ stats }: { stats: PieMapOverlayProps[] }) => {\n  const [currentStat, setCurrentStat] = React.useState(stats[0].name);\n\n  const isCurrentStat = (statName: string): boolean => currentStat === statName;\n\n  return (\n    <div css={pieCss}>\n      <picture>\n        <UkOverlay>\n          <g>\n            {stats.map(stat => (\n              <Pie\n                stats={stat.pieStats}\n                position={stat.position}\n                key={stat.name}\n                isActive={isCurrentStat(stat.name)}\n                focus={() => setCurrentStat(stat.name)}\n                blur={() => setCurrentStat(\"\")}\n              />\n            ))}\n          </g>\n        </UkOverlay>\n      </picture>\n      {stats.map(s => PieLegend({ s, isActive: isCurrentStat(s.name) }))}\n    </div>\n  );\n};\n\nexport default PieOverlay;\n","import React from \"react\";\nimport { LegendProps } from \"./types\";\n\nconst Legend = ({ legendDetails }: { legendDetails: LegendProps }) => (\n  <div className=\"key\">\n    <p>Key</p>\n    <ul>\n      {legendDetails.map(key => (\n        <li key={key.label}>\n          <span style={{ color: key.colour }}></span>\n          {key.label}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Legend;\n","import React from \"react\";\nimport { KeyStatArticleProps } from \"./types\";\nimport PieOverlay from \"./pie-overlay\";\nimport Legend from \"./legend\";\nimport { css } from \"@emotion/core\";\nimport { mq, BreakPoint } from \"../../util/mq\";\n\nconst keyStatArticleCss = css`\n  display: flex;\n  width: 100vw;\n  justify-content: center;\n  background: white;\n  height: 100%;\n  padding: 0 0.75rem;\n\n  ${mq(BreakPoint.md)} {\n    padding: 0 2.5rem;\n  }\n\n  article {\n    display: grid;\n    grid-template-columns: auto;\n    width: 64rem;\n    grid-row-gap: 1.5rem;\n    grid-column-gap: 1.875rem;\n\n    h3 {\n      font-size: 1.25rem;\n      text-align: left;\n      font-weight: 600;\n      line-height: 1.3;\n    }\n  }\n\n  ${mq(BreakPoint.sm)} {\n    article {\n      grid-template-columns: auto auto;\n    }\n  }\n\n  .key {\n    grid-column: 1;\n    text-align: left;\n    width: 100%;\n    p {\n      text-transform: uppercase;\n      font-weight: 600;\n      margin: 0.25rem 0;\n    }\n    ul {\n      text-align: left;\n    }\n    li {\n      display: flex;\n      align-items: center;\n      font-weight: 400;\n      font-size: 1rem;\n      line-height: 1.88;\n      span {\n        display: inline-block;\n        height: 1.875rem;\n        width: 0.75rem;\n        margin-right: 0.5rem;\n        background-color: currentColor;\n      }\n    }\n  }\n\n  .reference {\n    text-align: left;\n    color: var(--midnight);\n  }\n  .reference a {\n    text-decoration: underline;\n  }\n  .summary {\n    border: 1px solid var(--gray);\n    margin: auto 0;\n    text-align: left;\n    h4 {\n      text-transform: uppercase;\n      font-weight: 600;\n    }\n    h4,\n    p {\n      margin: 0.75rem;\n    }\n  }\n`;\n\nconst KeyStatArticle = ({\n  stats,\n  h3,\n  h4,\n  summaryMain,\n  legendKey,\n  reference,\n}: KeyStatArticleProps) => (\n  <div css={keyStatArticleCss}>\n    <article>\n      <h3>{h3}</h3>\n      <Legend legendDetails={legendKey} />\n      <PieOverlay stats={stats} />\n      <div className=\"summary\">\n        <h4>{h4}</h4>\n        {summaryMain}\n      </div>\n      <p className=\"reference\">\n        Reference -{\" \"}\n        <a href={reference.href} target=\"_blank\" rel=\"noreferrer\">\n          {reference.name}\n        </a>\n        , {reference.figure}\n      </p>\n    </article>\n  </div>\n);\n\nexport default KeyStatArticle;\n","const Locations: { [x: string]: Location } = require(\"./uk-regions-data.json\");\ntype Location = {\n  position: { x: number; y: number };\n  name: string;\n};\n\nexport const UkRegions = Locations;\n","import { Stat } from \"../../pie\";\nimport { PieMapOverlayProps, LegendProps } from \"../types\";\nimport { UkRegions } from \"./uk-regions\";\nconst Individual: {\n  colours: { [key in Background]: string };\n  stats: { [x: string]: IndividualStat };\n} = require(\"./individuals.json\");\n\nenum Background {\n  WorkingClass = \"Working class background\",\n  Intermediate = \"Intermediate background\",\n  Professional = \"Professional background\",\n}\n\ntype IndividualStat = {\n  [key in Background]: number;\n};\n\nconst colours = Individual.colours;\n\nexport const Key: LegendProps = Object.keys(colours).map(key => ({\n  colour: colours[key],\n  label: key,\n}));\n\nconst dictToStat = (dict: IndividualStat): Stat[] =>\n  Object.keys(dict).map((key: Background) => ({\n    label: key,\n    number: dict[key],\n    colour: colours[key],\n    metric: \"%\",\n  }));\n\nconst output = Object.keys(Individual.stats).map(key => {\n  const location = UkRegions[key];\n  const keyOutput: PieMapOverlayProps = {\n    pieStats: dictToStat(Individual.stats[key]),\n    ...location,\n  };\n  return keyOutput;\n});\n\nexport const IndividualStats = output;\n","import React from \"react\";\nimport KeyStatArticle from \"./key-stat-article\";\nimport { IndividualStats, Key } from \"./data/individuals-stats\";\n\nconst IndividualsArticle = () => (\n  <KeyStatArticle\n    stats={IndividualStats}\n    legendKey={Key}\n    h3=\"Percentage of individuals from different socio-economic backgrounds in a\n    professional occupation\"\n    h4=\"Move Out To Move Up\"\n    summaryMain={\n      <p>\n        Those from more privileged backgrounds are much more likely to move\n        region to take up opportunities. Despite the disproportionate number of\n        opportunities London offers, it is the least accessible due to the high\n        costs associated with moving to London. People from less privileged\n        backgrounds are less able to move to access those opportunities.\n      </p>\n    }\n    reference={{\n      href:\n        \"https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/798404/SMC_State_of_the_Nation_Report_2018-19.pdf\",\n      name: \"State of the nation 2018/19\",\n      figure: \"Figure 6.13\",\n    }}\n  />\n);\n\nexport default IndividualsArticle;\n","import { Stat as PieStat } from \"../../pie\";\nimport { PieMapOverlayProps, LegendProps } from \"../types\";\nimport { UkRegions } from \"./uk-regions\";\nconst Society: {\n  colours: { [key in Quintile]: string };\n  stats: SocietyStat;\n} = require(\"./society.json\");\n\ntype SocietyStat = {\n  [key in Quintile]: number;\n};\n\n// Quintile: like Percentile or Decile, but for fifths\nenum Quintile {\n  Fifth = \"Top 20% of rankings\",\n  Fourth = \"60-80%\",\n  Third = \"40-60%\",\n  Second = \"20-40%\",\n  First = \"Bottom 20%\",\n}\n\nconst colours = Society.colours;\n\nexport const Key: LegendProps = Object.keys(colours).map(key => ({\n  colour: colours[key],\n  label: key,\n}));\n\nconst dictToStat = (dict: SocietyStat): PieStat[] =>\n  Object.keys(Quintile)\n    .map(q => Quintile[q])\n    .map(key => ({\n      label: key,\n      number: dict[key],\n      colour: colours[key],\n      metric: \"authorities\",\n    }));\n\nconst output = Object.keys(Society.stats).map(key => {\n  const location = UkRegions[key];\n  const keyOutput: PieMapOverlayProps = {\n    pieStats: dictToStat(Society.stats[key]),\n    ...location,\n  };\n  return keyOutput;\n});\n\nexport const SocietyStats: PieMapOverlayProps[] = output;\n","import React from \"react\";\nimport KeyStatArticle from \"./key-stat-article\";\nimport { SocietyStats, Key } from \"./data/society-stats\";\n\nconst SocietyArticle = () => (\n  <KeyStatArticle\n    stats={SocietyStats}\n    legendKey={Key}\n    h3=\"Map of performance against the Social Mobility Index by region and local authority\"\n    h4=\"Social Mobility Index\"\n    summaryMain={\n      <>\n        <p>\n          The Social Mobility Index compares the chances that a child from a\n          disadvantaged background will do well at school and get a good job\n          across each of the 324 local authority district areas of England.\n        </p>\n        <p>\n          <strong>Hotspots</strong> &ndash; Young people from disadvantaged\n          backgrounds who live in London and its commuter belt are more likely\n          to achieve good outcomes in school and have more opportunities to do\n          well as adults.\n        </p>\n        <p>\n          <strong>Coldspots</strong> &ndash; Coastal areas and industrial towns\n          are becoming real social mobility coldspots. Many of these areas\n          perform badly on both educational measures and adulthood outcomes.\n        </p>\n      </>\n    }\n    reference={{\n      href:\n        \"https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/496103/Social_Mobility_Index.pdf\",\n      name: \"Social Mobility Index\",\n      figure: \"Figure 4\",\n    }}\n  />\n);\n\nexport default SocietyArticle;\n","import { Stat as PieStat } from \"../../pie\";\nimport { PieMapOverlayProps, LegendProps } from \"../types\";\nimport { UkRegions } from \"./uk-regions\";\nconst Business: {\n  colours: { [key in JobType]: string };\n  stats: { [x: string]: BusinessStat };\n} = require(\"./business.json\");\n\nenum JobType {\n  Professional = \"Professional jobs\",\n  Other = \"All other jobs\",\n}\n\nenum JobTypeRaw {\n  Pro = \"pro\",\n  All = \"all\",\n}\n\ntype BusinessStat = {\n  [key in JobTypeRaw]: number;\n};\n\nexport const Key: LegendProps = Object.keys(JobType).map(key => ({\n  colour: Business.colours[JobType[key]],\n  label: JobType[key],\n}));\n\nconst getPieStat = (businessStat: BusinessStat): PieStat[] => {\n  return [\n    {\n      label: JobType.Professional,\n      number: businessStat[JobTypeRaw.Pro],\n      colour: Business.colours[JobType.Professional],\n      metric: \"jobs\",\n    },\n    {\n      label: JobType.Other,\n      number: businessStat[JobTypeRaw.All] - businessStat[JobTypeRaw.Pro],\n      colour: Business.colours[JobType.Other],\n      metric: \"jobs\",\n    },\n  ];\n};\n\nconst output = Object.keys(Business.stats).map(region => {\n  const location = UkRegions[region];\n  const keyOutput: PieMapOverlayProps = {\n    pieStats: getPieStat(Business.stats[region]),\n    ...location,\n  };\n  return keyOutput;\n});\n\nexport const BusinessStats = output;\n","import { Stat as PieStat } from \"../pie\";\n\nexport enum KeyStatsCategories {\n  Individual = \"individual\",\n  Society = \"society\",\n  Businesses = \"businesses\",\n}\n\nexport type KeyStatArticleProps = {\n  stats: PieMapOverlayProps[];\n  h3: string;\n  h4: string;\n  summaryMain: JSX.Element;\n  legendKey: LegendProps;\n  reference: Reference;\n};\n\ntype Reference = {\n  href: string;\n  name: string;\n  figure: string;\n};\n\n/// PieProps\n/// position: x, y,\n/// denotes where on our 300 * 591 map of the UK to put the pie chart\nexport type PieMapOverlayProps = {\n  position: { x: number; y: number };\n  pieStats: PieStat[];\n  name: string;\n};\n\nexport type LegendProps = {\n  label: string;\n  colour: string;\n}[];\n","import React from \"react\";\nimport KeyStatArticle from \"./key-stat-article\";\nimport { BusinessStats, Key } from \"./data/business-stats\";\n\nconst BusinessArticle = () => (\n  <KeyStatArticle\n    stats={BusinessStats}\n    legendKey={Key}\n    h3=\"Job growth in the UK since 2012\"\n    h4=\"Inequality In The Uk\"\n    summaryMain={\n      <>\n        <p>\n          The UK is one of the most unequal countries in Europe, with levels of\n          socio-economic inequality comparable to the USA.\n        </p>\n        <p>\n          The richest half receive 80% of all incomes in the UK. Leaving the\n          poorest half who receive the remaining 20%. Studies show that should\n          British businesses attain even average levels of social mobility, the\n          economy would be boosted by around £170 billion in total.\n        </p>\n      </>\n    }\n    reference={{\n      href:\n        \"https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/798404/SMC_State_of_the_Nation_Report_2018-19.pdf\",\n      name: \"State of the nation 2018/19\",\n      figure: \"Figure 7.4\",\n    }}\n  />\n);\n\nexport default BusinessArticle;\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\n\nimport IndividualArticle from \"./individuals\";\nimport SocietyArticle from \"./society\";\nimport BusinessArticle from \"./businesses\";\nimport { KeyStatsCategories } from \"./types\";\n\nconst keyStatsCss = css`\n  position: relative;\n  /* necessary to clear the hero hanging\n  - ideally, the hero should clear its own space\n  */\n  top: 7rem;\n  margin-bottom: 7rem;\n  padding: 0;\n  text-align: center;\n  overflow: hidden;\n\n  header {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  h2 {\n    max-width: 57.5rem;\n    text-align: center;\n    margin-bottom: 0.75rem;\n    margin-top: 2.25rem;\n    font-size: 2rem;\n    font-weight: 600;\n    line-height: 1.3;\n  }\n\n  p {\n    font-size: 1.125rem;\n    font-weight: 300;\n    max-width: 57.5rem;\n  }\n\n  ul.switcher {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 0.75rem;\n  }\n  ul.switcher > li {\n    padding: 0;\n    border: 1px var(--midnight) solid;\n    border-collapse: collapse;\n\n    &.active {\n      background: var(--midnight);\n      color: white;\n    }\n\n    > input {\n      display: none;\n    }\n    > label {\n      font-weight: 700;\n      font-size: 1.125rem;\n      display: block;\n      width: 100%;\n      padding: 0.75rem;\n      cursor: pointer;\n    }\n  }\n  @media screen and (min-width: 40rem) {\n    ul.switcher {\n      flex-direction: row;\n      justify-content: center;\n      margin-top: 2.25rem;\n      li {\n        flex-shrink: 1;\n        flex-basis: 10rem;\n      }\n    }\n  }\n\n  picture > img,\n  picture > svg {\n    width: 100%;\n    height: auto;\n  }\n`;\n\nconst screenNumberForCategory: { [key in KeyStatsCategories]: number } = {\n  individual: 0,\n  society: 1,\n  businesses: 2,\n};\n\nconst KeyStats = () => {\n  let [statToView, setStatToView] = React.useState(\n    KeyStatsCategories.Individual\n  );\n\n  let articleContainerCss = css`\n    .articleContainer {\n      position: relative;\n      display: flex;\n      width: 300vw;\n      transform: translateX(${-100 * screenNumberForCategory[statToView]}vw);\n      margin-top: 2.25rem;\n      transition: transform 0.75s ease-in-out;\n    }\n  `;\n\n  function changeViewStat(stat: KeyStatsCategories) {\n    setStatToView(stat);\n  }\n\n  return (\n    <section css={[keyStatsCss, articleContainerCss]}>\n      <header>\n        <h2>The national picture</h2>\n        <p>\n          Social mobility is about ensuring that a person&apos;s occupation,\n          income, and social status are not tied to where they started in life.\n          It&apos;s about fairness and equal opportunities for all. When this\n          doesn’t happen, it affects everyone in the UK.\n        </p>\n      </header>\n      <ul className=\"switcher\">\n        {Object.keys(KeyStatsCategories).map(stat => (\n          <li\n            className={\n              statToView === KeyStatsCategories[stat] ? \"active\" : \"inactive\"\n            }\n            key={stat}\n          >\n            <input\n              type=\"radio\"\n              name=\"statToView\"\n              id={stat}\n              checked={statToView === stat}\n              onChange={() => changeViewStat(KeyStatsCategories[stat])}\n            />\n            <label htmlFor={stat}>{stat}</label>\n          </li>\n        ))}\n      </ul>\n      <div className=\"articleContainer\">\n        <IndividualArticle />\n        <SocietyArticle />\n        <BusinessArticle />\n      </div>\n    </section>\n  );\n};\n\nexport default KeyStats;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport tw from \"twin.macro\";\nimport PropTypes from \"prop-types\";\n\nconst darkStyles = css`\n  ${tw`h-12 w-88 bg-midnight text-white font-bold`}\n`;\n\nconst lightGreyStyles = css`\n  ${tw`h-12 w-40 text-midnight border border-midnight font-bold`}\n`;\n\nconst lightBlueStyles = css`\n  ${tw`h-12 w-40 text-cobalt border border-cobalt font-bold`}\n`;\n\nconst borderlessStyles = css`\n  background: var(--white);\n  color: var(--midnight);\n  width: 7.875rem;\n`;\n\nconst Button = ({ variant, label, onClick }) => (\n  <button css={styleForVariant(variant)} onClick={onClick}>\n    {label}\n  </button>\n);\n\nconst styleForVariant = variant =>\n  ({\n    dark: darkStyles,\n    \"light-grey\": lightGreyStyles,\n    \"light-blue\": lightBlueStyles,\n    borderless: borderlessStyles,\n  }[variant] ||\n  (() => {\n    throw new Error(`Unknown button variant: ${variant}`);\n  }));\n\nButton.propTypes = {\n  variant: PropTypes.string.isRequired,\n  label: PropTypes.any.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _cssClasses = _interopRequireDefault(require(\"../cssClasses\"));\n\nvar _dimensions = require(\"../dimensions\");\n\nvar _CSSTranslate = _interopRequireDefault(require(\"../CSSTranslate\"));\n\nvar _reactEasySwipe = _interopRequireDefault(require(\"react-easy-swipe\"));\n\nvar _window = _interopRequireDefault(require(\"../shims/window\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar isKeyboardEvent = function isKeyboardEvent(e) {\n  return e.hasOwnProperty('key');\n};\n\nvar Thumbs = /*#__PURE__*/function (_Component) {\n  _inherits(Thumbs, _Component);\n\n  var _super = _createSuper(Thumbs);\n\n  function Thumbs(_props) {\n    var _this;\n\n    _classCallCheck(this, Thumbs);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsWrapperRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsListRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"thumbsRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"setItemsWrapperRef\", function (node) {\n      _this.itemsWrapperRef = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setItemsListRef\", function (node) {\n      _this.itemsListRef = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setThumbsRef\", function (node, index) {\n      if (!_this.thumbsRef) {\n        _this.thumbsRef = [];\n      }\n\n      _this.thumbsRef[index] = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSizes\", function () {\n      if (!_this.props.children || !_this.itemsWrapperRef || !_this.thumbsRef) {\n        return;\n      }\n\n      var total = _react.Children.count(_this.props.children);\n\n      var wrapperSize = _this.itemsWrapperRef.clientWidth;\n      var itemSize = _this.props.thumbWidth ? _this.props.thumbWidth : (0, _dimensions.outerWidth)(_this.thumbsRef[0]);\n      var visibleItems = Math.floor(wrapperSize / itemSize);\n      var lastPosition = total - visibleItems;\n      var showArrows = visibleItems < total;\n\n      _this.setState(function (_state, props) {\n        return {\n          itemSize: itemSize,\n          visibleItems: visibleItems,\n          firstItem: showArrows ? _this.getFirstItem(props.selectedItem) : 0,\n          lastPosition: lastPosition,\n          showArrows: showArrows\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickItem\", function (index, item, e) {\n      if (!isKeyboardEvent(e) || e.key === 'Enter') {\n        var handler = _this.props.onSelectItem;\n\n        if (typeof handler === 'function') {\n          handler(index, item);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwipeStart\", function () {\n      _this.setState({\n        swiping: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwipeEnd\", function () {\n      _this.setState({\n        swiping: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwipeMove\", function (delta) {\n      var deltaX = delta.x;\n\n      if (!_this.state.itemSize || !_this.itemsWrapperRef) {\n        return false;\n      }\n\n      var leftBoundary = 0;\n      var currentPosition = -_this.state.firstItem * _this.state.itemSize;\n      var lastLeftBoundary = -_this.state.visibleItems * _this.state.itemSize; // prevent user from swiping left out of boundaries\n\n      if (currentPosition === leftBoundary && deltaX > 0) {\n        deltaX = 0;\n      } // prevent user from swiping right out of boundaries\n\n\n      if (currentPosition === lastLeftBoundary && deltaX < 0) {\n        deltaX = 0;\n      }\n\n      var wrapperSize = _this.itemsWrapperRef.clientWidth;\n      var position = currentPosition + 100 / (wrapperSize / deltaX); // if 3d isn't available we will use left to move\n\n      if (_this.itemsListRef) {\n        ['WebkitTransform', 'MozTransform', 'MsTransform', 'OTransform', 'transform', 'msTransform'].forEach(function (prop) {\n          _this.itemsListRef.style[prop] = (0, _CSSTranslate.default)(position, '%', _this.props.axis);\n        });\n      }\n\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slideRight\", function (positions) {\n      _this.moveTo(_this.state.firstItem - (typeof positions === 'number' ? positions : 1));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slideLeft\", function (positions) {\n      _this.moveTo(_this.state.firstItem + (typeof positions === 'number' ? positions : 1));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"moveTo\", function (position) {\n      // position can't be lower than 0\n      position = position < 0 ? 0 : position; // position can't be higher than last postion\n\n      position = position >= _this.state.lastPosition ? _this.state.lastPosition : position;\n\n      _this.setState({\n        firstItem: position\n      });\n    });\n\n    _this.state = {\n      selectedItem: _props.selectedItem,\n      swiping: false,\n      showArrows: false,\n      firstItem: 0,\n      visibleItems: 0,\n      lastPosition: 0\n    };\n    return _this;\n  }\n\n  _createClass(Thumbs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupThumbs();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(props) {\n      if (props.selectedItem !== this.state.selectedItem) {\n        this.setState({\n          selectedItem: props.selectedItem,\n          firstItem: this.getFirstItem(props.selectedItem)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.children === prevProps.children) {\n        return;\n      } // This will capture any size changes for arrow adjustments etc.\n      // usually in the same render cycle so we don't see any flickers\n\n\n      this.updateSizes();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyThumbs();\n    }\n  }, {\n    key: \"setupThumbs\",\n    value: function setupThumbs() {\n      // as the widths are calculated, we need to resize\n      // the carousel when the window is resized\n      (0, _window.default)().addEventListener('resize', this.updateSizes); // issue #2 - image loading smaller\n\n      (0, _window.default)().addEventListener('DOMContentLoaded', this.updateSizes); // when the component is rendered we need to calculate\n      // the container size to adjust the responsive behaviour\n\n      this.updateSizes();\n    }\n  }, {\n    key: \"destroyThumbs\",\n    value: function destroyThumbs() {\n      // removing listeners\n      (0, _window.default)().removeEventListener('resize', this.updateSizes);\n      (0, _window.default)().removeEventListener('DOMContentLoaded', this.updateSizes);\n    }\n  }, {\n    key: \"getFirstItem\",\n    value: function getFirstItem(selectedItem) {\n      var firstItem = selectedItem;\n\n      if (selectedItem >= this.state.lastPosition) {\n        firstItem = this.state.lastPosition;\n      }\n\n      if (selectedItem < this.state.firstItem + this.state.visibleItems) {\n        firstItem = this.state.firstItem;\n      }\n\n      if (selectedItem < this.state.firstItem) {\n        firstItem = selectedItem;\n      }\n\n      return firstItem;\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this2 = this;\n\n      return this.props.children.map(function (img, index) {\n        var itemClass = _cssClasses.default.ITEM(false, index === _this2.state.selectedItem);\n\n        var thumbProps = {\n          key: index,\n          ref: function ref(e) {\n            return _this2.setThumbsRef(e, index);\n          },\n          className: itemClass,\n          onClick: _this2.handleClickItem.bind(_this2, index, _this2.props.children[index]),\n          onKeyDown: _this2.handleClickItem.bind(_this2, index, _this2.props.children[index]),\n          'aria-label': \"\".concat(_this2.props.labels.item, \" \").concat(index + 1),\n          style: {\n            width: _this2.props.thumbWidth\n          }\n        };\n        return /*#__PURE__*/_react.default.createElement(\"li\", _extends({}, thumbProps, {\n          role: \"button\",\n          tabIndex: 0\n        }), img);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.props.children) {\n        return null;\n      } // show left arrow?\n\n\n      var hasPrev = this.state.showArrows && this.state.firstItem > 0; // show right arrow\n\n      var hasNext = this.state.showArrows && this.state.firstItem < this.state.lastPosition; // obj to hold the transformations and styles\n\n      var itemListStyles = {};\n      var currentPosition = -this.state.firstItem * (this.state.itemSize || 0);\n      var transformProp = (0, _CSSTranslate.default)(currentPosition, 'px', this.props.axis);\n      var transitionTime = this.props.transitionTime + 'ms';\n      itemListStyles = {\n        WebkitTransform: transformProp,\n        MozTransform: transformProp,\n        MsTransform: transformProp,\n        OTransform: transformProp,\n        transform: transformProp,\n        msTransform: transformProp,\n        WebkitTransitionDuration: transitionTime,\n        MozTransitionDuration: transitionTime,\n        MsTransitionDuration: transitionTime,\n        OTransitionDuration: transitionTime,\n        transitionDuration: transitionTime,\n        msTransitionDuration: transitionTime\n      };\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: _cssClasses.default.CAROUSEL(false)\n      }, /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: _cssClasses.default.WRAPPER(false),\n        ref: this.setItemsWrapperRef\n      }, /*#__PURE__*/_react.default.createElement(\"button\", {\n        type: \"button\",\n        className: _cssClasses.default.ARROW_PREV(!hasPrev),\n        onClick: function onClick() {\n          return _this3.slideRight();\n        },\n        \"aria-label\": this.props.labels.leftArrow\n      }), /*#__PURE__*/_react.default.createElement(_reactEasySwipe.default, {\n        tagName: \"ul\",\n        className: _cssClasses.default.SLIDER(false, this.state.swiping),\n        onSwipeLeft: this.slideLeft,\n        onSwipeRight: this.slideRight,\n        onSwipeMove: this.onSwipeMove,\n        onSwipeStart: this.onSwipeStart,\n        onSwipeEnd: this.onSwipeEnd,\n        style: itemListStyles,\n        innerRef: this.setItemsListRef\n      }, this.renderItems()), /*#__PURE__*/_react.default.createElement(\"button\", {\n        type: \"button\",\n        className: _cssClasses.default.ARROW_NEXT(!hasNext),\n        onClick: function onClick() {\n          return _this3.slideLeft();\n        },\n        \"aria-label\": this.props.labels.rightArrow\n      })));\n    }\n  }]);\n\n  return Thumbs;\n}(_react.Component);\n\nexports.default = Thumbs;\n\n_defineProperty(Thumbs, \"displayName\", 'Thumbs');\n\n_defineProperty(Thumbs, \"defaultProps\", {\n  axis: 'horizontal',\n  labels: {\n    leftArrow: 'previous slide / item',\n    rightArrow: 'next slide / item',\n    item: 'slide item'\n  },\n  selectedItem: 0,\n  thumbWidth: 80,\n  transitionTime: 350\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Carousel\", {\n  enumerable: true,\n  get: function get() {\n    return _Carousel.default;\n  }\n});\nObject.defineProperty(exports, \"Thumbs\", {\n  enumerable: true,\n  get: function get() {\n    return _Thumbs.default;\n  }\n});\n\nvar _Carousel = _interopRequireDefault(require(\"./components/Carousel\"));\n\nvar _Thumbs = _interopRequireDefault(require(\"./components/Thumbs\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.outerWidth = void 0;\n\nvar outerWidth = function outerWidth(el) {\n  var width = el.offsetWidth;\n  var style = getComputedStyle(el);\n  width += parseInt(style.marginLeft) + parseInt(style.marginRight);\n  return width;\n};\n\nexports.outerWidth = outerWidth;","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'react', 'prop-types'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'), require('prop-types'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.propTypes);\n    global.reactSwipe = mod.exports;\n  }\n})(this, function (exports, _react, _propTypes) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.setHasSupportToCaptureOption = setHasSupportToCaptureOption;\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _objectWithoutProperties(obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var supportsCaptureOption = false;\n\n  function setHasSupportToCaptureOption(hasSupport) {\n    supportsCaptureOption = hasSupport;\n  }\n\n  try {\n    addEventListener('test', null, Object.defineProperty({}, 'capture', {\n      get: function get() {\n        setHasSupportToCaptureOption(true);\n      }\n    }));\n  } catch (e) {} // eslint-disable-line no-empty\n\n\n  function getSafeEventHandlerOpts() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      capture: true\n    };\n    return supportsCaptureOption ? options : options.capture;\n  }\n  /**\n   * [getPosition returns a position element that works for mouse or touch events]\n   * @param  {[Event]} event [the received event]\n   * @return {[Object]}      [x and y coords]\n   */\n\n\n  function getPosition(event) {\n    if ('touches' in event) {\n      var _event$touches$ = event.touches[0],\n          pageX = _event$touches$.pageX,\n          pageY = _event$touches$.pageY;\n      return {\n        x: pageX,\n        y: pageY\n      };\n    }\n\n    var screenX = event.screenX,\n        screenY = event.screenY;\n    return {\n      x: screenX,\n      y: screenY\n    };\n  }\n\n  var ReactSwipe = function (_Component) {\n    _inherits(ReactSwipe, _Component);\n\n    function ReactSwipe() {\n      var _ref;\n\n      _classCallCheck(this, ReactSwipe);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _this = _possibleConstructorReturn(this, (_ref = ReactSwipe.__proto__ || Object.getPrototypeOf(ReactSwipe)).call.apply(_ref, [this].concat(args)));\n\n      _this._handleSwipeStart = _this._handleSwipeStart.bind(_this);\n      _this._handleSwipeMove = _this._handleSwipeMove.bind(_this);\n      _this._handleSwipeEnd = _this._handleSwipeEnd.bind(_this);\n      _this._onMouseDown = _this._onMouseDown.bind(_this);\n      _this._onMouseMove = _this._onMouseMove.bind(_this);\n      _this._onMouseUp = _this._onMouseUp.bind(_this);\n      _this._setSwiperRef = _this._setSwiperRef.bind(_this);\n      return _this;\n    }\n\n    _createClass(ReactSwipe, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (this.swiper) {\n          this.swiper.addEventListener('touchmove', this._handleSwipeMove, getSafeEventHandlerOpts({\n            capture: true,\n            passive: false\n          }));\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (this.swiper) {\n          this.swiper.removeEventListener('touchmove', this._handleSwipeMove, getSafeEventHandlerOpts({\n            capture: true,\n            passive: false\n          }));\n        }\n      }\n    }, {\n      key: '_onMouseDown',\n      value: function _onMouseDown(event) {\n        if (!this.props.allowMouseEvents) {\n          return;\n        }\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this._onMouseUp);\n        document.addEventListener('mousemove', this._onMouseMove);\n\n        this._handleSwipeStart(event);\n      }\n    }, {\n      key: '_onMouseMove',\n      value: function _onMouseMove(event) {\n        if (!this.mouseDown) {\n          return;\n        }\n\n        this._handleSwipeMove(event);\n      }\n    }, {\n      key: '_onMouseUp',\n      value: function _onMouseUp(event) {\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this._onMouseUp);\n        document.removeEventListener('mousemove', this._onMouseMove);\n\n        this._handleSwipeEnd(event);\n      }\n    }, {\n      key: '_handleSwipeStart',\n      value: function _handleSwipeStart(event) {\n        var _getPosition = getPosition(event),\n            x = _getPosition.x,\n            y = _getPosition.y;\n\n        this.moveStart = {\n          x: x,\n          y: y\n        };\n        this.props.onSwipeStart(event);\n      }\n    }, {\n      key: '_handleSwipeMove',\n      value: function _handleSwipeMove(event) {\n        if (!this.moveStart) {\n          return;\n        }\n\n        var _getPosition2 = getPosition(event),\n            x = _getPosition2.x,\n            y = _getPosition2.y;\n\n        var deltaX = x - this.moveStart.x;\n        var deltaY = y - this.moveStart.y;\n        this.moving = true; // handling the responsability of cancelling the scroll to\n        // the component handling the event\n\n        var shouldPreventDefault = this.props.onSwipeMove({\n          x: deltaX,\n          y: deltaY\n        }, event);\n\n        if (shouldPreventDefault) {\n          event.preventDefault();\n        }\n\n        this.movePosition = {\n          deltaX: deltaX,\n          deltaY: deltaY\n        };\n      }\n    }, {\n      key: '_handleSwipeEnd',\n      value: function _handleSwipeEnd(event) {\n        this.props.onSwipeEnd(event);\n        var tolerance = this.props.tolerance;\n\n        if (this.moving && this.movePosition) {\n          if (this.movePosition.deltaX < -tolerance) {\n            this.props.onSwipeLeft(1, event);\n          } else if (this.movePosition.deltaX > tolerance) {\n            this.props.onSwipeRight(1, event);\n          }\n\n          if (this.movePosition.deltaY < -tolerance) {\n            this.props.onSwipeUp(1, event);\n          } else if (this.movePosition.deltaY > tolerance) {\n            this.props.onSwipeDown(1, event);\n          }\n        }\n\n        this.moveStart = null;\n        this.moving = false;\n        this.movePosition = null;\n      }\n    }, {\n      key: '_setSwiperRef',\n      value: function _setSwiperRef(node) {\n        this.swiper = node;\n        this.props.innerRef(node);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            tagName = _props.tagName,\n            className = _props.className,\n            style = _props.style,\n            children = _props.children,\n            allowMouseEvents = _props.allowMouseEvents,\n            onSwipeUp = _props.onSwipeUp,\n            onSwipeDown = _props.onSwipeDown,\n            onSwipeLeft = _props.onSwipeLeft,\n            onSwipeRight = _props.onSwipeRight,\n            onSwipeStart = _props.onSwipeStart,\n            onSwipeMove = _props.onSwipeMove,\n            onSwipeEnd = _props.onSwipeEnd,\n            innerRef = _props.innerRef,\n            tolerance = _props.tolerance,\n            props = _objectWithoutProperties(_props, ['tagName', 'className', 'style', 'children', 'allowMouseEvents', 'onSwipeUp', 'onSwipeDown', 'onSwipeLeft', 'onSwipeRight', 'onSwipeStart', 'onSwipeMove', 'onSwipeEnd', 'innerRef', 'tolerance']);\n\n        return _react2.default.createElement(this.props.tagName, _extends({\n          ref: this._setSwiperRef,\n          onMouseDown: this._onMouseDown,\n          onTouchStart: this._handleSwipeStart,\n          onTouchEnd: this._handleSwipeEnd,\n          className: className,\n          style: style\n        }, props), children);\n      }\n    }]);\n\n    return ReactSwipe;\n  }(_react.Component);\n\n  ReactSwipe.displayName = 'ReactSwipe';\n  ReactSwipe.propTypes = {\n    tagName: _propTypes2.default.string,\n    className: _propTypes2.default.string,\n    style: _propTypes2.default.object,\n    children: _propTypes2.default.node,\n    allowMouseEvents: _propTypes2.default.bool,\n    onSwipeUp: _propTypes2.default.func,\n    onSwipeDown: _propTypes2.default.func,\n    onSwipeLeft: _propTypes2.default.func,\n    onSwipeRight: _propTypes2.default.func,\n    onSwipeStart: _propTypes2.default.func,\n    onSwipeMove: _propTypes2.default.func,\n    onSwipeEnd: _propTypes2.default.func,\n    innerRef: _propTypes2.default.func,\n    tolerance: _propTypes2.default.number.isRequired\n  };\n  ReactSwipe.defaultProps = {\n    tagName: 'div',\n    allowMouseEvents: false,\n    onSwipeUp: function onSwipeUp() {},\n    onSwipeDown: function onSwipeDown() {},\n    onSwipeLeft: function onSwipeLeft() {},\n    onSwipeRight: function onSwipeRight() {},\n    onSwipeStart: function onSwipeStart() {},\n    onSwipeMove: function onSwipeMove() {},\n    onSwipeEnd: function onSwipeEnd() {},\n    innerRef: function innerRef() {},\n    tolerance: 0\n  };\n  exports.default = ReactSwipe;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = function _default(position, metric, axis) {\n  var positionPercent = position === 0 ? position : position + metric;\n  var positionCss = axis === 'horizontal' ? [positionPercent, 0, 0] : [0, positionPercent, 0];\n  var transitionProp = 'translate3d';\n  var translatedPosition = '(' + positionCss.join(',') + ')';\n  return transitionProp + translatedPosition;\n};\n\nexports.default = _default;"],"sourceRoot":""}